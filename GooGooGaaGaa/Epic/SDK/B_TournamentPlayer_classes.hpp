#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TournamentPlayer

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TournamentPlayer.B_TournamentPlayer_C
// 0x0040 (0x0068 - 0x0028)
class UB_TournamentPlayer_C final : public UObject
{
public:
	class FString                                 PlayerName;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 PlayerIcon;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerLevel;                                       // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrestigeLevel;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RoundsAsHunter;                                    // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	struct FS_TournamentPlayer GetStruct();
	void Initialize(class APlayerState* InitPlayerState);
	void InitializeByStruct(struct FS_TournamentPlayer& TournamentPlayerStruct);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TournamentPlayer_C">();
	}
	static class UB_TournamentPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_TournamentPlayer_C>();
	}
};
static_assert(alignof(UB_TournamentPlayer_C) == 0x000008, "Wrong alignment on UB_TournamentPlayer_C");
static_assert(sizeof(UB_TournamentPlayer_C) == 0x000068, "Wrong size on UB_TournamentPlayer_C");
static_assert(offsetof(UB_TournamentPlayer_C, PlayerName) == 0x000028, "Member 'UB_TournamentPlayer_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, PlayerIcon) == 0x000038, "Member 'UB_TournamentPlayer_C::PlayerIcon' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, PlayerLevel) == 0x000040, "Member 'UB_TournamentPlayer_C::PlayerLevel' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, PrestigeLevel) == 0x000044, "Member 'UB_TournamentPlayer_C::PrestigeLevel' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, Score) == 0x000048, "Member 'UB_TournamentPlayer_C::Score' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, RoundsAsHunter) == 0x00004C, "Member 'UB_TournamentPlayer_C::RoundsAsHunter' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, PlayerState) == 0x000050, "Member 'UB_TournamentPlayer_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UB_TournamentPlayer_C, PlayerId) == 0x000058, "Member 'UB_TournamentPlayer_C::PlayerId' has a wrong offset!");

}

