#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RottenEggChickenDummy

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_RottenEggChickenDummy.B_RottenEggChickenDummy_C.ExecuteUbergraph_B_RottenEggChickenDummy
// 0x0020 (0x0020 - 0x0000)
struct B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_FlyTime;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy) == 0x000008, "Wrong alignment on B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy");
static_assert(sizeof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy) == 0x000020, "Wrong size on B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy");
static_assert(offsetof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy, EntryPoint) == 0x000000, "Member 'B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy, K2Node_CustomEvent_FlyTime) == 0x000008, "Member 'B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy::K2Node_CustomEvent_FlyTime' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy, CallFunc_RandomFloatInRange_ReturnValue) == 0x000010, "Member 'B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy, CallFunc_Delay_Duration_ImplicitCast) == 0x000018, "Member 'B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy, CallFunc_Delay_Duration_ImplicitCast_1) == 0x00001C, "Member 'B_RottenEggChickenDummy_C_ExecuteUbergraph_B_RottenEggChickenDummy::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function B_RottenEggChickenDummy.B_RottenEggChickenDummy_C.Fly
// 0x0110 (0x0110 - 0x0000)
struct B_RottenEggChickenDummy_C_Fly final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_RottenEggChickenDummy_C_Fly) == 0x000008, "Wrong alignment on B_RottenEggChickenDummy_C_Fly");
static_assert(sizeof(B_RottenEggChickenDummy_C_Fly) == 0x000110, "Wrong size on B_RottenEggChickenDummy_C_Fly");
static_assert(offsetof(B_RottenEggChickenDummy_C_Fly, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'B_RottenEggChickenDummy_C_Fly::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_Fly, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'B_RottenEggChickenDummy_C_Fly::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function B_RottenEggChickenDummy.B_RottenEggChickenDummy_C.LiftChickenUp
// 0x0008 (0x0008 - 0x0000)
struct B_RottenEggChickenDummy_C_LiftChickenUp final
{
public:
	double                                        FlyTime;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RottenEggChickenDummy_C_LiftChickenUp) == 0x000008, "Wrong alignment on B_RottenEggChickenDummy_C_LiftChickenUp");
static_assert(sizeof(B_RottenEggChickenDummy_C_LiftChickenUp) == 0x000008, "Wrong size on B_RottenEggChickenDummy_C_LiftChickenUp");
static_assert(offsetof(B_RottenEggChickenDummy_C_LiftChickenUp, FlyTime) == 0x000000, "Member 'B_RottenEggChickenDummy_C_LiftChickenUp::FlyTime' has a wrong offset!");

// Function B_RottenEggChickenDummy.B_RottenEggChickenDummy_C.Sit
// 0x0110 (0x0110 - 0x0000)
struct B_RottenEggChickenDummy_C_Sit final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0018(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_RottenEggChickenDummy_C_Sit) == 0x000008, "Wrong alignment on B_RottenEggChickenDummy_C_Sit");
static_assert(sizeof(B_RottenEggChickenDummy_C_Sit) == 0x000110, "Wrong size on B_RottenEggChickenDummy_C_Sit");
static_assert(offsetof(B_RottenEggChickenDummy_C_Sit, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'B_RottenEggChickenDummy_C_Sit::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RottenEggChickenDummy_C_Sit, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000018, "Member 'B_RottenEggChickenDummy_C_Sit::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

}

