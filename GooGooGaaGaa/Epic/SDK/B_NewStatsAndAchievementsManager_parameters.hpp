#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_NewStatsAndAchievementsManager

#include "Basic.hpp"

#include "LowEntryJson_structs.hpp"
#include "Engine_structs.hpp"
#include "OnlineSubsystemBlueprints_structs.hpp"
#include "S_Stat_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.BuildStatsArrayJsonString
// 0x0128 (0x0128 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString final
{
public:
	TArray<struct FS_Stat>                        StatArray;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 ProductUserId;                                     // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ResultString;                                      // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         TempValuesArray;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         TempStatsArray;                                    // 0x0040(0x0010)(Edit, BlueprintVisible)
	class ULowEntryJsonObject*                    ResultJsonObject;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Stat                                CallFunc_Array_Get_Item;                           // 0x0068(0x0030)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_Int64ToText_ReturnValue;             // 0x00A0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               CallFunc_ObjectEntry_Pure_CreateFromString_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Array_Pure_CreateFromStringArray_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonObjectEntry*               CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Array_Pure_CreateFromStringArray_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonObjectEntry*               CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue_1; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULowEntryJsonObjectEntry*>       K2Node_LowEntry_CreateJsonObjectPure_TempArray_Array; // 0x00F8(0x0010)(ReferenceParm)
	class ULowEntryJsonObject*                    K2Node_LowEntry_CreateJsonObjectPure_JsonObject_Object; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Object_Pure_ToJsonString_ReturnValue;     // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString) == 0x000128, "Wrong size on B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, StatArray) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::StatArray' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, ProductUserId) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, ResultString) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::ResultString' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, TempValuesArray) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::TempValuesArray' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, TempStatsArray) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::TempStatsArray' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, ResultJsonObject) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::ResultJsonObject' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Conv_Int64ToText_ReturnValue) == 0x0000A0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Conv_Int64ToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_ObjectEntry_Pure_CreateFromString_ReturnValue) == 0x0000C8, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_ObjectEntry_Pure_CreateFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Pure_CreateFromStringArray_ReturnValue) == 0x0000D0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Pure_CreateFromStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue) == 0x0000D8, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Pure_CreateFromStringArray_ReturnValue_1) == 0x0000E0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Pure_CreateFromStringArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue_1) == 0x0000E8, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_ObjectEntry_Pure_CreateFromJsonArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, K2Node_LowEntry_CreateJsonObjectPure_TempArray_Array) == 0x0000F8, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::K2Node_LowEntry_CreateJsonObjectPure_TempArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, K2Node_LowEntry_CreateJsonObjectPure_JsonObject_Object) == 0x000108, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::K2Node_LowEntry_CreateJsonObjectPure_JsonObject_Object' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Object_Pure_ToJsonString_ReturnValue) == 0x000110, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Object_Pure_ToJsonString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString, CallFunc_Array_Add_ReturnValue_1) == 0x000120, "Member 'B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.CheckForLocalAchievements
// 0x0001 (0x0001 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements) == 0x000001, "Wrong alignment on B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements) == 0x000001, "Wrong size on B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements, Success) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_CheckForLocalAchievements::Success' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ExecuteUbergraph_B_NewStatsAndAchievementsManager
// 0x0500 (0x0500 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_Param1_1;                       // 0x0008(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Param2_1;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& Param1, bool Param2)> K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_Param1;                         // 0x0050(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Param2;                         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FUniqueNetIdRepl& Param1, bool Param2)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       Temp_struct_Variable;                              // 0x0098(0x0030)(HasGetValueTypeHash)
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineAchievementsWrite*               CallFunc_SpawnObject_ReturnValue;                  // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineIdentitySubsystem*               CallFunc_GetNamedIdentitySubsystem_ReturnValue;    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUniquePlayerId_ReturnValue;            // 0x00E0(0x0030)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_StatAndAchievementsCache_C*          CallFunc_SpawnObject_ReturnValue_1;                // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_6;                     // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseStatsAndAchievementsFromResponse_Success; // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_5;                     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_4;                     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_3;                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseGSStatsAndAchievementsFromResponse_Success; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ParseGSStatsAndAchievementsFromResponse_ProductUserId; // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetURL_ReturnValue;                       // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_GSStatAndAchievementsCache_C*        CallFunc_SpawnObject_ReturnValue_2;                // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseSuccessFromJsonResponse_Success;     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseSuccessFromJsonResponse_Success_1;   // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_2;                     // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response_1;                     // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseSuccessAndRequestedProductUserId_Success; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ParseSuccessAndRequestedProductUserId_ProductUserId; // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseSuccessFromJsonResponse_Success_2;   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineAchievementsSubsystem*           CallFunc_GetNamedAchievementsSubsystem_ReturnValue; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineAchievementsSubsystemWriteAchievements* CallFunc_WriteAchievements_ReturnValue;            // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineIdentitySubsystem*               CallFunc_GetNamedIdentitySubsystem_ReturnValue_1;  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUniquePlayerId_ReturnValue_1;          // 0x0200(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Response;                       // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       Temp_struct_Variable_1;                            // 0x0240(0x0030)(HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0280(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_LocalUserId;                    // 0x0298(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildGetStatsCallUrl_Url;                 // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_CustomEvent_PlayerState_1;                  // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProductUserId_ProductUserId;           // 0x02F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProductUserId_PlatformType;            // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FUniqueNetIdRepl& LocalUserId, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0330(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildGetGSStatsCallUrl_Url;               // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0350(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetURL_ReturnValue_1;                     // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_CustomEvent_PlayerState;                    // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Stat>                        CallFunc_GetStatsBySetByType_ResultData;           // 0x0378(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetProductUserId_ProductUserId_1;         // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProductUserId_PlatformType_1;          // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildStatsArrayJsonString_ResultString;   // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x03B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_BuildStoreStatsCallRequest_ResultRequest; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x03D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetURL_ReturnValue_2;                     // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_LocalUserId_1;                  // 0x03F0(0x0030)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_1;               // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_Stat>                        CallFunc_GetStatsBySetByType_ResultData_1;         // 0x0428(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetStatsBySetByType_Success;              // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildStatsArrayJsonString_ResultString_1; // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     CallFunc_BuildStoreGSStatsCallRequest_ResultRequest; // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_10;           // 0x0464(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FUniqueNetIdRepl& LocalUserId, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0474(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue_1;  // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetURL_ReturnValue_3;                     // 0x04A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B2[0x6];                                      // 0x04B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_CustomEvent_AchievementIds;                 // 0x04B8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Ps4Platform_ReturnValue_1;                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9[0x3];                                      // 0x04C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x04CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineAchievementsSubsystem*           CallFunc_GetNamedAchievementsSubsystem_ReturnValue_1; // 0x04E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineAchievementsSubsystemQueryAchievements* CallFunc_QueryAchievements_ReturnValue;            // 0x04F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager) == 0x000500, "Wrong size on B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, EntryPoint) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Param1_1) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Param1_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Param2_1) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Param2_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Param1) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Param1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Param2) == 0x000080, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Param2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000084, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_bool_Variable) == 0x000094, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_struct_Variable) == 0x000098, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000C8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_SpawnObject_ReturnValue) == 0x0000D0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetNamedIdentitySubsystem_ReturnValue) == 0x0000D8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetNamedIdentitySubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetUniquePlayerId_ReturnValue) == 0x0000E0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetUniquePlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_int_Array_Index_Variable) == 0x000110, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_Event_InGameInstance) == 0x000118, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_Event_InGameInstance' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000120, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_SpawnObject_ReturnValue_1) == 0x000130, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_6) == 0x000138, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_6' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseStatsAndAchievementsFromResponse_Success) == 0x000140, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseStatsAndAchievementsFromResponse_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_5) == 0x000148, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_5' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_4) == 0x000150, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_4' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_3) == 0x000158, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseGSStatsAndAchievementsFromResponse_Success) == 0x000160, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseGSStatsAndAchievementsFromResponse_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseGSStatsAndAchievementsFromResponse_ProductUserId) == 0x000168, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseGSStatsAndAchievementsFromResponse_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000178, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000180, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetURL_ReturnValue) == 0x000188, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetURL_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_SpawnObject_ReturnValue_2) == 0x000198, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseSuccessFromJsonResponse_Success) == 0x0001A0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseSuccessFromJsonResponse_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseSuccessFromJsonResponse_Success_1) == 0x0001A1, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseSuccessFromJsonResponse_Success_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_2) == 0x0001A8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response_1) == 0x0001B0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseSuccessAndRequestedProductUserId_Success) == 0x0001B8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseSuccessAndRequestedProductUserId_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseSuccessAndRequestedProductUserId_ProductUserId) == 0x0001C0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseSuccessAndRequestedProductUserId_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0001D0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ParseSuccessFromJsonResponse_Success_2) == 0x0001D8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ParseSuccessFromJsonResponse_Success_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetNamedAchievementsSubsystem_ReturnValue) == 0x0001E0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetNamedAchievementsSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_WriteAchievements_ReturnValue) == 0x0001E8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_WriteAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0001F0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetNamedIdentitySubsystem_ReturnValue_1) == 0x0001F8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetNamedIdentitySubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetUniquePlayerId_ReturnValue_1) == 0x000200, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetUniquePlayerId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_IsValid_ReturnValue) == 0x000230, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Response) == 0x000238, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Response' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_struct_Variable_1) == 0x000240, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000270, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000280, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_bool_Variable_1) == 0x000290, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_LocalUserId) == 0x000298, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_LocalUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_bWasSuccessful) == 0x0002C8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildGetStatsCallUrl_Url) == 0x0002D0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildGetStatsCallUrl_Url' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_PlayerState_1) == 0x0002E0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_PlayerState_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002E8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetProductUserId_ProductUserId) == 0x0002F0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetProductUserId_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetProductUserId_PlatformType) == 0x000300, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetProductUserId_PlatformType' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000310, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x000320, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x000330, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildGetGSStatsCallUrl_Url) == 0x000340, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildGetGSStatsCallUrl_Url' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x000350, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetURL_ReturnValue_1) == 0x000360, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetURL_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_PlayerState) == 0x000370, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetStatsBySetByType_ResultData) == 0x000378, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetStatsBySetByType_ResultData' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetProductUserId_ProductUserId_1) == 0x000388, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetProductUserId_ProductUserId_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetProductUserId_PlatformType_1) == 0x000398, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetProductUserId_PlatformType_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildStatsArrayJsonString_ResultString) == 0x0003A8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildStatsArrayJsonString_ResultString' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x0003B8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildStoreStatsCallRequest_ResultRequest) == 0x0003C8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildStoreStatsCallRequest_ResultRequest' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_9) == 0x0003D0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetURL_ReturnValue_2) == 0x0003E0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetURL_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_LocalUserId_1) == 0x0003F0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_LocalUserId_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_bWasSuccessful_1) == 0x000420, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_bWasSuccessful_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetStatsBySetByType_ResultData_1) == 0x000428, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetStatsBySetByType_ResultData_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetStatsBySetByType_Success) == 0x000438, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetStatsBySetByType_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildStatsArrayJsonString_ResultString_1) == 0x000440, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildStatsArrayJsonString_ResultString_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, Temp_int_Loop_Counter_Variable) == 0x000450, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BuildStoreGSStatsCallRequest_ResultRequest) == 0x000458, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BuildStoreGSStatsCallRequest_ResultRequest' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Add_IntInt_ReturnValue) == 0x000460, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_10) == 0x000464, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CreateDelegate_OutputDelegate_11) == 0x000474, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_Success) == 0x000484, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000488, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_ConstructVaRestRequestExt_ReturnValue_1) == 0x000490, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_ConstructVaRestRequestExt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Not_PreBool_ReturnValue) == 0x000498, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetURL_ReturnValue_3) == 0x0004A0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetURL_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_BooleanAND_ReturnValue) == 0x0004B0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Ps4Platform_ReturnValue) == 0x0004B1, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, K2Node_CustomEvent_AchievementIds) == 0x0004B8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::K2Node_CustomEvent_AchievementIds' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Ps4Platform_ReturnValue_1) == 0x0004C8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Ps4Platform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Array_Get_Item) == 0x0004CC, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Array_Length_ReturnValue) == 0x0004D4, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x0004D8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_Less_IntInt_ReturnValue) == 0x0004E0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_GetNamedAchievementsSubsystem_ReturnValue_1) == 0x0004E8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_GetNamedAchievementsSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_QueryAchievements_ReturnValue) == 0x0004F0, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_QueryAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager, CallFunc_IsValid_ReturnValue_1) == 0x0004F8, "Member 'B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_Initialize) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_Initialize");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_Initialize) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_Initialize");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6
// 0x0038 (0x0038 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6 final
{
public:
	struct FUniqueNetIdRepl                       Param1;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Param2;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6) == 0x000038, "Wrong size on B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6, Param1) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6::Param1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6, Param2) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_OnAchievementsWritten_09B1DE3C4AB63DE6D5699081A96B7BC6::Param2' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6
// 0x0038 (0x0038 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6 final
{
public:
	struct FUniqueNetIdRepl                       Param1;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Param2;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6) == 0x000038, "Wrong size on B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6, Param1) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6::Param1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6, Param2) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_OnCallFailed_09B1DE3C4AB63DE6D5699081A96B7BC6::Param2' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD
// 0x0038 (0x0038 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD final
{
public:
	struct FUniqueNetIdRepl                       LocalUserId;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD) == 0x000038, "Wrong size on B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD, LocalUserId) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD::LocalUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD, bWasSuccessful) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_OnCallFailed_ACE32C7C4B817E82DE83FBB67CBB66BD::bWasSuccessful' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidLoadGSOnlineStats__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductUserId;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature) == 0x000018, "Wrong size on B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature, Success) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature, ProductUserId) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature::ProductUserId' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidLoadOnlineStats__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature) == 0x000001, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature) == 0x000001, "Wrong size on B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature, Success) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature::Success' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidStoreGSOnlineStats__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductUserId;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature) == 0x000018, "Wrong size on B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature, Success) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature, ProductUserId) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature::ProductUserId' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidStoreOnlineStats__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature) == 0x000001, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature) == 0x000001, "Wrong size on B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature, Success) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature::Success' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD
// 0x0038 (0x0038 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD final
{
public:
	struct FUniqueNetIdRepl                       LocalUserId;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD) == 0x000038, "Wrong size on B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD, LocalUserId) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD::LocalUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD, bWasSuccessful) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_OnQueryAchievementsComplete_ACE32C7C4B817E82DE83FBB67CBB66BD::bWasSuccessful' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveGSStatsFailure
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveGSStatsResponse
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStatsFailure
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStatsResponse
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreGSStatsComplete
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreGSStatsFailure
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreStatsComplete
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete::Response' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseGSStatsAndAchievementsFromResponse
// 0x0148 (0x0148 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductUserId;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 UserProductUserId;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UVaRestJsonObject*                      CallFunc_DecodeJsonObject_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UVaRestJsonValue*>               CallFunc_GetArrayField_ReturnValue;                // 0x0070(0x0010)(ReferenceParm)
	TArray<class UVaRestJsonValue*>               CallFunc_GetArrayField_ReturnValue_1;              // 0x0080(0x0010)(ReferenceParm)
	class UVaRestJsonValue*                       CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestJsonValue*                       CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestJsonObject*                      CallFunc_AsObject_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestJsonObject*                      CallFunc_AsObject_ReturnValue_1;                   // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIntegerField_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetInt64Field_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue_1;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeFromIsoString_Result;             // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DateTimeFromIsoString_ReturnValue;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIntegerField_ReturnValue_1;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetInt64Field_ReturnValue_1;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue_2;             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetStringField_ReturnValue_3;             // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue_1;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse) == 0x000148, "Wrong size on B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Success) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, ProductUserId) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, UserProductUserId) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::UserProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, SuccessResult) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000058, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_DecodeJsonObject_ReturnValue) == 0x000068, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_DecodeJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetArrayField_ReturnValue) == 0x000070, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetArrayField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetArrayField_ReturnValue_1) == 0x000080, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetArrayField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Array_Get_Item) == 0x000090, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_AsObject_ReturnValue) == 0x0000A0, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_AsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_AsObject_ReturnValue_1) == 0x0000A8, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_AsObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetBoolField_ReturnValue) == 0x0000B0, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetBoolField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetIntegerField_ReturnValue) == 0x0000B4, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetIntegerField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetInt64Field_ReturnValue) == 0x0000B8, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetInt64Field_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C0, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue) == 0x0000C8, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetValidValue_ReturnValue) == 0x0000D8, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue_1) == 0x0000E0, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_DateTimeFromIsoString_Result) == 0x0000F0, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_DateTimeFromIsoString_Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_DateTimeFromIsoString_ReturnValue) == 0x0000F8, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_DateTimeFromIsoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetIntegerField_ReturnValue_1) == 0x0000FC, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetIntegerField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetInt64Field_ReturnValue_1) == 0x000100, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetInt64Field_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000108, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue_2) == 0x000110, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetValidValue_ReturnValue_1) == 0x000120, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Array_Length_ReturnValue) == 0x000124, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Array_Length_ReturnValue_1) == 0x00012C, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue_3) == 0x000130, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse, CallFunc_GetBoolField_ReturnValue_1) == 0x000141, "Member 'B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse::CallFunc_GetBoolField_ReturnValue_1' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseStatsAndAchievementsFromResponse
// 0x0120 (0x0120 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UVaRestJsonObject*                      CallFunc_DecodeJsonObject_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UVaRestJsonValue*>               CallFunc_GetArrayField_ReturnValue;                // 0x0050(0x0010)(ReferenceParm)
	class UVaRestJsonValue*                       CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      CallFunc_AsObject_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue_1;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIntegerField_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_DateTimeFromIsoString_Result;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DateTimeFromIsoString_ReturnValue;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetInt64Field_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue_1;             // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UVaRestJsonValue*>               CallFunc_GetArrayField_ReturnValue_1;              // 0x00C8(0x0010)(ReferenceParm)
	class UVaRestJsonValue*                       CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      CallFunc_AsObject_ReturnValue_1;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetIntegerField_ReturnValue_1;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetInt64Field_ReturnValue_1;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue_2;             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse) == 0x000120, "Wrong size on B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Success) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, SuccessResult) == 0x000009, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Temp_int_Array_Index_Variable) == 0x000014, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_DecodeJsonObject_ReturnValue) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_DecodeJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetBoolField_ReturnValue) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetBoolField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetArrayField_ReturnValue) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetArrayField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Array_Get_Item) == 0x000060, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_AsObject_ReturnValue) == 0x000070, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_AsObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetBoolField_ReturnValue_1) == 0x000079, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetBoolField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue) == 0x000080, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetIntegerField_ReturnValue) == 0x000090, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetIntegerField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_DateTimeFromIsoString_Result) == 0x000098, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_DateTimeFromIsoString_Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_DateTimeFromIsoString_ReturnValue) == 0x0000A0, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_DateTimeFromIsoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000A1, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetInt64Field_ReturnValue) == 0x0000A8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetInt64Field_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetValidValue_ReturnValue) == 0x0000B0, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue_1) == 0x0000B8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetArrayField_ReturnValue_1) == 0x0000C8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetArrayField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_AsObject_ReturnValue_1) == 0x0000E8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_AsObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F0, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetIntegerField_ReturnValue_1) == 0x0000F4, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetIntegerField_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000F8, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetInt64Field_ReturnValue_1) == 0x000100, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetInt64Field_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetValidValue_ReturnValue_1) == 0x000108, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse, CallFunc_GetStringField_ReturnValue_2) == 0x000110, "Member 'B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse::CallFunc_GetStringField_ReturnValue_2' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseSuccessAndRequestedProductUserId
// 0x0078 (0x0078 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductUserId;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 UserProductUserId;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetBoolean_Branch;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Object_GetBoolean_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId) == 0x000078, "Wrong size on B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, Response) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::Response' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, Success) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::Success' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, ProductUserId) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, UserProductUserId) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::UserProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, SuccessResult) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Json_ParseJsonString_Branch) == 0x000058, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Object_GetString_Branch) == 0x00005A, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Object_GetString_ReturnValue) == 0x000060, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Object_GetBoolean_Branch) == 0x000070, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Object_GetBoolean_Branch' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, CallFunc_Object_GetBoolean_ReturnValue) == 0x000071, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::CallFunc_Object_GetBoolean_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, K2Node_SwitchEnum_CmpSuccess_1) == 0x000072, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId, K2Node_SwitchEnum_CmpSuccess_2) == 0x000073, "Member 'B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.RequestGSOnlineStats
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats, PlayerState) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats::PlayerState' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.Reset All Online Stats
// 0x0070 (0x0070 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats final
{
public:
	bool                                          AchievementsToo;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0060(0x0010)()
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats) == 0x000070, "Wrong size on B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats, AchievementsToo) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats::AchievementsToo' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats, K2Node_MakeArray_Array) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats, CallFunc_Format_ReturnValue) == 0x000060, "Member 'B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetGSAchievement
// 0x0018 (0x0018 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_SetGSAchievement final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_SetGSAchievement) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_SetGSAchievement");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_SetGSAchievement) == 0x000018, "Wrong size on B_NewStatsAndAchievementsManager_C_SetGSAchievement");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSAchievement, PlayerState) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_SetGSAchievement::PlayerState' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSAchievement, Name_0) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_SetGSAchievement::Name_0' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSAchievement, Result) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_SetGSAchievement::Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSAchievement, CallFunc_SetGSStat_Result) == 0x000011, "Member 'B_NewStatsAndAchievementsManager_C_SetGSAchievement::CallFunc_SetGSStat_Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSAchievement, CallFunc_SetGSStat_ReturnValue) == 0x000012, "Member 'B_NewStatsAndAchievementsManager_C_SetGSAchievement::CallFunc_SetGSStat_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetGSStat
// 0x0030 (0x0030 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_SetGSStat final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         SetValue;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_SetGSStat) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_SetGSStat");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_SetGSStat) == 0x000030, "Wrong size on B_NewStatsAndAchievementsManager_C_SetGSStat");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, SetValue) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::SetValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, PlayerState) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::PlayerState' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, Result) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, ReturnValue) == 0x000019, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, CallFunc_IsDedicatedServer_ReturnValue) == 0x00001A, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetGSStat, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_SetGSStat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetStat
// 0x0028 (0x0028 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_SetStat final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_SetStat) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_SetStat");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_SetStat) == 0x000028, "Wrong size on B_NewStatsAndAchievementsManager_C_SetStat");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetStat, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_SetStat::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetStat, Value) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_SetStat::Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetStat, Result) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_SetStat::Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SetStat, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_SetStat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.StoreGSOnlineStats
// 0x0008 (0x0008 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats) == 0x000008, "Wrong size on B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats, PlayerState) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats::PlayerState' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SynchronizeLocalAchievements
// 0x00E0 (0x00E0 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements final
{
public:
	TArray<class FName>                           AchievementsToUpdate;                              // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineAchievementsSubsystem*           CallFunc_GetNamedAchievementsSubsystem_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSubsystem*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineIdentitySubsystem*               CallFunc_GetNamedIdentitySubsystem_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUniquePlayerId_ReturnValue;            // 0x0040(0x0030)(HasGetValueTypeHash)
	TArray<struct FOnlineAchievementBP>           CallFunc_GetCachedAchievements_OutAchievements;    // 0x0070(0x0010)(ReferenceParm)
	EOnlineCachedResult_                          CallFunc_GetCachedAchievements_ReturnValue;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineAchievementBP                   CallFunc_Array_Get_Item;                           // 0x0088(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements) == 0x0000E0, "Wrong size on B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, AchievementsToUpdate) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::AchievementsToUpdate' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetNamedAchievementsSubsystem_ReturnValue) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetNamedAchievementsSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetNamedIdentitySubsystem_ReturnValue) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetNamedIdentitySubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetUniquePlayerId_ReturnValue) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetUniquePlayerId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetCachedAchievements_OutAchievements) == 0x000070, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetCachedAchievements_OutAchievements' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetCachedAchievements_ReturnValue) == 0x000080, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetCachedAchievements_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000081, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, K2Node_SwitchEnum_CmpSuccess) == 0x000082, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Array_Get_Item) == 0x000088, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0000A5, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A8, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, Temp_bool_Variable) == 0x0000B0, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetStat_ResultValue) == 0x0000B8, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_GetStat_ResultWasFound) == 0x0000C0, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0000C4, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, Temp_bool_Variable_1) == 0x0000C8, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Array_AddUnique_ReturnValue) == 0x0000CC, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, Temp_int_Variable) == 0x0000D0, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_Ps4Platform_ReturnValue) == 0x0000D4, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, K2Node_Select_Default) == 0x0000D5, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_BooleanAND_ReturnValue) == 0x0000D6, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'B_NewStatsAndAchievementsManager_C_SynchronizeLocalAchievements::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.WriteLocalAchievements
// 0x0010 (0x0010 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_WriteLocalAchievements final
{
public:
	TArray<class FName>                           AchievementIds;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_WriteLocalAchievements) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_WriteLocalAchievements");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_WriteLocalAchievements) == 0x000010, "Wrong size on B_NewStatsAndAchievementsManager_C_WriteLocalAchievements");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_WriteLocalAchievements, AchievementIds) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_WriteLocalAchievements::AchievementIds' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetAchievementStatus
// 0x0050 (0x0050 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_GetAchievementStatus final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCompleted;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CompletionDateTime;                                // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHidden;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_Value;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_GetAchievementStatus");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus) == 0x000050, "Wrong size on B_NewStatsAndAchievementsManager_C_GetAchievementStatus");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, bIsCompleted) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::bIsCompleted' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CompletionDateTime) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CompletionDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, bIsHidden) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::bIsHidden' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_GetStat_Value) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_GetStat_WasFound) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_GetStat_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_GetStat_IndexInList) == 0x00003C, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_GetStat_IndexInList' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_GetStat_AchievementDateTime) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_GetStat_AchievementDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_GetStat_bIsHidden) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_GetStat_bIsHidden' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetAchievementStatus, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000049, "Member 'B_NewStatsAndAchievementsManager_C_GetAchievementStatus::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetGSAchievement
// 0x0028 (0x0028 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_GetGSAchievement final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasAchievement;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetGSStat_ResultValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_GetGSAchievement) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_GetGSAchievement");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_GetGSAchievement) == 0x000028, "Wrong size on B_NewStatsAndAchievementsManager_C_GetGSAchievement");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, Name_0) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::Name_0' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, PlayerState) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::PlayerState' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, HasAchievement) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::HasAchievement' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, Result) == 0x000011, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::Result' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, CallFunc_GetGSStat_ResultValue) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::CallFunc_GetGSStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, CallFunc_GetGSStat_ResultWasFound) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::CallFunc_GetGSStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSAchievement, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000021, "Member 'B_NewStatsAndAchievementsManager_C_GetGSAchievement::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetGSStat
// 0x0050 (0x0050 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_GetGSStat final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         ResultValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultWasFound;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_Value;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden;                        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_GetGSStat) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_GetGSStat");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_GetGSStat) == 0x000050, "Wrong size on B_NewStatsAndAchievementsManager_C_GetGSStat");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, PlayerState) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::PlayerState' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, ResultValue) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::ResultValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, ResultWasFound) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_GetStat_Value) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_GetStat_WasFound) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_GetStat_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_GetStat_IndexInList) == 0x00003C, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_GetStat_IndexInList' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_GetStat_AchievementDateTime) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_GetStat_AchievementDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_GetStat_bIsHidden) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_GetStat_bIsHidden' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetGSStat, CallFunc_IsDedicatedServer_ReturnValue) == 0x000049, "Member 'B_NewStatsAndAchievementsManager_C_GetGSStat::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetStat
// 0x0060 (0x0060 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_GetStat final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ResultValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultWasFound;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnWasFound;                                    // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_OverrideServerLevel_Value;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OverrideServerLevel_WasFound;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_Value;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound;                         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden;                        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_GetStat) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_GetStat");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_GetStat) == 0x000060, "Wrong size on B_NewStatsAndAchievementsManager_C_GetStat");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, ResultValue) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::ResultValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, ResultWasFound) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, ReturnWasFound) == 0x000011, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::ReturnWasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, ReturnValue) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_OverrideServerLevel_Value) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_OverrideServerLevel_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_OverrideServerLevel_WasFound) == 0x000028, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_OverrideServerLevel_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000029, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002A, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_Conv_NameToString_ReturnValue) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_GetStat_Value) == 0x000040, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_GetStat_WasFound) == 0x000048, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_GetStat_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_GetStat_IndexInList) == 0x00004C, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_GetStat_IndexInList' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_GetStat_AchievementDateTime) == 0x000050, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_GetStat_AchievementDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_GetStat, CallFunc_GetStat_bIsHidden) == 0x000058, "Member 'B_NewStatsAndAchievementsManager_C_GetStat::CallFunc_GetStat_bIsHidden' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.IsAchievementVisible
// 0x0040 (0x0040 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_IsAchievementVisible final
{
public:
	class FName                                   StatName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsVisible;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_Value;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_IsAchievementVisible");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible) == 0x000040, "Wrong size on B_NewStatsAndAchievementsManager_C_IsAchievementVisible");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, StatName) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::StatName' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, bIsVisible) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::bIsVisible' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_GetStat_Value) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_GetStat_WasFound) == 0x000028, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_GetStat_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_GetStat_IndexInList) == 0x00002C, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_GetStat_IndexInList' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_GetStat_AchievementDateTime) == 0x000030, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_GetStat_AchievementDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_GetStat_bIsHidden) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_GetStat_bIsHidden' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_IsAchievementVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'B_NewStatsAndAchievementsManager_C_IsAchievementVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OverrideServerLevel
// 0x0228 (0x0228 - 0x0000)
struct B_NewStatsAndAchievementsManager_C_OverrideServerLevel final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasFound;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AccountLevelFound;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ServerLevelFound;                                  // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         AccountLevelValue;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         ServerLevelValue;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_Int64Int64_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0028(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_ToString_ReturnValue;                     // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0090(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FString                                 CallFunc_ToString_ReturnValue_1;                   // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0170(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0180(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0010)()
	int64                                         CallFunc_GetStat_Value;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound;                         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime;              // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden;                        // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_Value_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_WasFound_1;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetStat_IndexInList_1;                    // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetStat_AchievementDateTime_1;            // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_bIsHidden_1;                      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel) == 0x000008, "Wrong alignment on B_NewStatsAndAchievementsManager_C_OverrideServerLevel");
static_assert(sizeof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel) == 0x000228, "Wrong size on B_NewStatsAndAchievementsManager_C_OverrideServerLevel");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, Value) == 0x000000, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, WasFound) == 0x000008, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, AccountLevelFound) == 0x000009, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::AccountLevelFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, ServerLevelFound) == 0x00000A, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::ServerLevelFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, AccountLevelValue) == 0x000010, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::AccountLevelValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, ServerLevelValue) == 0x000018, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::ServerLevelValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Less_Int64Int64_ReturnValue) == 0x000020, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Less_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Not_PreBool_ReturnValue_1) == 0x000022, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Conv_BoolToText_ReturnValue) == 0x000028, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_ToString_ReturnValue) == 0x000080, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_ToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000090, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeArray_Array) == 0x000140, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_ToString_ReturnValue_1) == 0x000150, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_ToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Format_ReturnValue) == 0x000160, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000170, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeStruct_FormatArgumentData_3) == 0x000180, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_Value) == 0x0001E8, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_Value' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_WasFound) == 0x0001F0, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_WasFound' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_IndexInList) == 0x0001F4, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_IndexInList' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_AchievementDateTime) == 0x0001F8, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_AchievementDateTime' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_bIsHidden) == 0x000200, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_bIsHidden' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_Value_1) == 0x000208, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_Value_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_WasFound_1) == 0x000210, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_WasFound_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_IndexInList_1) == 0x000214, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_IndexInList_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_AchievementDateTime_1) == 0x000218, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_AchievementDateTime_1' has a wrong offset!");
static_assert(offsetof(B_NewStatsAndAchievementsManager_C_OverrideServerLevel, CallFunc_GetStat_bIsHidden_1) == 0x000220, "Member 'B_NewStatsAndAchievementsManager_C_OverrideServerLevel::CallFunc_GetStat_bIsHidden_1' has a wrong offset!");

}

