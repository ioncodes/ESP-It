#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MutedPlayersSave

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.BlockPlayer
// 0x0018 (0x0018 - 0x0000)
struct B_MutedPlayersSave_C_BlockPlayer final
{
public:
	class FString                                 PlayerPUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBlocked_IsBlocked;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_BlockPlayer) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_BlockPlayer");
static_assert(sizeof(B_MutedPlayersSave_C_BlockPlayer) == 0x000018, "Wrong size on B_MutedPlayersSave_C_BlockPlayer");
static_assert(offsetof(B_MutedPlayersSave_C_BlockPlayer, PlayerPUID) == 0x000000, "Member 'B_MutedPlayersSave_C_BlockPlayer::PlayerPUID' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_BlockPlayer, CallFunc_IsPlayerBlocked_IsBlocked) == 0x000010, "Member 'B_MutedPlayersSave_C_BlockPlayer::CallFunc_IsPlayerBlocked_IsBlocked' has a wrong offset!");

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.IsPlayerBlocked
// 0x0018 (0x0018 - 0x0000)
struct B_MutedPlayersSave_C_IsPlayerBlocked final
{
public:
	class FString                                 PlayerPUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsBlocked;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_IsPlayerBlocked) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_IsPlayerBlocked");
static_assert(sizeof(B_MutedPlayersSave_C_IsPlayerBlocked) == 0x000018, "Wrong size on B_MutedPlayersSave_C_IsPlayerBlocked");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerBlocked, PlayerPUID) == 0x000000, "Member 'B_MutedPlayersSave_C_IsPlayerBlocked::PlayerPUID' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerBlocked, IsBlocked) == 0x000010, "Member 'B_MutedPlayersSave_C_IsPlayerBlocked::IsBlocked' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerBlocked, CallFunc_Set_Contains_ReturnValue) == 0x000011, "Member 'B_MutedPlayersSave_C_IsPlayerBlocked::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.IsPlayerMuted
// 0x0010 (0x0010 - 0x0000)
struct B_MutedPlayersSave_C_IsPlayerMuted final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMuted;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_IsPlayerMuted) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_IsPlayerMuted");
static_assert(sizeof(B_MutedPlayersSave_C_IsPlayerMuted) == 0x000010, "Wrong size on B_MutedPlayersSave_C_IsPlayerMuted");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerMuted, PlayerState) == 0x000000, "Member 'B_MutedPlayersSave_C_IsPlayerMuted::PlayerState' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerMuted, IsMuted) == 0x000008, "Member 'B_MutedPlayersSave_C_IsPlayerMuted::IsMuted' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_IsPlayerMuted, CallFunc_Set_Contains_ReturnValue) == 0x000009, "Member 'B_MutedPlayersSave_C_IsPlayerMuted::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.MutePlayer
// 0x0010 (0x0010 - 0x0000)
struct B_MutedPlayersSave_C_MutePlayer final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_IsMuted;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_MutePlayer) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_MutePlayer");
static_assert(sizeof(B_MutedPlayersSave_C_MutePlayer) == 0x000010, "Wrong size on B_MutedPlayersSave_C_MutePlayer");
static_assert(offsetof(B_MutedPlayersSave_C_MutePlayer, PlayerState) == 0x000000, "Member 'B_MutedPlayersSave_C_MutePlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_MutePlayer, CallFunc_IsPlayerMuted_IsMuted) == 0x000008, "Member 'B_MutedPlayersSave_C_MutePlayer::CallFunc_IsPlayerMuted_IsMuted' has a wrong offset!");

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.UnblockPlayer
// 0x0018 (0x0018 - 0x0000)
struct B_MutedPlayersSave_C_UnblockPlayer final
{
public:
	class FString                                 PlayerPUID;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBlocked_IsBlocked;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_UnblockPlayer) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_UnblockPlayer");
static_assert(sizeof(B_MutedPlayersSave_C_UnblockPlayer) == 0x000018, "Wrong size on B_MutedPlayersSave_C_UnblockPlayer");
static_assert(offsetof(B_MutedPlayersSave_C_UnblockPlayer, PlayerPUID) == 0x000000, "Member 'B_MutedPlayersSave_C_UnblockPlayer::PlayerPUID' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_UnblockPlayer, CallFunc_IsPlayerBlocked_IsBlocked) == 0x000010, "Member 'B_MutedPlayersSave_C_UnblockPlayer::CallFunc_IsPlayerBlocked_IsBlocked' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_UnblockPlayer, CallFunc_Set_Remove_ReturnValue) == 0x000011, "Member 'B_MutedPlayersSave_C_UnblockPlayer::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");

// Function B_MutedPlayersSave.B_MutedPlayersSave_C.UnmutePlayer
// 0x0010 (0x0010 - 0x0000)
struct B_MutedPlayersSave_C_UnmutePlayer final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_IsMuted;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MutedPlayersSave_C_UnmutePlayer) == 0x000008, "Wrong alignment on B_MutedPlayersSave_C_UnmutePlayer");
static_assert(sizeof(B_MutedPlayersSave_C_UnmutePlayer) == 0x000010, "Wrong size on B_MutedPlayersSave_C_UnmutePlayer");
static_assert(offsetof(B_MutedPlayersSave_C_UnmutePlayer, PlayerState) == 0x000000, "Member 'B_MutedPlayersSave_C_UnmutePlayer::PlayerState' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_UnmutePlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_MutedPlayersSave_C_UnmutePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_UnmutePlayer, CallFunc_Set_Remove_ReturnValue) == 0x000009, "Member 'B_MutedPlayersSave_C_UnmutePlayer::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MutedPlayersSave_C_UnmutePlayer, CallFunc_IsPlayerMuted_IsMuted) == 0x00000A, "Member 'B_MutedPlayersSave_C_UnmutePlayer::CallFunc_IsPlayerMuted_IsMuted' has a wrong offset!");

}

