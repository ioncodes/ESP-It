#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AxisIcon

#include "Basic.hpp"

#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_AxisIcon.WB_AxisIcon_C.GetLocalizationManager
// 0x0020 (0x0020 - 0x0000)
struct WB_AxisIcon_C_GetLocalizationManager final
{
public:
	class UB_LocalizationManager_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AxisIcon_C_GetLocalizationManager) == 0x000008, "Wrong alignment on WB_AxisIcon_C_GetLocalizationManager");
static_assert(sizeof(WB_AxisIcon_C_GetLocalizationManager) == 0x000020, "Wrong size on WB_AxisIcon_C_GetLocalizationManager");
static_assert(offsetof(WB_AxisIcon_C_GetLocalizationManager, ReturnValue) == 0x000000, "Member 'WB_AxisIcon_C_GetLocalizationManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_GetLocalizationManager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_AxisIcon_C_GetLocalizationManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_GetLocalizationManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_AxisIcon_C_GetLocalizationManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_GetLocalizationManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_AxisIcon_C_GetLocalizationManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_GetLocalizationManager, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_AxisIcon_C_GetLocalizationManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_AxisIcon.WB_AxisIcon_C.UpdateIcon
// 0x0028 (0x0028 - 0x0000)
struct WB_AxisIcon_C_UpdateIcon final
{
public:
	class UB_LocalizationManager_C*               CallFunc_GetLocalizationManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyForAxis_ReturnValue;                // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetKeyForAxis_bKeyFound;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AxisIcon_C_UpdateIcon) == 0x000008, "Wrong alignment on WB_AxisIcon_C_UpdateIcon");
static_assert(sizeof(WB_AxisIcon_C_UpdateIcon) == 0x000028, "Wrong size on WB_AxisIcon_C_UpdateIcon");
static_assert(offsetof(WB_AxisIcon_C_UpdateIcon, CallFunc_GetLocalizationManager_ReturnValue) == 0x000000, "Member 'WB_AxisIcon_C_UpdateIcon::CallFunc_GetLocalizationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_UpdateIcon, CallFunc_GetKeyForAxis_ReturnValue) == 0x000008, "Member 'WB_AxisIcon_C_UpdateIcon::CallFunc_GetKeyForAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_UpdateIcon, CallFunc_GetKeyForAxis_bKeyFound) == 0x000020, "Member 'WB_AxisIcon_C_UpdateIcon::CallFunc_GetKeyForAxis_bKeyFound' has a wrong offset!");

// Function WB_AxisIcon.WB_AxisIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_AxisIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AxisIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WB_AxisIcon_C_PreConstruct");
static_assert(sizeof(WB_AxisIcon_C_PreConstruct) == 0x000001, "Wrong size on WB_AxisIcon_C_PreConstruct");
static_assert(offsetof(WB_AxisIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_AxisIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_AxisIcon.WB_AxisIcon_C.ExecuteUbergraph_WB_AxisIcon
// 0x0008 (0x0008 - 0x0000)
struct WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon) == 0x000004, "Wrong alignment on WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon");
static_assert(sizeof(WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon) == 0x000008, "Wrong size on WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon");
static_assert(offsetof(WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon, EntryPoint) == 0x000000, "Member 'WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_AxisIcon_C_ExecuteUbergraph_WB_AxisIcon::K2Node_Event_IsDesignTime' has a wrong offset!");

}

