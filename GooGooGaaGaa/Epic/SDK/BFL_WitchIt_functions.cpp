#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_WitchIt

#include "Basic.hpp"

#include "BFL_WitchIt_classes.hpp"
#include "BFL_WitchIt_parameters.hpp"


namespace SDK
{

// Function BFL_WitchIt.BFL_WitchIt_C.GetNativePlatformName
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           PlatformName                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::GetNativePlatformName(class UObject* WorldContext, class UObject* __WorldContext, class FString* PlatformName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetNativePlatformName");

	Params::BFL_WitchIt_C_GetNativePlatformName Parms{};

	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlatformName != nullptr)
		*PlatformName = std::move(Parms.PlatformName);
}


// Function BFL_WitchIt.BFL_WitchIt_C.IsNativePlatformSteam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSteam                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::IsNativePlatformSteam(class UObject* WorldContext, class UObject* __WorldContext, bool* IsSteam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "IsNativePlatformSteam");

	Params::BFL_WitchIt_C_IsNativePlatformSteam Parms{};

	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsSteam != nullptr)
		*IsSteam = Parms.IsSteam;
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetProductUserIdFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           PlatformId                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::GetProductUserIdFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class FString* PlatformId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetProductUserIdFromPlayerState");

	Params::BFL_WitchIt_C_GetProductUserIdFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlatformId != nullptr)
		*PlatformId = std::move(Parms.PlatformId);
}


// Function BFL_WitchIt.BFL_WitchIt_C.IsSessionUsageAllowed
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsAllowed                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::IsSessionUsageAllowed(class UObject* __WorldContext, bool* bIsAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "IsSessionUsageAllowed");

	Params::BFL_WitchIt_C_IsSessionUsageAllowed Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsAllowed != nullptr)
		*bIsAllowed = Parms.bIsAllowed;
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetUniqueNetIdFromFirstLocalPlayer
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 NewParam                                               (Parm, OutParm, HasGetValueTypeHash)

void UBFL_WitchIt_C::GetUniqueNetIdFromFirstLocalPlayer(class UObject* WorldContext, class UObject* __WorldContext, struct FUniqueNetIdRepl* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetUniqueNetIdFromFirstLocalPlayer");

	Params::BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer Parms{};

	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = std::move(Parms.NewParam);
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetNativePlatformAccountIdFromPlayerState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           PlatformId                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::GetNativePlatformAccountIdFromPlayerState(class APlayerState* PlayerState, class UObject* __WorldContext, class FString* PlatformId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetNativePlatformAccountIdFromPlayerState");

	Params::BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState Parms{};

	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlatformId != nullptr)
		*PlatformId = std::move(Parms.PlatformId);
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetNativePlatformAccountId
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          WorldContext                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           PlatformId                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::GetNativePlatformAccountId(class UObject* WorldContext, class UObject* __WorldContext, class FString* PlatformId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetNativePlatformAccountId");

	Params::BFL_WitchIt_C_GetNativePlatformAccountId Parms{};

	Parms.WorldContext = WorldContext;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PlatformId != nullptr)
		*PlatformId = std::move(Parms.PlatformId);
}


// Function BFL_WitchIt.BFL_WitchIt_C.UseNewServerBrowser
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Out                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_WitchIt_C::UseNewServerBrowser(class UObject* __WorldContext, bool* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "UseNewServerBrowser");

	Params::BFL_WitchIt_C_UseNewServerBrowser Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Out != nullptr)
		*Out = Parms.Out;
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameState
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_GameState_C*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AB_GameState_C* UBFL_WitchIt_C::GetBGameState(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetBGameState");

	Params::BFL_WitchIt_C_GetBGameState Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameMode
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_GameMode_C*                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AB_GameMode_C* UBFL_WitchIt_C::GetBGameMode(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetBGameMode");

	Params::BFL_WitchIt_C_GetBGameMode Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameInstance
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UB_GameInstance_C*                ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UB_GameInstance_C* UBFL_WitchIt_C::GetBGameInstance(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_WitchIt_C", "GetBGameInstance");

	Params::BFL_WitchIt_C_GetBGameInstance Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

