#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Chat

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "EChatType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"
#include "SChatMessage_structs.hpp"


namespace SDK::Params
{

// Function WB_Chat.WB_Chat_C.AddChatMessage
// 0x00C0 (0x00C0 - 0x0000)
struct WB_Chat_C_AddChatMessage final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ChatMessage;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EChatType                                     ChatType;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Team;                                              // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           PlayerColor;                                       // 0x0024(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       PlayerTeam;                                        // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CurrentChatEntry;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CallFunc_Create_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSChatMessage                          K2Node_MakeStruct_SChatMessage;                    // 0x0078(0x0030)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_AddChatMessage) == 0x000008, "Wrong alignment on WB_Chat_C_AddChatMessage");
static_assert(sizeof(WB_Chat_C_AddChatMessage) == 0x0000C0, "Wrong size on WB_Chat_C_AddChatMessage");
static_assert(offsetof(WB_Chat_C_AddChatMessage, PlayerName) == 0x000000, "Member 'WB_Chat_C_AddChatMessage::PlayerName' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, ChatMessage) == 0x000010, "Member 'WB_Chat_C_AddChatMessage::ChatMessage' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, ChatType) == 0x000020, "Member 'WB_Chat_C_AddChatMessage::ChatType' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, Team) == 0x000021, "Member 'WB_Chat_C_AddChatMessage::Team' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, PlayerColor) == 0x000024, "Member 'WB_Chat_C_AddChatMessage::PlayerColor' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, PlayerTeam) == 0x000034, "Member 'WB_Chat_C_AddChatMessage::PlayerTeam' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CurrentChatEntry) == 0x000038, "Member 'WB_Chat_C_AddChatMessage::CurrentChatEntry' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_Now_ReturnValue) == 0x000040, "Member 'WB_Chat_C_AddChatMessage::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'WB_Chat_C_AddChatMessage::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_Create_ReturnValue) == 0x000050, "Member 'WB_Chat_C_AddChatMessage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WB_Chat_C_AddChatMessage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'WB_Chat_C_AddChatMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, K2Node_DynamicCast_AsB_Player_State) == 0x000068, "Member 'WB_Chat_C_AddChatMessage::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WB_Chat_C_AddChatMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000071, "Member 'WB_Chat_C_AddChatMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, K2Node_MakeStruct_SChatMessage) == 0x000078, "Member 'WB_Chat_C_AddChatMessage::K2Node_MakeStruct_SChatMessage' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WB_Chat_C_AddChatMessage::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_AddChild_ReturnValue) == 0x0000B0, "Member 'WB_Chat_C_AddChatMessage::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddChatMessage, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'WB_Chat_C_AddChatMessage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.AddPlayerChatMessage
// 0x00D8 (0x00D8 - 0x0000)
struct WB_Chat_C_AddPlayerChatMessage final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ChatMessage;                                       // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	EChatType                                     ChatType;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           PlayerColor;                                       // 0x001C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChatEnabled_ChatEnabled;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMuted_IsMuted;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x00A4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0010)()
};
static_assert(alignof(WB_Chat_C_AddPlayerChatMessage) == 0x000008, "Wrong alignment on WB_Chat_C_AddPlayerChatMessage");
static_assert(sizeof(WB_Chat_C_AddPlayerChatMessage) == 0x0000D8, "Wrong size on WB_Chat_C_AddPlayerChatMessage");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, PlayerState) == 0x000000, "Member 'WB_Chat_C_AddPlayerChatMessage::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, ChatMessage) == 0x000008, "Member 'WB_Chat_C_AddPlayerChatMessage::ChatMessage' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, ChatType) == 0x000018, "Member 'WB_Chat_C_AddPlayerChatMessage::ChatType' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, PlayerColor) == 0x00001C, "Member 'WB_Chat_C_AddPlayerChatMessage::PlayerColor' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetGameInstance_ReturnValue_1) == 0x000038, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_AsB_Game_Instance) == 0x000040, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000050, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetGameInstance_ReturnValue_2) == 0x000060, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000068, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetChatEnabled_ChatEnabled) == 0x000071, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetChatEnabled_ChatEnabled' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetGameState_ReturnValue) == 0x000078, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000088, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000098, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'WB_Chat_C_AddPlayerChatMessage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_IsPlayerMuted_IsMuted) == 0x0000A1, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_IsPlayerMuted_IsMuted' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0000A4, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_Not_PreBool_ReturnValue) == 0x0000B4, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_BooleanAND_ReturnValue) == 0x0000B5, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_GetPlayerOrBotName_Name) == 0x0000B8, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_AddPlayerChatMessage, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'WB_Chat_C_AddPlayerChatMessage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WB_Chat_C_BndEvt__ChatTextBox_K2Node_ComponentBoundEvent_4_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000010, "Wrong size on WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'WB_Chat_C_BndEvt__ChatTextBoxAll_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.CalculateMaxScrollOffset
// 0x0088 (0x0088 - 0x0000)
struct WB_Chat_C_CalculateMaxScrollOffset final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0008(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetDesiredSize_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_CalculateMaxScrollOffset) == 0x000008, "Wrong alignment on WB_Chat_C_CalculateMaxScrollOffset");
static_assert(sizeof(WB_Chat_C_CalculateMaxScrollOffset) == 0x000088, "Wrong size on WB_Chat_C_CalculateMaxScrollOffset");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, ReturnValue) == 0x000000, "Member 'WB_Chat_C_CalculateMaxScrollOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_GetCachedGeometry_ReturnValue) == 0x000008, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_GetDesiredSize_ReturnValue) == 0x000040, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_GetDesiredSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_GetLocalSize_ReturnValue) == 0x000050, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_BreakVector2D_X) == 0x000060, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_BreakVector2D_X_1) == 0x000070, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_BreakVector2D_Y_1) == 0x000078, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CalculateMaxScrollOffset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'WB_Chat_C_CalculateMaxScrollOffset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.ClampChatMessages
// 0x0020 (0x0020 - 0x0000)
struct WB_Chat_C_ClampChatMessages final
{
public:
	class UWB_ChatEntry_C*                        EntryToRemove;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_ClampChatMessages) == 0x000008, "Wrong alignment on WB_Chat_C_ClampChatMessages");
static_assert(sizeof(WB_Chat_C_ClampChatMessages) == 0x000020, "Wrong size on WB_Chat_C_ClampChatMessages");
static_assert(offsetof(WB_Chat_C_ClampChatMessages, EntryToRemove) == 0x000000, "Member 'WB_Chat_C_ClampChatMessages::EntryToRemove' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatMessages, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'WB_Chat_C_ClampChatMessages::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatMessages, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_Chat_C_ClampChatMessages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatMessages, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_Chat_C_ClampChatMessages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatMessages, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'WB_Chat_C_ClampChatMessages::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.ClampChatOffset
// 0x0014 (0x0014 - 0x0000)
struct WB_Chat_C_ClampChatOffset final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_ClampChatOffset) == 0x000004, "Wrong alignment on WB_Chat_C_ClampChatOffset");
static_assert(sizeof(WB_Chat_C_ClampChatOffset) == 0x000014, "Wrong size on WB_Chat_C_ClampChatOffset");
static_assert(offsetof(WB_Chat_C_ClampChatOffset, Value) == 0x000000, "Member 'WB_Chat_C_ClampChatOffset::Value' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatOffset, ReturnValue) == 0x000004, "Member 'WB_Chat_C_ClampChatOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatOffset, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WB_Chat_C_ClampChatOffset::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatOffset, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WB_Chat_C_ClampChatOffset::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClampChatOffset, CallFunc_Clamp_ReturnValue) == 0x000010, "Member 'WB_Chat_C_ClampChatOffset::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.ClearChat
// 0x0020 (0x0020 - 0x0000)
struct WB_Chat_C_ClearChat final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_ChatEntry_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_ClearChat) == 0x000008, "Wrong alignment on WB_Chat_C_ClearChat");
static_assert(sizeof(WB_Chat_C_ClearChat) == 0x000020, "Wrong size on WB_Chat_C_ClearChat");
static_assert(offsetof(WB_Chat_C_ClearChat, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_Chat_C_ClearChat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClearChat, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_Chat_C_ClearChat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClearChat, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_Chat_C_ClearChat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClearChat, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_Chat_C_ClearChat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClearChat, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_Chat_C_ClearChat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ClearChat, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_Chat_C_ClearChat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.CloseChat
// 0x0078 (0x0078 - 0x0000)
struct WB_Chat_C_CloseChat final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_CloseChat) == 0x000008, "Wrong alignment on WB_Chat_C_CloseChat");
static_assert(sizeof(WB_Chat_C_CloseChat) == 0x000078, "Wrong size on WB_Chat_C_CloseChat");
static_assert(offsetof(WB_Chat_C_CloseChat, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_Chat_C_CloseChat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_Chat_C_CloseChat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_Chat_C_CloseChat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WB_Chat_C_CloseChat::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_Chat_C_CloseChat::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000020, "Member 'WB_Chat_C_CloseChat::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_Chat_C_CloseChat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'WB_Chat_C_CloseChat::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WB_Chat_C_CloseChat::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'WB_Chat_C_CloseChat::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_Chat_C_CloseChat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WB_Chat_C_CloseChat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'WB_Chat_C_CloseChat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'WB_Chat_C_CloseChat::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'WB_Chat_C_CloseChat::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Add_IntInt_ReturnValue_1) == 0x000058, "Member 'WB_Chat_C_CloseChat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Multiply_IntInt_ReturnValue) == 0x00005C, "Member 'WB_Chat_C_CloseChat::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'WB_Chat_C_CloseChat::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WB_Chat_C_CloseChat::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_CloseChat, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000070, "Member 'WB_Chat_C_CloseChat::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.ExecuteUbergraph_WB_Chat
// 0x00A8 (0x00A8 - 0x0000)
struct WB_Chat_C_ExecuteUbergraph_WB_Chat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0008(0x0010)(ConstParm)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0018(0x0010)(ConstParm)
	class UEditableTextBox*                       CallFunc_GetChatTextBox_ChatTextBox;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0030(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChatOpenButNotFocused_ReturnValue;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateMaxScrollOffset_ReturnValue;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_ExecuteUbergraph_WB_Chat) == 0x000008, "Wrong alignment on WB_Chat_C_ExecuteUbergraph_WB_Chat");
static_assert(sizeof(WB_Chat_C_ExecuteUbergraph_WB_Chat) == 0x0000A8, "Wrong size on WB_Chat_C_ExecuteUbergraph_WB_Chat");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, EntryPoint) == 0x000000, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, K2Node_ComponentBoundEvent_Text_1) == 0x000008, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, K2Node_ComponentBoundEvent_Text) == 0x000018, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_GetChatTextBox_ChatTextBox) == 0x000028, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_GetChatTextBox_ChatTextBox' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, K2Node_Event_MyGeometry) == 0x000030, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, K2Node_Event_InDeltaTime) == 0x000068, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_IsChatOpenButNotFocused_ReturnValue) == 0x00006C, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_IsChatOpenButNotFocused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_Not_PreBool_ReturnValue) == 0x00006D, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000070, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000080, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, K2Node_MathExpression_ReturnValue) == 0x000088, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_CalculateMaxScrollOffset_ReturnValue) == 0x000090, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_CalculateMaxScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_ExecuteUbergraph_WB_Chat, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x0000A0, "Member 'WB_Chat_C_ExecuteUbergraph_WB_Chat::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.GetChatTextBox
// 0x0018 (0x0018 - 0x0000)
struct WB_Chat_C_GetChatTextBox final
{
public:
	class UEditableTextBox*                       ChatTextBox;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EChatType                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_GetChatTextBox) == 0x000008, "Wrong alignment on WB_Chat_C_GetChatTextBox");
static_assert(sizeof(WB_Chat_C_GetChatTextBox) == 0x000018, "Wrong size on WB_Chat_C_GetChatTextBox");
static_assert(offsetof(WB_Chat_C_GetChatTextBox, ChatTextBox) == 0x000000, "Member 'WB_Chat_C_GetChatTextBox::ChatTextBox' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetChatTextBox, Temp_byte_Variable) == 0x000008, "Member 'WB_Chat_C_GetChatTextBox::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetChatTextBox, K2Node_Select_Default) == 0x000010, "Member 'WB_Chat_C_GetChatTextBox::K2Node_Select_Default' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.GetTextToAll
// 0x0088 (0x0088 - 0x0000)
struct WB_Chat_C_GetTextToAll final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(WB_Chat_C_GetTextToAll) == 0x000008, "Wrong alignment on WB_Chat_C_GetTextToAll");
static_assert(sizeof(WB_Chat_C_GetTextToAll) == 0x000088, "Wrong size on WB_Chat_C_GetTextToAll");
static_assert(offsetof(WB_Chat_C_GetTextToAll, ReturnValue) == 0x000000, "Member 'WB_Chat_C_GetTextToAll::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToAll, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WB_Chat_C_GetTextToAll::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToAll, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_Chat_C_GetTextToAll::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToAll, K2Node_MakeArray_Array) == 0x000068, "Member 'WB_Chat_C_GetTextToAll::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToAll, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WB_Chat_C_GetTextToAll::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.GetTextToTeam
// 0x0088 (0x0088 - 0x0000)
struct WB_Chat_C_GetTextToTeam final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
};
static_assert(alignof(WB_Chat_C_GetTextToTeam) == 0x000008, "Wrong alignment on WB_Chat_C_GetTextToTeam");
static_assert(sizeof(WB_Chat_C_GetTextToTeam) == 0x000088, "Wrong size on WB_Chat_C_GetTextToTeam");
static_assert(offsetof(WB_Chat_C_GetTextToTeam, ReturnValue) == 0x000000, "Member 'WB_Chat_C_GetTextToTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToTeam, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'WB_Chat_C_GetTextToTeam::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToTeam, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_Chat_C_GetTextToTeam::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToTeam, K2Node_MakeArray_Array) == 0x000068, "Member 'WB_Chat_C_GetTextToTeam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetTextToTeam, CallFunc_Format_ReturnValue) == 0x000078, "Member 'WB_Chat_C_GetTextToTeam::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_Chat_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_GetVisibility_0) == 0x000008, "Wrong alignment on WB_Chat_C_GetVisibility_0");
static_assert(sizeof(WB_Chat_C_GetVisibility_0) == 0x000020, "Wrong size on WB_Chat_C_GetVisibility_0");
static_assert(offsetof(WB_Chat_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_Chat_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetVisibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_Chat_C_GetVisibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetVisibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_Chat_C_GetVisibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_Chat_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_GetVisibility_0, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x000019, "Member 'WB_Chat_C_GetVisibility_0::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.IsChatOpenButNotFocused
// 0x0018 (0x0018 - 0x0000)
struct WB_Chat_C_IsChatOpenButNotFocused final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       CallFunc_GetChatTextBox_ChatTextBox;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasKeyboardFocus_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_IsChatOpenButNotFocused) == 0x000008, "Wrong alignment on WB_Chat_C_IsChatOpenButNotFocused");
static_assert(sizeof(WB_Chat_C_IsChatOpenButNotFocused) == 0x000018, "Wrong size on WB_Chat_C_IsChatOpenButNotFocused");
static_assert(offsetof(WB_Chat_C_IsChatOpenButNotFocused, ReturnValue) == 0x000000, "Member 'WB_Chat_C_IsChatOpenButNotFocused::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_IsChatOpenButNotFocused, CallFunc_GetChatTextBox_ChatTextBox) == 0x000008, "Member 'WB_Chat_C_IsChatOpenButNotFocused::CallFunc_GetChatTextBox_ChatTextBox' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_IsChatOpenButNotFocused, CallFunc_HasKeyboardFocus_ReturnValue) == 0x000010, "Member 'WB_Chat_C_IsChatOpenButNotFocused::CallFunc_HasKeyboardFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_IsChatOpenButNotFocused, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WB_Chat_C_IsChatOpenButNotFocused::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_IsChatOpenButNotFocused, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'WB_Chat_C_IsChatOpenButNotFocused::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.OnPreviewKeyDown
// 0x0308 (0x0308 - 0x0000)
struct WB_Chat_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FInputEvent                            CallFunc_GetInputEventFromKeyEvent_ReturnValue;    // 0x0130(0x0020)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0150(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_InputEvent_IsControlDown_ReturnValue;     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0170(0x00B8)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_1;                     // 0x0230(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0250(0x00B8)()
};
static_assert(alignof(WB_Chat_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_Chat_C_OnPreviewKeyDown");
static_assert(sizeof(WB_Chat_C_OnPreviewKeyDown) == 0x000308, "Wrong size on WB_Chat_C_OnPreviewKeyDown");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_Chat_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_Chat_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_Chat_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_GetInputEventFromKeyEvent_ReturnValue) == 0x000130, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_GetInputEventFromKeyEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000150, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_InputEvent_IsControlDown_ReturnValue) == 0x000168, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_InputEvent_IsControlDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000169, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00016A, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00016B, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00016C, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x00016D, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000170, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000228, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue_1) == 0x000229, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue_2) == 0x00022A, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue_1) == 0x000230, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue_3) == 0x000248, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x000249, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_Not_PreBool_ReturnValue) == 0x00024A, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000250, "Member 'WB_Chat_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.OnTextChanged
// 0x0080 (0x0080 - 0x0000)
struct WB_Chat_C_OnTextChanged final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UEditableTextBox*                       ChatBox;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0010)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_OnTextChanged) == 0x000008, "Wrong alignment on WB_Chat_C_OnTextChanged");
static_assert(sizeof(WB_Chat_C_OnTextChanged) == 0x000080, "Wrong size on WB_Chat_C_OnTextChanged");
static_assert(offsetof(WB_Chat_C_OnTextChanged, InText) == 0x000000, "Member 'WB_Chat_C_OnTextChanged::InText' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, ChatBox) == 0x000010, "Member 'WB_Chat_C_OnTextChanged::ChatBox' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WB_Chat_C_OnTextChanged::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000028, "Member 'WB_Chat_C_OnTextChanged::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_GetSubstring_ReturnValue) == 0x000038, "Member 'WB_Chat_C_OnTextChanged::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, K2Node_SwitchString_CmpSuccess) == 0x000048, "Member 'WB_Chat_C_OnTextChanged::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WB_Chat_C_OnTextChanged::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WB_Chat_C_OnTextChanged::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WB_Chat_C_OnTextChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, K2Node_DynamicCast_AsB_Player_Controller) == 0x000070, "Member 'WB_Chat_C_OnTextChanged::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OnTextChanged, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WB_Chat_C_OnTextChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.OpenChat
// 0x0078 (0x0078 - 0x0000)
struct WB_Chat_C_OpenChat final
{
public:
	EChatType                                     ChatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatType                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEditableTextBox*                       CallFunc_GetChatTextBox_ChatTextBox;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBox*                         K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChatEnabled_ChatEnabled;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_OpenChat) == 0x000008, "Wrong alignment on WB_Chat_C_OpenChat");
static_assert(sizeof(WB_Chat_C_OpenChat) == 0x000078, "Wrong size on WB_Chat_C_OpenChat");
static_assert(offsetof(WB_Chat_C_OpenChat, ChatType) == 0x000000, "Member 'WB_Chat_C_OpenChat::ChatType' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_Chat_C_OpenChat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_Chat_C_OpenChat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WB_Chat_C_OpenChat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, Temp_byte_Variable) == 0x000010, "Member 'WB_Chat_C_OpenChat::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_GetChatTextBox_ChatTextBox) == 0x000018, "Member 'WB_Chat_C_OpenChat::CallFunc_GetChatTextBox_ChatTextBox' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, K2Node_Select_Default) == 0x000020, "Member 'WB_Chat_C_OpenChat::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'WB_Chat_C_OpenChat::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'WB_Chat_C_OpenChat::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WB_Chat_C_OpenChat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_GetGameInstance_ReturnValue_1) == 0x000040, "Member 'WB_Chat_C_OpenChat::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000048, "Member 'WB_Chat_C_OpenChat::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WB_Chat_C_OpenChat::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_GetChatEnabled_ChatEnabled) == 0x000051, "Member 'WB_Chat_C_OpenChat::CallFunc_GetChatEnabled_ChatEnabled' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_Array_Get_Item) == 0x000058, "Member 'WB_Chat_C_OpenChat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WB_Chat_C_OpenChat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_PlayAnimation_ReturnValue) == 0x000068, "Member 'WB_Chat_C_OpenChat::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_OpenChat, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WB_Chat_C_OpenChat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.Scroll
// 0x0088 (0x0088 - 0x0000)
struct WB_Chat_C_Scroll final
{
public:
	EScrollDirection                              ScrollDirection;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        ReferenceChatEntry;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MaxScrollOffset;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScrollAmount;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentScrollOffset;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateMaxScrollOffset_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EScrollDirection                              Temp_byte_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_Scroll) == 0x000008, "Wrong alignment on WB_Chat_C_Scroll");
static_assert(sizeof(WB_Chat_C_Scroll) == 0x000088, "Wrong size on WB_Chat_C_Scroll");
static_assert(offsetof(WB_Chat_C_Scroll, ScrollDirection) == 0x000000, "Member 'WB_Chat_C_Scroll::ScrollDirection' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, ReferenceChatEntry) == 0x000008, "Member 'WB_Chat_C_Scroll::ReferenceChatEntry' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, MaxScrollOffset) == 0x000010, "Member 'WB_Chat_C_Scroll::MaxScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, ScrollAmount) == 0x000018, "Member 'WB_Chat_C_Scroll::ScrollAmount' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CurrentScrollOffset) == 0x000020, "Member 'WB_Chat_C_Scroll::CurrentScrollOffset' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, Temp_real_Variable) == 0x000028, "Member 'WB_Chat_C_Scroll::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_CalculateMaxScrollOffset_ReturnValue) == 0x000030, "Member 'WB_Chat_C_Scroll::CallFunc_CalculateMaxScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, Temp_real_Variable_1) == 0x000038, "Member 'WB_Chat_C_Scroll::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, Temp_byte_Variable) == 0x000040, "Member 'WB_Chat_C_Scroll::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'WB_Chat_C_Scroll::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'WB_Chat_C_Scroll::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, K2Node_Select_Default) == 0x000058, "Member 'WB_Chat_C_Scroll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'WB_Chat_C_Scroll::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_GetScrollOffset_ReturnValue) == 0x000068, "Member 'WB_Chat_C_Scroll::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_FClamp_ReturnValue_1) == 0x000070, "Member 'WB_Chat_C_Scroll::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x000078, "Member 'WB_Chat_C_Scroll::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Scroll, CallFunc_FClamp_Value_ImplicitCast) == 0x000080, "Member 'WB_Chat_C_Scroll::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.SetScrollBarOpacity
// 0x0D60 (0x0D60 - 0x0000)
struct WB_Chat_C_SetScrollBarOpacity final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x003C(0x0014)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0050(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x0120(0x00D0)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_2;                   // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_3;                   // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x0210(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_3;                    // 0x0224(0x0014)()
	uint8                                         Pad_238[0x8];                                      // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_2;                    // 0x0240(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_3;                    // 0x0310(0x00D0)()
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_4;                   // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_5;                   // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_4;                    // 0x0400(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_5;                    // 0x0414(0x0014)()
	uint8                                         Pad_428[0x8];                                      // 0x0428(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_4;                    // 0x0430(0x00D0)()
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_5;                    // 0x0500(0x00D0)()
	struct FScrollBarStyle                        K2Node_MakeStruct_ScrollBarStyle;                  // 0x05D0(0x0770)()
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0D40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x0D44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_2;                // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_3;                // 0x0D4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_4;                // 0x0D50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_5;                // 0x0D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_SetScrollBarOpacity) == 0x000010, "Wrong alignment on WB_Chat_C_SetScrollBarOpacity");
static_assert(sizeof(WB_Chat_C_SetScrollBarOpacity) == 0x000D60, "Wrong size on WB_Chat_C_SetScrollBarOpacity");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, Opacity) == 0x000000, "Member 'WB_Chat_C_SetScrollBarOpacity::Opacity' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor) == 0x000008, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor_1) == 0x000018, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor_1) == 0x00003C, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush) == 0x000050, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush_1) == 0x000120, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor_2) == 0x0001F0, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor_3) == 0x000200, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor_2) == 0x000210, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor_3) == 0x000224, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush_2) == 0x000240, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush_3) == 0x000310, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor_4) == 0x0003E0, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_LinearColor_5) == 0x0003F0, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_LinearColor_5' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor_4) == 0x000400, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateColor_5) == 0x000414, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateColor_5' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush_4) == 0x000430, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_SlateBrush_5) == 0x000500, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_SlateBrush_5' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_ScrollBarStyle) == 0x0005D0, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_ScrollBarStyle' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast) == 0x000D40, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast_1) == 0x000D44, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast_2) == 0x000D48, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast_3) == 0x000D4C, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast_4) == 0x000D50, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetScrollBarOpacity, K2Node_MakeStruct_A_ImplicitCast_5) == 0x000D54, "Member 'WB_Chat_C_SetScrollBarOpacity::K2Node_MakeStruct_A_ImplicitCast_5' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.SetupByGameState
// 0x00F8 (0x00F8 - 0x0000)
struct WB_Chat_C_SetupByGameState final
{
public:
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0050(0x0038)(NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform_1;               // 0x00C0(0x0038)(NoDestructor)
};
static_assert(alignof(WB_Chat_C_SetupByGameState) == 0x000008, "Wrong alignment on WB_Chat_C_SetupByGameState");
static_assert(sizeof(WB_Chat_C_SetupByGameState) == 0x0000F8, "Wrong size on WB_Chat_C_SetupByGameState");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_MakeVector2D_ReturnValue) == 0x000000, "Member 'WB_Chat_C_SetupByGameState::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WB_Chat_C_SetupByGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000018, "Member 'WB_Chat_C_SetupByGameState::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_Chat_C_SetupByGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WB_Chat_C_SetupByGameState::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WB_Chat_C_SetupByGameState::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_MakeVector2D_ReturnValue_1) == 0x000038, "Member 'WB_Chat_C_SetupByGameState::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WB_Chat_C_SetupByGameState::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_MakeStruct_WidgetTransform) == 0x000050, "Member 'WB_Chat_C_SetupByGameState::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_GetGameState_ReturnValue_1) == 0x000088, "Member 'WB_Chat_C_SetupByGameState::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000090, "Member 'WB_Chat_C_SetupByGameState::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'WB_Chat_C_SetupByGameState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_BreakVector2D_X_1) == 0x0000A0, "Member 'WB_Chat_C_SetupByGameState::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_BreakVector2D_Y_1) == 0x0000A8, "Member 'WB_Chat_C_SetupByGameState::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000B0, "Member 'WB_Chat_C_SetupByGameState::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_SetupByGameState, K2Node_MakeStruct_WidgetTransform_1) == 0x0000C0, "Member 'WB_Chat_C_SetupByGameState::K2Node_MakeStruct_WidgetTransform_1' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Chat_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_Tick) == 0x000004, "Wrong alignment on WB_Chat_C_Tick");
static_assert(sizeof(WB_Chat_C_Tick) == 0x00003C, "Wrong size on WB_Chat_C_Tick");
static_assert(offsetof(WB_Chat_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Chat_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Chat_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Chat.WB_Chat_C.UpdateScrollBarVisibility
// 0x0020 (0x0020 - 0x0000)
struct WB_Chat_C_UpdateScrollBarVisibility final
{
public:
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ChatEntry_C*                        CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetScrollBarOpacity_Opacity_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Chat_C_UpdateScrollBarVisibility) == 0x000008, "Wrong alignment on WB_Chat_C_UpdateScrollBarVisibility");
static_assert(sizeof(WB_Chat_C_UpdateScrollBarVisibility) == 0x000020, "Wrong size on WB_Chat_C_UpdateScrollBarVisibility");
static_assert(offsetof(WB_Chat_C_UpdateScrollBarVisibility, CallFunc_Array_LastIndex_ReturnValue) == 0x000000, "Member 'WB_Chat_C_UpdateScrollBarVisibility::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_UpdateScrollBarVisibility, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_Chat_C_UpdateScrollBarVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_UpdateScrollBarVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WB_Chat_C_UpdateScrollBarVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Chat_C_UpdateScrollBarVisibility, CallFunc_SetScrollBarOpacity_Opacity_ImplicitCast) == 0x000018, "Member 'WB_Chat_C_UpdateScrollBarVisibility::CallFunc_SetScrollBarOpacity_Opacity_ImplicitCast' has a wrong offset!");

}

