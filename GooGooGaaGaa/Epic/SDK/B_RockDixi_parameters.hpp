#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RockDixi

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_RockDixi.B_RockDixi_C.ActivateActionProp
// 0x0001 (0x0001 - 0x0000)
struct B_RockDixi_C_ActivateActionProp final
{
public:
	bool                                          Override;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RockDixi_C_ActivateActionProp) == 0x000001, "Wrong alignment on B_RockDixi_C_ActivateActionProp");
static_assert(sizeof(B_RockDixi_C_ActivateActionProp) == 0x000001, "Wrong size on B_RockDixi_C_ActivateActionProp");
static_assert(offsetof(B_RockDixi_C_ActivateActionProp, Override) == 0x000000, "Member 'B_RockDixi_C_ActivateActionProp::Override' has a wrong offset!");

// Function B_RockDixi.B_RockDixi_C.ExecuteUbergraph_B_RockDixi
// 0x0010 (0x0010 - 0x0000)
struct B_RockDixi_C_ExecuteUbergraph_B_RockDixi final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateImageHeight_Heght_ImplicitCast;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RockDixi_C_ExecuteUbergraph_B_RockDixi) == 0x000008, "Wrong alignment on B_RockDixi_C_ExecuteUbergraph_B_RockDixi");
static_assert(sizeof(B_RockDixi_C_ExecuteUbergraph_B_RockDixi) == 0x000010, "Wrong size on B_RockDixi_C_ExecuteUbergraph_B_RockDixi");
static_assert(offsetof(B_RockDixi_C_ExecuteUbergraph_B_RockDixi, EntryPoint) == 0x000000, "Member 'B_RockDixi_C_ExecuteUbergraph_B_RockDixi::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_ExecuteUbergraph_B_RockDixi, CallFunc_UpdateImageHeight_Heght_ImplicitCast) == 0x000008, "Member 'B_RockDixi_C_ExecuteUbergraph_B_RockDixi::CallFunc_UpdateImageHeight_Heght_ImplicitCast' has a wrong offset!");

// Function B_RockDixi.B_RockDixi_C.GetVisualInterpolators
// 0x0040 (0x0040 - 0x0000)
struct B_RockDixi_C_GetVisualInterpolators final
{
public:
	TArray<class AB_VisualIntepolator_C*>         VisualInterpolators;                               // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AB_VisualIntepolator_C*>         VisualInterpolatorsArray;                          // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AB_VisualIntepolator_C*>         CallFunc_GetVisualInterpolators_VisualInterpolators; // 0x0020(0x0010)(ReferenceParm)
	class AB_VisualIntepolator_C*                 CallFunc_CreateVisualInterpolatorForMesh_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RockDixi_C_GetVisualInterpolators) == 0x000008, "Wrong alignment on B_RockDixi_C_GetVisualInterpolators");
static_assert(sizeof(B_RockDixi_C_GetVisualInterpolators) == 0x000040, "Wrong size on B_RockDixi_C_GetVisualInterpolators");
static_assert(offsetof(B_RockDixi_C_GetVisualInterpolators, VisualInterpolators) == 0x000000, "Member 'B_RockDixi_C_GetVisualInterpolators::VisualInterpolators' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_GetVisualInterpolators, VisualInterpolatorsArray) == 0x000010, "Member 'B_RockDixi_C_GetVisualInterpolators::VisualInterpolatorsArray' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_GetVisualInterpolators, CallFunc_GetVisualInterpolators_VisualInterpolators) == 0x000020, "Member 'B_RockDixi_C_GetVisualInterpolators::CallFunc_GetVisualInterpolators_VisualInterpolators' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_GetVisualInterpolators, CallFunc_CreateVisualInterpolatorForMesh_ReturnValue) == 0x000030, "Member 'B_RockDixi_C_GetVisualInterpolators::CallFunc_CreateVisualInterpolatorForMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_GetVisualInterpolators, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'B_RockDixi_C_GetVisualInterpolators::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_RockDixi.B_RockDixi_C.UpdateImageHeight
// 0x0160 (0x0160 - 0x0000)
struct B_RockDixi_C_UpdateImageHeight final
{
public:
	double                                        Heght;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0068(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_RockDixi_C_UpdateImageHeight) == 0x000008, "Wrong alignment on B_RockDixi_C_UpdateImageHeight");
static_assert(sizeof(B_RockDixi_C_UpdateImageHeight) == 0x000160, "Wrong size on B_RockDixi_C_UpdateImageHeight");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, Heght) == 0x000000, "Member 'B_RockDixi_C_UpdateImageHeight::Heght' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_X) == 0x000010, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_Y) == 0x000018, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_Z) == 0x000020, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_X_1) == 0x000038, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UpdateImageHeight, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000068, "Member 'B_RockDixi_C_UpdateImageHeight::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function B_RockDixi.B_RockDixi_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct B_RockDixi_C_UserConstructionScript final
{
public:
	double                                        CallFunc_BreakVector_X;                            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_RockDixi_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_RockDixi_C_UserConstructionScript");
static_assert(sizeof(B_RockDixi_C_UserConstructionScript) == 0x000018, "Wrong size on B_RockDixi_C_UserConstructionScript");
static_assert(offsetof(B_RockDixi_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000000, "Member 'B_RockDixi_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000008, "Member 'B_RockDixi_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_RockDixi_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000010, "Member 'B_RockDixi_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");

}

