#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ProgressionCounter

#include "Basic.hpp"

#include "B_ProgressionCounter_classes.hpp"
#include "B_ProgressionCounter_parameters.hpp"


namespace SDK
{

// Function B_ProgressionCounter.B_ProgressionCounter_C.HandleExceedingProgressionTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionCounter_C::HandleExceedingProgressionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "HandleExceedingProgressionTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.IsValueExceedingProgressionTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ValueEceedsProgressionTarget                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::IsValueExceedingProgressionTarget(bool* ValueEceedsProgressionTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "IsValueExceedingProgressionTarget");

	Params::B_ProgressionCounter_C_IsValueExceedingProgressionTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ValueEceedsProgressionTarget != nullptr)
		*ValueEceedsProgressionTarget = Parms.ValueEceedsProgressionTarget;
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.UpdateCurrentToRemainingValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeDelta                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::UpdateCurrentToRemainingValue(double TimeDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "UpdateCurrentToRemainingValue");

	Params::B_ProgressionCounter_C_UpdateCurrentToRemainingValue Parms{};

	Parms.TimeDelta = TimeDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.Update Value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeDelta                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::Update_Value(double TimeDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "Update Value");

	Params::B_ProgressionCounter_C_Update_Value Parms{};

	Parms.TimeDelta = TimeDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.GrantValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ValueName                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::GrantValue(double Amount, const class FText& ValueName, double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "GrantValue");

	Params::B_ProgressionCounter_C_GrantValue Parms{};

	Parms.Amount = Amount;
	Parms.ValueName = std::move(ValueName);
	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.ValueExceedProgressionTarget__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_ProgressionCounter_C::ValueExceedProgressionTarget__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "ValueExceedProgressionTarget__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.UpdateCurrentValue__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_ProgressionCounter_C::UpdateCurrentValue__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "UpdateCurrentValue__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.StartGranting__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ValueName                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   TotalAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::StartGranting__DelegateSignature(const class FText& ValueName, int32 TotalAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "StartGranting__DelegateSignature");

	Params::B_ProgressionCounter_C_StartGranting__DelegateSignature Parms{};

	Parms.ValueName = std::move(ValueName);
	Parms.TotalAmount = TotalAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionCounter.B_ProgressionCounter_C.GrantFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoValueGranted                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionCounter_C::GrantFinished__DelegateSignature(bool NoValueGranted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionCounter_C", "GrantFinished__DelegateSignature");

	Params::B_ProgressionCounter_C_GrantFinished__DelegateSignature Parms{};

	Parms.NoValueGranted = NoValueGranted;

	UObject::ProcessEvent(Func, &Parms);
}

}

