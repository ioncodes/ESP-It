#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GameRulesTabs

#include "Basic.hpp"

#include "ESalvageCategory_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "E_QuestionAnswer_structs.hpp"


namespace SDK::Params
{

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.ChangeControllerLayout
// 0x0001 (0x0001 - 0x0000)
struct WB_GameRulesTabs_C_ChangeControllerLayout final
{
public:
	bool                                          GamePadMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_ChangeControllerLayout) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_ChangeControllerLayout");
static_assert(sizeof(WB_GameRulesTabs_C_ChangeControllerLayout) == 0x000001, "Wrong size on WB_GameRulesTabs_C_ChangeControllerLayout");
static_assert(offsetof(WB_GameRulesTabs_C_ChangeControllerLayout, GamePadMode) == 0x000000, "Member 'WB_GameRulesTabs_C_ChangeControllerLayout::GamePadMode' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.ControllerTab
// 0x0018 (0x0018 - 0x0000)
struct WB_GameRulesTabs_C_ControllerTab final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_ControllerTab) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_ControllerTab");
static_assert(sizeof(WB_GameRulesTabs_C_ControllerTab) == 0x000018, "Wrong size on WB_GameRulesTabs_C_ControllerTab");
static_assert(offsetof(WB_GameRulesTabs_C_ControllerTab, Key) == 0x000000, "Member 'WB_GameRulesTabs_C_ControllerTab::Key' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.ExecuteUbergraph_WB_GameRulesTabs
// 0x01D8 (0x01D8 - 0x0000)
struct WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_QuestionAnswer Answer)>      K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x008C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_QuestionDialog_C*                   CallFunc_ShowQuestionDialog_QuestionDialog;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamePadMode;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_GamePadMode;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bGamePadMode)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab_1;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_1;            // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue_2;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab_2;            // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab_3;            // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_QuestionAnswer                              K2Node_CustomEvent_Answer;                         // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FKey                                   K2Node_Event_Key;                                  // 0x01A8(0x0018)(HasGetValueTypeHash)
	class UWB_TabButton_C*                        CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWB_TabButton_C*>                K2Node_MakeArray_Array_1;                          // 0x01C8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs");
static_assert(sizeof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs) == 0x0001D8, "Wrong size on WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, EntryPoint) == 0x000000, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000028, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_2) == 0x000038, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000040, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_3) == 0x000060, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000068, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_4) == 0x000078, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000080, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_Event_MyGeometry) == 0x00008C, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_Event_InDeltaTime) == 0x0000C4, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_ShowQuestionDialog_QuestionDialog) == 0x0000C8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_ShowQuestionDialog_QuestionDialog' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_CustomEvent_bGamePadMode) == 0x0000D1, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_CustomEvent_bGamePadMode' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_CustomEvent_GamePadMode) == 0x0000D2, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_CustomEvent_GamePadMode' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_5) == 0x0000D8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0000E0, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_5) == 0x0000E8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_IsGamepadMode_ReturnValue) == 0x0000E9, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x0000EC, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetActiveWidget_ReturnValue) == 0x0000F0, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsIGame_Rules_Tab) == 0x0000F8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsIGame_Rules_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_6) == 0x000108, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsIGame_Rules_Tab_1) == 0x000120, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsIGame_Rules_Tab_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_7) == 0x000130, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetGameInstance_ReturnValue_6) == 0x000138, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetInitialFocusWidget_ReturnValue) == 0x000140, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetInitialFocusWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000148, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_8) == 0x000150, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_IsValid_ReturnValue) == 0x000151, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetActiveWidget_ReturnValue_1) == 0x000158, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetActiveWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_GetActiveWidget_ReturnValue_2) == 0x000160, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_GetActiveWidget_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsIGame_Rules_Tab_2) == 0x000168, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsIGame_Rules_Tab_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_9) == 0x000178, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_AsIGame_Rules_Tab_3) == 0x000180, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_AsIGame_Rules_Tab_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_DynamicCast_bSuccess_10) == 0x000190, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_MakeLiteralByte_ReturnValue) == 0x000191, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000192, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000193, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_CustomEvent_Answer) == 0x000194, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_CustomEvent_Answer' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_SwitchEnum_CmpSuccess) == 0x000195, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_MakeArray_Array) == 0x000198, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_Event_Key) == 0x0001A8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_Event_Key' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs, K2Node_MakeArray_Array_1) == 0x0001C8, "Member 'WB_GameRulesTabs_C_ExecuteUbergraph_WB_GameRulesTabs::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.FocusStoredWidget
// 0x0048 (0x0048 - 0x0000)
struct WB_GameRulesTabs_C_FocusStoredWidget final
{
public:
	class UWidget*                                CurrentSettingsTab;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IISettingsTab_C>       K2Node_DynamicCast_AsISettings_Tab;                // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_FocusStoredWidget) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_FocusStoredWidget");
static_assert(sizeof(WB_GameRulesTabs_C_FocusStoredWidget) == 0x000048, "Wrong size on WB_GameRulesTabs_C_FocusStoredWidget");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CurrentSettingsTab) == 0x000000, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CurrentSettingsTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, K2Node_DynamicCast_AsISettings_Tab) == 0x000008, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::K2Node_DynamicCast_AsISettings_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CallFunc_GetInitialFocusWidget_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CallFunc_GetInitialFocusWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CallFunc_Map_Find_Value) == 0x000030, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_FocusStoredWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000040, "Member 'WB_GameRulesTabs_C_FocusStoredWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.Get_Background_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_GameRulesTabs_C_Get_Background_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_Get_Background_Visibility_0) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_Get_Background_Visibility_0");
static_assert(sizeof(WB_GameRulesTabs_C_Get_Background_Visibility_0) == 0x000020, "Wrong size on WB_GameRulesTabs_C_Get_Background_Visibility_0");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, Temp_byte_Variable_1) == 0x000019, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, Temp_bool_Variable) == 0x00001A, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Get_Background_Visibility_0, K2Node_Select_Default) == 0x00001B, "Member 'WB_GameRulesTabs_C_Get_Background_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetActiveTab
// 0x0010 (0x0010 - 0x0000)
struct WB_GameRulesTabs_C_GetActiveTab final
{
public:
	class UWidget*                                ActiveTab;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetActiveTab) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetActiveTab");
static_assert(sizeof(WB_GameRulesTabs_C_GetActiveTab) == 0x000010, "Wrong size on WB_GameRulesTabs_C_GetActiveTab");
static_assert(offsetof(WB_GameRulesTabs_C_GetActiveTab, ActiveTab) == 0x000000, "Member 'WB_GameRulesTabs_C_GetActiveTab::ActiveTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetActiveTab, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_GetActiveTab::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetButtonDataforClass
// 0x00A0 (0x00A0 - 0x0000)
struct WB_GameRulesTabs_C_GetButtonDataforClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_TileViewData_C*>              ButtonData;                                        // 0x0008(0x0010)(Parm, OutParm)
	TArray<bool>                                  HasFocus;                                          // 0x0018(0x0010)(Parm, OutParm)
	TArray<class UB_TileViewData_C*>              Data;                                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<bool>                                  Focus;                                             // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetAllSkillClasses_SkillClasses;          // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillButtonData_C*                   CallFunc_GetSkillButtonData_ButtonData;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetButtonDataforClass) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetButtonDataforClass");
static_assert(sizeof(WB_GameRulesTabs_C_GetButtonDataforClass) == 0x0000A0, "Wrong size on WB_GameRulesTabs_C_GetButtonDataforClass");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, Class_0) == 0x000000, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::Class_0' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, ButtonData) == 0x000008, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, HasFocus) == 0x000018, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::HasFocus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, Data) == 0x000028, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::Data' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, Focus) == 0x000038, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::Focus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000060, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_GetAllSkillClasses_SkillClasses) == 0x000068, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_GetAllSkillClasses_SkillClasses' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Array_Get_Item) == 0x000080, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_GetSkillButtonData_ButtonData) == 0x000090, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_GetSkillButtonData_ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x00009C, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00009D, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataforClass, CallFunc_BooleanAND_ReturnValue) == 0x00009E, "Member 'WB_GameRulesTabs_C_GetButtonDataforClass::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetButtonDataForPowerup
// 0x00A0 (0x00A0 - 0x0000)
struct WB_GameRulesTabs_C_GetButtonDataForPowerup final
{
public:
	TArray<class UB_TileViewData_C*>              ButtonData;                                        // 0x0000(0x0010)(Parm, OutParm)
	TArray<bool>                                  HasFocus;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<class UB_TileViewData_C*>              Data;                                              // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<bool>                                  Focus;                                             // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIndex;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPowerupParameters*                     CallFunc_GetPowerupParameters_PowerupParameters;   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PowerupButtonData_C*                 CallFunc_GetPowerupButtonData_ButtonData;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetButtonDataForPowerup) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetButtonDataForPowerup");
static_assert(sizeof(WB_GameRulesTabs_C_GetButtonDataForPowerup) == 0x0000A0, "Wrong size on WB_GameRulesTabs_C_GetButtonDataForPowerup");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, ButtonData) == 0x000000, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, HasFocus) == 0x000010, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::HasFocus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, Data) == 0x000020, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::Data' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, Focus) == 0x000030, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::Focus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CurrentIndex) == 0x000040, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, Temp_int_Variable) == 0x000044, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, Temp_int_Variable_1) == 0x000048, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Conv_IntToByte_ReturnValue) == 0x00004C, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_GetValidValue_ReturnValue) == 0x000054, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000055, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000056, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000057, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000058, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, Temp_int_Variable_2) == 0x00005C, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_MakeLiteralInt_ReturnValue) == 0x000060, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000070, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_GetPowerupParameters_PowerupParameters) == 0x000078, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_GetPowerupParameters_PowerupParameters' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_GetPowerupButtonData_ButtonData) == 0x000088, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_GetPowerupButtonData_ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000090, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetButtonDataForPowerup, CallFunc_Array_Add_ReturnValue_1) == 0x000098, "Member 'WB_GameRulesTabs_C_GetButtonDataForPowerup::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetControllerIconVisibility
// 0x0006 (0x0006 - 0x0000)
struct WB_GameRulesTabs_C_GetControllerIconVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetControllerIconVisibility) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_GetControllerIconVisibility");
static_assert(sizeof(WB_GameRulesTabs_C_GetControllerIconVisibility) == 0x000006, "Wrong size on WB_GameRulesTabs_C_GetControllerIconVisibility");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, Temp_byte_Variable) == 0x000002, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetControllerIconVisibility, K2Node_Select_Default) == 0x000005, "Member 'WB_GameRulesTabs_C_GetControllerIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetIndividualItemDataAndFocus
// 0x00F8 (0x00F8 - 0x0000)
struct WB_GameRulesTabs_C_GetIndividualItemDataAndFocus final
{
public:
	class UUserWidget*                            CategoryButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESalvageCategory                              SalvageCategory;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              Data;                                              // 0x0010(0x0010)(Parm, OutParm)
	TArray<bool>                                  FocusNeeded;                                       // 0x0020(0x0010)(Parm, OutParm)
	int32                                         CurrentIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  HasFocus;                                          // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<class UB_TileViewData_C*>              ButtonData;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_TileViewData_C*>              CallFunc_GetButtonDataForPowerup_ButtonData;       // 0x0078(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetButtonDataForPowerup_HasFocus;         // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_ModButtonData_C*                     CallFunc_GetModButtonData_ButtonData;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_TileViewData_C*>              CallFunc_GetButtonDataforClass_ButtonData;         // 0x00B8(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetButtonDataforClass_HasFocus;           // 0x00C8(0x0010)(ReferenceParm)
	TArray<class UB_TileViewData_C*>              CallFunc_GetButtonDataforClass_ButtonData_1;       // 0x00D8(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetButtonDataforClass_HasFocus_1;         // 0x00E8(0x0010)(ReferenceParm)
};
static_assert(alignof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetIndividualItemDataAndFocus");
static_assert(sizeof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus) == 0x0000F8, "Wrong size on WB_GameRulesTabs_C_GetIndividualItemDataAndFocus");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CategoryButton) == 0x000000, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CategoryButton' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, SalvageCategory) == 0x000008, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::SalvageCategory' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, Data) == 0x000010, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::Data' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, FocusNeeded) == 0x000020, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::FocusNeeded' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CurrentIndex) == 0x000030, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, HasFocus) == 0x000038, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::HasFocus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, ButtonData) == 0x000048, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, Temp_int_Variable) == 0x000058, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, Temp_int_Variable_1) == 0x00005C, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetValidValue_ReturnValue) == 0x000068, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000069, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00006B, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, Temp_int_Variable_2) == 0x000070, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataForPowerup_ButtonData) == 0x000078, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataForPowerup_ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataForPowerup_HasFocus) == 0x000088, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataForPowerup_HasFocus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000099, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00009A, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetModButtonData_ButtonData) == 0x0000A8, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetModButtonData_ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000B0, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_Array_Add_ReturnValue_1) == 0x0000B4, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataforClass_ButtonData) == 0x0000B8, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataforClass_ButtonData' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataforClass_HasFocus) == 0x0000C8, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataforClass_HasFocus' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataforClass_ButtonData_1) == 0x0000D8, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataforClass_ButtonData_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetIndividualItemDataAndFocus, CallFunc_GetButtonDataforClass_HasFocus_1) == 0x0000E8, "Member 'WB_GameRulesTabs_C_GetIndividualItemDataAndFocus::CallFunc_GetButtonDataforClass_HasFocus_1' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetInitialFocusWidget
// 0x0030 (0x0030 - 0x0000)
struct WB_GameRulesTabs_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetInitialFocusWidget");
static_assert(sizeof(WB_GameRulesTabs_C_GetInitialFocusWidget) == 0x000030, "Wrong size on WB_GameRulesTabs_C_GetInitialFocusWidget");
static_assert(offsetof(WB_GameRulesTabs_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_GameRulesTabs_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetInitialFocusWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_GetInitialFocusWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetInitialFocusWidget, K2Node_DynamicCast_AsIGame_Rules_Tab) == 0x000010, "Member 'WB_GameRulesTabs_C_GetInitialFocusWidget::K2Node_DynamicCast_AsIGame_Rules_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetInitialFocusWidget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_GameRulesTabs_C_GetInitialFocusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetInitialFocusWidget, CallFunc_GetInitialFocusWidget_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_GetInitialFocusWidget::CallFunc_GetInitialFocusWidget_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetShouldGoBackAfterAction
// 0x0001 (0x0001 - 0x0000)
struct WB_GameRulesTabs_C_GetShouldGoBackAfterAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetShouldGoBackAfterAction) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_GetShouldGoBackAfterAction");
static_assert(sizeof(WB_GameRulesTabs_C_GetShouldGoBackAfterAction) == 0x000001, "Wrong size on WB_GameRulesTabs_C_GetShouldGoBackAfterAction");
static_assert(offsetof(WB_GameRulesTabs_C_GetShouldGoBackAfterAction, ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_GetShouldGoBackAfterAction::ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetWidgetLeftToCurrent
// 0x0040 (0x0040 - 0x0000)
struct WB_GameRulesTabs_C_GetWidgetLeftToCurrent final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetWidgetAtIndex_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetWidgetLeftToCurrent");
static_assert(sizeof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent) == 0x000040, "Wrong size on WB_GameRulesTabs_C_GetWidgetLeftToCurrent");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_GetNumWidgets_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x00000C, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetLeftToCurrent, CallFunc_GetWidgetAtIndex_ReturnValue) == 0x000038, "Member 'WB_GameRulesTabs_C_GetWidgetLeftToCurrent::CallFunc_GetWidgetAtIndex_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.GetWidgetRightToCurrent
// 0x0040 (0x0040 - 0x0000)
struct WB_GameRulesTabs_C_GetWidgetRightToCurrent final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetWidgetAtIndex_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_GetWidgetRightToCurrent) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_GetWidgetRightToCurrent");
static_assert(sizeof(WB_GameRulesTabs_C_GetWidgetRightToCurrent) == 0x000040, "Wrong size on WB_GameRulesTabs_C_GetWidgetRightToCurrent");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_GetNumWidgets_ReturnValue) == 0x00000C, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000020, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, K2Node_MathExpression_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_GetWidgetRightToCurrent, CallFunc_GetWidgetAtIndex_ReturnValue) == 0x000038, "Member 'WB_GameRulesTabs_C_GetWidgetRightToCurrent::CallFunc_GetWidgetAtIndex_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.HandleRefocus
// 0x0040 (0x0040 - 0x0000)
struct WB_GameRulesTabs_C_HandleRefocus final
{
public:
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_TabButton_C*                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_HandleRefocus) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_HandleRefocus");
static_assert(sizeof(WB_GameRulesTabs_C_HandleRefocus) == 0x000040, "Wrong size on WB_GameRulesTabs_C_HandleRefocus");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_GetActiveWidget_ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, K2Node_DynamicCast_AsIGame_Rules_Tab) == 0x000010, "Member 'WB_GameRulesTabs_C_HandleRefocus::K2Node_DynamicCast_AsIGame_Rules_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_GameRulesTabs_C_HandleRefocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000021, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_GetInitialFocusWidget_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_GetInitialFocusWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HandleRefocus, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_GameRulesTabs_C_HandleRefocus::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.HunterPowerupEscapeNav
// 0x0028 (0x0028 - 0x0000)
struct WB_GameRulesTabs_C_HunterPowerupEscapeNav final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_HunterPowerupEscapeNav) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_HunterPowerupEscapeNav");
static_assert(sizeof(WB_GameRulesTabs_C_HunterPowerupEscapeNav) == 0x000028, "Wrong size on WB_GameRulesTabs_C_HunterPowerupEscapeNav");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, Navigation_0) == 0x000000, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, CallFunc_GetNumItems_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, CallFunc_GetIndexForItem_ReturnValue) == 0x00001C, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterPowerupEscapeNav, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WB_GameRulesTabs_C_HunterPowerupEscapeNav::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.HunterTileViewEscapeNav
// 0x0028 (0x0028 - 0x0000)
struct WB_GameRulesTabs_C_HunterTileViewEscapeNav final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_HunterTileViewEscapeNav) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_HunterTileViewEscapeNav");
static_assert(sizeof(WB_GameRulesTabs_C_HunterTileViewEscapeNav) == 0x000028, "Wrong size on WB_GameRulesTabs_C_HunterTileViewEscapeNav");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, Navigation_0) == 0x000000, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, CallFunc_GetNumItems_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, CallFunc_GetIndexForItem_ReturnValue) == 0x00001C, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_HunterTileViewEscapeNav, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WB_GameRulesTabs_C_HunterTileViewEscapeNav::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WB_GameRulesTabs_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
};
static_assert(alignof(WB_GameRulesTabs_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_OnFocusReceived");
static_assert(sizeof(WB_GameRulesTabs_C_OnFocusReceived) == 0x0001B0, "Wrong size on WB_GameRulesTabs_C_OnFocusReceived");
static_assert(offsetof(WB_GameRulesTabs_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_GameRulesTabs_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_GameRulesTabs_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_GameRulesTabs_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WB_GameRulesTabs_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.OnGamePadModeChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct WB_GameRulesTabs_C_OnGamePadModeChanged_Event final
{
public:
	bool                                          bGamePadMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_OnGamePadModeChanged_Event) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_OnGamePadModeChanged_Event");
static_assert(sizeof(WB_GameRulesTabs_C_OnGamePadModeChanged_Event) == 0x000001, "Wrong size on WB_GameRulesTabs_C_OnGamePadModeChanged_Event");
static_assert(offsetof(WB_GameRulesTabs_C_OnGamePadModeChanged_Event, bGamePadMode) == 0x000000, "Member 'WB_GameRulesTabs_C_OnGamePadModeChanged_Event::bGamePadMode' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.OnGamepadTab
// 0x0030 (0x0030 - 0x0000)
struct WB_GameRulesTabs_C_OnGamepadTab final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetTabToSideOfCurrent_RightTab;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetTabToSideOfCurrent_RightTab_1;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_OnGamepadTab) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_OnGamepadTab");
static_assert(sizeof(WB_GameRulesTabs_C_OnGamepadTab) == 0x000030, "Wrong size on WB_GameRulesTabs_C_OnGamepadTab");
static_assert(offsetof(WB_GameRulesTabs_C_OnGamepadTab, Key) == 0x000000, "Member 'WB_GameRulesTabs_C_OnGamepadTab::Key' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnGamepadTab, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_OnGamepadTab::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnGamepadTab, CallFunc_GetTabToSideOfCurrent_RightTab) == 0x000020, "Member 'WB_GameRulesTabs_C_OnGamepadTab::CallFunc_GetTabToSideOfCurrent_RightTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_OnGamepadTab, CallFunc_GetTabToSideOfCurrent_RightTab_1) == 0x000028, "Member 'WB_GameRulesTabs_C_OnGamepadTab::CallFunc_GetTabToSideOfCurrent_RightTab_1' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_GameRulesTabs_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_PreConstruct) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_PreConstruct");
static_assert(sizeof(WB_GameRulesTabs_C_PreConstruct) == 0x000001, "Wrong size on WB_GameRulesTabs_C_PreConstruct");
static_assert(offsetof(WB_GameRulesTabs_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_GameRulesTabs_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.ResetAllToDefault
// 0x00A0 (0x00A0 - 0x0000)
struct WB_GameRulesTabs_C_ResetAllToDefault final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TabButton_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_GameRules_C*                         CallFunc_GetGameRules_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ModParametersSubsystem_C*            CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue_3;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_ResetAllToDefault) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_ResetAllToDefault");
static_assert(sizeof(WB_GameRulesTabs_C_ResetAllToDefault) == 0x0000A0, "Wrong size on WB_GameRulesTabs_C_ResetAllToDefault");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetGameRules_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetGameRules_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000030, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetActiveWidget_ReturnValue) == 0x000038, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_AsIGame_Rules_Tab) == 0x000040, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_AsIGame_Rules_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetGameInstance_ReturnValue_1) == 0x000058, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000060, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000070, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x000078, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetGameState_ReturnValue) == 0x000080, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, CallFunc_GetWorldSubsystem_ReturnValue_3) == 0x000088, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::CallFunc_GetWorldSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_AsB_Game_State) == 0x000090, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_ResetAllToDefault, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'WB_GameRulesTabs_C_ResetAllToDefault::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.SaveAnswered
// 0x0001 (0x0001 - 0x0000)
struct WB_GameRulesTabs_C_SaveAnswered final
{
public:
	E_QuestionAnswer                              Answer;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_SaveAnswered) == 0x000001, "Wrong alignment on WB_GameRulesTabs_C_SaveAnswered");
static_assert(sizeof(WB_GameRulesTabs_C_SaveAnswered) == 0x000001, "Wrong size on WB_GameRulesTabs_C_SaveAnswered");
static_assert(offsetof(WB_GameRulesTabs_C_SaveAnswered, Answer) == 0x000000, "Member 'WB_GameRulesTabs_C_SaveAnswered::Answer' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.SetActiveTab
// 0x0070 (0x0070 - 0x0000)
struct WB_GameRulesTabs_C_SetActiveTab final
{
public:
	class UWidget*                                RulesTab;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TabButton_C*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveTab_ActiveTab;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab_1;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIGameRulesTab_C>      K2Node_DynamicCast_AsIGame_Rules_Tab_2;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_SetActiveTab) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_SetActiveTab");
static_assert(sizeof(WB_GameRulesTabs_C_SetActiveTab) == 0x000070, "Wrong size on WB_GameRulesTabs_C_SetActiveTab");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, RulesTab) == 0x000000, "Member 'WB_GameRulesTabs_C_SetActiveTab::RulesTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_SetActiveTab::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_GameRulesTabs_C_SetActiveTab::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_AsIGame_Rules_Tab) == 0x000018, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_AsIGame_Rules_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, CallFunc_GetInitialFocusWidget_ReturnValue) == 0x000030, "Member 'WB_GameRulesTabs_C_SetActiveTab::CallFunc_GetInitialFocusWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, CallFunc_GetActiveTab_ActiveTab) == 0x000038, "Member 'WB_GameRulesTabs_C_SetActiveTab::CallFunc_GetActiveTab_ActiveTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_AsIGame_Rules_Tab_1) == 0x000040, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_AsIGame_Rules_Tab_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WB_GameRulesTabs_C_SetActiveTab::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_AsIGame_Rules_Tab_2) == 0x000058, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_AsIGame_Rules_Tab_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_SetActiveTab, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WB_GameRulesTabs_C_SetActiveTab::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.StoreFocusedWidget
// 0x00B0 (0x00B0 - 0x0000)
struct WB_GameRulesTabs_C_StoreFocusedWidget final
{
public:
	class UWidget*                                CurrentRulesTab;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IISettingsTab_C>       K2Node_DynamicCast_AsISettings_Tab;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetPanelWidget_ReturnValue;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPanelWidget*>                   K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UPanelWidget*>                   K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_StoreFocusedWidget) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_StoreFocusedWidget");
static_assert(sizeof(WB_GameRulesTabs_C_StoreFocusedWidget) == 0x0000B0, "Wrong size on WB_GameRulesTabs_C_StoreFocusedWidget");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CurrentRulesTab) == 0x000000, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CurrentRulesTab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, Temp_int_Variable) == 0x00000C, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_DynamicCast_AsISettings_Tab) == 0x000028, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_DynamicCast_AsISettings_Tab' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_GetPanelWidget_ReturnValue) == 0x000040, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_GetPanelWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Map_Remove_ReturnValue) == 0x000048, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_MakeArray_Array) == 0x000050, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000060, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000070, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Array_Get_Item) == 0x000078, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_GetChildAt_ReturnValue) == 0x000080, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000088, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000090, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000091, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_DynamicCast_AsPanel_Widget) == 0x000098, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_DynamicCast_AsPanel_Widget' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_StoreFocusedWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'WB_GameRulesTabs_C_StoreFocusedWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_GameRulesTabs_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_Tick) == 0x000004, "Wrong alignment on WB_GameRulesTabs_C_Tick");
static_assert(sizeof(WB_GameRulesTabs_C_Tick) == 0x00003C, "Wrong size on WB_GameRulesTabs_C_Tick");
static_assert(offsetof(WB_GameRulesTabs_C_Tick, MyGeometry) == 0x000000, "Member 'WB_GameRulesTabs_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_GameRulesTabs_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.UpdateCategoryContent
// 0x0160 (0x0160 - 0x0000)
struct WB_GameRulesTabs_C_UpdateCategoryContent final
{
public:
	class UUserWidget*                            CategoryButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESalvageCategory                              SalvageCategory;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              CallFunc_GetIndividualItemDataAndFocus_Data;       // 0x0040(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetIndividualItemDataAndFocus_FocusNeeded; // 0x0050(0x0010)(ReferenceParm)
	class UB_TileViewData_C*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              CallFunc_GetIndividualItemDataAndFocus_Data_1;     // 0x0070(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_1; // 0x0080(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              CallFunc_GetIndividualItemDataAndFocus_Data_2;     // 0x00A8(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_2; // 0x00B8(0x0010)(ReferenceParm)
	class UB_TileViewData_C*                      CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TileViewData_C*                      CallFunc_Array_Get_Item_2;                         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              CallFunc_GetIndividualItemDataAndFocus_Data_3;     // 0x00F0(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_3; // 0x0100(0x0010)(ReferenceParm)
	class UB_TileViewData_C*                      CallFunc_Array_Get_Item_3;                         // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_MenuTileViewManager_C*               CallFunc_CreateObject_Object;                      // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              CallFunc_GetIndividualItemDataAndFocus_Data_4;     // 0x0130(0x0010)(ReferenceParm)
	TArray<bool>                                  CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_4; // 0x0140(0x0010)(ReferenceParm)
	class UB_TileViewData_C*                      CallFunc_Array_Get_Item_4;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_UpdateCategoryContent) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_UpdateCategoryContent");
static_assert(sizeof(WB_GameRulesTabs_C_UpdateCategoryContent) == 0x000160, "Wrong size on WB_GameRulesTabs_C_UpdateCategoryContent");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CategoryButton) == 0x000000, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CategoryButton' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, SalvageCategory) == 0x000008, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::SalvageCategory' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Array_Index_Variable_3) == 0x000038, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_Data) == 0x000040, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_Data' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_FocusNeeded) == 0x000050, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_FocusNeeded' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Get_Item) == 0x000060, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_Data_1) == 0x000070, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_Data_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_1) == 0x000080, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Less_IntInt_ReturnValue_1) == 0x000094, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Loop_Counter_Variable_4) == 0x000098, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00009C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A0, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_Data_2) == 0x0000A8, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_Data_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_2) == 0x0000B8, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D4, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, Temp_int_Array_Index_Variable_4) == 0x0000D8, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Get_Item_2) == 0x0000E0, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000E8, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_Data_3) == 0x0000F0, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_Data_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_3) == 0x000100, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Get_Item_3) == 0x000110, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Length_ReturnValue_3) == 0x000118, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Less_IntInt_ReturnValue_3) == 0x00011C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_CreateObject_Object) == 0x000120, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000128, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_Data_4) == 0x000130, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_Data_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_4) == 0x000140, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_GetIndividualItemDataAndFocus_FocusNeeded_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Get_Item_4) == 0x000150, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Array_Length_ReturnValue_4) == 0x000158, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateCategoryContent, CallFunc_Less_IntInt_ReturnValue_4) == 0x00015C, "Member 'WB_GameRulesTabs_C_UpdateCategoryContent::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.UpdateTabButtonStyles
// 0x0040 (0x0040 - 0x0000)
struct WB_GameRulesTabs_C_UpdateTabButtonStyles final
{
public:
	class UWB_TabButton_C*                        CurrentButton;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TabButton_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_UpdateTabButtonStyles) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_UpdateTabButtonStyles");
static_assert(sizeof(WB_GameRulesTabs_C_UpdateTabButtonStyles) == 0x000040, "Wrong size on WB_GameRulesTabs_C_UpdateTabButtonStyles");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CurrentButton) == 0x000000, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CurrentButton' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_GetActiveWidget_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_UpdateTabButtonStyles, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'WB_GameRulesTabs_C_UpdateTabButtonStyles::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.WitchPowerupEscapeNav
// 0x0028 (0x0028 - 0x0000)
struct WB_GameRulesTabs_C_WitchPowerupEscapeNav final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_WitchPowerupEscapeNav) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_WitchPowerupEscapeNav");
static_assert(sizeof(WB_GameRulesTabs_C_WitchPowerupEscapeNav) == 0x000028, "Wrong size on WB_GameRulesTabs_C_WitchPowerupEscapeNav");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, Navigation_0) == 0x000000, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, CallFunc_GetNumItems_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, CallFunc_GetIndexForItem_ReturnValue) == 0x00001C, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchPowerupEscapeNav, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WB_GameRulesTabs_C_WitchPowerupEscapeNav::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function WB_GameRulesTabs.WB_GameRulesTabs_C.WitchTileViewEscapeNav
// 0x0028 (0x0028 - 0x0000)
struct WB_GameRulesTabs_C_WitchTileViewEscapeNav final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameRulesTabs_C_WitchTileViewEscapeNav) == 0x000008, "Wrong alignment on WB_GameRulesTabs_C_WitchTileViewEscapeNav");
static_assert(sizeof(WB_GameRulesTabs_C_WitchTileViewEscapeNav) == 0x000028, "Wrong size on WB_GameRulesTabs_C_WitchTileViewEscapeNav");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, Navigation_0) == 0x000000, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, ReturnValue) == 0x000008, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, CallFunc_GetNumItems_ReturnValue) == 0x000018, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, CallFunc_GetIndexForItem_ReturnValue) == 0x00001C, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameRulesTabs_C_WitchTileViewEscapeNav, CallFunc_Clamp_ReturnValue) == 0x000024, "Member 'WB_GameRulesTabs_C_WitchTileViewEscapeNav::CallFunc_Clamp_ReturnValue' has a wrong offset!");

}

