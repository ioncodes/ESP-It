#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DeveloperSettings

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct DeveloperSettings.PerPlatformSettings
// 0x0010 (0x0010 - 0x0000)
struct FPerPlatformSettings final
{
public:
	TArray<class UPlatformSettings*>              Settings;                                          // 0x0000(0x0010)(Edit, ExportObject, EditFixedSize, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FPerPlatformSettings) == 0x000008, "Wrong alignment on FPerPlatformSettings");
static_assert(sizeof(FPerPlatformSettings) == 0x000010, "Wrong size on FPerPlatformSettings");
static_assert(offsetof(FPerPlatformSettings, Settings) == 0x000000, "Member 'FPerPlatformSettings::Settings' has a wrong offset!");

// ScriptStruct DeveloperSettings.PlatformSettingsInstances
// 0x0058 (0x0058 - 0x0000)
struct FPlatformSettingsInstances final
{
public:
	class UPlatformSettings*                      PlatformInstance;                                  // 0x0000(0x0008)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, class UPlatformSettings*>   OtherPlatforms;                                    // 0x0008(0x0050)(Transient, UObjectWrapper, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPlatformSettingsInstances) == 0x000008, "Wrong alignment on FPlatformSettingsInstances");
static_assert(sizeof(FPlatformSettingsInstances) == 0x000058, "Wrong size on FPlatformSettingsInstances");
static_assert(offsetof(FPlatformSettingsInstances, PlatformInstance) == 0x000000, "Member 'FPlatformSettingsInstances::PlatformInstance' has a wrong offset!");
static_assert(offsetof(FPlatformSettingsInstances, OtherPlatforms) == 0x000008, "Member 'FPlatformSettingsInstances::OtherPlatforms' has a wrong offset!");

}

