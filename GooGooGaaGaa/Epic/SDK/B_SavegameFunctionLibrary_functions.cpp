#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SavegameFunctionLibrary

#include "Basic.hpp"

#include "B_SavegameFunctionLibrary_classes.hpp"
#include "B_SavegameFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function B_SavegameFunctionLibrary.B_SavegameFunctionLibrary_C.Set Setting Commands
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_SettingsSave_C*                SettingsSave                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SavegameFunctionLibrary_C::Set_Setting_Commands(class UB_SettingsSave_C* SettingsSave, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SavegameFunctionLibrary_C", "Set Setting Commands");

	Params::B_SavegameFunctionLibrary_C_Set_Setting_Commands Parms{};

	Parms.SettingsSave = SettingsSave;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SavegameFunctionLibrary.B_SavegameFunctionLibrary_C.SaveSaveGameAsync
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_Savegame                              SaveGameType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SavegameFunctionLibrary_C::SaveSaveGameAsync(class USaveGame* SaveGame, E_Savegame SaveGameType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SavegameFunctionLibrary_C", "SaveSaveGameAsync");

	Params::B_SavegameFunctionLibrary_C_SaveSaveGameAsync Parms{};

	Parms.SaveGame = SaveGame;
	Parms.SaveGameType = SaveGameType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SavegameFunctionLibrary.B_SavegameFunctionLibrary_C.LoadSaveGameAsync
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Savegame                              SaveGameType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(const class FString& Name, bool Success, class USaveGame* SaveGame)>Callback                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SavegameFunctionLibrary_C::LoadSaveGameAsync(E_Savegame SaveGameType, TDelegate<void(const class FString& Name, bool Success, class USaveGame* SaveGame)> Callback, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SavegameFunctionLibrary_C", "LoadSaveGameAsync");

	Params::B_SavegameFunctionLibrary_C_LoadSaveGameAsync Parms{};

	Parms.SaveGameType = SaveGameType;
	Parms.Callback = Callback;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SavegameFunctionLibrary.B_SavegameFunctionLibrary_C.SaveSaveGame
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USaveGame*                        SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_Savegame                              SaveGameType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SavegameFunctionLibrary_C::SaveSaveGame(class USaveGame* SaveGame, E_Savegame SaveGameType, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SavegameFunctionLibrary_C", "SaveSaveGame");

	Params::B_SavegameFunctionLibrary_C_SaveSaveGame Parms{};

	Parms.SaveGame = SaveGame;
	Parms.SaveGameType = SaveGameType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SavegameFunctionLibrary.B_SavegameFunctionLibrary_C.LoadSaveGame
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Savegame                              SaveGameType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USaveGame*                        SaveGame                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SavegameFunctionLibrary_C::LoadSaveGame(E_Savegame SaveGameType, class UObject* __WorldContext, class USaveGame** SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SavegameFunctionLibrary_C", "LoadSaveGame");

	Params::B_SavegameFunctionLibrary_C_LoadSaveGame Parms{};

	Parms.SaveGameType = SaveGameType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SaveGame != nullptr)
		*SaveGame = Parms.SaveGame;
}

}

