#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollisionWall

#include "Basic.hpp"

#include "BP_CollisionWall_classes.hpp"
#include "BP_CollisionWall_parameters.hpp"


namespace SDK
{

// Function BP_CollisionWall.BP_CollisionWall_C.ExecuteUbergraph_BP_CollisionWall
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CollisionWall_C::ExecuteUbergraph_BP_CollisionWall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "ExecuteUbergraph_BP_CollisionWall");

	Params::BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CollisionWall.BP_CollisionWall_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CollisionWall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CollisionWall.BP_CollisionWall_C.SelectForEditing
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     EditingPlayerState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CollisionWall_C::SelectForEditing(class APlayerState* EditingPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "SelectForEditing");

	Params::BP_CollisionWall_C_SelectForEditing Parms{};

	Parms.EditingPlayerState = EditingPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CollisionWall.BP_CollisionWall_C.UnselectFromEditing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CollisionWall_C::UnselectFromEditing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "UnselectFromEditing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CollisionWall.BP_CollisionWall_C.UpdateMaterialAndDrawDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NeedsToBeSeen                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CollisionWall_C::UpdateMaterialAndDrawDistance(bool NeedsToBeSeen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "UpdateMaterialAndDrawDistance");

	Params::BP_CollisionWall_C_UpdateMaterialAndDrawDistance Parms{};

	Parms.NeedsToBeSeen = NeedsToBeSeen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CollisionWall.BP_CollisionWall_C.UpdateMaxDrawDistance
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AlwaysDraw                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CollisionWall_C::UpdateMaxDrawDistance(bool AlwaysDraw)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CollisionWall_C", "UpdateMaxDrawDistance");

	Params::BP_CollisionWall_C_UpdateMaxDrawDistance Parms{};

	Parms.AlwaysDraw = AlwaysDraw;

	UObject::ProcessEvent(Func, &Parms);
}

}

