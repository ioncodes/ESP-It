#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PlayerPrestigeLevel

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_PlayerPrestigeLevel.B_PlayerPrestigeLevel_C.GetMaxExp
// 0x0028 (0x0028 - 0x0000)
struct B_PlayerPrestigeLevel_C_GetMaxExp final
{
public:
	int32                                         MaxExp;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPrestigeLevel_C_GetMaxExp) == 0x000008, "Wrong alignment on B_PlayerPrestigeLevel_C_GetMaxExp");
static_assert(sizeof(B_PlayerPrestigeLevel_C_GetMaxExp) == 0x000028, "Wrong size on B_PlayerPrestigeLevel_C_GetMaxExp");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, MaxExp) == 0x000000, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::MaxExp' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000018, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GetMaxExp, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'B_PlayerPrestigeLevel_C_GetMaxExp::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_PlayerPrestigeLevel.B_PlayerPrestigeLevel_C.GrantExp
// 0x0058 (0x0058 - 0x0000)
struct B_PlayerPrestigeLevel_C_GrantExp final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_Get_Stats_and_Achievements_Manager_Result; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_Get_Stats_and_Achievements_Manager_Result_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExp_MaxExp;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExp_MaxExp_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result_1;                       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue_1;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPrestigeLevel_C_GrantExp) == 0x000008, "Wrong alignment on B_PlayerPrestigeLevel_C_GrantExp");
static_assert(sizeof(B_PlayerPrestigeLevel_C_GrantExp) == 0x000058, "Wrong size on B_PlayerPrestigeLevel_C_GrantExp");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, Exp) == 0x000000, "Member 'B_PlayerPrestigeLevel_C_GrantExp::Exp' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Get_Stats_and_Achievements_Manager_Result) == 0x000008, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Get_Stats_and_Achievements_Manager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Get_Stats_and_Achievements_Manager_Result_1) == 0x000010, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Get_Stats_and_Achievements_Manager_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000020, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_SetGSStat_Result) == 0x000028, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_SetGSStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_SetGSStat_ReturnValue) == 0x000029, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_SetGSStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000030, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_GetMaxExp_MaxExp) == 0x000038, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_GetMaxExp_MaxExp' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, Temp_int_Variable) == 0x000040, "Member 'B_PlayerPrestigeLevel_C_GrantExp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_GetMaxExp_MaxExp_1) == 0x000048, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_GetMaxExp_MaxExp_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00004C, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_SetGSStat_Result_1) == 0x00004D, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_SetGSStat_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_SetGSStat_ReturnValue_1) == 0x00004E, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_SetGSStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_GrantExp, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'B_PlayerPrestigeLevel_C_GrantExp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_PlayerPrestigeLevel.B_PlayerPrestigeLevel_C.InitializeGS
// 0x0048 (0x0048 - 0x0000)
struct B_PlayerPrestigeLevel_C_InitializeGS final
{
public:
	class UGameInstance*                          GameInstance_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_Get_Stats_and_Achievements_Manager_Result; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetGSStat_ResultValue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetGSStat_ResultValue_1;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound_1;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetGSStat_ResultValue_2;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound_2;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPrestigeLevel_C_InitializeGS) == 0x000008, "Wrong alignment on B_PlayerPrestigeLevel_C_InitializeGS");
static_assert(sizeof(B_PlayerPrestigeLevel_C_InitializeGS) == 0x000048, "Wrong size on B_PlayerPrestigeLevel_C_InitializeGS");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, GameInstance_0) == 0x000000, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::GameInstance_0' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, PlayerState_0) == 0x000008, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::PlayerState_0' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_Get_Stats_and_Achievements_Manager_Result) == 0x000010, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_Get_Stats_and_Achievements_Manager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultValue) == 0x000018, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultWasFound) == 0x000020, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000024, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultValue_1) == 0x000028, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultWasFound_1) == 0x000030, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultWasFound_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_Conv_Int64ToInt_ReturnValue_1) == 0x000034, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_Conv_Int64ToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultValue_2) == 0x000038, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_GetGSStat_ResultWasFound_2) == 0x000040, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_GetGSStat_ResultWasFound_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_InitializeGS, CallFunc_Conv_Int64ToInt_ReturnValue_2) == 0x000044, "Member 'B_PlayerPrestigeLevel_C_InitializeGS::CallFunc_Conv_Int64ToInt_ReturnValue_2' has a wrong offset!");

// Function B_PlayerPrestigeLevel.B_PlayerPrestigeLevel_C.Get Stats and Achievements Manager
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager) == 0x000008, "Wrong alignment on B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager");
static_assert(sizeof(B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager) == 0x000018, "Wrong size on B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager");
static_assert(offsetof(B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager, Result) == 0x000000, "Member 'B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager::Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_PlayerPrestigeLevel_C_Get_Stats_and_Achievements_Manager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

