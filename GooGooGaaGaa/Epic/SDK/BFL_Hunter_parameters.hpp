#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Hunter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BFL_Hunter.BFL_Hunter_C.GetSpawnTransform
// 0x0160 (0x0160 - 0x0000)
struct BFL_Hunter_C_GetSpawnTransform final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0030(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F8[0x8];                                       // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Hunter_C_GetSpawnTransform) == 0x000010, "Wrong alignment on BFL_Hunter_C_GetSpawnTransform");
static_assert(sizeof(BFL_Hunter_C_GetSpawnTransform) == 0x000160, "Wrong size on BFL_Hunter_C_GetSpawnTransform");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, Pawn) == 0x000000, "Member 'BFL_Hunter_C_GetSpawnTransform::Pawn' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, Offset) == 0x000008, "Member 'BFL_Hunter_C_GetSpawnTransform::Offset' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, __WorldContext) == 0x000020, "Member 'BFL_Hunter_C_GetSpawnTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, ReturnValue) == 0x000030, "Member 'BFL_Hunter_C_GetSpawnTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000A8, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_GetControlRotation_ReturnValue) == 0x0000B0, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C8, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000100, "Member 'BFL_Hunter_C_GetSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BFL_Hunter.BFL_Hunter_C.GetSpawnTransformRotated
// 0x0180 (0x0180 - 0x0000)
struct BFL_Hunter_C_GetSpawnTransformRotated final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ReturnValue;                                       // 0x0030(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Hunter_C_GetSpawnTransformRotated) == 0x000010, "Wrong alignment on BFL_Hunter_C_GetSpawnTransformRotated");
static_assert(sizeof(BFL_Hunter_C_GetSpawnTransformRotated) == 0x000180, "Wrong size on BFL_Hunter_C_GetSpawnTransformRotated");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, Pawn) == 0x000000, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::Pawn' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, Offset) == 0x000008, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::Offset' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, __WorldContext) == 0x000020, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, ReturnValue) == 0x000030, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_GetControlRotation_ReturnValue) == 0x0000A8, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_BreakRotator_Roll) == 0x0000C0, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_BreakRotator_Pitch) == 0x0000C4, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_BreakRotator_Yaw) == 0x0000C8, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0000D0, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_Add_VectorVector_ReturnValue) == 0x000100, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_GetSpawnTransformRotated, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BFL_Hunter_C_GetSpawnTransformRotated::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BFL_Hunter.BFL_Hunter_C.PlayModelAnimation
// 0x0038 (0x0038 - 0x0000)
struct BFL_Hunter_C_PlayModelAnimation final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        InPlayRate;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_InPlayRate_ImplicitCast;     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Hunter_C_PlayModelAnimation) == 0x000008, "Wrong alignment on BFL_Hunter_C_PlayModelAnimation");
static_assert(sizeof(BFL_Hunter_C_PlayModelAnimation) == 0x000038, "Wrong size on BFL_Hunter_C_PlayModelAnimation");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, Mesh) == 0x000000, "Member 'BFL_Hunter_C_PlayModelAnimation::Mesh' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, Montage) == 0x000008, "Member 'BFL_Hunter_C_PlayModelAnimation::Montage' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, InPlayRate) == 0x000010, "Member 'BFL_Hunter_C_PlayModelAnimation::InPlayRate' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, __WorldContext) == 0x000018, "Member 'BFL_Hunter_C_PlayModelAnimation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'BFL_Hunter_C_PlayModelAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, CallFunc_IsDedicatedServer_ReturnValue) == 0x000028, "Member 'BFL_Hunter_C_PlayModelAnimation::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, CallFunc_Montage_Play_ReturnValue) == 0x00002C, "Member 'BFL_Hunter_C_PlayModelAnimation::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Hunter_C_PlayModelAnimation, CallFunc_Montage_Play_InPlayRate_ImplicitCast) == 0x000030, "Member 'BFL_Hunter_C_PlayModelAnimation::CallFunc_Montage_Play_InPlayRate_ImplicitCast' has a wrong offset!");

}

