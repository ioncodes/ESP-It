#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ScoreStatManager

#include "Basic.hpp"

#include "B_ScoreStatManager_classes.hpp"
#include "B_ScoreStatManager_parameters.hpp"


namespace SDK
{

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddAverageHunterScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::AddAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "AddAverageHunterScoreStat");

	Params::B_ScoreStatManager_C_AddAverageHunterScoreStat Parms{};

	Parms.HunterScoreStat = HunterScoreStat;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.AddAverageWitchScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::AddAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "AddAverageWitchScoreStat");

	Params::B_ScoreStatManager_C_AddAverageWitchScoreStat Parms{};

	Parms.WitchScoreStat = WitchScoreStat;
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.AddFromOtherStatManager
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_ScoreStatManager_C*            SourceStatManager                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::AddFromOtherStatManager(class UB_ScoreStatManager_C* SourceStatManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "AddFromOtherStatManager");

	Params::B_ScoreStatManager_C_AddFromOtherStatManager Parms{};

	Parms.SourceStatManager = SourceStatManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.AddHunterScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::AddHunterScoreStat(EHunterScoreStat HunterScoreStat, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "AddHunterScoreStat");

	Params::B_ScoreStatManager_C_AddHunterScoreStat Parms{};

	Parms.HunterScoreStat = HunterScoreStat;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.AddWitchScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::AddWitchScoreStat(EWitchScoreStat WitchScoreStat, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "AddWitchScoreStat");

	Params::B_ScoreStatManager_C_AddWitchScoreStat Parms{};

	Parms.WitchScoreStat = WitchScoreStat;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAllCalculatedStats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSCalculatedScoreStat>    CalculatedScoreStats                                   (Parm, OutParm)

void UB_ScoreStatManager_C::GetAllCalculatedStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetAllCalculatedStats");

	Params::B_ScoreStatManager_C_GetAllCalculatedStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CalculatedScoreStats != nullptr)
		*CalculatedScoreStats = std::move(Parms.CalculatedScoreStats);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAverageHunterScoreStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AverageValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, double* AverageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetAverageHunterScoreStat");

	Params::B_ScoreStatManager_C_GetAverageHunterScoreStat Parms{};

	Parms.HunterScoreStat = HunterScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (AverageValue != nullptr)
		*AverageValue = Parms.AverageValue;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAverageWitchScoreStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  AverageValue                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, double* AverageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetAverageWitchScoreStat");

	Params::B_ScoreStatManager_C_GetAverageWitchScoreStat Parms{};

	Parms.WitchScoreStat = WitchScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (AverageValue != nullptr)
		*AverageValue = Parms.AverageValue;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetCalculatedHunterStats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSCalculatedScoreStat>    CalculatedScoreStats                                   (Parm, OutParm)

void UB_ScoreStatManager_C::GetCalculatedHunterStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetCalculatedHunterStats");

	Params::B_ScoreStatManager_C_GetCalculatedHunterStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CalculatedScoreStats != nullptr)
		*CalculatedScoreStats = std::move(Parms.CalculatedScoreStats);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetCalculatedWitchStats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSCalculatedScoreStat>    CalculatedScoreStats                                   (Parm, OutParm)

void UB_ScoreStatManager_C::GetCalculatedWitchStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetCalculatedWitchStats");

	Params::B_ScoreStatManager_C_GetCalculatedWitchStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CalculatedScoreStats != nullptr)
		*CalculatedScoreStats = std::move(Parms.CalculatedScoreStats);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetHunterScoreStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetHunterScoreStat(EHunterScoreStat HunterScoreStat, double* Stat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetHunterScoreStat");

	Params::B_ScoreStatManager_C_GetHunterScoreStat Parms{};

	Parms.HunterScoreStat = HunterScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Stat != nullptr)
		*Stat = Parms.Stat;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetHunterValueToUseForCalculation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ValueToUse                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OriginalValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetHunterValueToUseForCalculation(EHunterScoreStat HunterScoreStat, double* ValueToUse, double* OriginalValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetHunterValueToUseForCalculation");

	Params::B_ScoreStatManager_C_GetHunterValueToUseForCalculation Parms{};

	Parms.HunterScoreStat = HunterScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (ValueToUse != nullptr)
		*ValueToUse = Parms.ValueToUse;

	if (OriginalValue != nullptr)
		*OriginalValue = Parms.OriginalValue;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetWitchScoreStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Stat                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetWitchScoreStat(EWitchScoreStat WitchScoreStat, double* Stat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetWitchScoreStat");

	Params::B_ScoreStatManager_C_GetWitchScoreStat Parms{};

	Parms.WitchScoreStat = WitchScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (Stat != nullptr)
		*Stat = Parms.Stat;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.GetWitchValueToUseForCalculation
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ValueToUse                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  OriginalValue                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::GetWitchValueToUseForCalculation(EWitchScoreStat WitchScoreStat, double* ValueToUse, double* OriginalValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "GetWitchValueToUseForCalculation");

	Params::B_ScoreStatManager_C_GetWitchValueToUseForCalculation Parms{};

	Parms.WitchScoreStat = WitchScoreStat;

	UObject::ProcessEvent(Func, &Parms);

	if (ValueToUse != nullptr)
		*ValueToUse = Parms.ValueToUse;

	if (OriginalValue != nullptr)
		*OriginalValue = Parms.OriginalValue;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.IsRecordingStats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsRecordingStats_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::IsRecordingStats(bool* IsRecordingStats_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "IsRecordingStats");

	Params::B_ScoreStatManager_C_IsRecordingStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsRecordingStats_0 != nullptr)
		*IsRecordingStats_0 = Parms.IsRecordingStats_0;
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.UpdateAverageHunterScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHunterScoreStat                        HunterScoreStat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::UpdateAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "UpdateAverageHunterScoreStat");

	Params::B_ScoreStatManager_C_UpdateAverageHunterScoreStat Parms{};

	Parms.HunterScoreStat = HunterScoreStat;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ScoreStatManager.B_ScoreStatManager_C.UpdateAverageWitchScoreStat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWitchScoreStat                         WitchScoreStat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ScoreStatManager_C::UpdateAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ScoreStatManager_C", "UpdateAverageWitchScoreStat");

	Params::B_ScoreStatManager_C_UpdateAverageWitchScoreStat Parms{};

	Parms.WitchScoreStat = WitchScoreStat;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

