#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DecoyHandler

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_DecoyHandler.B_DecoyHandler_C.AddDecoyHitStat
// 0x0020 (0x0020 - 0x0000)
struct B_DecoyHandler_C_AddDecoyHitStat final
{
public:
	class AController*                            DecoyController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DecoyHandler_C_AddDecoyHitStat) == 0x000008, "Wrong alignment on B_DecoyHandler_C_AddDecoyHitStat");
static_assert(sizeof(B_DecoyHandler_C_AddDecoyHitStat) == 0x000020, "Wrong size on B_DecoyHandler_C_AddDecoyHitStat");
static_assert(offsetof(B_DecoyHandler_C_AddDecoyHitStat, DecoyController) == 0x000000, "Member 'B_DecoyHandler_C_AddDecoyHitStat::DecoyController' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AddDecoyHitStat, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_DecoyHandler_C_AddDecoyHitStat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AddDecoyHitStat, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'B_DecoyHandler_C_AddDecoyHitStat::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AddDecoyHitStat, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_DecoyHandler_C_AddDecoyHitStat::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_DecoyHandler.B_DecoyHandler_C.RecieveDamage
// 0x0050 (0x0050 - 0x0000)
struct B_DecoyHandler_C_RecieveDamage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            Instigator;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_DecoyProp_C*                         K2Node_DynamicCast_AsB_Decoy_Prop;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_DecoyWitch_C*                        K2Node_DynamicCast_AsB_Decoy_Witch;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DecoyHandler_C_RecieveDamage) == 0x000008, "Wrong alignment on B_DecoyHandler_C_RecieveDamage");
static_assert(sizeof(B_DecoyHandler_C_RecieveDamage) == 0x000050, "Wrong size on B_DecoyHandler_C_RecieveDamage");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, Damage) == 0x000000, "Member 'B_DecoyHandler_C_RecieveDamage::Damage' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, Instigator) == 0x000008, "Member 'B_DecoyHandler_C_RecieveDamage::Instigator' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_AsB_Player_Controller) == 0x000010, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'B_DecoyHandler_C_RecieveDamage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_AsB_Decoy_Prop) == 0x000028, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_AsB_Decoy_Prop' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_AsB_Decoy_Witch) == 0x000038, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_AsB_Decoy_Witch' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_DecoyHandler_C_RecieveDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000041, "Member 'B_DecoyHandler_C_RecieveDamage::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_RecieveDamage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_DecoyHandler_C_RecieveDamage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_DecoyHandler.B_DecoyHandler_C.DamageEffectMulti
// 0x0030 (0x0030 - 0x0000)
struct B_DecoyHandler_C_DamageEffectMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_DecoyHandler_C_DamageEffectMulti) == 0x000008, "Wrong alignment on B_DecoyHandler_C_DamageEffectMulti");
static_assert(sizeof(B_DecoyHandler_C_DamageEffectMulti) == 0x000030, "Wrong size on B_DecoyHandler_C_DamageEffectMulti");
static_assert(offsetof(B_DecoyHandler_C_DamageEffectMulti, Location) == 0x000000, "Member 'B_DecoyHandler_C_DamageEffectMulti::Location' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_DamageEffectMulti, Rotation) == 0x000018, "Member 'B_DecoyHandler_C_DamageEffectMulti::Rotation' has a wrong offset!");

// Function B_DecoyHandler.B_DecoyHandler_C.AnyDamage
// 0x0028 (0x0028 - 0x0000)
struct B_DecoyHandler_C_AnyDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DecoyHandler_C_AnyDamage) == 0x000008, "Wrong alignment on B_DecoyHandler_C_AnyDamage");
static_assert(sizeof(B_DecoyHandler_C_AnyDamage) == 0x000028, "Wrong size on B_DecoyHandler_C_AnyDamage");
static_assert(offsetof(B_DecoyHandler_C_AnyDamage, DamagedActor) == 0x000000, "Member 'B_DecoyHandler_C_AnyDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AnyDamage, Damage) == 0x000008, "Member 'B_DecoyHandler_C_AnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AnyDamage, DamageType) == 0x000010, "Member 'B_DecoyHandler_C_AnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AnyDamage, InstigatedBy) == 0x000018, "Member 'B_DecoyHandler_C_AnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_AnyDamage, DamageCauser) == 0x000020, "Member 'B_DecoyHandler_C_AnyDamage::DamageCauser' has a wrong offset!");

// Function B_DecoyHandler.B_DecoyHandler_C.PointDamage
// 0x0068 (0x0068 - 0x0000)
struct B_DecoyHandler_C_PointDamage final
{
public:
	class AActor*                                 DamagedActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    FHitComponent;                                     // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      DamageType;                                        // 0x0058(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DecoyHandler_C_PointDamage) == 0x000008, "Wrong alignment on B_DecoyHandler_C_PointDamage");
static_assert(sizeof(B_DecoyHandler_C_PointDamage) == 0x000068, "Wrong size on B_DecoyHandler_C_PointDamage");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, DamagedActor) == 0x000000, "Member 'B_DecoyHandler_C_PointDamage::DamagedActor' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, Damage) == 0x000008, "Member 'B_DecoyHandler_C_PointDamage::Damage' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, InstigatedBy) == 0x000010, "Member 'B_DecoyHandler_C_PointDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, HitLocation) == 0x000018, "Member 'B_DecoyHandler_C_PointDamage::HitLocation' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, FHitComponent) == 0x000030, "Member 'B_DecoyHandler_C_PointDamage::FHitComponent' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, BoneName) == 0x000038, "Member 'B_DecoyHandler_C_PointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, ShotFromDirection) == 0x000040, "Member 'B_DecoyHandler_C_PointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, DamageType) == 0x000058, "Member 'B_DecoyHandler_C_PointDamage::DamageType' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_PointDamage, DamageCauser) == 0x000060, "Member 'B_DecoyHandler_C_PointDamage::DamageCauser' has a wrong offset!");

// Function B_DecoyHandler.B_DecoyHandler_C.ExecuteUbergraph_B_DecoyHandler
// 0x0188 (0x0188 - 0x0000)
struct B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DamagedActor, float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor_1;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_CustomEvent_DamageType_1;                   // 0x0070(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_InstigatedBy_1;                 // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser_1;                 // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamagedActor;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Damage;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_InstigatedBy;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_FHitComponent;                  // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_BoneName;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_ShotFromDirection;              // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UDamageType*                      K2Node_CustomEvent_DamageType;                     // 0x0128(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DamageCauser;                   // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class UDamageType* DamageType, class AActor* DamageCauser)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RecieveDamage_Damage_ImplicitCast;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RecieveDamage_Damage_ImplicitCast_1;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler) == 0x000008, "Wrong alignment on B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler");
static_assert(sizeof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler) == 0x000188, "Wrong size on B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, EntryPoint) == 0x000000, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_Location) == 0x000020, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_Rotation) == 0x000038, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000050, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamagedActor_1) == 0x000060, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamagedActor_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_Damage_1) == 0x000068, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_Damage_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamageType_1) == 0x000070, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamageType_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_InstigatedBy_1) == 0x000078, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_InstigatedBy_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamageCauser_1) == 0x000080, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_GetObjectClass_ReturnValue) == 0x000088, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000090, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0000A8, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_GetOwner_ReturnValue_1) == 0x0000C8, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamagedActor) == 0x0000D0, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamagedActor' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_Damage) == 0x0000D8, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_InstigatedBy) == 0x0000E0, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_InstigatedBy' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_HitLocation) == 0x0000E8, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_FHitComponent) == 0x000100, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_FHitComponent' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_BoneName) == 0x000108, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_BoneName' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_ShotFromDirection) == 0x000110, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamageType) == 0x000128, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CustomEvent_DamageCauser) == 0x000130, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CustomEvent_DamageCauser' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_MakeRotFromZ_ReturnValue) == 0x000138, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_ComposeRotators_ReturnValue) == 0x000150, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, K2Node_CreateDelegate_OutputDelegate_1) == 0x000168, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_RecieveDamage_Damage_ImplicitCast) == 0x000178, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_RecieveDamage_Damage_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler, CallFunc_RecieveDamage_Damage_ImplicitCast_1) == 0x000180, "Member 'B_DecoyHandler_C_ExecuteUbergraph_B_DecoyHandler::CallFunc_RecieveDamage_Damage_ImplicitCast_1' has a wrong offset!");

}

