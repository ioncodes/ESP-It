#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WitchPickupBuff

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_WitchPickupBuff.B_WitchPickupBuff_C.PickupCollected
// 0x0008 (0x0008 - 0x0000)
struct B_WitchPickupBuff_C_PickupCollected final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPickupBuff_C_PickupCollected) == 0x000008, "Wrong alignment on B_WitchPickupBuff_C_PickupCollected");
static_assert(sizeof(B_WitchPickupBuff_C_PickupCollected) == 0x000008, "Wrong size on B_WitchPickupBuff_C_PickupCollected");
static_assert(offsetof(B_WitchPickupBuff_C_PickupCollected, Pawn) == 0x000000, "Member 'B_WitchPickupBuff_C_PickupCollected::Pawn' has a wrong offset!");

// Function B_WitchPickupBuff.B_WitchPickupBuff_C.ExecuteUbergraph_B_WitchPickupBuff
// 0x0020 (0x0020 - 0x0000)
struct B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff) == 0x000008, "Wrong alignment on B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff");
static_assert(sizeof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff) == 0x000020, "Wrong size on B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff");
static_assert(offsetof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff, EntryPoint) == 0x000000, "Member 'B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff, K2Node_Event_Pawn) == 0x000008, "Member 'B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_WitchPickupBuff_C_ExecuteUbergraph_B_WitchPickupBuff::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

