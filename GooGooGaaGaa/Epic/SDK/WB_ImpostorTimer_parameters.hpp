#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ImpostorTimer

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_MeetingState_structs.hpp"
#include "E_ImpostorState_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ImpostorTimer.WB_ImpostorTimer_C.Get_Time_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_ImpostorTimer_C_Get_Time_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ImpostorTimer_C_Get_Time_Visibility_0) == 0x000008, "Wrong alignment on WB_ImpostorTimer_C_Get_Time_Visibility_0");
static_assert(sizeof(WB_ImpostorTimer_C_Get_Time_Visibility_0) == 0x000020, "Wrong size on WB_ImpostorTimer_C_Get_Time_Visibility_0");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Visibility_0, K2Node_Select_Default) == 0x00001A, "Member 'WB_ImpostorTimer_C_Get_Time_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_ImpostorTimer.WB_ImpostorTimer_C.Get_Time_Text_0
// 0x0218 (0x0218 - 0x0000)
struct WB_ImpostorTimer_C_Get_Time_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0010)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0010)()
	class FText                                   Temp_text_Variable_2;                              // 0x0030(0x0010)()
	class FText                                   Temp_text_Variable_3;                              // 0x0040(0x0010)()
	E_ImpostorState                               Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0058(0x0010)()
	class FText                                   Temp_text_Variable_5;                              // 0x0068(0x0010)()
	class FText                                   Temp_text_Variable_6;                              // 0x0078(0x0010)()
	class FText                                   Temp_text_Variable_7;                              // 0x0088(0x0010)()
	E_MeetingState                                Temp_byte_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00B8(0x0010)()
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString; // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString; // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00F0(0x0010)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0100(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0110(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01B0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0208(0x0010)()
};
static_assert(alignof(WB_ImpostorTimer_C_Get_Time_Text_0) == 0x000008, "Wrong alignment on WB_ImpostorTimer_C_Get_Time_Text_0");
static_assert(sizeof(WB_ImpostorTimer_C_Get_Time_Text_0) == 0x000218, "Wrong size on WB_ImpostorTimer_C_Get_Time_Text_0");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, ReturnValue) == 0x000000, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable) == 0x000010, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_1) == 0x000020, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_2) == 0x000030, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_3) == 0x000040, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_byte_Variable) == 0x000050, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_4) == 0x000058, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_5) == 0x000068, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_6) == 0x000078, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_text_Variable_7) == 0x000088, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, Temp_byte_Variable_1) == 0x000098, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_GetGameState_ReturnValue) == 0x0000A0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x0000A8, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B1, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_Select_Default) == 0x0000B8, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_Max_ReturnValue) == 0x0000C8, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString) == 0x0000D0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString) == 0x0000E0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x0000F0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_Select_Default_1) == 0x000100, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000110, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001A0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001B0, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, K2Node_MakeArray_Array) == 0x0001F8, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Get_Time_Text_0, CallFunc_Format_ReturnValue) == 0x000208, "Member 'WB_ImpostorTimer_C_Get_Time_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_ImpostorTimer.WB_ImpostorTimer_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ImpostorTimer_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ImpostorTimer_C_Tick) == 0x000004, "Wrong alignment on WB_ImpostorTimer_C_Tick");
static_assert(sizeof(WB_ImpostorTimer_C_Tick) == 0x00003C, "Wrong size on WB_ImpostorTimer_C_Tick");
static_assert(offsetof(WB_ImpostorTimer_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ImpostorTimer_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ImpostorTimer_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ImpostorTimer.WB_ImpostorTimer_C.ExecuteUbergraph_WB_ImpostorTimer
// 0x00A0 (0x00A0 - 0x0000)
struct WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer) == 0x000008, "Wrong alignment on WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer");
static_assert(sizeof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer) == 0x0000A0, "Wrong size on WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, EntryPoint) == 0x000000, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_GetGameState_ReturnValue_1) == 0x000028, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000038, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000051, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_SwitchEnum_CmpSuccess) == 0x000053, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_SwitchEnum_CmpSuccess_1) == 0x000054, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000055, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_Event_MyGeometry) == 0x000058, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, K2Node_Event_InDeltaTime) == 0x000090, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer, CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast) == 0x000098, "Member 'WB_ImpostorTimer_C_ExecuteUbergraph_WB_ImpostorTimer::CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast' has a wrong offset!");

}

