#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WaitInteractionActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_InteractionActor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_WaitInteractionActor.B_WaitInteractionActor_C
// 0x0020 (0x0328 - 0x0308)
class AB_WaitInteractionActor_C : public AB_InteractionActor_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_WaitInteractionActor_C;           // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 AnimatedSkeletalMesh;                              // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWB_WaitTaskScreen_C*                   WaitTaskScreen;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasWaitTaskScreen;                                 // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReadyToFinish;                                     // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActDuringAnimation();
	void ActOnAnimationFinished();
	void CloseWaitTaskScreen();
	void OpenWaitTaskScreen(bool WithProgressBar);
	void Wait_For_Animation();
	void ExecuteUbergraph_B_WaitInteractionActor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_WaitInteractionActor_C">();
	}
	static class AB_WaitInteractionActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_WaitInteractionActor_C>();
	}
};
static_assert(alignof(AB_WaitInteractionActor_C) == 0x000008, "Wrong alignment on AB_WaitInteractionActor_C");
static_assert(sizeof(AB_WaitInteractionActor_C) == 0x000328, "Wrong size on AB_WaitInteractionActor_C");
static_assert(offsetof(AB_WaitInteractionActor_C, UberGraphFrame_B_WaitInteractionActor_C) == 0x000308, "Member 'AB_WaitInteractionActor_C::UberGraphFrame_B_WaitInteractionActor_C' has a wrong offset!");
static_assert(offsetof(AB_WaitInteractionActor_C, AnimatedSkeletalMesh) == 0x000310, "Member 'AB_WaitInteractionActor_C::AnimatedSkeletalMesh' has a wrong offset!");
static_assert(offsetof(AB_WaitInteractionActor_C, WaitTaskScreen) == 0x000318, "Member 'AB_WaitInteractionActor_C::WaitTaskScreen' has a wrong offset!");
static_assert(offsetof(AB_WaitInteractionActor_C, HasWaitTaskScreen) == 0x000320, "Member 'AB_WaitInteractionActor_C::HasWaitTaskScreen' has a wrong offset!");
static_assert(offsetof(AB_WaitInteractionActor_C, ReadyToFinish) == 0x000321, "Member 'AB_WaitInteractionActor_C::ReadyToFinish' has a wrong offset!");

}

