#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_StaticMeshProp

#include "Basic.hpp"

#include "B_StaticMeshProp_classes.hpp"
#include "B_StaticMeshProp_parameters.hpp"


namespace SDK
{

// Function B_StaticMeshProp.B_StaticMeshProp_C.TransformingIntoWitch__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_StaticMeshProp_C*              Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_Witch_C*                       Witch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::TransformingIntoWitch__DelegateSignature(class AB_StaticMeshProp_C* Prop, class AB_Witch_C* Witch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "TransformingIntoWitch__DelegateSignature");

	Params::B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature Parms{};

	Parms.Prop = Prop;
	Parms.Witch = Witch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVisualInterpolators
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AB_VisualIntepolator_C*>   VisualInterpolators                                    (Parm, OutParm)

void AB_StaticMeshProp_C::GetVisualInterpolators(TArray<class AB_VisualIntepolator_C*>* VisualInterpolators)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetVisualInterpolators");

	Params::B_StaticMeshProp_C_GetVisualInterpolators Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisualInterpolators != nullptr)
		*VisualInterpolators = std::move(Parms.VisualInterpolators);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ApplyTemplateData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::ApplyTemplateData(class AActor* Template, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ApplyTemplateData");

	Params::B_StaticMeshProp_C_ApplyTemplateData Parms{};

	Parms.Template = Template;

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Action
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::Action(bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Action");

	Params::B_StaticMeshProp_C_Action Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRippleEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   RippleEffectNiagara                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetRippleEffect(class UNiagaraSystem** RippleEffectNiagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetRippleEffect");

	Params::B_StaticMeshProp_C_GetRippleEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RippleEffectNiagara != nullptr)
		*RippleEffectNiagara = Parms.RippleEffectNiagara;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   SplashEffectNiagara                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetSplashEffect(class UNiagaraSystem** SplashEffectNiagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetSplashEffect");

	Params::B_StaticMeshProp_C_GetSplashEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplashEffectNiagara != nullptr)
		*SplashEffectNiagara = Parms.SplashEffectNiagara;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRippleScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetRippleScale(struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetRippleScale");

	Params::B_StaticMeshProp_C_GetRippleScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetSplashScale(struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetSplashScale");

	Params::B_StaticMeshProp_C_GetSplashScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        Sound                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetSplashSound(class USoundCue** Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetSplashSound");

	Params::B_StaticMeshProp_C_GetSplashSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.CanTeleport
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanTeleport_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::CanTeleport(bool* CanTeleport_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "CanTeleport");

	Params::B_StaticMeshProp_C_CanTeleport Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanTeleport_0 != nullptr)
		*CanTeleport_0 = Parms.CanTeleport_0;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetHighlight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlighted                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetHighlight(bool Highlighted, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetHighlight");

	Params::B_StaticMeshProp_C_SetHighlight Parms{};

	Parms.Highlighted = Highlighted;

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.RefreshHighlight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlightable                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::RefreshHighlight(bool* Highlightable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "RefreshHighlight");

	Params::B_StaticMeshProp_C_RefreshHighlight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Highlightable != nullptr)
		*Highlightable = Parms.Highlightable;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetSize(double* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetSize");

	Params::B_StaticMeshProp_C_GetSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Fly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TargetBoost                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::Fly(double TargetBoost, double DeltaTime, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Fly");

	Params::B_StaticMeshProp_C_Fly Parms{};

	Parms.TargetBoost = TargetBoost;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetRuntimeSpeedMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  RuntimeSpeedMultiplier_0                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetRuntimeSpeedMultiplier(double RuntimeSpeedMultiplier_0, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetRuntimeSpeedMultiplier");

	Params::B_StaticMeshProp_C_SetRuntimeSpeedMultiplier Parms{};

	Parms.RuntimeSpeedMultiplier_0 = RuntimeSpeedMultiplier_0;

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetWantedRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetWantedRotation(const struct FRotator& WantedRotation, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetWantedRotation");

	Params::B_StaticMeshProp_C_SetWantedRotation Parms{};

	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Jump
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    JumpSuccess                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::Jump(bool* JumpSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Jump");

	Params::B_StaticMeshProp_C_Jump Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (JumpSuccess != nullptr)
		*JumpSuccess = Parms.JumpSuccess;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Stop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForcedOutput                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::Stop(bool Start, const struct FRotator& WantedRotation, bool* ForcedOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Stop");

	Params::B_StaticMeshProp_C_Stop Parms{};

	Parms.Start = Start;
	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedOutput != nullptr)
		*ForcedOutput = Parms.ForcedOutput;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetControlledByWitch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PropPawnPhysics_C*             Witch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FSRuntimePropData                LastRuntimePropData                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedOutput                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetControlledByWitch(class AB_PropPawnPhysics_C* Witch, const struct FSRuntimePropData& LastRuntimePropData, bool* ForcedOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetControlledByWitch");

	Params::B_StaticMeshProp_C_SetControlledByWitch Parms{};

	Parms.Witch = Witch;
	Parms.LastRuntimePropData = std::move(LastRuntimePropData);

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedOutput != nullptr)
		*ForcedOutput = Parms.ForcedOutput;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Move
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Vector                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedOutput                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::Move(const struct FVector& Vector, bool* ForcedOutput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Move");

	Params::B_StaticMeshProp_C_Move Parms{};

	Parms.Vector = std::move(Vector);

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedOutput != nullptr)
		*ForcedOutput = Parms.ForcedOutput;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetMaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MaxHealth_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetMaxHealth(double* MaxHealth_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetMaxHealth");

	Params::B_StaticMeshProp_C_GetMaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHealth_0 != nullptr)
		*MaxHealth_0 = Parms.MaxHealth_0;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Name_0                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetName(class FString* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetName");

	Params::B_StaticMeshProp_C_GetName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetCameraDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CameraDistance_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetCameraDistance(double* CameraDistance_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetCameraDistance");

	Params::B_StaticMeshProp_C_GetCameraDistance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraDistance_0 != nullptr)
		*CameraDistance_0 = Parms.CameraDistance_0;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRuntimePropData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSRuntimePropData                RuntimePropData                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetRuntimePropData(struct FSRuntimePropData* RuntimePropData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetRuntimePropData");

	Params::B_StaticMeshProp_C_GetRuntimePropData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RuntimePropData != nullptr)
		*RuntimePropData = std::move(Parms.RuntimePropData);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetCenter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Center                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetCenter(struct FVector* Center)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetCenter");

	Params::B_StaticMeshProp_C_GetCenter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Center != nullptr)
		*Center = std::move(Parms.Center);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OffsetPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       WantedSpawnTransform                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ValidTransform                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::OffsetPosition(class AActor* Prop, const struct FTransform& WantedSpawnTransform, TArray<class AActor*>& IgnoreActors, bool* ValidTransform, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OffsetPosition");

	Params::B_StaticMeshProp_C_OffsetPosition Parms{};

	Parms.Prop = Prop;
	Parms.WantedSpawnTransform = std::move(WantedSpawnTransform);
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);

	if (ValidTransform != nullptr)
		*ValidTransform = Parms.ValidTransform;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFromFrozenState
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateFromFrozenState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateFromFrozenState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.AutoSetInitialPhysicsState
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::AutoSetInitialPhysicsState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "AutoSetInitialPhysicsState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ClientHandleWake
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ClientHandleWake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ClientHandleWake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ClientHandleSleeping
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ClientHandleSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ClientHandleSleeping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetPhysicsEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetPhysicsEnabled(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetPhysicsEnabled");

	Params::B_StaticMeshProp_C_SetPhysicsEnabled Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateAfterPlayTestToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasPlayTestStarted                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::UpdateAfterPlayTestToggle(bool HasPlayTestStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateAfterPlayTestToggle");

	Params::B_StaticMeshProp_C_UpdateAfterPlayTestToggle Parms{};

	Parms.HasPlayTestStarted = HasPlayTestStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateMeshCollision
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::UpdateMeshCollision(bool EnableCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateMeshCollision");

	Params::B_StaticMeshProp_C_UpdateMeshCollision Parms{};

	Parms.EnableCollision = EnableCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.HandleWake
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::HandleWake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "HandleWake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFadeAndVisualChildForPropPawnPhysics
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateFadeAndVisualChildForPropPawnPhysics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateFadeAndVisualChildForPropPawnPhysics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.Dissolve
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::Dissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "Dissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.InitDissolve
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::InitDissolve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "InitDissolve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Volume                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetVolume(double* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetVolume");

	Params::B_StaticMeshProp_C_GetVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Volume != nullptr)
		*Volume = Parms.Volume;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVolumeCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_PropVolumeCategory            PropVolumeCategory                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::GetVolumeCategory(struct FS_PropVolumeCategory* PropVolumeCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "GetVolumeCategory");

	Params::B_StaticMeshProp_C_GetVolumeCategory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PropVolumeCategory != nullptr)
		*PropVolumeCategory = std::move(Parms.PropVolumeCategory);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateIntialSleep
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateIntialSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateIntialSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OnRep_InitialSleepTransform
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::OnRep_InitialSleepTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OnRep_InitialSleepTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OnRep_InitialIsSleeping
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::OnRep_InitialIsSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OnRep_InitialIsSleeping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OnRep_StartScale
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::OnRep_StartScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OnRep_StartScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateScaledSpeed
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateScaledSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateScaledSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFreezeStatus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IgnorePhysicsSetting                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::UpdateFreezeStatus(bool IgnorePhysicsSetting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateFreezeStatus");

	Params::B_StaticMeshProp_C_UpdateFreezeStatus Parms{};

	Parms.IgnorePhysicsSetting = IgnorePhysicsSetting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateSleepWakeStatus
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateSleepWakeStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateSleepWakeStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UnselectFromEditing
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UnselectFromEditing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UnselectFromEditing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SelectForEditing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     EditingPlayerState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    KeepOtherPropsSleep                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SelectForEditing(class APlayerState* EditingPlayerState, bool KeepOtherPropsSleep)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SelectForEditing");

	Params::B_StaticMeshProp_C_SelectForEditing Parms{};

	Parms.EditingPlayerState = EditingPlayerState;
	Parms.KeepOtherPropsSleep = KeepOtherPropsSleep;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetUncontrolledByWitch
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::SetUncontrolledByWitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetUncontrolledByWitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ResetVisualInterpolation
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ResetVisualInterpolation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ResetVisualInterpolation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ResetPhysicsType
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ResetPhysicsType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ResetPhysicsType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.DebugSpawnCollisionTestMesh
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::DebugSpawnCollisionTestMesh(const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "DebugSpawnCollisionTestMesh");

	Params::B_StaticMeshProp_C_DebugSpawnCollisionTestMesh Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.WakeFromSleep
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::WakeFromSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "WakeFromSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.CreateVisualInterpolatorForMesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             MeshComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AB_VisualIntepolator_C*           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AB_VisualIntepolator_C* AB_StaticMeshProp_C::CreateVisualInterpolatorForMesh(class UStaticMeshComponent* MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "CreateVisualInterpolatorForMesh");

	Params::B_StaticMeshProp_C_CreateVisualInterpolatorForMesh Parms{};

	Parms.MeshComponent = MeshComponent;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.HandleWakeServer
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::HandleWakeServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "HandleWakeServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.HandleSleepServer
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::HandleSleepServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "HandleSleepServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.PutToSleep
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::PutToSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "PutToSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.TickJump
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::TickJump(double Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "TickJump");

	Params::B_StaticMeshProp_C_TickJump Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.TickStop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::TickStop(double DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "TickStop");

	Params::B_StaticMeshProp_C_TickStop Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateMass
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateMass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateMass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdatePhysicsType
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdatePhysicsType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdatePhysicsType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.AttachSpringArm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PropPawnPhysics_C*             Witch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::AttachSpringArm(class AB_PropPawnPhysics_C* Witch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "AttachSpringArm");

	Params::B_StaticMeshProp_C_AttachSpringArm Parms{};

	Parms.Witch = Witch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.TransformTest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ValidTransform                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::TransformTest(TArray<class AActor*>& IgnoreActors, const struct FTransform& SpawnTransform, bool* ValidTransform, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "TransformTest");

	Params::B_StaticMeshProp_C_TransformTest Parms{};

	Parms.IgnoreActors = std::move(IgnoreActors);
	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);

	if (ValidTransform != nullptr)
		*ValidTransform = Parms.ValidTransform;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateRenderCustomDepth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PropPawnPhysics_C*             Witch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::UpdateRenderCustomDepth(class AB_PropPawnPhysics_C* Witch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateRenderCustomDepth");

	Params::B_StaticMeshProp_C_UpdateRenderCustomDepth Parms{};

	Parms.Witch = Witch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.RestoreVelocity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSRuntimePropData                RuntimePropData                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::RestoreVelocity(const struct FSRuntimePropData& RuntimePropData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "RestoreVelocity");

	Params::B_StaticMeshProp_C_RestoreVelocity Parms{};

	Parms.RuntimePropData = std::move(RuntimePropData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature");

	Params::B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              WakingComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature(class UPrimitiveComponent* WakingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature");

	Params::B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature Parms{};

	Parms.WakingComponent = WakingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.MultiSetWantedRotation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_StaticMeshProp_C::MultiSetWantedRotation(const struct FRotator& WantedRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "MultiSetWantedRotation");

	Params::B_StaticMeshProp_C_MultiSetWantedRotation Parms{};

	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ReceiveTick");

	Params::B_StaticMeshProp_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_StaticMeshProp_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ProceedTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ProceedTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ProceedTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.PostProccedTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::PostProccedTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "PostProccedTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetHighlightChannel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EHighlightChannel                       Channel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::SetHighlightChannel(EHighlightChannel Channel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetHighlightChannel");

	Params::B_StaticMeshProp_C_SetHighlightChannel Parms{};

	Parms.Channel = Channel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetUncontrolledByWitchMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::SetUncontrolledByWitchMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetUncontrolledByWitchMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.InitDissolveMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::InitDissolveMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "InitDissolveMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.DissolvePropServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::DissolvePropServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "DissolvePropServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.StartDestroyCountdown
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::StartDestroyCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "StartDestroyCountdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.StopDestroyCountdown
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::StopDestroyCountdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "StopDestroyCountdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.CallHandleWake
// (Event, Public, BlueprintEvent)

void AB_StaticMeshProp_C::CallHandleWake()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "CallHandleWake");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFreezeAwakeMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::UpdateFreezeAwakeMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "UpdateFreezeAwakeMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OnReplicatedIsSleeping
// (Event, Public, BlueprintEvent)

void AB_StaticMeshProp_C::OnReplicatedIsSleeping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OnReplicatedIsSleeping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.PerformBasicSetup
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::PerformBasicSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "PerformBasicSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ProcessComponentsForServer
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::ProcessComponentsForServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ProcessComponentsForServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.SetupPhysicalSettings
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::SetupPhysicalSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "SetupPhysicalSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.OnReplicatedCurrentSleepTransform
// (Event, Public, BlueprintEvent)

void AB_StaticMeshProp_C::OnReplicatedCurrentSleepTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "OnReplicatedCurrentSleepTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.HandleServerSleepEvent
// (BlueprintCallable, BlueprintEvent)

void AB_StaticMeshProp_C::HandleServerSleepEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "HandleServerSleepEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_StaticMeshProp.B_StaticMeshProp_C.ExecuteUbergraph_B_StaticMeshProp
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_StaticMeshProp_C::ExecuteUbergraph_B_StaticMeshProp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_StaticMeshProp_C", "ExecuteUbergraph_B_StaticMeshProp");

	Params::B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

