#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlaceableLight

#include "Basic.hpp"

#include "BP_PlaceableLight_classes.hpp"
#include "BP_PlaceableLight_parameters.hpp"


namespace SDK
{

// Function BP_PlaceableLight.BP_PlaceableLight_C.ChangeBrightness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AddValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlaceableLight_C::ChangeBrightness(double AddValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "ChangeBrightness");

	Params::BP_PlaceableLight_C_ChangeBrightness Parms{};

	Parms.AddValue = AddValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.ChangeColor
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::ChangeColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "ChangeColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.ExecuteUbergraph_BP_PlaceableLight
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlaceableLight_C::ExecuteUbergraph_BP_PlaceableLight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "ExecuteUbergraph_BP_PlaceableLight");

	Params::BP_PlaceableLight_C_ExecuteUbergraph_BP_PlaceableLight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlaceableLight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlaceableLight_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "ReceiveTick");

	Params::BP_PlaceableLight_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.SetColor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlaceableLight_C::SetColor(const struct FLinearColor& Color_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "SetColor");

	Params::BP_PlaceableLight_C_SetColor Parms{};

	Parms.Color_0 = std::move(Color_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.TurnIntoPointLighForPlayTest
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasPlayTestStarted                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlaceableLight_C::TurnIntoPointLighForPlayTest(bool HasPlayTestStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "TurnIntoPointLighForPlayTest");

	Params::BP_PlaceableLight_C_TurnIntoPointLighForPlayTest Parms{};

	Parms.HasPlayTestStarted = HasPlayTestStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.TurnIntoPointLight
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::TurnIntoPointLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "TurnIntoPointLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.UnselectFromEditing
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::UnselectFromEditing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "UnselectFromEditing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.UpdateActionPlacable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::UpdateActionPlacable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "UpdateActionPlacable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.UpdateLightValues
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::UpdateLightValues()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "UpdateLightValues");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlaceableLight.BP_PlaceableLight_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlaceableLight_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlaceableLight_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

