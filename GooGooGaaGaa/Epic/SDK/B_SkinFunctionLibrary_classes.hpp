#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkinFunctionLibrary

#include "Basic.hpp"

#include "E_Ingredients_structs.hpp"
#include "Engine_classes.hpp"
#include "B_Rarity_structs.hpp"
#include "E_Slot_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SkinFunctionLibrary.B_SkinFunctionLibrary_C
// 0x0000 (0x0028 - 0x0028)
class UB_SkinFunctionLibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void GetRarityInfo(EB_Rarity Rarity, class UObject* __WorldContext, class FText* Name_0, struct FLinearColor* Color);
	static TArray<class UClass*> GetWitchSkinClasses(const struct FWitchSkin& WitchSkin, class UObject* __WorldContext);
	static bool IsIconSlot(E_Slot Slot, class UObject* __WorldContext);
	static bool IsHunterSlot(E_Slot Slot, class UObject* __WorldContext);
	static bool IsWitchSlot(E_Slot Slot, class UObject* __WorldContext);
	static void GetSteamItemNameFromID(int32 DefinitionId, class UObject* __WorldContext, class FText* Name_0);
	static void SortSkinClassArrayByRarity(TArray<struct FS_ItemInfo>& ItemInfos, class UObject* __WorldContext, TArray<struct FS_ItemInfo>* SortedItemInfos);
	static void SortRecipeClassArrayByRarity(TArray<struct FS_RecipeInfo>& RecipeInfos, class UObject* __WorldContext, TArray<struct FS_RecipeInfo>* SortedRecipeInfos);
	static int32 GetRaritySortingValue(EB_Rarity Rarity, class UObject* __WorldContext);
	static bool IsHighQualityRecipe(EB_Rarity Rariry, class UObject* __WorldContext);
	static bool IsHighQualityItem(EB_Rarity Rarity, class UObject* __WorldContext);
	static void DestroySkinSelectionScenes(class UObject* __WorldContext);
	static void GetIngredientInfo(E_Ingredients Ingredient, class UObject* __WorldContext, int32* DefId, EB_Rarity* Rarity, class UTexture2D** Texture, class UNiagaraSystem** SpawnEffect);
	static void AnimBPVelocityClamp(struct FVector& LastLocation, class UAnimInstance* AnimBP, class UObject* __WorldContext, bool* TooFast, struct FVector* Velocity);
	static void ApplyHunterHeadOffset(class AActor* Head, class AActor* Hat, class UObject* __WorldContext);
	static void UpdateSkinColor(TArray<class AActor*>& Array, const struct FB_SkinColor& SkinColor, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SkinFunctionLibrary_C">();
	}
	static class UB_SkinFunctionLibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_SkinFunctionLibrary_C>();
	}
};
static_assert(alignof(UB_SkinFunctionLibrary_C) == 0x000008, "Wrong alignment on UB_SkinFunctionLibrary_C");
static_assert(sizeof(UB_SkinFunctionLibrary_C) == 0x000028, "Wrong size on UB_SkinFunctionLibrary_C");

}

