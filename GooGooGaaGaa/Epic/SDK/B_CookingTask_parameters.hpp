#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CookingTask

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_CookingTask.B_CookingTask_C.CheckCompletionConditions
// 0x000C (0x000C - 0x0000)
struct B_CookingTask_C_CheckCompletionConditions final
{
public:
	bool                                          ReadyForCompletion;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_CheckCompletionConditions) == 0x000004, "Wrong alignment on B_CookingTask_C_CheckCompletionConditions");
static_assert(sizeof(B_CookingTask_C_CheckCompletionConditions) == 0x00000C, "Wrong size on B_CookingTask_C_CheckCompletionConditions");
static_assert(offsetof(B_CookingTask_C_CheckCompletionConditions, ReadyForCompletion) == 0x000000, "Member 'B_CookingTask_C_CheckCompletionConditions::ReadyForCompletion' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_CheckCompletionConditions, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_CookingTask_C_CheckCompletionConditions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_CheckCompletionConditions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'B_CookingTask_C_CheckCompletionConditions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.ExecuteUbergraph_B_CookingTask
// 0x0008 (0x0008 - 0x0000)
struct B_CookingTask_C_ExecuteUbergraph_B_CookingTask final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_ExecuteUbergraph_B_CookingTask) == 0x000004, "Wrong alignment on B_CookingTask_C_ExecuteUbergraph_B_CookingTask");
static_assert(sizeof(B_CookingTask_C_ExecuteUbergraph_B_CookingTask) == 0x000008, "Wrong size on B_CookingTask_C_ExecuteUbergraph_B_CookingTask");
static_assert(offsetof(B_CookingTask_C_ExecuteUbergraph_B_CookingTask, EntryPoint) == 0x000000, "Member 'B_CookingTask_C_ExecuteUbergraph_B_CookingTask::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ExecuteUbergraph_B_CookingTask, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'B_CookingTask_C_ExecuteUbergraph_B_CookingTask::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.InitializeIndividualTaskParameters
// 0x0048 (0x0048 - 0x0000)
struct B_CookingTask_C_InitializeIndividualTaskParameters final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_CookingField_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CookingField_C*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(B_CookingTask_C_InitializeIndividualTaskParameters) == 0x000008, "Wrong alignment on B_CookingTask_C_InitializeIndividualTaskParameters");
static_assert(sizeof(B_CookingTask_C_InitializeIndividualTaskParameters) == 0x000048, "Wrong size on B_CookingTask_C_InitializeIndividualTaskParameters");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_InitializeIndividualTaskParameters, K2Node_MakeArray_Array) == 0x000038, "Member 'B_CookingTask_C_InitializeIndividualTaskParameters::K2Node_MakeArray_Array' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_CookingTask_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_ReceiveTick) == 0x000004, "Wrong alignment on B_CookingTask_C_ReceiveTick");
static_assert(sizeof(B_CookingTask_C_ReceiveTick) == 0x000004, "Wrong size on B_CookingTask_C_ReceiveTick");
static_assert(offsetof(B_CookingTask_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_CookingTask_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.ResetTargets
// 0x0090 (0x0090 - 0x0000)
struct B_CookingTask_C_ResetTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_CookingRecipeSign_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AB_CookingRecipeSign_C*                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_CookingShootActor_C*>         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0040(0x0010)(ReferenceParm)
	class AB_CookingShootActor_C*                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_CookingDummy_C*>              CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CookingDummy_C*                      CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_ResetTargets) == 0x000008, "Wrong alignment on B_CookingTask_C_ResetTargets");
static_assert(sizeof(B_CookingTask_C_ResetTargets) == 0x000090, "Wrong size on B_CookingTask_C_ResetTargets");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'B_CookingTask_C_ResetTargets::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, Temp_int_Loop_Counter_Variable_2) == 0x00003C, "Member 'B_CookingTask_C_ResetTargets::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000040, "Member 'B_CookingTask_C_ResetTargets::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005D, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000068, "Member 'B_CookingTask_C_ResetTargets::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Length_ReturnValue_2) == 0x000078, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_ResetTargets, CallFunc_Less_IntInt_ReturnValue_2) == 0x000088, "Member 'B_CookingTask_C_ResetTargets::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.SpawnStaticTargets
// 0x01C0 (0x01C0 - 0x0000)
struct B_CookingTask_C_SpawnStaticTargets final
{
public:
	class AB_CookingField_C*                      CookingField;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_CookingField_C*                      K2Node_DynamicCast_AsB_Cooking_Field;              // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingRecipeSign_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingInteractionActor_C*           CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_SpawnStaticTargets) == 0x000010, "Wrong alignment on B_CookingTask_C_SpawnStaticTargets");
static_assert(sizeof(B_CookingTask_C_SpawnStaticTargets) == 0x0001C0, "Wrong size on B_CookingTask_C_SpawnStaticTargets");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CookingField) == 0x000000, "Member 'B_CookingTask_C_SpawnStaticTargets::CookingField' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000070, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, K2Node_DynamicCast_AsB_Cooking_Field) == 0x000180, "Member 'B_CookingTask_C_SpawnStaticTargets::K2Node_DynamicCast_AsB_Cooking_Field' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'B_CookingTask_C_SpawnStaticTargets::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_Array_Get_Item) == 0x00018C, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000198, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0001A0, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A8, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnStaticTargets, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001B0, "Member 'B_CookingTask_C_SpawnStaticTargets::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function B_CookingTask.B_CookingTask_C.SpawnTargets
// 0x0160 (0x0160 - 0x0000)
struct B_CookingTask_C_SpawnTargets final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x0020(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_3;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingShootActor_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingTask_C_SpawnTargets) == 0x000010, "Wrong alignment on B_CookingTask_C_SpawnTargets");
static_assert(sizeof(B_CookingTask_C_SpawnTargets) == 0x000160, "Wrong size on B_CookingTask_C_SpawnTargets");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_CookingTask_C_SpawnTargets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_CookingTask_C_SpawnTargets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Array_Get_Item_2) == 0x000020, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Array_Get_Item_3) == 0x000080, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_BreakTransform_Location) == 0x000088, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000148, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingTask_C_SpawnTargets, CallFunc_FinishSpawningActor_ReturnValue) == 0x000150, "Member 'B_CookingTask_C_SpawnTargets::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

