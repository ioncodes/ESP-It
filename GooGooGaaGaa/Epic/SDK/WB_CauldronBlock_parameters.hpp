#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CauldronBlock

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "S_PropData_structs.hpp"


namespace SDK::Params
{

// Function WB_CauldronBlock.WB_CauldronBlock_C.CheckForWantedProp
// 0x0028 (0x0028 - 0x0000)
struct WB_CauldronBlock_C_CheckForWantedProp final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronBlock_C_CheckForWantedProp) == 0x000008, "Wrong alignment on WB_CauldronBlock_C_CheckForWantedProp");
static_assert(sizeof(WB_CauldronBlock_C_CheckForWantedProp) == 0x000028, "Wrong size on WB_CauldronBlock_C_CheckForWantedProp");
static_assert(offsetof(WB_CauldronBlock_C_CheckForWantedProp, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_CheckForWantedProp::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_CheckForWantedProp, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000008, "Member 'WB_CauldronBlock_C_CheckForWantedProp::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_CheckForWantedProp, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_CauldronBlock_C_CheckForWantedProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_CheckForWantedProp, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WB_CauldronBlock_C_CheckForWantedProp::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_CheckForWantedProp, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'WB_CauldronBlock_C_CheckForWantedProp::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.ExecuteUbergraph_WB_CauldronBlock
// 0x0054 (0x0054 - 0x0000)
struct WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0040(0x0014)()
};
static_assert(alignof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock) == 0x000004, "Wrong alignment on WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock");
static_assert(sizeof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock) == 0x000054, "Wrong size on WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock");
static_assert(offsetof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock, EntryPoint) == 0x000000, "Member 'WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock, K2Node_MakeStruct_SlateColor) == 0x000040, "Member 'WB_CauldronBlock_C_ExecuteUbergraph_WB_CauldronBlock::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.Get_Border_Brush_0
// 0x01E0 (0x01E0 - 0x0000)
struct WB_CauldronBlock_C_Get_Border_Brush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Get_CorrectProp_Visibility_0_ReturnValue; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0110(0x00D0)()
};
static_assert(alignof(WB_CauldronBlock_C_Get_Border_Brush_0) == 0x000010, "Wrong alignment on WB_CauldronBlock_C_Get_Border_Brush_0");
static_assert(sizeof(WB_CauldronBlock_C_Get_Border_Brush_0) == 0x0001E0, "Wrong size on WB_CauldronBlock_C_Get_Border_Brush_0");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_byte_Variable) == 0x0000D0, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_object_Variable) == 0x0000D8, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_object_Variable_1) == 0x0000E0, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_object_Variable_2) == 0x0000E8, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_object_Variable_3) == 0x0000F0, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, Temp_object_Variable_4) == 0x0000F8, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, CallFunc_Get_CorrectProp_Visibility_0_ReturnValue) == 0x000100, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::CallFunc_Get_CorrectProp_Visibility_0_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, K2Node_Select_Default) == 0x000108, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Border_Brush_0, K2Node_MakeStruct_SlateBrush) == 0x000110, "Member 'WB_CauldronBlock_C_Get_Border_Brush_0::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.Get_CorrectProp_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_CauldronBlock_C_Get_CorrectProp_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0) == 0x000001, "Wrong alignment on WB_CauldronBlock_C_Get_CorrectProp_Visibility_0");
static_assert(sizeof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0) == 0x000005, "Wrong size on WB_CauldronBlock_C_Get_CorrectProp_Visibility_0");
static_assert(offsetof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_Get_CorrectProp_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_CauldronBlock_C_Get_CorrectProp_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_CauldronBlock_C_Get_CorrectProp_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_CauldronBlock_C_Get_CorrectProp_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_CorrectProp_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_CauldronBlock_C_Get_CorrectProp_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.Get_Fillstate_Text_0
// 0x00D0 (0x00D0 - 0x0000)
struct WB_CauldronBlock_C_Get_Fillstate_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Conv_ByteToInt64_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_ByteToInt64_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(WB_CauldronBlock_C_Get_Fillstate_Text_0) == 0x000008, "Wrong alignment on WB_CauldronBlock_C_Get_Fillstate_Text_0");
static_assert(sizeof(WB_CauldronBlock_C_Get_Fillstate_Text_0) == 0x0000D0, "Wrong size on WB_CauldronBlock_C_Get_Fillstate_Text_0");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, CallFunc_Conv_ByteToInt64_ReturnValue) == 0x000010, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::CallFunc_Conv_ByteToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, CallFunc_Conv_ByteToInt64_ReturnValue_1) == 0x000018, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::CallFunc_Conv_ByteToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_Fillstate_Text_0, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WB_CauldronBlock_C_Get_Fillstate_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.Get_PropIcon_Brush_0
// 0x02B0 (0x02B0 - 0x0000)
struct WB_CauldronBlock_C_Get_PropIcon_Brush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00E0(0x00D0)()
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropData                            CallFunc_Map_Find_Value;                           // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0xF];                                      // 0x01D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x01E0(0x00D0)()
};
static_assert(alignof(WB_CauldronBlock_C_Get_PropIcon_Brush_0) == 0x000010, "Wrong alignment on WB_CauldronBlock_C_Get_PropIcon_Brush_0");
static_assert(sizeof(WB_CauldronBlock_C_Get_PropIcon_Brush_0) == 0x0002B0, "Wrong size on WB_CauldronBlock_C_Get_PropIcon_Brush_0");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, CallFunc_GetGameInstance_ReturnValue) == 0x0000D0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, K2Node_MakeStruct_SlateBrush) == 0x0000E0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x0001B0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, CallFunc_IsValidClass_ReturnValue) == 0x0001B9, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, CallFunc_Map_Find_Value) == 0x0001C0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, CallFunc_Map_Find_ReturnValue) == 0x0001D0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Get_PropIcon_Brush_0, K2Node_MakeStruct_SlateBrush_1) == 0x0001E0, "Member 'WB_CauldronBlock_C_Get_PropIcon_Brush_0::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.GetText_0
// 0x0018 (0x0018 - 0x0000)
struct WB_CauldronBlock_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronBlock_C_GetText_0) == 0x000008, "Wrong alignment on WB_CauldronBlock_C_GetText_0");
static_assert(sizeof(WB_CauldronBlock_C_GetText_0) == 0x000018, "Wrong size on WB_CauldronBlock_C_GetText_0");
static_assert(offsetof(WB_CauldronBlock_C_GetText_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetText_0, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'WB_CauldronBlock_C_GetText_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_CauldronBlock_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronBlock_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_CauldronBlock_C_GetVisibility_0");
static_assert(sizeof(WB_CauldronBlock_C_GetVisibility_0) == 0x000006, "Wrong size on WB_CauldronBlock_C_GetVisibility_0");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_CauldronBlock_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_CauldronBlock_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_CauldronBlock_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_CauldronBlock_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, CallFunc_IsValidClass_ReturnValue) == 0x000004, "Member 'WB_CauldronBlock_C_GetVisibility_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_CauldronBlock_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_CauldronBlock.WB_CauldronBlock_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CauldronBlock_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronBlock_C_Tick) == 0x000004, "Wrong alignment on WB_CauldronBlock_C_Tick");
static_assert(sizeof(WB_CauldronBlock_C_Tick) == 0x00003C, "Wrong size on WB_CauldronBlock_C_Tick");
static_assert(offsetof(WB_CauldronBlock_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CauldronBlock_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CauldronBlock_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CauldronBlock_C_Tick::InDeltaTime' has a wrong offset!");

}

