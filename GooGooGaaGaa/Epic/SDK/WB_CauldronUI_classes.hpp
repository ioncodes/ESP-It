#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CauldronUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ETeamID_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CauldronUI.WB_CauldronUI_C
// 0x0058 (0x0338 - 0x02E0)
class UWB_CauldronUI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CauldronFillstate_C*                WB_CauldronFillstate;                              // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_RequiredPropIcon_C*                 WB_RequiredPropIcon;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	uint8                                         CurrentFill;                                       // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         MaxFill;                                           // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color;                                             // 0x0304(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)
	ETeamID                                       Team;                                              // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveCauldron_C*                 Cauldron;                                          // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bWitchIsWantedProp;                                // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CheckForWantedProp();
	void Construct();
	void ExecuteUbergraph_WB_CauldronUI(int32 EntryPoint);
	struct FLinearColor GetColorAndOpacity_0();
	ESlateVisibility GetVisibility_0();
	ESlateVisibility GetVisibility_1();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CauldronUI_C">();
	}
	static class UWB_CauldronUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CauldronUI_C>();
	}
};
static_assert(alignof(UWB_CauldronUI_C) == 0x000008, "Wrong alignment on UWB_CauldronUI_C");
static_assert(sizeof(UWB_CauldronUI_C) == 0x000338, "Wrong size on UWB_CauldronUI_C");
static_assert(offsetof(UWB_CauldronUI_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_CauldronUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, VerticalBox_0) == 0x0002E8, "Member 'UWB_CauldronUI_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, WB_CauldronFillstate) == 0x0002F0, "Member 'UWB_CauldronUI_C::WB_CauldronFillstate' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, WB_RequiredPropIcon) == 0x0002F8, "Member 'UWB_CauldronUI_C::WB_RequiredPropIcon' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, CurrentFill) == 0x000300, "Member 'UWB_CauldronUI_C::CurrentFill' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, MaxFill) == 0x000301, "Member 'UWB_CauldronUI_C::MaxFill' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, Color) == 0x000304, "Member 'UWB_CauldronUI_C::Color' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, Team) == 0x000318, "Member 'UWB_CauldronUI_C::Team' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, Cauldron) == 0x000320, "Member 'UWB_CauldronUI_C::Cauldron' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, PlayerState) == 0x000328, "Member 'UWB_CauldronUI_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWB_CauldronUI_C, bWitchIsWantedProp) == 0x000330, "Member 'UWB_CauldronUI_C::bWitchIsWantedProp' has a wrong offset!");

}

