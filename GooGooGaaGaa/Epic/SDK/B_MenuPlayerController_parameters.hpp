#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MenuPlayerController

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_MenuPlayerController.B_MenuPlayerController_C.ExecuteUbergraph_B_MenuPlayerController
// 0x0168 (0x0168 - 0x0000)
struct B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0050(0x0018)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0098(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x00B0(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_AxisValue;                      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0128(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisKeyEvent_AxisValue;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0148(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController");
static_assert(sizeof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController) == 0x000168, "Wrong size on B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, EntryPoint) == 0x000000, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, Temp_struct_Variable) == 0x000008, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputActionEvent_Key_1) == 0x000020, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputActionEvent_Key) == 0x000038, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, Temp_struct_Variable_1) == 0x000050, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_GetGameInstance_ReturnValue) == 0x000068, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_DynamicCast_AsB_Game_Instance) == 0x000070, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputKeyEvent_Key_2) == 0x000080, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputKeyEvent_Key_3) == 0x000098, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputKeyEvent_Key) == 0x0000B0, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000C8, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputAxisEvent_AxisValue) == 0x0000D0, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000D8, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_CustomEvent_AxisValue) == 0x0000E8, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_CustomEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000108, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000110, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000118, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000120, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputKeyEvent_Key_1) == 0x000128, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, K2Node_InputAxisKeyEvent_AxisValue) == 0x000140, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::K2Node_InputAxisKeyEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, Temp_struct_Variable_2) == 0x000148, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'B_MenuPlayerController_C_ExecuteUbergraph_B_MenuPlayerController::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.GetMasterScreen
// 0x0028 (0x0028 - 0x0000)
struct B_MenuPlayerController_C_GetMasterScreen final
{
public:
	class UWB_MasterScreen_C*                     MasterScreen_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_GetMasterScreen) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_GetMasterScreen");
static_assert(sizeof(B_MenuPlayerController_C_GetMasterScreen) == 0x000028, "Wrong size on B_MenuPlayerController_C_GetMasterScreen");
static_assert(offsetof(B_MenuPlayerController_C_GetMasterScreen, MasterScreen_0) == 0x000000, "Member 'B_MenuPlayerController_C_GetMasterScreen::MasterScreen_0' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_GetMasterScreen, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_MenuPlayerController_C_GetMasterScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_GetMasterScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_MenuPlayerController_C_GetMasterScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_GetMasterScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_MenuPlayerController_C_GetMasterScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_GetMasterScreen, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_MenuPlayerController_C_GetMasterScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_Fire_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_Fire_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_Fire_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(sizeof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1");
static_assert(offsetof(B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'B_MenuPlayerController_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_4
// 0x0004 (0x0004 - 0x0000)
struct B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4) == 0x000004, "Wrong alignment on B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4");
static_assert(sizeof(B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4) == 0x000004, "Wrong size on B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4");
static_assert(offsetof(B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4, AxisValue) == 0x000000, "Member 'B_MenuPlayerController_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_4::AxisValue' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0
// 0x0004 (0x0004 - 0x0000)
struct B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong alignment on B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0");
static_assert(sizeof(B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0) == 0x000004, "Wrong size on B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0");
static_assert(offsetof(B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0, AxisValue) == 0x000000, "Member 'B_MenuPlayerController_C_InpAxisKeyEvt_Gamepad_LeftX_K2Node_InputAxisKeyEvent_0::AxisValue' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.InputRightThumbstickX-Axis
// 0x0008 (0x0008 - 0x0000)
struct B_MenuPlayerController_C_InputRightThumbstickXMinusAxis final
{
public:
	double                                        AxisValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_InputRightThumbstickXMinusAxis) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_InputRightThumbstickXMinusAxis");
static_assert(sizeof(B_MenuPlayerController_C_InputRightThumbstickXMinusAxis) == 0x000008, "Wrong size on B_MenuPlayerController_C_InputRightThumbstickXMinusAxis");
static_assert(offsetof(B_MenuPlayerController_C_InputRightThumbstickXMinusAxis, AxisValue) == 0x000000, "Member 'B_MenuPlayerController_C_InputRightThumbstickXMinusAxis::AxisValue' has a wrong offset!");

// Function B_MenuPlayerController.B_MenuPlayerController_C.RotateSkinPreviewMesh
// 0x0258 (0x0258 - 0x0000)
struct B_MenuPlayerController_C_RotateSkinPreviewMesh final
{
public:
	double                                        DeltaRotation_Yaw;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_MasterScreen_C*                     CallFunc_GetMasterScreen_MasterScreen;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetCurrentScreenWidget_Widget;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWB_SkinCategoryMenuScreen_C*           K2Node_DynamicCast_AsWB_Skin_Category_Menu_Screen; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0060(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0158(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MenuPlayerController_C_RotateSkinPreviewMesh) == 0x000008, "Wrong alignment on B_MenuPlayerController_C_RotateSkinPreviewMesh");
static_assert(sizeof(B_MenuPlayerController_C_RotateSkinPreviewMesh) == 0x000258, "Wrong size on B_MenuPlayerController_C_RotateSkinPreviewMesh");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, DeltaRotation_Yaw) == 0x000000, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::DeltaRotation_Yaw' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_GetMasterScreen_MasterScreen) == 0x000008, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_GetMasterScreen_MasterScreen' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_GetCurrentScreenWidget_Widget) == 0x000010, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_GetCurrentScreenWidget_Widget' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, K2Node_DynamicCast_AsWB_Skin_Category_Menu_Screen) == 0x000030, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::K2Node_DynamicCast_AsWB_Skin_Category_Menu_Screen' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_MakeRotator_ReturnValue_1) == 0x000040, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000060, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000158, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000250, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_MenuPlayerController_C_RotateSkinPreviewMesh, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000254, "Member 'B_MenuPlayerController_C_RotateSkinPreviewMesh::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");

}

