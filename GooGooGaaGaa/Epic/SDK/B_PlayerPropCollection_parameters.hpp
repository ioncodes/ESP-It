#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PlayerPropCollection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_PropData_structs.hpp"
#include "E_PropSet_structs.hpp"
#include "E_PropCategory_structs.hpp"


namespace SDK::Params
{

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.CheckAndSetOwnedPropsCount
// 0x0330 (0x0330 - 0x0000)
struct B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount final
{
public:
	TArray<struct FS_PropData>                    PropDatas;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_PropCategory, class FName>             PropCategoryStats;                                 // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_PropSet, class FName>                  PropSetStats;                                      // 0x0060(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<E_PropSet>                             CurrentSetKeys;                                    // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<E_PropCategory>                        CurrentCategoryKeys;                               // 0x00C0(0x0010)(Edit, BlueprintVisible)
	TMap<E_PropSet, class FName>                  SetStats;                                          // 0x00D0(0x0050)(Edit, BlueprintVisible)
	TMap<E_PropCategory, class FName>             CategoryStats;                                     // 0x0120(0x0050)(Edit, BlueprintVisible)
	E_PropSet                                     CurrentSet;                                        // 0x0170(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropCategory                                CurrentCategory;                                   // 0x0171(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PropData>                    PropDataValues;                                    // 0x0178(0x0010)(Edit, BlueprintVisible)
	TMap<E_PropCategory, class FName>             K2Node_MakeVariable_MakeVariableOutput;            // 0x0188(0x0050)()
	TMap<E_PropSet, class FName>                  K2Node_MakeVariable_MakeVariableOutput_1;          // 0x01D8(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_1;  // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<E_PropSet>                             CallFunc_Map_Keys_Keys;                            // 0x0258(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_PropCategory>                        CallFunc_Map_Keys_Keys_1;                          // 0x0270(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28A[0x2];                                      // 0x028A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x3];                                      // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropCategory                                CallFunc_Array_Get_Item;                           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AE[0x2];                                      // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result;                         // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue;                    // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetGSStat_ResultValue;                    // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropSet                                     CallFunc_Array_Get_Item_1;                         // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x2];                                      // 0x02DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_5;                         // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result_1;                       // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue_1;                  // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetGSStat_ResultValue_1;                  // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound_1;               // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue_1;            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_316[0x2];                                      // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropData                            CallFunc_Array_Get_Item_2;                         // 0x0318(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount");
static_assert(sizeof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount) == 0x000330, "Wrong size on B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, PropDatas) == 0x000000, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::PropDatas' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, PropCategoryStats) == 0x000010, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::PropCategoryStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, PropSetStats) == 0x000060, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::PropSetStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CurrentSetKeys) == 0x0000B0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CurrentSetKeys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CurrentCategoryKeys) == 0x0000C0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CurrentCategoryKeys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, SetStats) == 0x0000D0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::SetStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CategoryStats) == 0x000120, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CategoryStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CurrentSet) == 0x000170, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CurrentSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CurrentCategory) == 0x000171, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CurrentCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, PropDataValues) == 0x000178, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::PropDataValues' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, K2Node_MakeVariable_MakeVariableOutput) == 0x000188, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0001D8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Loop_Counter_Variable) == 0x000228, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Add_IntInt_ReturnValue) == 0x00022C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Array_Index_Variable) == 0x000230, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Array_Index_Variable_1) == 0x000234, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Loop_Counter_Variable_1) == 0x000238, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00023C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Array_Index_Variable_2) == 0x000240, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000248, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetStatsAndAchievementsManager_Result_1) == 0x000250, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetStatsAndAchievementsManager_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Keys_Keys) == 0x000258, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, Temp_int_Loop_Counter_Variable_2) == 0x000268, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Keys_Keys_1) == 0x000270, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Add_IntInt_ReturnValue_2) == 0x000280, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value) == 0x000284, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue) == 0x000288, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000289, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Add_IntInt_ReturnValue_3) == 0x00028C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000290, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value_1) == 0x000294, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue_1) == 0x000298, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Add_IntInt_ReturnValue_4) == 0x00029C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Get_Item) == 0x0002A0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Length_ReturnValue) == 0x0002A4, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value_2) == 0x0002A8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue_2) == 0x0002AC, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Less_IntInt_ReturnValue) == 0x0002AD, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002B0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value_3) == 0x0002B8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue_3) == 0x0002C0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_SetGSStat_Result) == 0x0002C1, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_SetGSStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_SetGSStat_ReturnValue) == 0x0002C2, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_SetGSStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetGSStat_ResultValue) == 0x0002C8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetGSStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetGSStat_ResultWasFound) == 0x0002D0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetGSStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0002D4, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0002D8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Get_Item_1) == 0x0002D9, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value_4) == 0x0002DC, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue_4) == 0x0002E0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_Value_5) == 0x0002E4, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Map_Find_ReturnValue_5) == 0x0002EC, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0002F0, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_SetGSStat_Result_1) == 0x0002F8, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_SetGSStat_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_SetGSStat_ReturnValue_1) == 0x0002F9, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_SetGSStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetGSStat_ResultValue_1) == 0x000300, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetGSStat_ResultValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_GetGSStat_ResultWasFound_1) == 0x000308, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_GetGSStat_ResultWasFound_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Length_ReturnValue_1) == 0x00030C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Conv_Int64ToInt_ReturnValue_1) == 0x000310, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Conv_Int64ToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Less_IntInt_ReturnValue_1) == 0x000314, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000315, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Get_Item_2) == 0x000318, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Array_Length_ReturnValue_2) == 0x000328, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Less_IntInt_ReturnValue_2) == 0x00032C, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount, CallFunc_Set_Contains_ReturnValue) == 0x00032D, "Member 'B_PlayerPropCollection_C_CheckAndSetOwnedPropsCount::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.CollectProp
// 0x00D8 (0x00D8 - 0x0000)
struct B_PlayerPropCollection_C_CollectProp final
{
public:
	int32                                         PropID;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNewProp;                                         // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewValue;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PropIdToSet;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_1;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result;                         // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue;                    // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBitSet_ReturnValue;                     // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SetBit_ReturnValue;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_CollectProp) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_CollectProp");
static_assert(sizeof(B_PlayerPropCollection_C_CollectProp) == 0x0000D8, "Wrong size on B_PlayerPropCollection_C_CollectProp");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, PropID) == 0x000000, "Member 'B_PlayerPropCollection_C_CollectProp::PropID' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, Local) == 0x000004, "Member 'B_PlayerPropCollection_C_CollectProp::Local' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, IsNewProp) == 0x000005, "Member 'B_PlayerPropCollection_C_CollectProp::IsNewProp' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, NewValue) == 0x000008, "Member 'B_PlayerPropCollection_C_CollectProp::NewValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, PropIdToSet) == 0x00000C, "Member 'B_PlayerPropCollection_C_CollectProp::PropIdToSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000018, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_GetStatsAndAchievementsManager_Result_1) == 0x000020, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_GetStatsAndAchievementsManager_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000038, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'B_PlayerPropCollection_C_CollectProp::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Percent_IntInt_ReturnValue) == 0x000088, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, K2Node_MakeArray_Array) == 0x000090, "Member 'B_PlayerPropCollection_C_CollectProp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Conv_StringToName_ReturnValue) == 0x0000C0, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_SetGSStat_Result) == 0x0000CC, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_SetGSStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_SetGSStat_ReturnValue) == 0x0000CD, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_SetGSStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_IsBitSet_ReturnValue) == 0x0000CE, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_IsBitSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_SetBit_ReturnValue) == 0x0000D0, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_SetBit_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CollectProp, CallFunc_SetStat_Result) == 0x0000D4, "Member 'B_PlayerPropCollection_C_CollectProp::CallFunc_SetStat_Result' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.CountCollectedPropsPerCategory
// 0x01D8 (0x01D8 - 0x0000)
struct B_PlayerPropCollection_C_CountCollectedPropsPerCategory final
{
public:
	TArray<struct FS_PropData>                    PropDatas;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<E_PropCategory, class FName>             PropCategoryStats;                                 // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_PropSet, class FName>                  PropSetStats;                                      // 0x0060(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<E_PropSet>                             CurrentSetKeys;                                    // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<E_PropCategory>                        CurrentCategoryKeys;                               // 0x00C0(0x0010)(Edit, BlueprintVisible)
	E_PropSet                                     CurrentSet;                                        // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropCategory                                CurrentCategory;                                   // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PropData                            CallFunc_Array_Get_Item;                           // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_1;  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<E_PropSet>                             CallFunc_Map_Keys_Keys;                            // 0x0118(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_PropCategory>                        CallFunc_Map_Keys_Keys_1;                          // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropCategory                                CallFunc_Array_Get_Item_1;                         // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_3;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_183[0x5];                                      // 0x0183(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropSet                                     CallFunc_Array_Get_Item_2;                         // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_4;                         // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_5;                         // 0x01A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result_1;                         // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue_1;                    // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound_1;                 // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue_1;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_CountCollectedPropsPerCategory");
static_assert(sizeof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory) == 0x0001D8, "Wrong size on B_PlayerPropCollection_C_CountCollectedPropsPerCategory");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, PropDatas) == 0x000000, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::PropDatas' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, PropCategoryStats) == 0x000010, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::PropCategoryStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, PropSetStats) == 0x000060, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::PropSetStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CurrentSetKeys) == 0x0000B0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CurrentSetKeys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CurrentCategoryKeys) == 0x0000C0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CurrentCategoryKeys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CurrentSet) == 0x0000D0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CurrentSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CurrentCategory) == 0x0000D1, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CurrentCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Array_Index_Variable_2) == 0x0000EC, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStatsAndAchievementsManager_Result) == 0x0000F0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStatsAndAchievementsManager_Result_1) == 0x000110, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStatsAndAchievementsManager_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Keys_Keys) == 0x000118, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, Temp_int_Loop_Counter_Variable_2) == 0x000128, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Keys_Keys_1) == 0x000130, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Add_IntInt_ReturnValue_2) == 0x000140, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value) == 0x000144, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000149, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Add_IntInt_ReturnValue_3) == 0x00014C, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000150, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value_1) == 0x000154, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue_1) == 0x000158, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Add_IntInt_ReturnValue_4) == 0x00015C, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value_2) == 0x000168, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue_2) == 0x00016C, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Less_IntInt_ReturnValue_1) == 0x00016D, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000170, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value_3) == 0x000178, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue_3) == 0x000180, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Set_Contains_ReturnValue) == 0x000181, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_SetStat_Result) == 0x000182, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_SetStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStat_ResultValue) == 0x000188, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStat_ResultWasFound) == 0x000190, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000194, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000198, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Get_Item_2) == 0x000199, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value_4) == 0x00019C, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue_4) == 0x0001A0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_Value_5) == 0x0001A4, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Map_Find_ReturnValue_5) == 0x0001AC, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0001B0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_SetStat_Result_1) == 0x0001B8, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_SetStat_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStat_ResultValue_1) == 0x0001C0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStat_ResultValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_GetStat_ResultWasFound_1) == 0x0001C8, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_GetStat_ResultWasFound_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Array_Length_ReturnValue_2) == 0x0001CC, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Conv_Int64ToInt_ReturnValue_1) == 0x0001D0, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Conv_Int64ToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001D4, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_CountCollectedPropsPerCategory, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0001D5, "Member 'B_PlayerPropCollection_C_CountCollectedPropsPerCategory::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.HandleNewPropCategoryAndSets
// 0x0390 (0x0390 - 0x0000)
struct B_PlayerPropCollection_C_HandleNewPropCategoryAndSets final
{
public:
	int32                                         NewPropId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FS_PropData>               PropDatas;                                         // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_PropCategory, class FName>             PropCategoryStats;                                 // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<E_PropSet, class FName>                  PropSetStats;                                      // 0x00A8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Local;                                             // 0x00F8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountInCategory;                                   // 0x00FC(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountInSet;                                        // 0x0100(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalCategory;                                     // 0x0104(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSet;                                          // 0x0108(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalInSet;                                        // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalInCategory;                                   // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountOwnedInSet;                                   // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountOwnedInCategory;                              // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropSet                                     Set;                                               // 0x011C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_PropSet, class FName>                  SetsStats;                                         // 0x0120(0x0050)(Edit, BlueprintVisible)
	TMap<E_PropCategory, class FName>             CategoriesStats;                                   // 0x0170(0x0050)(Edit, BlueprintVisible)
	TMap<int32, struct FS_PropData>               Datas;                                             // 0x01C0(0x0050)(Edit, BlueprintVisible)
	int32                                         PropID;                                            // 0x0210(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_PropCategory                                Category;                                          // 0x0214(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PropData>                    PropDataValues;                                    // 0x0218(0x0010)(Edit, BlueprintVisible)
	class UClass*                                 NewPropClass;                                      // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_PropSet, class FName>                  K2Node_MakeVariable_MakeVariableOutput;            // 0x0240(0x0050)()
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_1;  // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result;                         // 0x02C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue;                    // 0x02CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x02CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_Result_1;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetGSStat_ReturnValue_1;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result_1;                         // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<E_PropCategory, class FName>             K2Node_MakeVariable_MakeVariableOutput_1;          // 0x02F0(0x0050)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0343(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PropData>                    CallFunc_Map_Values_Values;                        // 0x0348(0x0010)(ReferenceParm)
	struct FS_PropData                            CallFunc_Map_Find_Value_2;                         // 0x0358(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropData                            CallFunc_Array_Get_Item;                           // 0x0370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0386(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0387(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_HandleNewPropCategoryAndSets");
static_assert(sizeof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets) == 0x000390, "Wrong size on B_PlayerPropCollection_C_HandleNewPropCategoryAndSets");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, NewPropId) == 0x000000, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::NewPropId' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, PropDatas) == 0x000008, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::PropDatas' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, PropCategoryStats) == 0x000058, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::PropCategoryStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, PropSetStats) == 0x0000A8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::PropSetStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Local) == 0x0000F8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Local' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CountInCategory) == 0x0000FC, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CountInCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CountInSet) == 0x000100, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CountInSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, TotalCategory) == 0x000104, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::TotalCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, TotalSet) == 0x000108, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::TotalSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, TotalInSet) == 0x00010C, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::TotalInSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, TotalInCategory) == 0x000110, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::TotalInCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CountOwnedInSet) == 0x000114, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CountOwnedInSet' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CountOwnedInCategory) == 0x000118, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CountOwnedInCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Set) == 0x00011C, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Set' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, SetsStats) == 0x000120, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::SetsStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CategoriesStats) == 0x000170, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CategoriesStats' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Datas) == 0x0001C0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Datas' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, PropID) == 0x000210, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::PropID' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Category) == 0x000214, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Category' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, PropDataValues) == 0x000218, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::PropDataValues' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, NewPropClass) == 0x000228, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::NewPropClass' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Variable) == 0x000230, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Loop_Counter_Variable) == 0x000234, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Add_IntInt_ReturnValue) == 0x000238, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Array_Index_Variable) == 0x00023C, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, K2Node_MakeVariable_MakeVariableOutput) == 0x000240, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::K2Node_MakeVariable_MakeVariableOutput' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000290, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Variable_1) == 0x000298, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_GetStatsAndAchievementsManager_Result_1) == 0x0002A0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_GetStatsAndAchievementsManager_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Variable_2) == 0x0002A8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, Temp_int_Variable_3) == 0x0002AC, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002B4, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0002B8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_Value) == 0x0002C0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_ReturnValue) == 0x0002C8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetGSStat_Result) == 0x0002C9, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetGSStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetGSStat_ReturnValue) == 0x0002CA, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetGSStat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetStat_Result) == 0x0002CB, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetStat_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0002D0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_Value_1) == 0x0002D8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_ReturnValue_1) == 0x0002E0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002E4, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetGSStat_Result_1) == 0x0002E8, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetGSStat_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetGSStat_ReturnValue_1) == 0x0002E9, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetGSStat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_SetStat_Result_1) == 0x0002EA, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_SetStat_Result_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002EB, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Add_IntInt_ReturnValue_4) == 0x0002EC, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, K2Node_MakeVariable_MakeVariableOutput_1) == 0x0002F0, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::K2Node_MakeVariable_MakeVariableOutput_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000340, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Contains_ReturnValue) == 0x000341, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Contains_ReturnValue_1) == 0x000342, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_BooleanOR_ReturnValue) == 0x000343, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Values_Values) == 0x000348, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_Value_2) == 0x000358, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Map_Find_ReturnValue_2) == 0x000368, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Array_Get_Item) == 0x000370, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Less_IntInt_ReturnValue) == 0x000384, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000385, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_BooleanAND_ReturnValue) == 0x000386, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000387, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_BooleanAND_ReturnValue_1) == 0x000388, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_HandleNewPropCategoryAndSets, CallFunc_Set_Contains_ReturnValue) == 0x000389, "Member 'B_PlayerPropCollection_C_HandleNewPropCategoryAndSets::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.Initialize
// 0x00F0 (0x00F0 - 0x0000)
struct B_PlayerPropCollection_C_Initialize final
{
public:
	class UGameInstance*                          GameInstance_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PropData>                    CallFunc_Map_Values_Values;                        // 0x00D0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_Initialize) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_Initialize");
static_assert(sizeof(B_PlayerPropCollection_C_Initialize) == 0x0000F0, "Wrong size on B_PlayerPropCollection_C_Initialize");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, GameInstance_0) == 0x000000, "Member 'B_PlayerPropCollection_C_Initialize::GameInstance_0' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, Temp_int_Variable) == 0x000008, "Member 'B_PlayerPropCollection_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'B_PlayerPropCollection_C_Initialize::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, K2Node_MakeArray_Array) == 0x000068, "Member 'B_PlayerPropCollection_C_Initialize::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Format_ReturnValue) == 0x000078, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Conv_StringToName_ReturnValue) == 0x000098, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, K2Node_DynamicCast_AsB_Game_Instance) == 0x0000A0, "Member 'B_PlayerPropCollection_C_Initialize::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'B_PlayerPropCollection_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_GetStatsAndAchievementsManager_Result) == 0x0000B0, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_GetStat_ResultValue) == 0x0000C0, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_GetStat_ResultWasFound) == 0x0000C8, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Map_Values_Values) == 0x0000D0, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0000E0, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_Array_Add_ReturnValue) == 0x0000E4, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_Initialize, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'B_PlayerPropCollection_C_Initialize::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.InitializeGS
// 0x00D0 (0x00D0 - 0x0000)
struct B_PlayerPropCollection_C_InitializeGS final
{
public:
	class UGameInstance*                          GameInstance_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetGSStat_ResultValue;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGSStat_ResultWasFound;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_InitializeGS) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_InitializeGS");
static_assert(sizeof(B_PlayerPropCollection_C_InitializeGS) == 0x0000D0, "Wrong size on B_PlayerPropCollection_C_InitializeGS");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, GameInstance_0) == 0x000000, "Member 'B_PlayerPropCollection_C_InitializeGS::GameInstance_0' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, PlayerState_0) == 0x000008, "Member 'B_PlayerPropCollection_C_InitializeGS::PlayerState_0' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, Temp_int_Variable) == 0x000010, "Member 'B_PlayerPropCollection_C_InitializeGS::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'B_PlayerPropCollection_C_InitializeGS::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, K2Node_MakeArray_Array) == 0x000070, "Member 'B_PlayerPropCollection_C_InitializeGS::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Format_ReturnValue) == 0x000080, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Conv_TextToString_ReturnValue) == 0x000090, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A0, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_GetStatsAndAchievementsManager_Result) == 0x0000A8, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_GetGSStat_ResultValue) == 0x0000B8, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_GetGSStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_GetGSStat_ResultWasFound) == 0x0000C0, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_GetGSStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0000C4, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_InitializeGS, CallFunc_Array_Add_ReturnValue) == 0x0000C8, "Member 'B_PlayerPropCollection_C_InitializeGS::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.LoadOwnedPropIds
// 0x002C (0x002C - 0x0000)
struct B_PlayerPropCollection_C_LoadOwnedPropIds final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBitSet_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_LoadOwnedPropIds) == 0x000004, "Wrong alignment on B_PlayerPropCollection_C_LoadOwnedPropIds");
static_assert(sizeof(B_PlayerPropCollection_C_LoadOwnedPropIds) == 0x00002C, "Wrong size on B_PlayerPropCollection_C_LoadOwnedPropIds");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Multiply_IntInt_ReturnValue) == 0x00000C, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, Temp_int_Variable) == 0x000010, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_IsBitSet_ReturnValue) == 0x00001C, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_IsBitSet_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000025, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_LoadOwnedPropIds, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'B_PlayerPropCollection_C_LoadOwnedPropIds::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_PlayerPropCollection.B_PlayerPropCollection_C.GetStatsAndAchievementsManager
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerPropCollection_C_GetStatsAndAchievementsManager final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerPropCollection_C_GetStatsAndAchievementsManager) == 0x000008, "Wrong alignment on B_PlayerPropCollection_C_GetStatsAndAchievementsManager");
static_assert(sizeof(B_PlayerPropCollection_C_GetStatsAndAchievementsManager) == 0x000018, "Wrong size on B_PlayerPropCollection_C_GetStatsAndAchievementsManager");
static_assert(offsetof(B_PlayerPropCollection_C_GetStatsAndAchievementsManager, Result) == 0x000000, "Member 'B_PlayerPropCollection_C_GetStatsAndAchievementsManager::Result' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_GetStatsAndAchievementsManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_PlayerPropCollection_C_GetStatsAndAchievementsManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerPropCollection_C_GetStatsAndAchievementsManager, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_PlayerPropCollection_C_GetStatsAndAchievementsManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

