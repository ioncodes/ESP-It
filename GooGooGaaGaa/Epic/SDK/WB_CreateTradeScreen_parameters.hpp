#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CreateTradeScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "OnlineSubsystemBlueprints_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.AcceptKeyPressed
// 0x0060 (0x0060 - 0x0000)
struct WB_CreateTradeScreen_C_AcceptKeyPressed final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TradeFriendEntry_C*                 K2Node_DynamicCast_AsWB_Trade_Friend_Entry;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUserObjectListEntry>  K2Node_DynamicCast_AsUser_Object_List_Entry;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListItemSelected_ReturnValue;           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_AcceptKeyPressed) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_AcceptKeyPressed");
static_assert(sizeof(WB_CreateTradeScreen_C_AcceptKeyPressed) == 0x000060, "Wrong size on WB_CreateTradeScreen_C_AcceptKeyPressed");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x000010, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, K2Node_DynamicCast_AsWB_Trade_Friend_Entry) == 0x000038, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::K2Node_DynamicCast_AsWB_Trade_Friend_Entry' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, K2Node_DynamicCast_AsUser_Object_List_Entry) == 0x000048, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::K2Node_DynamicCast_AsUser_Object_List_Entry' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_AcceptKeyPressed, CallFunc_IsListItemSelected_ReturnValue) == 0x000059, "Member 'WB_CreateTradeScreen_C_AcceptKeyPressed::CallFunc_IsListItemSelected_ReturnValue' has a wrong offset!");

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.ExecuteUbergraph_WB_CreateTradeScreen
// 0x0048 (0x0048 - 0x0000)
struct WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsFriendListRetrieved_FriendListRetrieved; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen");
static_assert(sizeof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen) == 0x000048, "Wrong size on WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, EntryPoint) == 0x000000, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, CallFunc_GetBGameInstance_ReturnValue) == 0x000030, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, CallFunc_GetBGameInstance_ReturnValue_1) == 0x000038, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::CallFunc_GetBGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen, CallFunc_GetIsFriendListRetrieved_FriendListRetrieved) == 0x000040, "Member 'WB_CreateTradeScreen_C_ExecuteUbergraph_WB_CreateTradeScreen::CallFunc_GetIsFriendListRetrieved_FriendListRetrieved' has a wrong offset!");

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_CreateTradeScreen_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_GetInitialFocusWidget");
static_assert(sizeof(WB_CreateTradeScreen_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_CreateTradeScreen_C_GetInitialFocusWidget");
static_assert(offsetof(WB_CreateTradeScreen_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_CreateTradeScreen_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.OnPreviewKeyDown
// 0x02D8 (0x02D8 - 0x0000)
struct WB_CreateTradeScreen_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x01E8(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x02A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetGamepadAcceptKey_ReturnValue;          // 0x02B8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_OnPreviewKeyDown");
static_assert(sizeof(WB_CreateTradeScreen_C_OnPreviewKeyDown) == 0x0002D8, "Wrong size on WB_CreateTradeScreen_C_OnPreviewKeyDown");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x0001E8, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0002A0, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, CallFunc_GetGamepadAcceptKey_ReturnValue) == 0x0002B8, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::CallFunc_GetGamepadAcceptKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002D0, "Member 'WB_CreateTradeScreen_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.PopulateList
// 0x00A8 (0x00A8 - 0x0000)
struct WB_CreateTradeScreen_C_PopulateList final
{
public:
	TArray<class UObject*>                        ObjectDataArray;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UB_FriendScreenEntryData_C*             NewFriendEntry;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineFriendRef*                       CurrentFriendRef;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UOnlineFriendRef*>               Friends;                                           // 0x0020(0x0010)(Edit, BlueprintVisible)
	class UOnlineFriendsSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UOnlineFriendRef*>               CallFunc_GetFriendsList_OutFriends;                // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetFriendsList_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetUserAttribute_Found;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetUserAttribute_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* ObjectA, class UObject* ObjectB, bool* Result)> K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_FriendScreenEntryData_C*             CallFunc_CreateObject_Object;                      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineFriendRef*                       CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInviteStatus_                                CallFunc_GetInviteStatus_ReturnValue;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_PopulateList) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_PopulateList");
static_assert(sizeof(WB_CreateTradeScreen_C_PopulateList) == 0x0000A8, "Wrong size on WB_CreateTradeScreen_C_PopulateList");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, ObjectDataArray) == 0x000000, "Member 'WB_CreateTradeScreen_C_PopulateList::ObjectDataArray' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, NewFriendEntry) == 0x000010, "Member 'WB_CreateTradeScreen_C_PopulateList::NewFriendEntry' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CurrentFriendRef) == 0x000018, "Member 'WB_CreateTradeScreen_C_PopulateList::CurrentFriendRef' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, Friends) == 0x000020, "Member 'WB_CreateTradeScreen_C_PopulateList::Friends' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetFriendsList_OutFriends) == 0x000038, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetFriendsList_OutFriends' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetFriendsList_ReturnValue) == 0x000048, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetFriendsList_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'WB_CreateTradeScreen_C_PopulateList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'WB_CreateTradeScreen_C_PopulateList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetUserAttribute_Found) == 0x000054, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetUserAttribute_Found' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetUserAttribute_ReturnValue) == 0x000058, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetUserAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'WB_CreateTradeScreen_C_PopulateList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_CreateObject_Object) == 0x000088, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Array_Get_Item) == 0x000098, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, CallFunc_GetInviteStatus_ReturnValue) == 0x0000A1, "Member 'WB_CreateTradeScreen_C_PopulateList::CallFunc_GetInviteStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_PopulateList, K2Node_SwitchEnum_CmpSuccess) == 0x0000A2, "Member 'WB_CreateTradeScreen_C_PopulateList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_CreateTradeScreen.WB_CreateTradeScreen_C.SortByAscii
// 0x0080 (0x0080 - 0x0000)
struct WB_CreateTradeScreen_C_SortByAscii final
{
public:
	class UObject*                                ObjectA;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectB;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_FriendScreenEntryData_C*             K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data;   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_FriendScreenEntryData_C*             K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue;                      // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToLower_ReturnValue_1;                    // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CompareStringsAlphabetically_AIsLessThanB; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CreateTradeScreen_C_SortByAscii) == 0x000008, "Wrong alignment on WB_CreateTradeScreen_C_SortByAscii");
static_assert(sizeof(WB_CreateTradeScreen_C_SortByAscii) == 0x000080, "Wrong size on WB_CreateTradeScreen_C_SortByAscii");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, ObjectA) == 0x000000, "Member 'WB_CreateTradeScreen_C_SortByAscii::ObjectA' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, ObjectB) == 0x000008, "Member 'WB_CreateTradeScreen_C_SortByAscii::ObjectB' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, Result) == 0x000010, "Member 'WB_CreateTradeScreen_C_SortByAscii::Result' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data) == 0x000018, "Member 'WB_CreateTradeScreen_C_SortByAscii::K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_CreateTradeScreen_C_SortByAscii::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data_1) == 0x000028, "Member 'WB_CreateTradeScreen_C_SortByAscii::K2Node_DynamicCast_AsB_Friend_Screen_Entry_Data_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_CreateTradeScreen_C_SortByAscii::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, CallFunc_GetDisplayName_ReturnValue) == 0x000038, "Member 'WB_CreateTradeScreen_C_SortByAscii::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, CallFunc_GetDisplayName_ReturnValue_1) == 0x000048, "Member 'WB_CreateTradeScreen_C_SortByAscii::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, CallFunc_ToLower_ReturnValue) == 0x000058, "Member 'WB_CreateTradeScreen_C_SortByAscii::CallFunc_ToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, CallFunc_ToLower_ReturnValue_1) == 0x000068, "Member 'WB_CreateTradeScreen_C_SortByAscii::CallFunc_ToLower_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CreateTradeScreen_C_SortByAscii, CallFunc_CompareStringsAlphabetically_AIsLessThanB) == 0x000078, "Member 'WB_CreateTradeScreen_C_SortByAscii::CallFunc_CompareStringsAlphabetically_AIsLessThanB' has a wrong offset!");

}

