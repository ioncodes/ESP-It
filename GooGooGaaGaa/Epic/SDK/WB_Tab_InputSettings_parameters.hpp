#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tab_InputSettings

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertControllerYAxis_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_InvertMouseYAxis_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_InputSettings_C_BndEvt__CheckBox_UseToggleStabilize_K2Node_ComponentBoundEvent_86_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseAimAssist_K2Node_ComponentBoundEvent_5_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_CheckBox_UseToggleCrouch_K2Node_ComponentBoundEvent_4_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_CoyoteTransform_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_BndEvt__WB_Tab_InputSettings_Slider_ScopeModeSensitivity_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.ControllerToSlider
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_ControllerToSlider final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_ControllerToSlider) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_ControllerToSlider");
static_assert(sizeof(WB_Tab_InputSettings_C_ControllerToSlider) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_ControllerToSlider");
static_assert(offsetof(WB_Tab_InputSettings_C_ControllerToSlider, In) == 0x000000, "Member 'WB_Tab_InputSettings_C_ControllerToSlider::In' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ControllerToSlider, Out) == 0x000008, "Member 'WB_Tab_InputSettings_C_ControllerToSlider::Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ControllerToSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_ControllerToSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.ExecuteUbergraph_WB_Tab_InputSettings
// 0x00E8 (0x00E8 - 0x0000)
struct WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender_3;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_3;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMouseYInverted_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerYInverted_ReturnValue;        // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMouseYInverted_ReturnValue_1;           // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerYInverted_ReturnValue_1;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender_4;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_4;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender_2;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_2;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0054(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_bDirty;                           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender_1;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_1;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender;                 // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings");
static_assert(sizeof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings) == 0x0000E8, "Wrong size on WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, EntryPoint) == 0x000000, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_Sender_3) == 0x000008, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_Sender_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_IsChecked_3) == 0x000010, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_IsChecked_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_WidgetGetParentOfClass_ReturnValue) == 0x000018, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_WidgetGetParentOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_WidgetGetParentOfClass_ReturnValue_1) == 0x000028, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_WidgetGetParentOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsMouseYInverted_ReturnValue) == 0x000031, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsMouseYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsControllerYInverted_ReturnValue) == 0x000032, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsControllerYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000033, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000034, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsMouseYInverted_ReturnValue_1) == 0x000035, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsMouseYInverted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsControllerYInverted_ReturnValue_1) == 0x000036, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsControllerYInverted_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_Sender_4) == 0x000038, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_Sender_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_IsChecked_4) == 0x000040, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_IsChecked_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000041, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x000042, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_Sender_2) == 0x000048, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_Sender_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_IsChecked_2) == 0x000050, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_IsChecked_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_Event_MyGeometry) == 0x000054, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_Event_InDeltaTime) == 0x00008C, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000090, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_IsDirty_bDirty) == 0x000098, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_IsDirty_bDirty' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_DynamicCast_AsB_Game_Instance) == 0x0000A0, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_RealValue_1) == 0x0000B0, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_RealValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_RealValue) == 0x0000B8, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_RealValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000C0, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_Sender_1) == 0x0000C8, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_IsChecked_1) == 0x0000D0, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_IsChecked_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_Sender) == 0x0000D8, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings, K2Node_ComponentBoundEvent_IsChecked) == 0x0000E0, "Member 'WB_Tab_InputSettings_C_ExecuteUbergraph_WB_Tab_InputSettings::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.GetInitialFocusWidget
// 0x0038 (0x0038 - 0x0000)
struct WB_Tab_InputSettings_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_GetInitialFocusWidget");
static_assert(sizeof(WB_Tab_InputSettings_C_GetInitialFocusWidget) == 0x000038, "Wrong size on WB_Tab_InputSettings_C_GetInitialFocusWidget");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, Temp_int_Variable) == 0x000008, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000020, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_GetVisibility_ReturnValue) == 0x000031, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000032, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_GetInitialFocusWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_Tab_InputSettings_C_GetInitialFocusWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.GetPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_InputSettings_C_GetPanelWidget final
{
public:
	class UPanelWidget*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_GetPanelWidget) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_GetPanelWidget");
static_assert(sizeof(WB_Tab_InputSettings_C_GetPanelWidget) == 0x000008, "Wrong size on WB_Tab_InputSettings_C_GetPanelWidget");
static_assert(offsetof(WB_Tab_InputSettings_C_GetPanelWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_GetPanelWidget::ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.Initialize
// 0x0060 (0x0060 - 0x0000)
struct WB_Tab_InputSettings_C_Initialize final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerYInverted_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMouseYInverted_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetControllerSensivity_ReturnValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMouseSensivity_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ControllerToSlider_Out;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MouseToSlider_Out;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RoundToStepSize_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RoundToStepSize_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ControllerToSlider_In_ImplicitCast;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MouseToSlider_In_ImplicitCast;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_Initialize) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_Initialize");
static_assert(sizeof(WB_Tab_InputSettings_C_Initialize) == 0x000060, "Wrong size on WB_Tab_InputSettings_C_Initialize");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_Tab_InputSettings_C_Initialize::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_Tab_InputSettings_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000018, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_IsControllerYInverted_ReturnValue) == 0x000020, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_IsControllerYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_IsMouseYInverted_ReturnValue) == 0x000021, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_IsMouseYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_GetControllerSensivity_ReturnValue) == 0x000024, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_GetControllerSensivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_GetMouseSensivity_ReturnValue) == 0x000028, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_GetMouseSensivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_ControllerToSlider_Out) == 0x000030, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_ControllerToSlider_Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_MouseToSlider_Out) == 0x000038, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_MouseToSlider_Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_RoundToStepSize_ReturnValue) == 0x000040, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_RoundToStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_RoundToStepSize_ReturnValue_1) == 0x000048, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_RoundToStepSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_ControllerToSlider_In_ImplicitCast) == 0x000050, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_ControllerToSlider_In_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Initialize, CallFunc_MouseToSlider_In_ImplicitCast) == 0x000058, "Member 'WB_Tab_InputSettings_C_Initialize::CallFunc_MouseToSlider_In_ImplicitCast' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.IsDirty
// 0x0058 (0x0058 - 0x0000)
struct WB_Tab_InputSettings_C_IsDirty final
{
public:
	bool                                          bDirty;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_2;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsControllerYInverted_ReturnValue;        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMouseYInverted_ReturnValue;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_3;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_4;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetControllerSensivity_ReturnValue;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMouseSensivity_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ControllerToSlider_Out;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MouseToSlider_Out;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RoundToStepSize_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RoundToStepSize_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ControllerToSlider_In_ImplicitCast;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MouseToSlider_In_ImplicitCast;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_IsDirty) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_IsDirty");
static_assert(sizeof(WB_Tab_InputSettings_C_IsDirty) == 0x000058, "Wrong size on WB_Tab_InputSettings_C_IsDirty");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, bDirty) == 0x000000, "Member 'WB_Tab_InputSettings_C_IsDirty::bDirty' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000002, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000003, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000004, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_BoolBool_ReturnValue_2) == 0x000005, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_BoolBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_IsControllerYInverted_ReturnValue) == 0x000006, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_IsControllerYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_IsMouseYInverted_ReturnValue) == 0x000007, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_IsMouseYInverted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_BoolBool_ReturnValue_3) == 0x000008, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_BoolBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NotEqual_BoolBool_ReturnValue_4) == 0x000009, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NotEqual_BoolBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_GetControllerSensivity_ReturnValue) == 0x00000C, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_GetControllerSensivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_GetMouseSensivity_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_GetMouseSensivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_ControllerToSlider_Out) == 0x000018, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_ControllerToSlider_Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_MouseToSlider_Out) == 0x000020, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_MouseToSlider_Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_RoundToStepSize_ReturnValue) == 0x000028, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_RoundToStepSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_RoundToStepSize_ReturnValue_1) == 0x000030, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_RoundToStepSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000039, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003B, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_1) == 0x00003D, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_2) == 0x00003E, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_3) == 0x00003F, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_4) == 0x000040, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_5) == 0x000041, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_6) == 0x000042, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_7) == 0x000043, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_BooleanOR_ReturnValue_8) == 0x000044, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_ControllerToSlider_In_ImplicitCast) == 0x000048, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_ControllerToSlider_In_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_IsDirty, CallFunc_MouseToSlider_In_ImplicitCast) == 0x000050, "Member 'WB_Tab_InputSettings_C_IsDirty::CallFunc_MouseToSlider_In_ImplicitCast' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.MouseToSlider
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_MouseToSlider final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_MouseToSlider) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_MouseToSlider");
static_assert(sizeof(WB_Tab_InputSettings_C_MouseToSlider) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_MouseToSlider");
static_assert(offsetof(WB_Tab_InputSettings_C_MouseToSlider, In) == 0x000000, "Member 'WB_Tab_InputSettings_C_MouseToSlider::In' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_MouseToSlider, Out) == 0x000008, "Member 'WB_Tab_InputSettings_C_MouseToSlider::Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_MouseToSlider, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_MouseToSlider::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.NavigateList
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_NavigateList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_NavigateVerticalPanelWidget_WidgetToFocus; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_NavigateList) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_NavigateList");
static_assert(sizeof(WB_Tab_InputSettings_C_NavigateList) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_NavigateList");
static_assert(offsetof(WB_Tab_InputSettings_C_NavigateList, Navigation_0) == 0x000000, "Member 'WB_Tab_InputSettings_C_NavigateList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_NavigateList, ReturnValue) == 0x000008, "Member 'WB_Tab_InputSettings_C_NavigateList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_NavigateList, CallFunc_NavigateVerticalPanelWidget_WidgetToFocus) == 0x000010, "Member 'WB_Tab_InputSettings_C_NavigateList::CallFunc_NavigateVerticalPanelWidget_WidgetToFocus' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.SaveChanges
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_SaveChanges final
{
public:
	double                                        CallFunc_SliderToController_Out;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SliderToMouse_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetControllerSensivity_controllerSensivity_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMouseSensivity_mouseSensivity_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_SaveChanges) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_SaveChanges");
static_assert(sizeof(WB_Tab_InputSettings_C_SaveChanges) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_SaveChanges");
static_assert(offsetof(WB_Tab_InputSettings_C_SaveChanges, CallFunc_SliderToController_Out) == 0x000000, "Member 'WB_Tab_InputSettings_C_SaveChanges::CallFunc_SliderToController_Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SaveChanges, CallFunc_SliderToMouse_ReturnValue) == 0x000008, "Member 'WB_Tab_InputSettings_C_SaveChanges::CallFunc_SliderToMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SaveChanges, CallFunc_SetControllerSensivity_controllerSensivity_ImplicitCast) == 0x000010, "Member 'WB_Tab_InputSettings_C_SaveChanges::CallFunc_SetControllerSensivity_controllerSensivity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SaveChanges, CallFunc_SetMouseSensivity_mouseSensivity_ImplicitCast) == 0x000014, "Member 'WB_Tab_InputSettings_C_SaveChanges::CallFunc_SetMouseSensivity_mouseSensivity_ImplicitCast' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.SetSettingsLabelsForPlatform
// 0x0004 (0x0004 - 0x0000)
struct WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform final
{
public:
	bool                                          CallFunc_SwitchPlatform_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DesktopPlatform_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_XboxOnePlatform_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform) == 0x000001, "Wrong alignment on WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform");
static_assert(sizeof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform) == 0x000004, "Wrong size on WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform, CallFunc_SwitchPlatform_ReturnValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform::CallFunc_SwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform, CallFunc_DesktopPlatform_ReturnValue) == 0x000001, "Member 'WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform::CallFunc_DesktopPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform, CallFunc_XboxOnePlatform_ReturnValue) == 0x000002, "Member 'WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform::CallFunc_XboxOnePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform, CallFunc_Ps4Platform_ReturnValue) == 0x000003, "Member 'WB_Tab_InputSettings_C_SetSettingsLabelsForPlatform::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.SetSettingsVisibilityForPlatform
// 0x0048 (0x0048 - 0x0000)
struct WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform final
{
public:
	TArray<class UUserWidget*>                    SettingsToHideOnConsole;                           // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_XboxOnePlatform_ReturnValue;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DesktopPlatform_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SwitchPlatform_ReturnValue;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform");
static_assert(sizeof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform) == 0x000048, "Wrong size on WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, SettingsToHideOnConsole) == 0x000000, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::SettingsToHideOnConsole' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Ps4Platform_ReturnValue) == 0x000024, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_XboxOnePlatform_ReturnValue) == 0x000025, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_XboxOnePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_DesktopPlatform_ReturnValue) == 0x000026, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_DesktopPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_SwitchPlatform_ReturnValue) == 0x000027, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_SwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, K2Node_MakeArray_Array) == 0x000030, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WB_Tab_InputSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.SliderToController
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_SliderToController final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_SliderToController) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_SliderToController");
static_assert(sizeof(WB_Tab_InputSettings_C_SliderToController) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_SliderToController");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToController, In) == 0x000000, "Member 'WB_Tab_InputSettings_C_SliderToController::In' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToController, Out) == 0x000008, "Member 'WB_Tab_InputSettings_C_SliderToController::Out' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToController, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_SliderToController::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.SliderToMouse
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_InputSettings_C_SliderToMouse final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_SliderToMouse) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_SliderToMouse");
static_assert(sizeof(WB_Tab_InputSettings_C_SliderToMouse) == 0x000018, "Wrong size on WB_Tab_InputSettings_C_SliderToMouse");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToMouse, RealValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_SliderToMouse::RealValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToMouse, ReturnValue) == 0x000008, "Member 'WB_Tab_InputSettings_C_SliderToMouse::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_SliderToMouse, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'WB_Tab_InputSettings_C_SliderToMouse::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.StoreReferences
// 0x0030 (0x0030 - 0x0000)
struct WB_Tab_InputSettings_C_StoreReferences final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_StoreReferences) == 0x000008, "Wrong alignment on WB_Tab_InputSettings_C_StoreReferences");
static_assert(sizeof(WB_Tab_InputSettings_C_StoreReferences) == 0x000030, "Wrong size on WB_Tab_InputSettings_C_StoreReferences");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_Tab_InputSettings_C_StoreReferences::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, CallFunc_GetGameInstance_ReturnValue_1) == 0x000008, "Member 'WB_Tab_InputSettings_C_StoreReferences::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_Tab_InputSettings_C_StoreReferences::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_Tab_InputSettings_C_StoreReferences::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000020, "Member 'WB_Tab_InputSettings_C_StoreReferences::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_StoreReferences, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WB_Tab_InputSettings_C_StoreReferences::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_Tab_InputSettings.WB_Tab_InputSettings_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Tab_InputSettings_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_InputSettings_C_Tick) == 0x000004, "Wrong alignment on WB_Tab_InputSettings_C_Tick");
static_assert(sizeof(WB_Tab_InputSettings_C_Tick) == 0x00003C, "Wrong size on WB_Tab_InputSettings_C_Tick");
static_assert(offsetof(WB_Tab_InputSettings_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Tab_InputSettings_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_InputSettings_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Tab_InputSettings_C_Tick::InDeltaTime' has a wrong offset!");

}

