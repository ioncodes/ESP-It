#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_EventManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "LowEntryJson_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EventTime_structs.hpp"
#include "EventNames_structs.hpp"
#include "S_Event_structs.hpp"


namespace SDK::Params
{

// Function B_EventManager.B_EventManager_C.EventToString
// 0x0030 (0x0030 - 0x0000)
struct B_EventManager_C_EventToString final
{
public:
	EventNames                                    Event;                                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_EventToString) == 0x000008, "Wrong alignment on B_EventManager_C_EventToString");
static_assert(sizeof(B_EventManager_C_EventToString) == 0x000030, "Wrong size on B_EventManager_C_EventToString");
static_assert(offsetof(B_EventManager_C_EventToString, Event) == 0x000000, "Member 'B_EventManager_C_EventToString::Event' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_EventToString, String) == 0x000008, "Member 'B_EventManager_C_EventToString::String' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_EventToString, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_EventManager_C_EventToString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_EventToString, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'B_EventManager_C_EventToString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.ExecuteUbergraph_B_EventManager
// 0x01A8 (0x01A8 - 0x0000)
struct B_EventManager_C_ExecuteUbergraph_B_EventManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_DownloadedString;               // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QueryId;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& DownloadedString, int32 QueryID)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LoadStringFromFile_Result;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadStringFromFile_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetJsonArray_Branch;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     CallFunc_Object_GetJsonArray_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_DownloadedString_1;             // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QueryId_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Key;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A0(0x0048)(HasGetValueTypeHash)
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0100(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& DownloadedString, int32 QueryID)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueFound                       CallFunc_Array_GetJsonValue_Branch;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     CallFunc_Array_GetJsonValue_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonTypeFound                        CallFunc_Value_GetJsonObject_Branch;               // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    CallFunc_Value_GetJsonObject_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseAndAddEvents_Success;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x1];                                      // 0x016B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDownloadStringCallbackProxy*           CallFunc_DownloadString_ReturnValue;               // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_ExecuteUbergraph_B_EventManager) == 0x000008, "Wrong alignment on B_EventManager_C_ExecuteUbergraph_B_EventManager");
static_assert(sizeof(B_EventManager_C_ExecuteUbergraph_B_EventManager) == 0x0001A8, "Wrong size on B_EventManager_C_ExecuteUbergraph_B_EventManager");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, EntryPoint) == 0x000000, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CustomEvent_DownloadedString) == 0x000008, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CustomEvent_DownloadedString' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CustomEvent_QueryId) == 0x000018, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CustomEvent_QueryId' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, Temp_int_Variable) == 0x00002C, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, Temp_string_Variable) == 0x000030, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_LoadStringFromFile_Result) == 0x000040, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_LoadStringFromFile_Result' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_LoadStringFromFile_ReturnValue) == 0x000050, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_LoadStringFromFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Object_GetJsonArray_Branch) == 0x000051, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Object_GetJsonArray_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Object_GetJsonArray_ReturnValue) == 0x000058, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Object_GetJsonArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_SwitchEnum_CmpSuccess) == 0x000064, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_IsValid_ReturnValue) == 0x000065, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CustomEvent_DownloadedString_1) == 0x000068, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CustomEvent_DownloadedString_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CustomEvent_QueryId_1) == 0x000078, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CustomEvent_QueryId_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CustomEvent_Key) == 0x000080, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_MakeStruct_FormatArgumentData) == 0x0000A0, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_Event_InGameInstance) == 0x0000E8, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_Event_InGameInstance' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_MakeArray_Array) == 0x0000F0, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Format_ReturnValue) == 0x000100, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Conv_TextToString_ReturnValue) == 0x000110, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000120, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000130, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000138, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Json_ParseJsonString_Branch) == 0x000140, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000141, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Array_GetJsonValue_Branch) == 0x000148, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Array_GetJsonValue_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Array_GetJsonValue_ReturnValue) == 0x000150, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Array_GetJsonValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Value_GetJsonObject_Branch) == 0x000159, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Value_GetJsonObject_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Value_GetJsonObject_ReturnValue) == 0x000160, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Value_GetJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_ParseAndAddEvents_Success) == 0x000168, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_ParseAndAddEvents_Success' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000169, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x00016A, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_GetGameInstance_ReturnValue) == 0x000170, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000178, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_BuildRestCallUrl_Url) == 0x000188, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_DownloadString_ReturnValue) == 0x000198, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_DownloadString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ExecuteUbergraph_B_EventManager, CallFunc_IsValid_ReturnValue_1) == 0x0001A0, "Member 'B_EventManager_C_ExecuteUbergraph_B_EventManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.GetEventTime
// 0x0050 (0x0050 - 0x0000)
struct B_EventManager_C_GetEventTime final
{
public:
	EventTime                                     EventTimeType;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CurrentTime;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_1;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue_2;  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue_1;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_ConvertLocalDateToUtcDate_Utc;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_GetEventTime) == 0x000008, "Wrong alignment on B_EventManager_C_GetEventTime");
static_assert(sizeof(B_EventManager_C_GetEventTime) == 0x000050, "Wrong size on B_EventManager_C_GetEventTime");
static_assert(offsetof(B_EventManager_C_GetEventTime, EventTimeType) == 0x000000, "Member 'B_EventManager_C_GetEventTime::EventTimeType' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, ReturnValue) == 0x000008, "Member 'B_EventManager_C_GetEventTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CurrentTime) == 0x000010, "Member 'B_EventManager_C_GetEventTime::CurrentTime' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'B_EventManager_C_GetEventTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue_1) == 0x000020, "Member 'B_EventManager_C_GetEventTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Subtract_DateTimeDateTime_ReturnValue_2) == 0x000028, "Member 'B_EventManager_C_GetEventTime::CallFunc_Subtract_DateTimeDateTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000030, "Member 'B_EventManager_C_GetEventTime::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Now_ReturnValue) == 0x000038, "Member 'B_EventManager_C_GetEventTime::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_Less_DateTimeDateTime_ReturnValue_1) == 0x000040, "Member 'B_EventManager_C_GetEventTime::CallFunc_Less_DateTimeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetEventTime, CallFunc_ConvertLocalDateToUtcDate_Utc) == 0x000048, "Member 'B_EventManager_C_GetEventTime::CallFunc_ConvertLocalDateToUtcDate_Utc' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.GetTime
// 0x0050 (0x0050 - 0x0000)
struct B_EventManager_C_GetTime final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Hour;                                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day;                                               // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Month;                                             // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Year;                                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch_1;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue_1;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch_2;               // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue_2;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch_3;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue_3;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_GetTime) == 0x000008, "Wrong alignment on B_EventManager_C_GetTime");
static_assert(sizeof(B_EventManager_C_GetTime) == 0x000050, "Wrong size on B_EventManager_C_GetTime");
static_assert(offsetof(B_EventManager_C_GetTime, JsonObject) == 0x000000, "Member 'B_EventManager_C_GetTime::JsonObject' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, ReturnValue) == 0x000008, "Member 'B_EventManager_C_GetTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, Hour) == 0x000010, "Member 'B_EventManager_C_GetTime::Hour' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, Day) == 0x000014, "Member 'B_EventManager_C_GetTime::Day' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, Month) == 0x000018, "Member 'B_EventManager_C_GetTime::Month' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, Year) == 0x00001C, "Member 'B_EventManager_C_GetTime::Year' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_Branch) == 0x000020, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_ReturnValue) == 0x000024, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_Branch_1) == 0x000028, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_Branch_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_ReturnValue_1) == 0x00002C, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'B_EventManager_C_GetTime::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, K2Node_SwitchEnum_CmpSuccess_1) == 0x000031, "Member 'B_EventManager_C_GetTime::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_Branch_2) == 0x000032, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_Branch_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_ReturnValue_2) == 0x000034, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_Branch_3) == 0x000038, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_Branch_3' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_Object_GetInteger_ReturnValue_3) == 0x00003C, "Member 'B_EventManager_C_GetTime::CallFunc_Object_GetInteger_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, K2Node_SwitchEnum_CmpSuccess_2) == 0x000040, "Member 'B_EventManager_C_GetTime::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, K2Node_SwitchEnum_CmpSuccess_3) == 0x000041, "Member 'B_EventManager_C_GetTime::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_GetTime, CallFunc_MakeDateTime_ReturnValue) == 0x000048, "Member 'B_EventManager_C_GetTime::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_EventManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_Initialize) == 0x000008, "Wrong alignment on B_EventManager_C_Initialize");
static_assert(sizeof(B_EventManager_C_Initialize) == 0x000008, "Wrong size on B_EventManager_C_Initialize");
static_assert(offsetof(B_EventManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_EventManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.LogRetrieveWarning
// 0x0010 (0x0010 - 0x0000)
struct B_EventManager_C_LogRetrieveWarning final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_LogRetrieveWarning) == 0x000008, "Wrong alignment on B_EventManager_C_LogRetrieveWarning");
static_assert(sizeof(B_EventManager_C_LogRetrieveWarning) == 0x000010, "Wrong size on B_EventManager_C_LogRetrieveWarning");
static_assert(offsetof(B_EventManager_C_LogRetrieveWarning, Key) == 0x000000, "Member 'B_EventManager_C_LogRetrieveWarning::Key' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8
// 0x0018 (0x0018 - 0x0000)
struct B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8 final
{
public:
	class FString                                 DownloadedString;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         QueryID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8) == 0x000008, "Wrong alignment on B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8");
static_assert(sizeof(B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8) == 0x000018, "Wrong size on B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8");
static_assert(offsetof(B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8, DownloadedString) == 0x000000, "Member 'B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8::DownloadedString' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8, QueryID) == 0x000010, "Member 'B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8::QueryID' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8
// 0x0018 (0x0018 - 0x0000)
struct B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8 final
{
public:
	class FString                                 DownloadedString;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         QueryID;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8) == 0x000008, "Wrong alignment on B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8");
static_assert(sizeof(B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8) == 0x000018, "Wrong size on B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8");
static_assert(offsetof(B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8, DownloadedString) == 0x000000, "Member 'B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8::DownloadedString' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8, QueryID) == 0x000010, "Member 'B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8::QueryID' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.ParseAndAddEvents
// 0x0090 (0x0090 - 0x0000)
struct B_EventManager_C_ParseAndAddEvents final
{
public:
	class ULowEntryJsonObject*                    JsonEvent;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundError;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetJsonObject_Branch;              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    CallFunc_Object_GetJsonObject_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetTime_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetJsonObject_Branch_1;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    CallFunc_Object_GetJsonObject_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_GetTime_ReturnValue_1;                    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EventNames                                    CallFunc_StringToEvent_Event;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Event                               K2Node_MakeStruct_S_Event;                         // 0x0058(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_ConvertLocalDateToUtcDate_Utc;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DateTimeDateTime_ReturnValue;     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_ParseAndAddEvents) == 0x000008, "Wrong alignment on B_EventManager_C_ParseAndAddEvents");
static_assert(sizeof(B_EventManager_C_ParseAndAddEvents) == 0x000090, "Wrong size on B_EventManager_C_ParseAndAddEvents");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, JsonEvent) == 0x000000, "Member 'B_EventManager_C_ParseAndAddEvents::JsonEvent' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, Success) == 0x000008, "Member 'B_EventManager_C_ParseAndAddEvents::Success' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, FoundError) == 0x000009, "Member 'B_EventManager_C_ParseAndAddEvents::FoundError' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetJsonObject_Branch) == 0x00000B, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetJsonObject_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetJsonObject_ReturnValue) == 0x000010, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_GetTime_ReturnValue) == 0x000018, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_GetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'B_EventManager_C_ParseAndAddEvents::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetJsonObject_Branch_1) == 0x000021, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetJsonObject_Branch_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetJsonObject_ReturnValue_1) == 0x000028, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetJsonObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_GetTime_ReturnValue_1) == 0x000030, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_GetTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, K2Node_SwitchEnum_CmpSuccess_1) == 0x000039, "Member 'B_EventManager_C_ParseAndAddEvents::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetString_Branch) == 0x00003A, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Object_GetString_ReturnValue) == 0x000040, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_StringToEvent_Event) == 0x000050, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_StringToEvent_Event' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, K2Node_SwitchEnum_CmpSuccess_2) == 0x000051, "Member 'B_EventManager_C_ParseAndAddEvents::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, K2Node_MakeStruct_S_Event) == 0x000058, "Member 'B_EventManager_C_ParseAndAddEvents::K2Node_MakeStruct_S_Event' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000070, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000071, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_BooleanAND_ReturnValue) == 0x000072, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Now_ReturnValue) == 0x000078, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_ConvertLocalDateToUtcDate_Utc) == 0x000080, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_ConvertLocalDateToUtcDate_Utc' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Greater_DateTimeDateTime_ReturnValue) == 0x000088, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Greater_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000089, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_BooleanOR_ReturnValue) == 0x00008A, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_ParseAndAddEvents, CallFunc_Not_PreBool_ReturnValue_1) == 0x00008B, "Member 'B_EventManager_C_ParseAndAddEvents::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function B_EventManager.B_EventManager_C.StringToEvent
// 0x0068 (0x0068 - 0x0000)
struct B_EventManager_C_StringToEvent final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EventNames                                    Event;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EventNames>                            CallFunc_Map_Keys_Keys;                            // 0x0020(0x0010)(ReferenceParm)
	TArray<class FString>                         CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ReferenceParm)
	EventNames                                    CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_EventManager_C_StringToEvent) == 0x000008, "Wrong alignment on B_EventManager_C_StringToEvent");
static_assert(sizeof(B_EventManager_C_StringToEvent) == 0x000068, "Wrong size on B_EventManager_C_StringToEvent");
static_assert(offsetof(B_EventManager_C_StringToEvent, String) == 0x000000, "Member 'B_EventManager_C_StringToEvent::String' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, Event) == 0x000010, "Member 'B_EventManager_C_StringToEvent::Event' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, Temp_int_Array_Index_Variable) == 0x000014, "Member 'B_EventManager_C_StringToEvent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_EventManager_C_StringToEvent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'B_EventManager_C_StringToEvent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Map_Keys_Keys) == 0x000020, "Member 'B_EventManager_C_StringToEvent::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Map_Values_Values) == 0x000030, "Member 'B_EventManager_C_StringToEvent::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_EventManager_C_StringToEvent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'B_EventManager_C_StringToEvent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000058, "Member 'B_EventManager_C_StringToEvent::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'B_EventManager_C_StringToEvent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_EventManager_C_StringToEvent, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'B_EventManager_C_StringToEvent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

