#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerListCreative

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_CreativePlayerMode_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_PlayerListCreative.WB_PlayerListCreative_C.ExecuteUbergraph_WB_PlayerListCreative
// 0x0004 (0x0004 - 0x0000)
struct WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative) == 0x000004, "Wrong alignment on WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative");
static_assert(sizeof(WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative) == 0x000004, "Wrong size on WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative");
static_assert(offsetof(WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative, EntryPoint) == 0x000000, "Member 'WB_PlayerListCreative_C_ExecuteUbergraph_WB_PlayerListCreative::EntryPoint' has a wrong offset!");

// Function WB_PlayerListCreative.WB_PlayerListCreative_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_PlayerListCreative_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListCreative_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_PlayerListCreative_C_GetInitialFocusWidget");
static_assert(sizeof(WB_PlayerListCreative_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_PlayerListCreative_C_GetInitialFocusWidget");
static_assert(offsetof(WB_PlayerListCreative_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_PlayerListCreative_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_PlayerListCreative.WB_PlayerListCreative_C.GetRadialmenuVisibility
// 0x0006 (0x0006 - 0x0000)
struct WB_PlayerListCreative_C_GetRadialmenuVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListCreative_C_GetRadialmenuVisibility) == 0x000001, "Wrong alignment on WB_PlayerListCreative_C_GetRadialmenuVisibility");
static_assert(sizeof(WB_PlayerListCreative_C_GetRadialmenuVisibility) == 0x000006, "Wrong size on WB_PlayerListCreative_C_GetRadialmenuVisibility");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, ReturnValue) == 0x000000, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, Temp_bool_Variable) == 0x000001, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, Temp_byte_Variable) == 0x000002, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetRadialmenuVisibility, K2Node_Select_Default) == 0x000005, "Member 'WB_PlayerListCreative_C_GetRadialmenuVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_PlayerListCreative.WB_PlayerListCreative_C.Initialize
// 0x0078 (0x0078 - 0x0000)
struct WB_PlayerListCreative_C_Initialize final
{
public:
	E_CreativePlayerMode                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListCreative_C_Initialize) == 0x000008, "Wrong alignment on WB_PlayerListCreative_C_Initialize");
static_assert(sizeof(WB_PlayerListCreative_C_Initialize) == 0x000078, "Wrong size on WB_PlayerListCreative_C_Initialize");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, Temp_byte_Variable) == 0x000000, "Member 'WB_PlayerListCreative_C_Initialize::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, Temp_int_Variable) == 0x000004, "Member 'WB_PlayerListCreative_C_Initialize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, Temp_int_Variable_1) == 0x000008, "Member 'WB_PlayerListCreative_C_Initialize::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, Temp_int_Variable_2) == 0x00000C, "Member 'WB_PlayerListCreative_C_Initialize::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, Temp_int_Variable_3) == 0x000010, "Member 'WB_PlayerListCreative_C_Initialize::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_BreakVector2D_X) == 0x000028, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, K2Node_Select_Default) == 0x000038, "Member 'WB_PlayerListCreative_C_Initialize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_Round_ReturnValue) == 0x000048, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_Round_ReturnValue_1) == 0x000058, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'WB_PlayerListCreative_C_Initialize::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000068, "Member 'WB_PlayerListCreative_C_Initialize::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WB_PlayerListCreative_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_PlayerListCreative.WB_PlayerListCreative_C.GetSelectedPlayerMode
// 0x0002 (0x0002 - 0x0000)
struct WB_PlayerListCreative_C_GetSelectedPlayerMode final
{
public:
	E_CreativePlayerMode                          SelectedPlayerMode;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListCreative_C_GetSelectedPlayerMode) == 0x000001, "Wrong alignment on WB_PlayerListCreative_C_GetSelectedPlayerMode");
static_assert(sizeof(WB_PlayerListCreative_C_GetSelectedPlayerMode) == 0x000002, "Wrong size on WB_PlayerListCreative_C_GetSelectedPlayerMode");
static_assert(offsetof(WB_PlayerListCreative_C_GetSelectedPlayerMode, SelectedPlayerMode) == 0x000000, "Member 'WB_PlayerListCreative_C_GetSelectedPlayerMode::SelectedPlayerMode' has a wrong offset!");
static_assert(offsetof(WB_PlayerListCreative_C_GetSelectedPlayerMode, K2Node_SwitchInteger_CmpSuccess) == 0x000001, "Member 'WB_PlayerListCreative_C_GetSelectedPlayerMode::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");

}

