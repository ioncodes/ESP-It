#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MatchOptions

#include "Basic.hpp"

#include "B_MatchOptions_classes.hpp"
#include "B_MatchOptions_parameters.hpp"


namespace SDK
{

// Function B_MatchOptions.B_MatchOptions_C.CopyMatchOptions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_MatchOptions_C*                OptionsToCopy                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_MatchOptions_C::CopyMatchOptions(class UB_MatchOptions_C* OptionsToCopy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchOptions_C", "CopyMatchOptions");

	Params::B_MatchOptions_C_CopyMatchOptions Parms{};

	Parms.OptionsToCopy = OptionsToCopy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MatchOptions.B_MatchOptions_C.GetGameRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UB_GameRules_C*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UB_GameRules_C* UB_MatchOptions_C::GetGameRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchOptions_C", "GetGameRules");

	Params::B_MatchOptions_C_GetGameRules Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_MatchOptions.B_MatchOptions_C.SetGameMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           GameModeClass                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_MatchOptions_C::SetGameMode(class UClass* GameModeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchOptions_C", "SetGameMode");

	Params::B_MatchOptions_C_SetGameMode Parms{};

	Parms.GameModeClass = GameModeClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MatchOptions.B_MatchOptions_C.IsSpecialGameModeSelected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    SpecialGameModeSelected                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MatchOptions_C::IsSpecialGameModeSelected(bool* SpecialGameModeSelected) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchOptions_C", "IsSpecialGameModeSelected");

	Params::B_MatchOptions_C_IsSpecialGameModeSelected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialGameModeSelected != nullptr)
		*SpecialGameModeSelected = Parms.SpecialGameModeSelected;
}

}

