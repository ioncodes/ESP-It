#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ChatManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EChatRelationship_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AdvancedSessions_structs.hpp"


namespace SDK::Params
{

// Function B_ChatManager.B_ChatManager_C.ChangeChatRelationship
// 0x0260 (0x0260 - 0x0000)
struct B_ChatManager_C_ChangeChatRelationship final
{
public:
	class APlayerState*                           OtherPlayerState;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EChatRelationship                             ChatRelationship;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Value;                                         // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RelationshipPosition;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RelationshipBitmask;                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UniqueNetId;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          NewValue;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatRelationship                             Relationship;                                      // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           OtherPlayer;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0038(0x0010)()
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0048)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A0(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0048)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0108(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_ClearBit_ReturnValue;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SetBit_ReturnValue;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0168(0x0020)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01F8(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x021C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x022C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x024C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ChangeChatRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_ChangeChatRelationship");
static_assert(sizeof(B_ChatManager_C_ChangeChatRelationship) == 0x000260, "Wrong size on B_ChatManager_C_ChangeChatRelationship");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, OtherPlayerState) == 0x000000, "Member 'B_ChatManager_C_ChangeChatRelationship::OtherPlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, ChatRelationship) == 0x000008, "Member 'B_ChatManager_C_ChangeChatRelationship::ChatRelationship' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, New_Value) == 0x000009, "Member 'B_ChatManager_C_ChangeChatRelationship::New_Value' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, RelationshipPosition) == 0x00000C, "Member 'B_ChatManager_C_ChangeChatRelationship::RelationshipPosition' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, RelationshipBitmask) == 0x000010, "Member 'B_ChatManager_C_ChangeChatRelationship::RelationshipBitmask' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, UniqueNetId) == 0x000018, "Member 'B_ChatManager_C_ChangeChatRelationship::UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, NewValue) == 0x000028, "Member 'B_ChatManager_C_ChangeChatRelationship::NewValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, Relationship) == 0x000029, "Member 'B_ChatManager_C_ChangeChatRelationship::Relationship' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, OtherPlayer) == 0x000030, "Member 'B_ChatManager_C_ChangeChatRelationship::OtherPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_BoolToText_ReturnValue) == 0x000038, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_GetPlayerName_ReturnValue) == 0x000048, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A0, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0000F8, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000108, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_ClearBit_ReturnValue) == 0x000160, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_ClearBit_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_SetBit_ReturnValue) == 0x000164, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_SetBit_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000168, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000188, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_UniqueNetIdToString_String) == 0x000190, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_MakeArray_Array) == 0x0001E8, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Format_ReturnValue) == 0x0001F8, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_TextToString_ReturnValue) == 0x000208, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000218, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, Temp_struct_Variable) == 0x00021C, "Member 'B_ChatManager_C_ChangeChatRelationship::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, Temp_struct_Variable_1) == 0x00022C, "Member 'B_ChatManager_C_ChangeChatRelationship::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00023C, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, Temp_bool_Variable) == 0x000241, "Member 'B_ChatManager_C_ChangeChatRelationship::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Map_Find_Value) == 0x000244, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, CallFunc_Map_Find_ReturnValue) == 0x000248, "Member 'B_ChatManager_C_ChangeChatRelationship::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ChangeChatRelationship, K2Node_Select_Default) == 0x00024C, "Member 'B_ChatManager_C_ChangeChatRelationship::K2Node_Select_Default' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.EnforcePTT_State
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_EnforcePTT_State final
{
public:
	class APlayerController*                      LocalPlayerController;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_EnforcePTT_State) == 0x000008, "Wrong alignment on B_ChatManager_C_EnforcePTT_State");
static_assert(sizeof(B_ChatManager_C_EnforcePTT_State) == 0x000008, "Wrong size on B_ChatManager_C_EnforcePTT_State");
static_assert(offsetof(B_ChatManager_C_EnforcePTT_State, LocalPlayerController) == 0x000000, "Member 'B_ChatManager_C_EnforcePTT_State::LocalPlayerController' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.ExecuteUbergraph_B_ChatManager
// 0x0048 (0x0048 - 0x0000)
struct B_ChatManager_C_ExecuteUbergraph_B_ChatManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bVoiceChatEnabled;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsTalking;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState_2;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_PlayerState_1;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager) == 0x000008, "Wrong alignment on B_ChatManager_C_ExecuteUbergraph_B_ChatManager");
static_assert(sizeof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager) == 0x000048, "Wrong size on B_ChatManager_C_ExecuteUbergraph_B_ChatManager");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, EntryPoint) == 0x000000, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, CallFunc_Now_ReturnValue) == 0x000008, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_CustomEvent_bVoiceChatEnabled) == 0x000023, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_CustomEvent_bVoiceChatEnabled' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, CallFunc_IsValid_ReturnValue_3) == 0x000024, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_CustomEvent_bIsTalking) == 0x000025, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_CustomEvent_bIsTalking' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_CustomEvent_PlayerState_2) == 0x000028, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_CustomEvent_PlayerState_2' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_CustomEvent_PlayerState_1) == 0x000030, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_CustomEvent_PlayerState_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_CustomEvent_PlayerState) == 0x000038, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ExecuteUbergraph_B_ChatManager, K2Node_Event_InGameInstance) == 0x000040, "Member 'B_ChatManager_C_ExecuteUbergraph_B_ChatManager::K2Node_Event_InGameInstance' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.HandlePlayerJoined
// 0x0030 (0x0030 - 0x0000)
struct B_ChatManager_C_HandlePlayerJoined final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0008(0x0020)()
	bool                                          CallFunc_UnRegisterRemoteTalker_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_HandlePlayerJoined) == 0x000008, "Wrong alignment on B_ChatManager_C_HandlePlayerJoined");
static_assert(sizeof(B_ChatManager_C_HandlePlayerJoined) == 0x000030, "Wrong size on B_ChatManager_C_HandlePlayerJoined");
static_assert(offsetof(B_ChatManager_C_HandlePlayerJoined, PlayerState) == 0x000000, "Member 'B_ChatManager_C_HandlePlayerJoined::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePlayerJoined, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000008, "Member 'B_ChatManager_C_HandlePlayerJoined::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePlayerJoined, CallFunc_UnRegisterRemoteTalker_ReturnValue) == 0x000028, "Member 'B_ChatManager_C_HandlePlayerJoined::CallFunc_UnRegisterRemoteTalker_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePlayerJoined, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'B_ChatManager_C_HandlePlayerJoined::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.HandlePlayerLeft
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_HandlePlayerLeft final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_HandlePlayerLeft) == 0x000008, "Wrong alignment on B_ChatManager_C_HandlePlayerLeft");
static_assert(sizeof(B_ChatManager_C_HandlePlayerLeft) == 0x000008, "Wrong size on B_ChatManager_C_HandlePlayerLeft");
static_assert(offsetof(B_ChatManager_C_HandlePlayerLeft, PlayerState) == 0x000000, "Member 'B_ChatManager_C_HandlePlayerLeft::PlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.HandlePushToTalkChanged
// 0x0005 (0x0005 - 0x0000)
struct B_ChatManager_C_HandlePushToTalkChanged final
{
public:
	bool                                          bIsTalking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLocalIsTalking;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterLocalTalker_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_HandlePushToTalkChanged) == 0x000001, "Wrong alignment on B_ChatManager_C_HandlePushToTalkChanged");
static_assert(sizeof(B_ChatManager_C_HandlePushToTalkChanged) == 0x000005, "Wrong size on B_ChatManager_C_HandlePushToTalkChanged");
static_assert(offsetof(B_ChatManager_C_HandlePushToTalkChanged, bIsTalking) == 0x000000, "Member 'B_ChatManager_C_HandlePushToTalkChanged::bIsTalking' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePushToTalkChanged, bLocalIsTalking) == 0x000001, "Member 'B_ChatManager_C_HandlePushToTalkChanged::bLocalIsTalking' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePushToTalkChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'B_ChatManager_C_HandlePushToTalkChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePushToTalkChanged, CallFunc_RegisterLocalTalker_ReturnValue) == 0x000003, "Member 'B_ChatManager_C_HandlePushToTalkChanged::CallFunc_RegisterLocalTalker_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_HandlePushToTalkChanged, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_ChatManager_C_HandlePushToTalkChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_Initialize) == 0x000008, "Wrong alignment on B_ChatManager_C_Initialize");
static_assert(sizeof(B_ChatManager_C_Initialize) == 0x000008, "Wrong size on B_ChatManager_C_Initialize");
static_assert(offsetof(B_ChatManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_ChatManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.InitialRelationshipCheck
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_InitialRelationshipCheck final
{
public:
	class APlayerState*                           OtherPlayerState;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_InitialRelationshipCheck) == 0x000008, "Wrong alignment on B_ChatManager_C_InitialRelationshipCheck");
static_assert(sizeof(B_ChatManager_C_InitialRelationshipCheck) == 0x000008, "Wrong size on B_ChatManager_C_InitialRelationshipCheck");
static_assert(offsetof(B_ChatManager_C_InitialRelationshipCheck, OtherPlayerState) == 0x000000, "Member 'B_ChatManager_C_InitialRelationshipCheck::OtherPlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.InitPlayerRelationship
// 0x0010 (0x0010 - 0x0000)
struct B_ChatManager_C_InitPlayerRelationship final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           Player;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_InitPlayerRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_InitPlayerRelationship");
static_assert(sizeof(B_ChatManager_C_InitPlayerRelationship) == 0x000010, "Wrong size on B_ChatManager_C_InitPlayerRelationship");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationship, PlayerState) == 0x000000, "Member 'B_ChatManager_C_InitPlayerRelationship::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationship, Player) == 0x000008, "Member 'B_ChatManager_C_InitPlayerRelationship::Player' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.InitPlayerRelationships
// 0x0048 (0x0048 - 0x0000)
struct B_ChatManager_C_InitPlayerRelationships final
{
public:
	class AB_PlayerState_C*                       CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_InitPlayerRelationships) == 0x000008, "Wrong alignment on B_ChatManager_C_InitPlayerRelationships");
static_assert(sizeof(B_ChatManager_C_InitPlayerRelationships) == 0x000048, "Wrong size on B_ChatManager_C_InitPlayerRelationships");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CurrentPlayer) == 0x000000, "Member 'B_ChatManager_C_InitPlayerRelationships::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ChatManager_C_InitPlayerRelationships::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_ChatManager_C_InitPlayerRelationships::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, K2Node_DynamicCast_AsB_Player_State) == 0x000030, "Member 'B_ChatManager_C_InitPlayerRelationships::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_ChatManager_C_InitPlayerRelationships::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_InitPlayerRelationships, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'B_ChatManager_C_InitPlayerRelationships::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.IsPushToTalkKeyDown
// 0x0080 (0x0080 - 0x0000)
struct B_ChatManager_C_IsPushToTalkKeyDown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerPC;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         PTT_Bindings;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ChatManager_C_IsPushToTalkKeyDown) == 0x000008, "Wrong alignment on B_ChatManager_C_IsPushToTalkKeyDown");
static_assert(sizeof(B_ChatManager_C_IsPushToTalkKeyDown) == 0x000080, "Wrong size on B_ChatManager_C_IsPushToTalkKeyDown");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, ReturnValue) == 0x000000, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, PlayerPC) == 0x000008, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::PlayerPC' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, PTT_Bindings) == 0x000010, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::PTT_Bindings' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_IsInputKeyDown_ReturnValue) == 0x00005D, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000060, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_MakeLiteralName_ReturnValue) == 0x000068, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_IsPushToTalkKeyDown, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000070, "Member 'B_ChatManager_C_IsPushToTalkKeyDown::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.OnPlayerJoined
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_OnPlayerJoined final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_OnPlayerJoined) == 0x000008, "Wrong alignment on B_ChatManager_C_OnPlayerJoined");
static_assert(sizeof(B_ChatManager_C_OnPlayerJoined) == 0x000008, "Wrong size on B_ChatManager_C_OnPlayerJoined");
static_assert(offsetof(B_ChatManager_C_OnPlayerJoined, PlayerState) == 0x000000, "Member 'B_ChatManager_C_OnPlayerJoined::PlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.OnPlayerLeft
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_OnPlayerLeft final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_OnPlayerLeft) == 0x000008, "Wrong alignment on B_ChatManager_C_OnPlayerLeft");
static_assert(sizeof(B_ChatManager_C_OnPlayerLeft) == 0x000008, "Wrong size on B_ChatManager_C_OnPlayerLeft");
static_assert(offsetof(B_ChatManager_C_OnPlayerLeft, PlayerState) == 0x000000, "Member 'B_ChatManager_C_OnPlayerLeft::PlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.OnPlayerStateInitialized
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_OnPlayerStateInitialized final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_OnPlayerStateInitialized) == 0x000008, "Wrong alignment on B_ChatManager_C_OnPlayerStateInitialized");
static_assert(sizeof(B_ChatManager_C_OnPlayerStateInitialized) == 0x000008, "Wrong size on B_ChatManager_C_OnPlayerStateInitialized");
static_assert(offsetof(B_ChatManager_C_OnPlayerStateInitialized, PlayerState) == 0x000000, "Member 'B_ChatManager_C_OnPlayerStateInitialized::PlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.OnPushToTalkChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct B_ChatManager_C_OnPushToTalkChanged_Event final
{
public:
	bool                                          bIsTalking;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_OnPushToTalkChanged_Event) == 0x000001, "Wrong alignment on B_ChatManager_C_OnPushToTalkChanged_Event");
static_assert(sizeof(B_ChatManager_C_OnPushToTalkChanged_Event) == 0x000001, "Wrong size on B_ChatManager_C_OnPushToTalkChanged_Event");
static_assert(offsetof(B_ChatManager_C_OnPushToTalkChanged_Event, bIsTalking) == 0x000000, "Member 'B_ChatManager_C_OnPushToTalkChanged_Event::bIsTalking' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.OnVoiceChatToggled
// 0x0001 (0x0001 - 0x0000)
struct B_ChatManager_C_OnVoiceChatToggled final
{
public:
	bool                                          bVoiceChatEnabled_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_OnVoiceChatToggled) == 0x000001, "Wrong alignment on B_ChatManager_C_OnVoiceChatToggled");
static_assert(sizeof(B_ChatManager_C_OnVoiceChatToggled) == 0x000001, "Wrong size on B_ChatManager_C_OnVoiceChatToggled");
static_assert(offsetof(B_ChatManager_C_OnVoiceChatToggled, bVoiceChatEnabled_0) == 0x000000, "Member 'B_ChatManager_C_OnVoiceChatToggled::bVoiceChatEnabled_0' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.ReceiveGameChat
// 0x0050 (0x0050 - 0x0000)
struct B_ChatManager_C_ReceiveGameChat final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0010(0x0020)()
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ReceiveGameChat) == 0x000008, "Wrong alignment on B_ChatManager_C_ReceiveGameChat");
static_assert(sizeof(B_ChatManager_C_ReceiveGameChat) == 0x000050, "Wrong size on B_ChatManager_C_ReceiveGameChat");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, PlayerState) == 0x000000, "Member 'B_ChatManager_C_ReceiveGameChat::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, ReturnValue) == 0x000008, "Member 'B_ChatManager_C_ReceiveGameChat::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_MakeLiteralInt_ReturnValue) == 0x00000C, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000010, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_UniqueNetIdToString_String) == 0x000030, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_Map_Find_Value) == 0x000040, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_Map_Find_ReturnValue) == 0x000044, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_And_IntInt_ReturnValue) == 0x000048, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveGameChat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'B_ChatManager_C_ReceiveGameChat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.ReceiveVoiceChat
// 0x0050 (0x0050 - 0x0000)
struct B_ChatManager_C_ReceiveVoiceChat final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0010(0x0020)()
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ReceiveVoiceChat) == 0x000008, "Wrong alignment on B_ChatManager_C_ReceiveVoiceChat");
static_assert(sizeof(B_ChatManager_C_ReceiveVoiceChat) == 0x000050, "Wrong size on B_ChatManager_C_ReceiveVoiceChat");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, PlayerState) == 0x000000, "Member 'B_ChatManager_C_ReceiveVoiceChat::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, ReturnValue) == 0x000008, "Member 'B_ChatManager_C_ReceiveVoiceChat::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_MakeLiteralInt_ReturnValue) == 0x00000C, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000010, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_UniqueNetIdToString_String) == 0x000030, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_Map_Find_Value) == 0x000040, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_Map_Find_ReturnValue) == 0x000044, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_And_IntInt_ReturnValue) == 0x000048, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ReceiveVoiceChat, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'B_ChatManager_C_ReceiveVoiceChat::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.SetMyPlayerState
// 0x0020 (0x0020 - 0x0000)
struct B_ChatManager_C_SetMyPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       LocalPlayerState;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_SetMyPlayerState) == 0x000008, "Wrong alignment on B_ChatManager_C_SetMyPlayerState");
static_assert(sizeof(B_ChatManager_C_SetMyPlayerState) == 0x000020, "Wrong size on B_ChatManager_C_SetMyPlayerState");
static_assert(offsetof(B_ChatManager_C_SetMyPlayerState, PlayerState) == 0x000000, "Member 'B_ChatManager_C_SetMyPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetMyPlayerState, LocalPlayerState) == 0x000008, "Member 'B_ChatManager_C_SetMyPlayerState::LocalPlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetMyPlayerState, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'B_ChatManager_C_SetMyPlayerState::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetMyPlayerState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ChatManager_C_SetMyPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetMyPlayerState, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000019, "Member 'B_ChatManager_C_SetMyPlayerState::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.SetVoiceChatStatus
// 0x0038 (0x0038 - 0x0000)
struct B_ChatManager_C_SetVoiceChatStatus final
{
public:
	bool                                          bVoiceChatEnabled_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_SetVoiceChatStatus) == 0x000004, "Wrong alignment on B_ChatManager_C_SetVoiceChatStatus");
static_assert(sizeof(B_ChatManager_C_SetVoiceChatStatus) == 0x000038, "Wrong size on B_ChatManager_C_SetVoiceChatStatus");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, bVoiceChatEnabled_0) == 0x000000, "Member 'B_ChatManager_C_SetVoiceChatStatus::bVoiceChatEnabled_0' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, Temp_struct_Variable) == 0x000004, "Member 'B_ChatManager_C_SetVoiceChatStatus::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, Temp_struct_Variable_1) == 0x000014, "Member 'B_ChatManager_C_SetVoiceChatStatus::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, Temp_bool_Variable) == 0x000024, "Member 'B_ChatManager_C_SetVoiceChatStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000025, "Member 'B_ChatManager_C_SetVoiceChatStatus::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_SetVoiceChatStatus, K2Node_Select_Default) == 0x000028, "Member 'B_ChatManager_C_SetVoiceChatStatus::K2Node_Select_Default' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.ShouldBeGameplayMuted
// 0x0030 (0x0030 - 0x0000)
struct B_ChatManager_C_ShouldBeGameplayMuted final
{
public:
	class APlayerState*                           MyPlayer;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           OtherPlayer;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamCheck_bSameTeam;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldTeamVoiceBeEnabled_ReturnValue;     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ShouldBeGameplayMuted) == 0x000008, "Wrong alignment on B_ChatManager_C_ShouldBeGameplayMuted");
static_assert(sizeof(B_ChatManager_C_ShouldBeGameplayMuted) == 0x000030, "Wrong size on B_ChatManager_C_ShouldBeGameplayMuted");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, MyPlayer) == 0x000000, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::MyPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, OtherPlayer) == 0x000008, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::OtherPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, ReturnValue) == 0x000010, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, CallFunc_TeamCheck_bSameTeam) == 0x000029, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::CallFunc_TeamCheck_bSameTeam' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, CallFunc_ShouldTeamVoiceBeEnabled_ReturnValue) == 0x00002A, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::CallFunc_ShouldTeamVoiceBeEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, CallFunc_Not_PreBool_ReturnValue) == 0x00002B, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ShouldBeGameplayMuted, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'B_ChatManager_C_ShouldBeGameplayMuted::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.ToggleManualMute
// 0x0028 (0x0028 - 0x0000)
struct B_ChatManager_C_ToggleManualMute final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          NewManualMuteStatus;                               // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           OtherPlayerState;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMutedManually_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_ToggleManualMute) == 0x000008, "Wrong alignment on B_ChatManager_C_ToggleManualMute");
static_assert(sizeof(B_ChatManager_C_ToggleManualMute) == 0x000028, "Wrong size on B_ChatManager_C_ToggleManualMute");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, PlayerState) == 0x000000, "Member 'B_ChatManager_C_ToggleManualMute::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, NewManualMuteStatus) == 0x000008, "Member 'B_ChatManager_C_ToggleManualMute::NewManualMuteStatus' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, OtherPlayerState) == 0x000010, "Member 'B_ChatManager_C_ToggleManualMute::OtherPlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, K2Node_DynamicCast_AsB_Player_State) == 0x000018, "Member 'B_ChatManager_C_ToggleManualMute::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ChatManager_C_ToggleManualMute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, CallFunc_IsPlayerMutedManually_ReturnValue) == 0x000021, "Member 'B_ChatManager_C_ToggleManualMute::CallFunc_IsPlayerMutedManually_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_ToggleManualMute, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'B_ChatManager_C_ToggleManualMute::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateChatStatus
// 0x0008 (0x0008 - 0x0000)
struct B_ChatManager_C_UpdateChatStatus final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateChatStatus) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateChatStatus");
static_assert(sizeof(B_ChatManager_C_UpdateChatStatus) == 0x000008, "Wrong size on B_ChatManager_C_UpdateChatStatus");
static_assert(offsetof(B_ChatManager_C_UpdateChatStatus, PlayerState) == 0x000000, "Member 'B_ChatManager_C_UpdateChatStatus::PlayerState' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateGameChatStatus
// 0x0018 (0x0018 - 0x0000)
struct B_ChatManager_C_UpdateGameChatStatus final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveGameChat_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateGameChatStatus) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateGameChatStatus");
static_assert(sizeof(B_ChatManager_C_UpdateGameChatStatus) == 0x000018, "Wrong size on B_ChatManager_C_UpdateGameChatStatus");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, PlayerState) == 0x000000, "Member 'B_ChatManager_C_UpdateGameChatStatus::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, K2Node_DynamicCast_AsB_Player_State) == 0x000008, "Member 'B_ChatManager_C_UpdateGameChatStatus::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ChatManager_C_UpdateGameChatStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, CallFunc_ReceiveGameChat_ReturnValue) == 0x000011, "Member 'B_ChatManager_C_UpdateGameChatStatus::CallFunc_ReceiveGameChat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'B_ChatManager_C_UpdateGameChatStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameChatStatus, CallFunc_IsValid_ReturnValue_1) == 0x000013, "Member 'B_ChatManager_C_UpdateGameChatStatus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateGameplayMuteRelationship
// 0x0018 (0x0018 - 0x0000)
struct B_ChatManager_C_UpdateGameplayMuteRelationship final
{
public:
	class APlayerState*                           OtherPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           LocalOtherPlayer;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldBeGameplayMuted_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateGameplayMuteRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateGameplayMuteRelationship");
static_assert(sizeof(B_ChatManager_C_UpdateGameplayMuteRelationship) == 0x000018, "Wrong size on B_ChatManager_C_UpdateGameplayMuteRelationship");
static_assert(offsetof(B_ChatManager_C_UpdateGameplayMuteRelationship, OtherPlayer) == 0x000000, "Member 'B_ChatManager_C_UpdateGameplayMuteRelationship::OtherPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameplayMuteRelationship, LocalOtherPlayer) == 0x000008, "Member 'B_ChatManager_C_UpdateGameplayMuteRelationship::LocalOtherPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameplayMuteRelationship, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_ChatManager_C_UpdateGameplayMuteRelationship::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameplayMuteRelationship, CallFunc_ShouldBeGameplayMuted_ReturnValue) == 0x000011, "Member 'B_ChatManager_C_UpdateGameplayMuteRelationship::CallFunc_ShouldBeGameplayMuted_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateGameplayMuteRelationship, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000012, "Member 'B_ChatManager_C_UpdateGameplayMuteRelationship::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateManualMuteRelationship
// 0x0010 (0x0010 - 0x0000)
struct B_ChatManager_C_UpdateManualMuteRelationship final
{
public:
	class APlayerState*                           Player_State;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerMutedManually_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateManualMuteRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateManualMuteRelationship");
static_assert(sizeof(B_ChatManager_C_UpdateManualMuteRelationship) == 0x000010, "Wrong size on B_ChatManager_C_UpdateManualMuteRelationship");
static_assert(offsetof(B_ChatManager_C_UpdateManualMuteRelationship, Player_State) == 0x000000, "Member 'B_ChatManager_C_UpdateManualMuteRelationship::Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateManualMuteRelationship, CallFunc_IsPlayerMutedManually_ReturnValue) == 0x000008, "Member 'B_ChatManager_C_UpdateManualMuteRelationship::CallFunc_IsPlayerMutedManually_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateSystemBlockRelationship
// 0x0010 (0x0010 - 0x0000)
struct B_ChatManager_C_UpdateSystemBlockRelationship final
{
public:
	class APlayerState*                           OtherPlayerState;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerBlockedWrapper_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateSystemBlockRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateSystemBlockRelationship");
static_assert(sizeof(B_ChatManager_C_UpdateSystemBlockRelationship) == 0x000010, "Wrong size on B_ChatManager_C_UpdateSystemBlockRelationship");
static_assert(offsetof(B_ChatManager_C_UpdateSystemBlockRelationship, OtherPlayerState) == 0x000000, "Member 'B_ChatManager_C_UpdateSystemBlockRelationship::OtherPlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateSystemBlockRelationship, CallFunc_IsPlayerBlockedWrapper_ReturnValue) == 0x000008, "Member 'B_ChatManager_C_UpdateSystemBlockRelationship::CallFunc_IsPlayerBlockedWrapper_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateSystemMuteRelationship
// 0x0010 (0x0010 - 0x0000)
struct B_ChatManager_C_UpdateSystemMuteRelationship final
{
public:
	class APlayerState*                           OtherPlayerState;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateSystemMuteRelationship) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateSystemMuteRelationship");
static_assert(sizeof(B_ChatManager_C_UpdateSystemMuteRelationship) == 0x000010, "Wrong size on B_ChatManager_C_UpdateSystemMuteRelationship");
static_assert(offsetof(B_ChatManager_C_UpdateSystemMuteRelationship, OtherPlayerState) == 0x000000, "Member 'B_ChatManager_C_UpdateSystemMuteRelationship::OtherPlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateSystemMuteRelationship, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'B_ChatManager_C_UpdateSystemMuteRelationship::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateTeamVoiceStatus
// 0x0048 (0x0048 - 0x0000)
struct B_ChatManager_C_UpdateTeamVoiceStatus final
{
public:
	class AB_PlayerState_C*                       CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateTeamVoiceStatus) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateTeamVoiceStatus");
static_assert(sizeof(B_ChatManager_C_UpdateTeamVoiceStatus) == 0x000048, "Wrong size on B_ChatManager_C_UpdateTeamVoiceStatus");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CurrentPlayer) == 0x000000, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, K2Node_DynamicCast_AsB_Player_State) == 0x000030, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateTeamVoiceStatus, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'B_ChatManager_C_UpdateTeamVoiceStatus::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateVoiceChatStatus
// 0x0038 (0x0038 - 0x0000)
struct B_ChatManager_C_UpdateVoiceChatStatus final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveVoiceChat_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0010(0x0020)()
	bool                                          CallFunc_MuteRemoteTalker_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnMuteRemoteTalker_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateVoiceChatStatus) == 0x000008, "Wrong alignment on B_ChatManager_C_UpdateVoiceChatStatus");
static_assert(sizeof(B_ChatManager_C_UpdateVoiceChatStatus) == 0x000038, "Wrong size on B_ChatManager_C_UpdateVoiceChatStatus");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatus, PlayerState) == 0x000000, "Member 'B_ChatManager_C_UpdateVoiceChatStatus::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatus, CallFunc_ReceiveVoiceChat_ReturnValue) == 0x000008, "Member 'B_ChatManager_C_UpdateVoiceChatStatus::CallFunc_ReceiveVoiceChat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatus, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000010, "Member 'B_ChatManager_C_UpdateVoiceChatStatus::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatus, CallFunc_MuteRemoteTalker_ReturnValue) == 0x000030, "Member 'B_ChatManager_C_UpdateVoiceChatStatus::CallFunc_MuteRemoteTalker_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatus, CallFunc_UnMuteRemoteTalker_ReturnValue) == 0x000031, "Member 'B_ChatManager_C_UpdateVoiceChatStatus::CallFunc_UnMuteRemoteTalker_ReturnValue' has a wrong offset!");

// Function B_ChatManager.B_ChatManager_C.UpdateVoiceChatStatusFromSavegame
// 0x0002 (0x0002 - 0x0000)
struct B_ChatManager_C_UpdateVoiceChatStatusFromSavegame final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChatManager_C_UpdateVoiceChatStatusFromSavegame) == 0x000001, "Wrong alignment on B_ChatManager_C_UpdateVoiceChatStatusFromSavegame");
static_assert(sizeof(B_ChatManager_C_UpdateVoiceChatStatusFromSavegame) == 0x000002, "Wrong size on B_ChatManager_C_UpdateVoiceChatStatusFromSavegame");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatusFromSavegame, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_ChatManager_C_UpdateVoiceChatStatusFromSavegame::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChatManager_C_UpdateVoiceChatStatusFromSavegame, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_ChatManager_C_UpdateVoiceChatStatusFromSavegame::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

