#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HookPull

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_HookPull.B_HookPull_C.BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature) == 0x000008, "Wrong alignment on B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature");
static_assert(sizeof(B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature) == 0x000008, "Wrong size on B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature");
static_assert(offsetof(B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature, DeltaTime) == 0x000000, "Member 'B_HookPull_C_BndEvt__B_FixedUpdate_K2Node_ComponentBoundEvent_0_FixedUpdate__DelegateSignature::DeltaTime' has a wrong offset!");

// Function B_HookPull.B_HookPull_C.BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_HookPull_C_BndEvt__B_HookPull_Sphere_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_HookPull.B_HookPull_C.BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_HookPull_C_BndEvt__CollisionComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_HookPull.B_HookPull_C.ExecuteUbergraph_B_HookPull
// 0x05A8 (0x05A8 - 0x0000)
struct B_HookPull_C_ExecuteUbergraph_B_HookPull final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_1;                            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_2;                            // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_3;                            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x00A8(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter_1;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_DeltaTime;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B[0x5];                                      // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter_2;                   // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Accessor__GetPlayerController_IsValid;    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Accessor__GetPlayerController_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter_3;                   // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_8;                   // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter_4;                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue_1;                // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default_1;                           // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0440(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue_1;      // 0x0460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0490(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x04A0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x3];                                      // 0x05A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x05A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookPull_C_ExecuteUbergraph_B_HookPull) == 0x000008, "Wrong alignment on B_HookPull_C_ExecuteUbergraph_B_HookPull");
static_assert(sizeof(B_HookPull_C_ExecuteUbergraph_B_HookPull) == 0x0005A8, "Wrong size on B_HookPull_C_ExecuteUbergraph_B_HookPull");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, EntryPoint) == 0x000000, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_struct_Variable) == 0x000008, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_struct_Variable_1) == 0x000020, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_struct_Variable_2) == 0x000038, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000050, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000058, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_struct_Variable_3) == 0x000060, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue) == 0x000080, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000088, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000090, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000098, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x0000A4, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0000A8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsValid_ReturnValue) == 0x0001A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsCharacter) == 0x0001A8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Hunter) == 0x0001B8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_1) == 0x0001C8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsValid_ReturnValue_1) == 0x0001D0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Hunter_1) == 0x0001D8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Hunter_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_2) == 0x0001E0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001E8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000200, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_2) == 0x000218, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_DeltaTime) == 0x000220, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000228, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000240, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsValid_ReturnValue_2) == 0x000258, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000259, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_bool_Variable) == 0x00025A, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000260, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_3) == 0x000278, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_4) == 0x000280, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000288, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Hunter_2) == 0x0002A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Hunter_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_3) == 0x0002A8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002B0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0002C8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_5) == 0x0002E0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Accessor__GetPlayerController_IsValid) == 0x0002E8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Accessor__GetPlayerController_IsValid' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Accessor__GetPlayerController_ReturnValue) == 0x0002F0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Accessor__GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x0002F8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000310, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Player_State) == 0x000328, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_4) == 0x000330, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_VSize_ReturnValue) == 0x000338, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_6) == 0x000340, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_7) == 0x000348, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000350, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Hunter_3) == 0x000358, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Hunter_3' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_5) == 0x000360, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_GetOwner_ReturnValue_8) == 0x000368, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_GetOwner_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsCrouching_ReturnValue) == 0x000370, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Hunter_4) == 0x000378, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Hunter_4' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_6) == 0x000380, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_Select_Default) == 0x000388, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_IsCrouching_ReturnValue_1) == 0x0003A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_IsCrouching_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Add_VectorVector_ReturnValue) == 0x0003A8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Normal_ReturnValue) == 0x0003C0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003D8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, Temp_bool_Variable_1) == 0x0003F0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_Select_Default_1) == 0x0003F8, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000410, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000428, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000440, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Normal_ReturnValue_1) == 0x000448, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_SpawnSystemAtLocation_ReturnValue_1) == 0x000460, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_SpawnSystemAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000468, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000480, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherActor) == 0x000488, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherComp) == 0x000490, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000498, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_bFromSweep) == 0x00049C, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_ComponentBoundEvent_SweepResult) == 0x0004A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_AsB_Witch) == 0x000598, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, K2Node_DynamicCast_bSuccess_7) == 0x0005A0, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_HookPull_C_ExecuteUbergraph_B_HookPull, CallFunc_Delay_Duration_ImplicitCast) == 0x0005A4, "Member 'B_HookPull_C_ExecuteUbergraph_B_HookPull::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function B_HookPull.B_HookPull_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_HookPull_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookPull_C_ReceiveTick) == 0x000004, "Wrong alignment on B_HookPull_C_ReceiveTick");
static_assert(sizeof(B_HookPull_C_ReceiveTick) == 0x000004, "Wrong size on B_HookPull_C_ReceiveTick");
static_assert(offsetof(B_HookPull_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_HookPull_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

