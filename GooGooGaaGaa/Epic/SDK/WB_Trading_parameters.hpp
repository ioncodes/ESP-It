#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Trading

#include "Basic.hpp"

#include "MasterServerPlugin_structs.hpp"
#include "E_QuestionAnswer_structs.hpp"


namespace SDK::Params
{

// Function WB_Trading.WB_Trading_C.CheckNotify
// 0x0048 (0x0048 - 0x0000)
struct WB_Trading_C_CheckNotify final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool HasIncomingTradeRequests)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetHasIncomingTradeRequests_HasIncomingTradeRequests; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_CheckNotify) == 0x000008, "Wrong alignment on WB_Trading_C_CheckNotify");
static_assert(sizeof(WB_Trading_C_CheckNotify) == 0x000048, "Wrong size on WB_Trading_C_CheckNotify");
static_assert(offsetof(WB_Trading_C_CheckNotify, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_Trading_C_CheckNotify::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_Trading_C_CheckNotify::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_Trading_C_CheckNotify::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WB_Trading_C_CheckNotify::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, CallFunc_GetGameInstance_ReturnValue_1) == 0x000028, "Member 'WB_Trading_C_CheckNotify::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, CallFunc_GetHasIncomingTradeRequests_HasIncomingTradeRequests) == 0x000030, "Member 'WB_Trading_C_CheckNotify::CallFunc_GetHasIncomingTradeRequests_HasIncomingTradeRequests' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000038, "Member 'WB_Trading_C_CheckNotify::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_CheckNotify, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WB_Trading_C_CheckNotify::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.ExecuteUbergraph_WB_Trading
// 0x0148 (0x0148 - 0x0000)
struct WB_Trading_C_ExecuteUbergraph_WB_Trading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(E_QuestionAnswer Answer)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue_1;  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue_2;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<struct FAccountSetting>& Settings)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue_2;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue_3;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue_3;  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAccountSetting>                K2Node_CustomEvent_Settings;                       // 0x00E8(0x0010)(ConstParm, ReferenceParm)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryPublic_IsPublic;               // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ReferenceParm)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_3;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_QuestionAnswer                              K2Node_CustomEvent_Answer;                         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_QuestionDialog_C*                   CallFunc_ShowQuestionDialog_QuestionDialog;        // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_ExecuteUbergraph_WB_Trading) == 0x000008, "Wrong alignment on WB_Trading_C_ExecuteUbergraph_WB_Trading");
static_assert(sizeof(WB_Trading_C_ExecuteUbergraph_WB_Trading) == 0x000148, "Wrong size on WB_Trading_C_ExecuteUbergraph_WB_Trading");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, EntryPoint) == 0x000000, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetNewMasterServerManager_ReturnValue) == 0x000028, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetNewMasterServerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000030, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetNewMasterServerManager_ReturnValue_1) == 0x000048, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetNewMasterServerManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetEngineSubsystem_ReturnValue_2) == 0x000050, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetEngineSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetNewMasterServerManager_ReturnValue_2) == 0x000068, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetNewMasterServerManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetEngineSubsystem_ReturnValue_3) == 0x000070, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetEngineSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetNewMasterServerManager_ReturnValue_3) == 0x000078, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetNewMasterServerManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_1) == 0x000080, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000088, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_MakeLiteralByte_ReturnValue) == 0x000091, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_2) == 0x000098, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000A0, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000A9, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000B0, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x0000B8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_4) == 0x0000C8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x0000D0, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x0000D9, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_5) == 0x0000E0, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_CustomEvent_Settings) == 0x0000E8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_CustomEvent_Settings' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0000F8, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_5) == 0x000100, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_IsInventoryPublic_IsPublic) == 0x000101, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_IsInventoryPublic_IsPublic' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_MakeArray_Array) == 0x000108, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_MakeLiteralByte_ReturnValue_3) == 0x000118, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_MakeLiteralByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_CustomEvent_Answer) == 0x000119, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_CustomEvent_Answer' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_Not_PreBool_ReturnValue) == 0x00011A, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_Not_PreBool_ReturnValue_1) == 0x00011B, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_GetGameInstance_ReturnValue_6) == 0x000120, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_Not_PreBool_ReturnValue_2) == 0x000128, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000130, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, K2Node_DynamicCast_bSuccess_6) == 0x000138, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_ExecuteUbergraph_WB_Trading, CallFunc_ShowQuestionDialog_QuestionDialog) == 0x000140, "Member 'WB_Trading_C_ExecuteUbergraph_WB_Trading::CallFunc_ShowQuestionDialog_QuestionDialog' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_Trading_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_Trading_C_GetInitialFocusWidget");
static_assert(sizeof(WB_Trading_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_Trading_C_GetInitialFocusWidget");
static_assert(offsetof(WB_Trading_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_Trading_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.HandleInventoryPublic
// 0x0020 (0x0020 - 0x0000)
struct WB_Trading_C_HandleInventoryPublic final
{
public:
	bool                                          IsPublic;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_HandleInventoryPublic) == 0x000008, "Wrong alignment on WB_Trading_C_HandleInventoryPublic");
static_assert(sizeof(WB_Trading_C_HandleInventoryPublic) == 0x000020, "Wrong size on WB_Trading_C_HandleInventoryPublic");
static_assert(offsetof(WB_Trading_C_HandleInventoryPublic, IsPublic) == 0x000000, "Member 'WB_Trading_C_HandleInventoryPublic::IsPublic' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_HandleInventoryPublic, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_Trading_C_HandleInventoryPublic::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_HandleInventoryPublic, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_Trading_C_HandleInventoryPublic::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_HandleInventoryPublic, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_Trading_C_HandleInventoryPublic::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.HasIncomingTradeRequestsEvent
// 0x0001 (0x0001 - 0x0000)
struct WB_Trading_C_HasIncomingTradeRequestsEvent final
{
public:
	bool                                          HasIncomingTradeRequests;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_HasIncomingTradeRequestsEvent) == 0x000001, "Wrong alignment on WB_Trading_C_HasIncomingTradeRequestsEvent");
static_assert(sizeof(WB_Trading_C_HasIncomingTradeRequestsEvent) == 0x000001, "Wrong size on WB_Trading_C_HasIncomingTradeRequestsEvent");
static_assert(offsetof(WB_Trading_C_HasIncomingTradeRequestsEvent, HasIncomingTradeRequests) == 0x000000, "Member 'WB_Trading_C_HasIncomingTradeRequestsEvent::HasIncomingTradeRequests' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.IsInventoryPublic
// 0x0058 (0x0058 - 0x0000)
struct WB_Trading_C_IsInventoryPublic final
{
public:
	TArray<struct FAccountSetting>                Settings;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsPublic;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAccountSetting                        CallFunc_Array_Get_Item;                           // 0x0020(0x0030)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_IsInventoryPublic) == 0x000008, "Wrong alignment on WB_Trading_C_IsInventoryPublic");
static_assert(sizeof(WB_Trading_C_IsInventoryPublic) == 0x000058, "Wrong size on WB_Trading_C_IsInventoryPublic");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, Settings) == 0x000000, "Member 'WB_Trading_C_IsInventoryPublic::Settings' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, IsPublic) == 0x000010, "Member 'WB_Trading_C_IsInventoryPublic::IsPublic' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_Trading_C_IsInventoryPublic::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_Trading_C_IsInventoryPublic::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_Trading_C_IsInventoryPublic::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_Trading_C_IsInventoryPublic::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WB_Trading_C_IsInventoryPublic::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, K2Node_SwitchString_CmpSuccess) == 0x000051, "Member 'WB_Trading_C_IsInventoryPublic::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Trading_C_IsInventoryPublic, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WB_Trading_C_IsInventoryPublic::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.OnDialogAnswer
// 0x0001 (0x0001 - 0x0000)
struct WB_Trading_C_OnDialogAnswer final
{
public:
	E_QuestionAnswer                              Answer;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Trading_C_OnDialogAnswer) == 0x000001, "Wrong alignment on WB_Trading_C_OnDialogAnswer");
static_assert(sizeof(WB_Trading_C_OnDialogAnswer) == 0x000001, "Wrong size on WB_Trading_C_OnDialogAnswer");
static_assert(offsetof(WB_Trading_C_OnDialogAnswer, Answer) == 0x000000, "Member 'WB_Trading_C_OnDialogAnswer::Answer' has a wrong offset!");

// Function WB_Trading.WB_Trading_C.OnReceiveAccountSettings
// 0x0010 (0x0010 - 0x0000)
struct WB_Trading_C_OnReceiveAccountSettings final
{
public:
	TArray<struct FAccountSetting>                Settings;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_Trading_C_OnReceiveAccountSettings) == 0x000008, "Wrong alignment on WB_Trading_C_OnReceiveAccountSettings");
static_assert(sizeof(WB_Trading_C_OnReceiveAccountSettings) == 0x000010, "Wrong size on WB_Trading_C_OnReceiveAccountSettings");
static_assert(offsetof(WB_Trading_C_OnReceiveAccountSettings, Settings) == 0x000000, "Member 'WB_Trading_C_OnReceiveAccountSettings::Settings' has a wrong offset!");

}

