#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tab_VideoSettings

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.AddScreenResolutions
// 0x0058 (0x0058 - 0x0000)
struct WB_Tab_VideoSettings_C_AddScreenResolutions final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSupportedResolution>           CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0010(0x0010)(ReferenceParm)
	struct FSupportedResolution                   CallFunc_Array_Get_Item;                           // 0x0020(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_AddScreenResolutions) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_AddScreenResolutions");
static_assert(sizeof(WB_Tab_VideoSettings_C_AddScreenResolutions) == 0x000058, "Wrong size on WB_Tab_VideoSettings_C_AddScreenResolutions");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000010, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000055, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_AddScreenResolutions, CallFunc_BooleanAND_ReturnValue) == 0x000056, "Member 'WB_Tab_VideoSettings_C_AddScreenResolutions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.ApplySettings
// 0x0030 (0x0030 - 0x0000)
struct WB_Tab_VideoSettings_C_ApplySettings final
{
public:
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSupportedResolution                   CallFunc_GetScreenResolutionFromDisplayString_SupportedResolution; // 0x0008(0x0018)()
	EWindowMode                                   CallFunc_GetWindowModeFromDisplayString_WindowMode; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetResolutionScaleValueEx_NewScaleValue_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFrameRateLimit_NewLimit_ImplicitCast;  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_ApplySettings) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_ApplySettings");
static_assert(sizeof(WB_Tab_VideoSettings_C_ApplySettings) == 0x000030, "Wrong size on WB_Tab_VideoSettings_C_ApplySettings");
static_assert(offsetof(WB_Tab_VideoSettings_C_ApplySettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_ApplySettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ApplySettings, CallFunc_GetScreenResolutionFromDisplayString_SupportedResolution) == 0x000008, "Member 'WB_Tab_VideoSettings_C_ApplySettings::CallFunc_GetScreenResolutionFromDisplayString_SupportedResolution' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ApplySettings, CallFunc_GetWindowModeFromDisplayString_WindowMode) == 0x000020, "Member 'WB_Tab_VideoSettings_C_ApplySettings::CallFunc_GetWindowModeFromDisplayString_WindowMode' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ApplySettings, CallFunc_SetResolutionScaleValueEx_NewScaleValue_ImplicitCast) == 0x000024, "Member 'WB_Tab_VideoSettings_C_ApplySettings::CallFunc_SetResolutionScaleValueEx_NewScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ApplySettings, CallFunc_SetFrameRateLimit_NewLimit_ImplicitCast) == 0x000028, "Member 'WB_Tab_VideoSettings_C_ApplySettings::CallFunc_SetFrameRateLimit_NewLimit_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_VideoSettings_C_BndEvt__CheckBox_VSync_K2Node_ComponentBoundEvent_1_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, SelectedItem) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature, SelectionType) == 0x000010, "Member 'WB_Tab_VideoSettings_C_BndEvt__ComboBox_Resolution_K2Node_ComponentBoundEvent_0_OnSelectionChanged__DelegateSignature::SelectionType' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature, SelectedItem) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature, SelectionType) == 0x000010, "Member 'WB_Tab_VideoSettings_C_BndEvt__ComboBox_WindowMode_K2Node_ComponentBoundEvent_1_OnSelectionChanged__DelegateSignature::SelectionType' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_AntiAliasing_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_FieldOfView_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_FrameRateLimit_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_Gamma_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_MotionBlur_K2Node_ComponentBoundEvent_3_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_PostProcessing_K2Node_ComponentBoundEvent_4_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_ResolutionScale_K2Node_ComponentBoundEvent_5_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_Shadows_K2Node_ComponentBoundEvent_6_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_Sharpen_K2Node_ComponentBoundEvent_13_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_Textures_K2Node_ComponentBoundEvent_7_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_ViewDistance_K2Node_ComponentBoundEvent_8_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__Slider_VisualEffects_K2Node_ComponentBoundEvent_9_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithLabel_C*                Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_CheckBox_FPSCounter_K2Node_ComponentBoundEvent_3_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature final
{
public:
	class FString                                 SelectedItem;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   SelectionType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature, SelectedItem) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature::SelectedItem' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature, SelectionType) == 0x000010, "Member 'WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_ComboBox_AAMode_K2Node_ComponentBoundEvent_12_OnSelectionChanged__DelegateSignature::SelectionType' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_BndEvt__WB_Tab_VideoSettings_Slider_Reflections_K2Node_ComponentBoundEvent_14_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.ConvertFrameRateLimitToIndex
// 0x0060 (0x0060 - 0x0000)
struct WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Index_0;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0010)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Text_ToInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex");
static_assert(sizeof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex) == 0x000060, "Wrong size on WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, Value) == 0x000000, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::Value' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, Index_0) == 0x000008, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Round_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Text_ToInt_ReturnValue) == 0x000044, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Text_ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.ConvertFrameRateLimitToValue
// 0x0050 (0x0050 - 0x0000)
struct WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue final
{
public:
	double                                        Index_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0010)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Text_ToInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Text_IsNumeric_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue");
static_assert(sizeof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue) == 0x000050, "Wrong size on WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, Index_0) == 0x000000, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::Index_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, Value) == 0x000008, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::Value' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Round_ReturnValue) == 0x000014, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Text_ToInt_ReturnValue) == 0x00003C, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Text_ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue, CallFunc_Text_IsNumeric_ReturnValue) == 0x000048, "Member 'WB_Tab_VideoSettings_C_ConvertFrameRateLimitToValue::CallFunc_Text_IsNumeric_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.ExecuteUbergraph_WB_Tab_VideoSettings
// 0x01D0 (0x01D0 - 0x0000)
struct WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_12;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_11;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_ConvertFrameRateLimitToValue_Value;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_10;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_9;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_8;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_7;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_6;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_5;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_4;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_3;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_4;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_5;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender_1;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked_1;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_2;            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGamma_ReturnValue;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_4;            // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_2;         // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_2;        // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_5;            // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem_1;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType_1;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue_1;            // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue;       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue_1;     // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVideoModeDirty_ReturnValue;             // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133[0x5];                                      // 0x0133(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_1;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabel_C*                K2Node_ComponentBoundEvent_Sender;                 // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_IsChecked;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_bDirty;                           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x5];                                      // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_ComponentBoundEvent_SelectedItem;           // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESelectInfo                                   K2Node_ComponentBoundEvent_SelectionType;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAAMethodFromDisplayString_AAMethod;    // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_6;                      // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_7;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_6;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_7;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x2];                                      // 0x01C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGamma_gamma_ImplicitCast;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings");
static_assert(sizeof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings) == 0x0001D0, "Wrong size on WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, EntryPoint) == 0x000000, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_IsConsoleBuild_ReturnValue) == 0x000004, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_12) == 0x000048, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_12' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_11) == 0x000050, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_11' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue) == 0x000058, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_ConvertFrameRateLimitToValue_Value) == 0x000060, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_ConvertFrameRateLimitToValue_Value' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_10) == 0x000068, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_10' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_9) == 0x000070, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_9' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_8) == 0x000078, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_8' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_7) == 0x000080, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_7' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_1) == 0x000088, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_6) == 0x000090, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_6' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_5) == 0x000098, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_2) == 0x0000A0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_3) == 0x0000A4, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_4) == 0x0000A8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_3) == 0x0000B0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_4) == 0x0000B8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_5) == 0x0000BC, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_Sender_1) == 0x0000C0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_Sender_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_IsChecked_1) == 0x0000C8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_IsChecked_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_2) == 0x0000D0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000D9, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000DA, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_GetGamma_ReturnValue) == 0x0000DC, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_GetGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x0000E1, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x0000E2, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000E3, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000E4, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x0000E5, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x0000E6, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_4) == 0x0000E7, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectedItem_2) == 0x0000E8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectedItem_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectionType_2) == 0x0000F8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectionType_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_5) == 0x0000F9, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectedItem_1) == 0x000100, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectedItem_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectionType_1) == 0x000110, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectionType_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000111, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_StrStr_ReturnValue_1) == 0x000112, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_WidgetGetParentOfClass_ReturnValue) == 0x000118, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_WidgetGetParentOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_WidgetGetParentOfClass_ReturnValue_1) == 0x000128, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_WidgetGetParentOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_IsVideoModeDirty_ReturnValue) == 0x000131, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_IsVideoModeDirty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_BooleanAND_ReturnValue) == 0x000132, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue_1) == 0x000138, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000140, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x000150, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_Sender) == 0x000168, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_Sender' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_IsChecked) == 0x000170, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_IsChecked' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000178, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_DynamicCast_AsB_Game_Instance) == 0x000180, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000189, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_IsDirty_bDirty) == 0x00018A, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_IsDirty_bDirty' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectedItem) == 0x000190, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectedItem' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_SelectionType) == 0x0001A0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_SelectionType' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_GetAAMethodFromDisplayString_AAMethod) == 0x0001A4, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_GetAAMethodFromDisplayString_AAMethod' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0001A8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, K2Node_ComponentBoundEvent_RealValue) == 0x0001B0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::K2Node_ComponentBoundEvent_RealValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_6) == 0x0001B8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_Round_ReturnValue_7) == 0x0001BC, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_Round_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_6) == 0x0001C0, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_IntInt_ReturnValue_7) == 0x0001C1, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_SetGamma_gamma_ImplicitCast) == 0x0001C4, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_SetGamma_gamma_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x0001C8, "Member 'WB_Tab_VideoSettings_C_ExecuteUbergraph_WB_Tab_VideoSettings::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.Get_ComboBox_Resolution_bIsEnabled_0
// 0x0020 (0x0020 - 0x0000)
struct WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0 final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0010)()
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0");
static_assert(sizeof(WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0) == 0x000020, "Wrong size on WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0");
static_assert(offsetof(WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0, CallFunc_NotEqual_TextText_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_Get_ComboBox_Resolution_bIsEnabled_0::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetAAMethod
// 0x0004 (0x0004 - 0x0000)
struct WB_Tab_VideoSettings_C_GetAAMethod final
{
public:
	int32                                         AAMethod_0;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetAAMethod) == 0x000004, "Wrong alignment on WB_Tab_VideoSettings_C_GetAAMethod");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetAAMethod) == 0x000004, "Wrong size on WB_Tab_VideoSettings_C_GetAAMethod");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethod, AAMethod_0) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetAAMethod::AAMethod_0' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetAAMethodFromDisplayString
// 0x0050 (0x0050 - 0x0000)
struct WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         AAMethod_0;                                        // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0028(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString) == 0x000050, "Wrong size on WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, String) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::String' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, AAMethod_0) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::AAMethod_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000014, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000015, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000016, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_Format_ReturnValue) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x000048, "Member 'WB_Tab_VideoSettings_C_GetAAMethodFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetAAModeString
// 0x0098 (0x0098 - 0x0000)
struct WB_Tab_VideoSettings_C_GetAAModeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0028(0x0010)()
	class FString                                 Temp_string_Variable;                              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetAAModeString) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetAAModeString");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetAAModeString) == 0x000098, "Wrong size on WB_Tab_VideoSettings_C_GetAAModeString");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, K2Node_MakeArray_Array) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, Temp_int_Variable) == 0x000020, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, CallFunc_Format_ReturnValue) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, Temp_string_Variable) == 0x000038, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, Temp_string_Variable_1) == 0x000058, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, Temp_string_Variable_2) == 0x000068, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, Temp_string_Variable_3) == 0x000078, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAAModeString, K2Node_Select_Default) == 0x000088, "Member 'WB_Tab_VideoSettings_C_GetAAModeString::K2Node_Select_Default' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetAntiAliasingQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetAntiAliasingQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetAntiAliasingQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetAntiAliasingQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetAntiAliasingQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetAntiAliasingQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAntiAliasingQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetAntiAliasingQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAntiAliasingQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetAntiAliasingQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetAntiAliasingQuality, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetAntiAliasingQuality::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetDisplayGamma
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_GetDisplayGamma final
{
public:
	double                                        DisplayGamma;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetDisplayGamma) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetDisplayGamma");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetDisplayGamma) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_GetDisplayGamma");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetDisplayGamma, DisplayGamma) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetDisplayGamma::DisplayGamma' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetFieldOfView
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_GetFieldOfView final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetFieldOfView) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetFieldOfView");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetFieldOfView) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_GetFieldOfView");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFieldOfView, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetFieldOfView::ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetFPSCounter
// 0x0001 (0x0001 - 0x0000)
struct WB_Tab_VideoSettings_C_GetFPSCounter final
{
public:
	bool                                          FPSCounter;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetFPSCounter) == 0x000001, "Wrong alignment on WB_Tab_VideoSettings_C_GetFPSCounter");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetFPSCounter) == 0x000001, "Wrong size on WB_Tab_VideoSettings_C_GetFPSCounter");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFPSCounter, FPSCounter) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetFPSCounter::FPSCounter' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetFrameRateLimit
// 0x0020 (0x0020 - 0x0000)
struct WB_Tab_VideoSettings_C_GetFrameRateLimit final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetFrameRateLimit) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetFrameRateLimit");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetFrameRateLimit) == 0x000020, "Wrong size on WB_Tab_VideoSettings_C_GetFrameRateLimit");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFrameRateLimit, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetFrameRateLimit::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFrameRateLimit, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetFrameRateLimit::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFrameRateLimit, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetFrameRateLimit::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetFrameRateLimit, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000018, "Member 'WB_Tab_VideoSettings_C_GetFrameRateLimit::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetInitialFocusWidget
// 0x0040 (0x0040 - 0x0000)
struct WB_Tab_VideoSettings_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BaseControlWithLabel_C*             K2Node_DynamicCast_AsWB_Base_Control_with_Label;   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetInitialFocusWidget");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetInitialFocusWidget) == 0x000040, "Wrong size on WB_Tab_VideoSettings_C_GetInitialFocusWidget");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, Temp_int_Variable) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, K2Node_DynamicCast_AsWB_Base_Control_with_Label) == 0x000020, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::K2Node_DynamicCast_AsWB_Base_Control_with_Label' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_GetVisibility_ReturnValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000031, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000032, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetInitialFocusWidget, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'WB_Tab_VideoSettings_C_GetInitialFocusWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetMotionBlur
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_GetMotionBlur final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetMotionBlur) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetMotionBlur");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetMotionBlur) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_GetMotionBlur");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetMotionBlur, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetMotionBlur::ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_GetPanelWidget final
{
public:
	class UPanelWidget*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetPanelWidget) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetPanelWidget");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetPanelWidget) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_GetPanelWidget");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetPanelWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetPanelWidget::ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetPostProcessingQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetPostProcessingQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPostProcessingQuality_ReturnValue;     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetPostProcessingQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetPostProcessingQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetPostProcessingQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetPostProcessingQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetPostProcessingQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetPostProcessingQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetPostProcessingQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetPostProcessingQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetPostProcessingQuality, CallFunc_GetPostProcessingQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetPostProcessingQuality::CallFunc_GetPostProcessingQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetReflectionsQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetReflectionsQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReflectionQuality_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetReflectionsQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetReflectionsQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetReflectionsQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetReflectionsQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetReflectionsQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetReflectionsQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetReflectionsQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetReflectionsQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetReflectionsQuality, CallFunc_GetReflectionQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetReflectionsQuality::CallFunc_GetReflectionQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetResolution
// 0x0030 (0x0030 - 0x0000)
struct WB_Tab_VideoSettings_C_GetResolution final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	struct FSupportedResolution                   CallFunc_GetScreenResolution_Resolution;           // 0x0010(0x0018)()
	EWindowMode                                   CallFunc_GetScreenResolution_WindowMode;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetResolution) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetResolution");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetResolution) == 0x000030, "Wrong size on WB_Tab_VideoSettings_C_GetResolution");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolution, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetResolution::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolution, CallFunc_GetScreenResolution_Resolution) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetResolution::CallFunc_GetScreenResolution_Resolution' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolution, CallFunc_GetScreenResolution_WindowMode) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetResolution::CallFunc_GetScreenResolution_WindowMode' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetResolutionScale
// 0x0028 (0x0028 - 0x0000)
struct WB_Tab_VideoSettings_C_GetResolutionScale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetResolutionScale) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetResolutionScale");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetResolutionScale) == 0x000028, "Wrong size on WB_Tab_VideoSettings_C_GetResolutionScale");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x000014, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x00001C, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetResolutionScale, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'WB_Tab_VideoSettings_C_GetResolutionScale::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetScreenResolutionFromDisplayString
// 0x0070 (0x0070 - 0x0000)
struct WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString final
{
public:
	class FString                                 DisplayString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FSupportedResolution                   SupportedResolution;                               // 0x0010(0x0018)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSupportedResolution>           CallFunc_GetSupportedScreenResolutions_Resolutions; // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSupportedResolution                   CallFunc_Array_Get_Item;                           // 0x0050(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString) == 0x000070, "Wrong size on WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, DisplayString) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::DisplayString' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, SupportedResolution) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::SupportedResolution' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_GetSupportedScreenResolutions_Resolutions) == 0x000038, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_GetSupportedScreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_Array_Get_Item) == 0x000050, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000069, "Member 'WB_Tab_VideoSettings_C_GetScreenResolutionFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetShadowQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetShadowQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetShadowQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetShadowQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetShadowQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetShadowQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetShadowQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetShadowQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetShadowQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetShadowQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetShadowQuality, CallFunc_GetShadowQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetShadowQuality::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetSharpen
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_VideoSettings_C_GetSharpen final
{
public:
	double                                        Sharpen;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetSharpen) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetSharpen");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetSharpen) == 0x000008, "Wrong size on WB_Tab_VideoSettings_C_GetSharpen");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetSharpen, Sharpen) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetSharpen::Sharpen' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetTextureQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetTextureQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTextureQuality_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetTextureQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetTextureQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetTextureQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetTextureQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetTextureQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetTextureQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetTextureQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetTextureQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetTextureQuality, CallFunc_GetTextureQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetTextureQuality::CallFunc_GetTextureQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetViewDistanceQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetViewDistanceQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewDistanceQuality_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetViewDistanceQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetViewDistanceQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetViewDistanceQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetViewDistanceQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetViewDistanceQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetViewDistanceQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetViewDistanceQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetViewDistanceQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetViewDistanceQuality, CallFunc_GetViewDistanceQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetViewDistanceQuality::CallFunc_GetViewDistanceQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetVisualEffectQuality
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_GetVisualEffectQuality final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetVisualEffectQuality) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetVisualEffectQuality");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetVisualEffectQuality) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_GetVisualEffectQuality");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetVisualEffectQuality, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetVisualEffectQuality::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetVisualEffectQuality, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetVisualEffectQuality::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetVisualEffectQuality, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetVisualEffectQuality::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetWindowMode
// 0x0028 (0x0028 - 0x0000)
struct WB_Tab_VideoSettings_C_GetWindowMode final
{
public:
	EWindowMode                                   ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSupportedResolution                   CallFunc_GetScreenResolution_Resolution;           // 0x0008(0x0018)()
	EWindowMode                                   CallFunc_GetScreenResolution_WindowMode;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetWindowMode) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetWindowMode");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetWindowMode) == 0x000028, "Wrong size on WB_Tab_VideoSettings_C_GetWindowMode");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowMode, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetWindowMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowMode, CallFunc_GetScreenResolution_Resolution) == 0x000008, "Member 'WB_Tab_VideoSettings_C_GetWindowMode::CallFunc_GetScreenResolution_Resolution' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowMode, CallFunc_GetScreenResolution_WindowMode) == 0x000020, "Member 'WB_Tab_VideoSettings_C_GetWindowMode::CallFunc_GetScreenResolution_WindowMode' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetWindowModeFromDisplayString
// 0x00B8 (0x00B8 - 0x0000)
struct WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString final
{
public:
	class FString                                 DisplayString;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EWindowMode                                   WindowMode;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0038(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0048(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0090(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString) == 0x0000B8, "Wrong size on WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, DisplayString) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::DisplayString' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, WindowMode) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::WindowMode' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, K2Node_MakeArray_Array) == 0x000018, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, K2Node_MakeArray_Array_1) == 0x000028, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Format_ReturnValue) == 0x000038, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Format_ReturnValue_1) == 0x000048, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Conv_TextToString_ReturnValue) == 0x000058, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000068, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000078, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000079, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, K2Node_MakeArray_Array_2) == 0x000080, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Format_ReturnValue_2) == 0x000090, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000A0, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0000B0, "Member 'WB_Tab_VideoSettings_C_GetWindowModeFromDisplayString::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.GetWindowModeString
// 0x00C8 (0x00C8 - 0x0000)
struct WB_Tab_VideoSettings_C_GetWindowModeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0030(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0040(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0070(0x0010)(ReferenceParm)
	struct FSupportedResolution                   CallFunc_GetScreenResolution_Resolution;           // 0x0080(0x0018)()
	EWindowMode                                   CallFunc_GetScreenResolution_WindowMode;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x00A0(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_GetWindowModeString) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_GetWindowModeString");
static_assert(sizeof(WB_Tab_VideoSettings_C_GetWindowModeString) == 0x0000C8, "Wrong size on WB_Tab_VideoSettings_C_GetWindowModeString");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, K2Node_MakeArray_Array) == 0x000010, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, K2Node_MakeArray_Array_1) == 0x000020, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Format_ReturnValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Format_ReturnValue_1) == 0x000040, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000060, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, K2Node_MakeArray_Array_2) == 0x000070, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_GetScreenResolution_Resolution) == 0x000080, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_GetScreenResolution_Resolution' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_GetScreenResolution_WindowMode) == 0x000098, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_GetScreenResolution_WindowMode' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Format_ReturnValue_2) == 0x0000A0, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_GetWindowModeString, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000B8, "Member 'WB_Tab_VideoSettings_C_GetWindowModeString::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.IsDirty
// 0x0001 (0x0001 - 0x0000)
struct WB_Tab_VideoSettings_C_IsDirty final
{
public:
	bool                                          bDirty_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_IsDirty) == 0x000001, "Wrong alignment on WB_Tab_VideoSettings_C_IsDirty");
static_assert(sizeof(WB_Tab_VideoSettings_C_IsDirty) == 0x000001, "Wrong size on WB_Tab_VideoSettings_C_IsDirty");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsDirty, bDirty_0) == 0x000000, "Member 'WB_Tab_VideoSettings_C_IsDirty::bDirty_0' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.IsFullscreenModeDirty
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_VideoSettings_C_IsFullscreenModeDirty final
{
public:
	class UGameUserSettings*                      GameUserSettings;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetLastConfirmedFullscreenMode_ReturnValue; // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   CallFunc_GetFullscreenMode_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_IsFullscreenModeDirty");
static_assert(sizeof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty) == 0x000010, "Wrong size on WB_Tab_VideoSettings_C_IsFullscreenModeDirty");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty, GameUserSettings) == 0x000000, "Member 'WB_Tab_VideoSettings_C_IsFullscreenModeDirty::GameUserSettings' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty, ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_IsFullscreenModeDirty::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty, CallFunc_GetLastConfirmedFullscreenMode_ReturnValue) == 0x000009, "Member 'WB_Tab_VideoSettings_C_IsFullscreenModeDirty::CallFunc_GetLastConfirmedFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty, CallFunc_GetFullscreenMode_ReturnValue) == 0x00000A, "Member 'WB_Tab_VideoSettings_C_IsFullscreenModeDirty::CallFunc_GetFullscreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsFullscreenModeDirty, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00000B, "Member 'WB_Tab_VideoSettings_C_IsFullscreenModeDirty::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.IsScreenResolutionDirty
// 0x0020 (0x0020 - 0x0000)
struct WB_Tab_VideoSettings_C_IsScreenResolutionDirty final
{
public:
	class UGameUserSettings*                      GameUserSettings;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetLastConfirmedScreenResolution_ReturnValue; // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetScreenResolution_ReturnValue;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_IsScreenResolutionDirty");
static_assert(sizeof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty) == 0x000020, "Wrong size on WB_Tab_VideoSettings_C_IsScreenResolutionDirty");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, GameUserSettings) == 0x000000, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::GameUserSettings' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, CallFunc_GetLastConfirmedScreenResolution_ReturnValue) == 0x00000C, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::CallFunc_GetLastConfirmedScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, CallFunc_GetScreenResolution_ReturnValue) == 0x000014, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsScreenResolutionDirty, CallFunc_BooleanOR_ReturnValue) == 0x00001E, "Member 'WB_Tab_VideoSettings_C_IsScreenResolutionDirty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.IsVideoModeDirty
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_IsVideoModeDirty final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFullscreenModeDirty_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsScreenResolutionDirty_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_IsVideoModeDirty) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_IsVideoModeDirty");
static_assert(sizeof(WB_Tab_VideoSettings_C_IsVideoModeDirty) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_IsVideoModeDirty");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsVideoModeDirty, ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_IsVideoModeDirty::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsVideoModeDirty, CallFunc_GetGameUserSettings_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_IsVideoModeDirty::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsVideoModeDirty, CallFunc_IsFullscreenModeDirty_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_IsVideoModeDirty::CallFunc_IsFullscreenModeDirty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsVideoModeDirty, CallFunc_IsScreenResolutionDirty_ReturnValue) == 0x000011, "Member 'WB_Tab_VideoSettings_C_IsVideoModeDirty::CallFunc_IsScreenResolutionDirty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_IsVideoModeDirty, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'WB_Tab_VideoSettings_C_IsVideoModeDirty::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.LoadComboBoxSettings
// 0x0020 (0x0020 - 0x0000)
struct WB_Tab_VideoSettings_C_LoadComboBoxSettings final
{
public:
	class FString                                 CallFunc_GetWindowModeString_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResolution_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_LoadComboBoxSettings) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_LoadComboBoxSettings");
static_assert(sizeof(WB_Tab_VideoSettings_C_LoadComboBoxSettings) == 0x000020, "Wrong size on WB_Tab_VideoSettings_C_LoadComboBoxSettings");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadComboBoxSettings, CallFunc_GetWindowModeString_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_LoadComboBoxSettings::CallFunc_GetWindowModeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadComboBoxSettings, CallFunc_GetResolution_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_LoadComboBoxSettings::CallFunc_GetResolution_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.LoadCurrentSettings
// 0x0068 (0x0068 - 0x0000)
struct WB_Tab_VideoSettings_C_LoadCurrentSettings final
{
public:
	int32                                         CallFunc_GetTextureQuality_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVisualEffectQuality_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPostProcessingQuality_ReturnValue;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetShadowQuality_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewDistanceQuality_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAntiAliasingQuality_ReturnValue;       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFrameRateLimit_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetResolutionScale_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMotionBlur_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetFieldOfView_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayGamma_DisplayGamma;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSharpen_Sharpen;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFPSCounter_FPSCounter;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAAMethod_AAMethod;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetReflectionsQuality_ReturnValue;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAutoExposureMethod_ReturnValue;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVSyncEnabled_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetGamma_gamma_ImplicitCast;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_LoadCurrentSettings) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_LoadCurrentSettings");
static_assert(sizeof(WB_Tab_VideoSettings_C_LoadCurrentSettings) == 0x000068, "Wrong size on WB_Tab_VideoSettings_C_LoadCurrentSettings");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetTextureQuality_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetTextureQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetVisualEffectQuality_ReturnValue) == 0x000004, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetVisualEffectQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetPostProcessingQuality_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetPostProcessingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetShadowQuality_ReturnValue) == 0x00000C, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetShadowQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetViewDistanceQuality_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetViewDistanceQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetAntiAliasingQuality_ReturnValue) == 0x000014, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetAntiAliasingQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetFrameRateLimit_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetFrameRateLimit_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetResolutionScale_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetResolutionScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetMotionBlur_ReturnValue) == 0x000028, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetMotionBlur_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetFieldOfView_ReturnValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetFieldOfView_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetDisplayGamma_DisplayGamma) == 0x000038, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetDisplayGamma_DisplayGamma' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetSharpen_Sharpen) == 0x000048, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetSharpen_Sharpen' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetFPSCounter_FPSCounter) == 0x000050, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetFPSCounter_FPSCounter' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetAAMethod_AAMethod) == 0x000054, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetAAMethod_AAMethod' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetReflectionsQuality_ReturnValue) == 0x000058, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetReflectionsQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_GetAutoExposureMethod_ReturnValue) == 0x00005C, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_GetAutoExposureMethod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_IsVSyncEnabled_ReturnValue) == 0x000060, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_IsVSyncEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_LoadCurrentSettings, CallFunc_SetGamma_gamma_ImplicitCast) == 0x000064, "Member 'WB_Tab_VideoSettings_C_LoadCurrentSettings::CallFunc_SetGamma_gamma_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.NavigateList
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_NavigateList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_NavigateVerticalPanelWidget_WidgetToFocus; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_NavigateList) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_NavigateList");
static_assert(sizeof(WB_Tab_VideoSettings_C_NavigateList) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_NavigateList");
static_assert(offsetof(WB_Tab_VideoSettings_C_NavigateList, Navigation_0) == 0x000000, "Member 'WB_Tab_VideoSettings_C_NavigateList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_NavigateList, ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_NavigateList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_NavigateList, CallFunc_NavigateVerticalPanelWidget_WidgetToFocus) == 0x000010, "Member 'WB_Tab_VideoSettings_C_NavigateList::CallFunc_NavigateVerticalPanelWidget_WidgetToFocus' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.SaveSettings
// 0x0060 (0x0060 - 0x0000)
struct WB_Tab_VideoSettings_C_SaveSettings final
{
public:
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MinScaleValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetResolutionScaleInformationEx_MaxScaleValue; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_PrintFloat_Float_ImplicitCast;            // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_SaveSettings) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_SaveSettings");
static_assert(sizeof(WB_Tab_VideoSettings_C_SaveSettings) == 0x000060, "Wrong size on WB_Tab_VideoSettings_C_SaveSettings");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_GetGameUserSettings_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_Concat_StrStr_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized) == 0x000028, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_GetResolutionScaleInformationEx_CurrentScaleNormalized' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue) == 0x00002C, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_GetResolutionScaleInformationEx_CurrentScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_GetResolutionScaleInformationEx_MinScaleValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_GetResolutionScaleInformationEx_MinScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_GetResolutionScaleInformationEx_MaxScaleValue) == 0x000034, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_GetResolutionScaleInformationEx_MaxScaleValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000038, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SaveSettings, CallFunc_PrintFloat_Float_ImplicitCast) == 0x000058, "Member 'WB_Tab_VideoSettings_C_SaveSettings::CallFunc_PrintFloat_Float_ImplicitCast' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.SetSettingsVisibilityForPlatform
// 0x0048 (0x0048 - 0x0000)
struct WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform final
{
public:
	TArray<class UUserWidget*>                    SettingsToHideOnConsole;                           // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_XboxOnePlatform_ReturnValue;              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DesktopPlatform_ReturnValue;              // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SwitchPlatform_ReturnValue;               // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform");
static_assert(sizeof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform) == 0x000048, "Wrong size on WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, SettingsToHideOnConsole) == 0x000000, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::SettingsToHideOnConsole' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Ps4Platform_ReturnValue) == 0x000024, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_XboxOnePlatform_ReturnValue) == 0x000025, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_XboxOnePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_DesktopPlatform_ReturnValue) == 0x000026, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_DesktopPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_SwitchPlatform_ReturnValue) == 0x000027, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_SwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform, K2Node_MakeArray_Array) == 0x000038, "Member 'WB_Tab_VideoSettings_C_SetSettingsVisibilityForPlatform::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.StoreReferences
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_VideoSettings_C_StoreReferences final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_StoreReferences) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_StoreReferences");
static_assert(sizeof(WB_Tab_VideoSettings_C_StoreReferences) == 0x000018, "Wrong size on WB_Tab_VideoSettings_C_StoreReferences");
static_assert(offsetof(WB_Tab_VideoSettings_C_StoreReferences, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_StoreReferences::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_StoreReferences, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_Tab_VideoSettings_C_StoreReferences::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_StoreReferences, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_Tab_VideoSettings_C_StoreReferences::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Tab_VideoSettings_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_Tick) == 0x000004, "Wrong alignment on WB_Tab_VideoSettings_C_Tick");
static_assert(sizeof(WB_Tab_VideoSettings_C_Tick) == 0x00003C, "Wrong size on WB_Tab_VideoSettings_C_Tick");
static_assert(offsetof(WB_Tab_VideoSettings_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Tab_VideoSettings_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Tab_VideoSettings_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.UpdateAAMethod
// 0x0030 (0x0030 - 0x0000)
struct WB_Tab_VideoSettings_C_UpdateAAMethod final
{
public:
	int32                                         MethodID;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_UpdateAAMethod) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_UpdateAAMethod");
static_assert(sizeof(WB_Tab_VideoSettings_C_UpdateAAMethod) == 0x000030, "Wrong size on WB_Tab_VideoSettings_C_UpdateAAMethod");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateAAMethod, MethodID) == 0x000000, "Member 'WB_Tab_VideoSettings_C_UpdateAAMethod::MethodID' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateAAMethod, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'WB_Tab_VideoSettings_C_UpdateAAMethod::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateAAMethod, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'WB_Tab_VideoSettings_C_UpdateAAMethod::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateAAMethod, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_UpdateAAMethod::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.UpdateComboBoxValues
// 0x0060 (0x0060 - 0x0000)
struct WB_Tab_VideoSettings_C_UpdateComboBoxValues final
{
public:
	class FString                                 CallFunc_GetAAModeString_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetWindowModeString_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0030(0x0010)()
	class FString                                 CallFunc_GetResolution_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0050(0x0010)()
};
static_assert(alignof(WB_Tab_VideoSettings_C_UpdateComboBoxValues) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_UpdateComboBoxValues");
static_assert(sizeof(WB_Tab_VideoSettings_C_UpdateComboBoxValues) == 0x000060, "Wrong size on WB_Tab_VideoSettings_C_UpdateComboBoxValues");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_GetAAModeString_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_GetAAModeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_GetWindowModeString_ReturnValue) == 0x000010, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_GetWindowModeString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000030, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_GetResolution_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_GetResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateComboBoxValues, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000050, "Member 'WB_Tab_VideoSettings_C_UpdateComboBoxValues::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");

// Function WB_Tab_VideoSettings.WB_Tab_VideoSettings_C.UpdateWidgetValues
// 0x0048 (0x0048 - 0x0000)
struct WB_Tab_VideoSettings_C_UpdateWidgetValues final
{
public:
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ConvertFrameRateLimitToIndex_Index;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_VideoSettings_C_UpdateWidgetValues) == 0x000008, "Wrong alignment on WB_Tab_VideoSettings_C_UpdateWidgetValues");
static_assert(sizeof(WB_Tab_VideoSettings_C_UpdateWidgetValues) == 0x000048, "Wrong size on WB_Tab_VideoSettings_C_UpdateWidgetValues");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000000, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000008, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000010, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000018, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000020, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_ConvertFrameRateLimitToIndex_Index) == 0x000028, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_ConvertFrameRateLimitToIndex_Index' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000030, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x000038, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Tab_VideoSettings_C_UpdateWidgetValues, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'WB_Tab_VideoSettings_C_UpdateWidgetValues::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}

