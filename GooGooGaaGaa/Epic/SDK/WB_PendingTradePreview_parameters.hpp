#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PendingTradePreview

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "MasterServerPlugin_structs.hpp"


namespace SDK::Params
{

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.ExecuteUbergraph_WB_PendingTradePreview
// 0x0078 (0x0078 - 0x0000)
struct WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTradeRequest                          K2Node_CustomEvent_Request;                        // 0x0020(0x0050)()
	bool                                          K2Node_CustomEvent_IsIncoming;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview) == 0x000008, "Wrong alignment on WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview");
static_assert(sizeof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview) == 0x000078, "Wrong size on WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, EntryPoint) == 0x000000, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, CallFunc_IsGamepadMode_ReturnValue) == 0x000019, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, K2Node_CustomEvent_Request) == 0x000020, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::K2Node_CustomEvent_Request' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview, K2Node_CustomEvent_IsIncoming) == 0x000070, "Member 'WB_PendingTradePreview_C_ExecuteUbergraph_WB_PendingTradePreview::K2Node_CustomEvent_IsIncoming' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_PendingTradePreview_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_PendingTradePreview_C_GetInitialFocusWidget");
static_assert(sizeof(WB_PendingTradePreview_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_PendingTradePreview_C_GetInitialFocusWidget");
static_assert(offsetof(WB_PendingTradePreview_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_PendingTradePreview_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.GetSelectedIndex
// 0x0020 (0x0020 - 0x0000)
struct WB_PendingTradePreview_C_GetSelectedIndex final
{
public:
	class UWB_TradePreview_C*                     PreviewList;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_GetSelectedIndex) == 0x000008, "Wrong alignment on WB_PendingTradePreview_C_GetSelectedIndex");
static_assert(sizeof(WB_PendingTradePreview_C_GetSelectedIndex) == 0x000020, "Wrong size on WB_PendingTradePreview_C_GetSelectedIndex");
static_assert(offsetof(WB_PendingTradePreview_C_GetSelectedIndex, PreviewList) == 0x000000, "Member 'WB_PendingTradePreview_C_GetSelectedIndex::PreviewList' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_GetSelectedIndex, SelectedIndex) == 0x000008, "Member 'WB_PendingTradePreview_C_GetSelectedIndex::SelectedIndex' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_GetSelectedIndex, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_PendingTradePreview_C_GetSelectedIndex::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_GetSelectedIndex, CallFunc_GetIndexForItem_ReturnValue) == 0x000018, "Member 'WB_PendingTradePreview_C_GetSelectedIndex::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.InitializePreview
// 0x0058 (0x0058 - 0x0000)
struct WB_PendingTradePreview_C_InitializePreview final
{
public:
	struct FTradeRequest                          Request;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsIncoming_0;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_InitializePreview) == 0x000008, "Wrong alignment on WB_PendingTradePreview_C_InitializePreview");
static_assert(sizeof(WB_PendingTradePreview_C_InitializePreview) == 0x000058, "Wrong size on WB_PendingTradePreview_C_InitializePreview");
static_assert(offsetof(WB_PendingTradePreview_C_InitializePreview, Request) == 0x000000, "Member 'WB_PendingTradePreview_C_InitializePreview::Request' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_InitializePreview, IsIncoming_0) == 0x000050, "Member 'WB_PendingTradePreview_C_InitializePreview::IsIncoming_0' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.NavigateBetweenPreviews
// 0x006C (0x006C - 0x0000)
struct WB_PendingTradePreview_C_NavigateBetweenPreviews final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexToSelect;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue_2;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_3;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_4;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_1;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue_5;                // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_2;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_6;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_4;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue_7;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_8;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_5;        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_6;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_3;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_7;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_NavigateBetweenPreviews) == 0x000004, "Wrong alignment on WB_PendingTradePreview_C_NavigateBetweenPreviews");
static_assert(sizeof(WB_PendingTradePreview_C_NavigateBetweenPreviews) == 0x00006C, "Wrong size on WB_PendingTradePreview_C_NavigateBetweenPreviews");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, Navigation_0) == 0x000000, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, IndexToSelect) == 0x000004, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::IndexToSelect' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue) == 0x00000C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_1) == 0x000010, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_2) == 0x00001C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_3) == 0x000020, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000024, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_4) == 0x00002C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetSelectedIndex_SelectedIndex) == 0x000030, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000034, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000038, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetSelectedIndex_SelectedIndex_1) == 0x00003C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetSelectedIndex_SelectedIndex_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x000040, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_5) == 0x000044, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetSelectedIndex_SelectedIndex_2) == 0x00004C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetSelectedIndex_SelectedIndex_2' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_6) == 0x000050, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_4) == 0x000054, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000055, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_7) == 0x000058, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetNumItems_ReturnValue_8) == 0x00005C, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetNumItems_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_5) == 0x000060, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_6) == 0x000061, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GetSelectedIndex_SelectedIndex_3) == 0x000064, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GetSelectedIndex_SelectedIndex_3' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_NavigateBetweenPreviews, CallFunc_GreaterEqual_IntInt_ReturnValue_7) == 0x000068, "Member 'WB_PendingTradePreview_C_NavigateBetweenPreviews::CallFunc_GreaterEqual_IntInt_ReturnValue_7' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.SetInitialSelection
// 0x0008 (0x0008 - 0x0000)
struct WB_PendingTradePreview_C_SetInitialSelection final
{
public:
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PendingTradePreview_C_SetInitialSelection) == 0x000004, "Wrong alignment on WB_PendingTradePreview_C_SetInitialSelection");
static_assert(sizeof(WB_PendingTradePreview_C_SetInitialSelection) == 0x000008, "Wrong size on WB_PendingTradePreview_C_SetInitialSelection");
static_assert(offsetof(WB_PendingTradePreview_C_SetInitialSelection, CallFunc_GetNumItems_ReturnValue) == 0x000000, "Member 'WB_PendingTradePreview_C_SetInitialSelection::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_SetInitialSelection, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WB_PendingTradePreview_C_SetInitialSelection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_PendingTradePreview.WB_PendingTradePreview_C.UpdateItemLists
// 0x0028 (0x0028 - 0x0000)
struct WB_PendingTradePreview_C_UpdateItemLists final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTradingItem>                   K2Node_Select_Default;                             // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FTradingItem>                   K2Node_Select_Default_1;                           // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(WB_PendingTradePreview_C_UpdateItemLists) == 0x000008, "Wrong alignment on WB_PendingTradePreview_C_UpdateItemLists");
static_assert(sizeof(WB_PendingTradePreview_C_UpdateItemLists) == 0x000028, "Wrong size on WB_PendingTradePreview_C_UpdateItemLists");
static_assert(offsetof(WB_PendingTradePreview_C_UpdateItemLists, Temp_bool_Variable) == 0x000000, "Member 'WB_PendingTradePreview_C_UpdateItemLists::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_UpdateItemLists, Temp_bool_Variable_1) == 0x000001, "Member 'WB_PendingTradePreview_C_UpdateItemLists::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_UpdateItemLists, K2Node_Select_Default) == 0x000008, "Member 'WB_PendingTradePreview_C_UpdateItemLists::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_PendingTradePreview_C_UpdateItemLists, K2Node_Select_Default_1) == 0x000018, "Member 'WB_PendingTradePreview_C_UpdateItemLists::K2Node_Select_Default_1' has a wrong offset!");

}

