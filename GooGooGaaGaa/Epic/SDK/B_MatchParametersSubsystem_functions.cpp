#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MatchParametersSubsystem

#include "Basic.hpp"

#include "B_MatchParametersSubsystem_classes.hpp"
#include "B_MatchParametersSubsystem_parameters.hpp"


namespace SDK
{

// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.ApplyMatchRules
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_MatchRules>            MatchRules                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_MatchParametersSubsystem_C::ApplyMatchRules(TArray<struct FS_MatchRules>& MatchRules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "ApplyMatchRules");

	Params::B_MatchParametersSubsystem_C_ApplyMatchRules Parms{};

	Parms.MatchRules = std::move(MatchRules);

	UObject::ProcessEvent(Func, &Parms);

	MatchRules = std::move(Parms.MatchRules);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.ExecuteUbergraph_B_MatchParametersSubsystem
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MatchParametersSubsystem_C::ExecuteUbergraph_B_MatchParametersSubsystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "ExecuteUbergraph_B_MatchParametersSubsystem");

	Params::B_MatchParametersSubsystem_C_ExecuteUbergraph_B_MatchParametersSubsystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.GetDefaultMatchParameterValue
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_MatchRuleType                         SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUIParameterData                 UIPameter                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FUIParam                         DefaultValue                                           (Parm, OutParm, NoDestructor)

void UB_MatchParametersSubsystem_C::GetDefaultMatchParameterValue(E_MatchRuleType SkillType, const struct FUIParameterData& UIPameter, struct FUIParam* DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "GetDefaultMatchParameterValue");

	Params::B_MatchParametersSubsystem_C_GetDefaultMatchParameterValue Parms{};

	Parms.SkillType = SkillType;
	Parms.UIPameter = std::move(UIPameter);

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultValue != nullptr)
		*DefaultValue = std::move(Parms.DefaultValue);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.GetUIParameters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_MatchRuleType                         MatchRuleType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUIParameterData>         UIParameters                                           (Parm, OutParm)

void UB_MatchParametersSubsystem_C::GetUIParameters(E_MatchRuleType MatchRuleType, TArray<struct FUIParameterData>* UIParameters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "GetUIParameters");

	Params::B_MatchParametersSubsystem_C_GetUIParameters Parms{};

	Parms.MatchRuleType = MatchRuleType;

	UObject::ProcessEvent(Func, &Parms);

	if (UIParameters != nullptr)
		*UIParameters = std::move(Parms.UIParameters);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.InitializeDefaultMatchParameters
// (Public, BlueprintCallable, BlueprintEvent)

void UB_MatchParametersSubsystem_C::InitializeDefaultMatchParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "InitializeDefaultMatchParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.InitializeSubsystem
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UB_MatchParametersSubsystem_C::InitializeSubsystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "InitializeSubsystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.IsMatchParameterUsingRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_MatchRuleType                         SkillType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsUsingRules                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MatchParametersSubsystem_C::IsMatchParameterUsingRules(E_MatchRuleType SkillType, bool* IsUsingRules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "IsMatchParameterUsingRules");

	Params::B_MatchParametersSubsystem_C_IsMatchParameterUsingRules Parms{};

	Parms.SkillType = SkillType;

	UObject::ProcessEvent(Func, &Parms);

	if (IsUsingRules != nullptr)
		*IsUsingRules = Parms.IsUsingRules;
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.IsUsingCustomRules
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    CustomRules                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_MatchParametersSubsystem_C::IsUsingCustomRules(bool* CustomRules)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "IsUsingCustomRules");

	Params::B_MatchParametersSubsystem_C_IsUsingCustomRules Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CustomRules != nullptr)
		*CustomRules = Parms.CustomRules;
}


// Function B_MatchParametersSubsystem.B_MatchParametersSubsystem_C.MatchRulesUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_MatchParametersSubsystem_C::MatchRulesUpdated__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MatchParametersSubsystem_C", "MatchRulesUpdated__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

