#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ProgressionCounter

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ProgressionCounter.B_ProgressionCounter_C
// 0x0060 (0x0088 - 0x0028)
class UB_ProgressionCounter_C : public UObject
{
public:
	FMulticastInlineDelegateProperty_             GrantFinished;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        RemainingValue;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ValuePerSecond;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             StartGranting;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        CurrentValue;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             UpdateCurrentValue;                                // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ValueExceedProgressionTarget;                      // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UB_ProgressionManager_C*                ProgressionManager;                                // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void HandleExceedingProgressionTarget();
	void IsValueExceedingProgressionTarget(bool* ValueEceedsProgressionTarget);
	void UpdateCurrentToRemainingValue(double TimeDelta);
	void Update_Value(double TimeDelta);
	void GrantValue(double Amount, const class FText& ValueName, double Time);
	void ValueExceedProgressionTarget__DelegateSignature();
	void UpdateCurrentValue__DelegateSignature();
	void StartGranting__DelegateSignature(const class FText& ValueName, int32 TotalAmount);
	void GrantFinished__DelegateSignature(bool NoValueGranted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ProgressionCounter_C">();
	}
	static class UB_ProgressionCounter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ProgressionCounter_C>();
	}
};
static_assert(alignof(UB_ProgressionCounter_C) == 0x000008, "Wrong alignment on UB_ProgressionCounter_C");
static_assert(sizeof(UB_ProgressionCounter_C) == 0x000088, "Wrong size on UB_ProgressionCounter_C");
static_assert(offsetof(UB_ProgressionCounter_C, GrantFinished) == 0x000028, "Member 'UB_ProgressionCounter_C::GrantFinished' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, RemainingValue) == 0x000038, "Member 'UB_ProgressionCounter_C::RemainingValue' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, ValuePerSecond) == 0x000040, "Member 'UB_ProgressionCounter_C::ValuePerSecond' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, StartGranting) == 0x000048, "Member 'UB_ProgressionCounter_C::StartGranting' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, CurrentValue) == 0x000058, "Member 'UB_ProgressionCounter_C::CurrentValue' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, UpdateCurrentValue) == 0x000060, "Member 'UB_ProgressionCounter_C::UpdateCurrentValue' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, ValueExceedProgressionTarget) == 0x000070, "Member 'UB_ProgressionCounter_C::ValueExceedProgressionTarget' has a wrong offset!");
static_assert(offsetof(UB_ProgressionCounter_C, ProgressionManager) == 0x000080, "Member 'UB_ProgressionCounter_C::ProgressionManager' has a wrong offset!");

}

