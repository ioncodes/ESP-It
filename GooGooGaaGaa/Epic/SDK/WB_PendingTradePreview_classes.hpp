#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PendingTradePreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PendingTradePreview.WB_PendingTradePreview_C
// 0x0078 (0x0358 - 0x02E0)
class UWB_PendingTradePreview_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_C*                           Back;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TradePreview_C*                     ReceivingPreview;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TradePreview_C*                     SendingPreview;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTradeRequest                          TradeRequest;                                      // 0x0300(0x0050)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          IsIncoming;                                        // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__WB_PendingTradePreview_Back_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature();
	void ExecuteUbergraph_WB_PendingTradePreview(int32 EntryPoint);
	void GetInitialFocusWidget(class UUserWidget** InitialFocusWidget);
	void GetSelectedIndex(class UWB_TradePreview_C* PreviewList, int32* SelectedIndex);
	void InitializePreview(const struct FTradeRequest& Request, bool IsIncoming_0);
	void NavigateBetweenPreviews(EUINavigation Navigation_0);
	void OnApply();
	void OnBack();
	void OnSpecialAction();
	void SetInitialSelection();
	void UpdateItemLists();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PendingTradePreview_C">();
	}
	static class UWB_PendingTradePreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PendingTradePreview_C>();
	}
};
static_assert(alignof(UWB_PendingTradePreview_C) == 0x000008, "Wrong alignment on UWB_PendingTradePreview_C");
static_assert(sizeof(UWB_PendingTradePreview_C) == 0x000358, "Wrong size on UWB_PendingTradePreview_C");
static_assert(offsetof(UWB_PendingTradePreview_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_PendingTradePreview_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PendingTradePreview_C, Back) == 0x0002E8, "Member 'UWB_PendingTradePreview_C::Back' has a wrong offset!");
static_assert(offsetof(UWB_PendingTradePreview_C, ReceivingPreview) == 0x0002F0, "Member 'UWB_PendingTradePreview_C::ReceivingPreview' has a wrong offset!");
static_assert(offsetof(UWB_PendingTradePreview_C, SendingPreview) == 0x0002F8, "Member 'UWB_PendingTradePreview_C::SendingPreview' has a wrong offset!");
static_assert(offsetof(UWB_PendingTradePreview_C, TradeRequest) == 0x000300, "Member 'UWB_PendingTradePreview_C::TradeRequest' has a wrong offset!");
static_assert(offsetof(UWB_PendingTradePreview_C, IsIncoming) == 0x000350, "Member 'UWB_PendingTradePreview_C::IsIncoming' has a wrong offset!");

}

