#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamWorkshop

#include "Basic.hpp"

#include "SteamWorkshop_classes.hpp"
#include "SteamWorkshop_parameters.hpp"


namespace SDK
{

// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemAppDependency.SteamWorkshop_AddRemoveAppDependency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSteamAppId                      DependendAppId                                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAddAppDependency                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxyAddRemoveWorkshopItemAppDependency*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyAddRemoveWorkshopItemAppDependency* UCallbackProxyAddRemoveWorkshopItemAppDependency::SteamWorkshop_AddRemoveAppDependency(const struct FSteamUGCItemId& ItemId, const struct FSteamAppId& DependendAppId, bool bAddAppDependency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyAddRemoveWorkshopItemAppDependency", "SteamWorkshop_AddRemoveAppDependency");

	Params::CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.DependendAppId = std::move(DependendAppId);
	Parms.bAddAppDependency = bAddAppDependency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemFavorite.SteamWorkshop_AddRemoveItemFavorite
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAddToFavourites                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxyAddRemoveWorkshopItemFavorite*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyAddRemoveWorkshopItemFavorite* UCallbackProxyAddRemoveWorkshopItemFavorite::SteamWorkshop_AddRemoveItemFavorite(const struct FSteamUGCItemId& ItemId, bool bAddToFavourites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyAddRemoveWorkshopItemFavorite", "SteamWorkshop_AddRemoveItemFavorite");

	Params::CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bAddToFavourites = bAddToFavourites;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemItemdependency.SteamWorkshop_AddRemoveItemDependency
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSteamUGCItemId                  DependendItemId                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bAddDependency                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxyAddRemoveWorkshopItemItemdependency*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyAddRemoveWorkshopItemItemdependency* UCallbackProxyAddRemoveWorkshopItemItemdependency::SteamWorkshop_AddRemoveItemDependency(const struct FSteamUGCItemId& ItemId, const struct FSteamUGCItemId& DependendItemId, bool bAddDependency)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyAddRemoveWorkshopItemItemdependency", "SteamWorkshop_AddRemoveItemDependency");

	Params::CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.DependendItemId = std::move(DependendItemId);
	Parms.bAddDependency = bAddDependency;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyCreateWorkshopItem.SteamWorkshop_CreateItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamWorkshopUpdateDetails      ItemDetails                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UCallbackProxyCreateWorkshopItem* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyCreateWorkshopItem* UCallbackProxyCreateWorkshopItem::SteamWorkshop_CreateItem(const struct FSteamWorkshopUpdateDetails& ItemDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyCreateWorkshopItem", "SteamWorkshop_CreateItem");

	Params::CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem Parms{};

	Parms.ItemDetails = std::move(ItemDetails);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyDeleteWorkshopItem.SteamWorkshop_DeleteItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UCallbackProxyDeleteWorkshopItem* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyDeleteWorkshopItem* UCallbackProxyDeleteWorkshopItem::SteamWorkshop_DeleteItem(const struct FSteamUGCItemId& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyDeleteWorkshopItem", "SteamWorkshop_DeleteItem");

	Params::CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyGetWorkshopItemAppDependencies.SteamWorkshop_GetAppDependencies
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UCallbackProxyGetWorkshopItemAppDependencies*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyGetWorkshopItemAppDependencies* UCallbackProxyGetWorkshopItemAppDependencies::SteamWorkshop_GetAppDependencies(const struct FSteamUGCItemId& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyGetWorkshopItemAppDependencies", "SteamWorkshop_GetAppDependencies");

	Params::CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyGetUserVoteOnWorkshopItem.SteamWorkshop_GetUserVoteOnItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class UCallbackProxyGetUserVoteOnWorkshopItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyGetUserVoteOnWorkshopItem* UCallbackProxyGetUserVoteOnWorkshopItem::SteamWorkshop_GetUserVoteOnItem(const struct FSteamUGCItemId& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyGetUserVoteOnWorkshopItem", "SteamWorkshop_GetUserVoteOnItem");

	Params::CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyQueryWorkshopForAllItems.SteamWorkshop_QueryForAllItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCQueryParameterAll       Parameter                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UCallbackProxyQueryWorkshopForAllItems*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyQueryWorkshopForAllItems* UCallbackProxyQueryWorkshopForAllItems::SteamWorkshop_QueryForAllItems(const struct FSteamUGCQueryParameterAll& Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyQueryWorkshopForAllItems", "SteamWorkshop_QueryForAllItems");

	Params::CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems Parms{};

	Parms.Parameter = std::move(Parameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyQueryWorkshopForItemDetails.SteamWorkshop_QueryForItemDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCQueryParameterDetails   Parameter                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UCallbackProxyQueryWorkshopForItemDetails*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyQueryWorkshopForItemDetails* UCallbackProxyQueryWorkshopForItemDetails::SteamWorkshop_QueryForItemDetails(const struct FSteamUGCQueryParameterDetails& Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyQueryWorkshopForItemDetails", "SteamWorkshop_QueryForItemDetails");

	Params::CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails Parms{};

	Parms.Parameter = std::move(Parameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyQueryWorkshopForUserItems.SteamWorkshop_QueryForUserItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCQueryParameterUser      Parameter                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UCallbackProxyQueryWorkshopForUserItems*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyQueryWorkshopForUserItems* UCallbackProxyQueryWorkshopForUserItems::SteamWorkshop_QueryForUserItems(const struct FSteamUGCQueryParameterUser& Parameter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyQueryWorkshopForUserItems", "SteamWorkshop_QueryForUserItems");

	Params::CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems Parms{};

	Parms.Parameter = std::move(Parameter);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxySetUserVoteOnWorkshopItem.SteamWorkshop_SetUserVoteOnItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bVoteUp                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxySetUserVoteOnWorkshopItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxySetUserVoteOnWorkshopItem* UCallbackProxySetUserVoteOnWorkshopItem::SteamWorkshop_SetUserVoteOnItem(const struct FSteamUGCItemId& ItemId, bool bVoteUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxySetUserVoteOnWorkshopItem", "SteamWorkshop_SetUserVoteOnItem");

	Params::CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bVoteUp = bVoteUp;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyStartStopWorkshopItemsPlaytimeTracking.SteamWorkshop_StartStopItemsPlaytimeTracking
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FSteamUGCItemId>          ItemIds                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bStartPlaytimeTracking                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxyStartStopWorkshopItemsPlaytimeTracking*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyStartStopWorkshopItemsPlaytimeTracking* UCallbackProxyStartStopWorkshopItemsPlaytimeTracking::SteamWorkshop_StartStopItemsPlaytimeTracking(const TArray<struct FSteamUGCItemId>& ItemIds, bool bStartPlaytimeTracking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyStartStopWorkshopItemsPlaytimeTracking", "SteamWorkshop_StartStopItemsPlaytimeTracking");

	Params::CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking Parms{};

	Parms.ItemIds = std::move(ItemIds);
	Parms.bStartPlaytimeTracking = bStartPlaytimeTracking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems.SteamWorkshop_StopPlaytimeTrackingAllItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UCallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems* UCallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems::SteamWorkshop_StopPlaytimeTrackingAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems", "SteamWorkshop_StopPlaytimeTrackingAllItems");

	Params::CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxySubscribeUnsubscribeWorkshopItem.SteamWorkshop_SubscribeUnsubscribeItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bSubscribe                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxySubscribeUnsubscribeWorkshopItem*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxySubscribeUnsubscribeWorkshopItem* UCallbackProxySubscribeUnsubscribeWorkshopItem::SteamWorkshop_SubscribeUnsubscribeItem(const struct FSteamUGCItemId& ItemId, bool bSubscribe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxySubscribeUnsubscribeWorkshopItem", "SteamWorkshop_SubscribeUnsubscribeItem");

	Params::CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bSubscribe = bSubscribe;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.CallbackProxyUpdateWorkshopItem.SteamWorkshop_UpdateItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSteamWorkshopUpdateDetails      UpdateDetails                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TDelegate<void(const struct FSteamUGCUpdateHandle& UpdateHandle)>OnUpdateStarted                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCallbackProxyUpdateWorkshopItem* ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UCallbackProxyUpdateWorkshopItem* UCallbackProxyUpdateWorkshopItem::SteamWorkshop_UpdateItem(const struct FSteamUGCItemId& ItemId, const struct FSteamWorkshopUpdateDetails& UpdateDetails, const TDelegate<void(const struct FSteamUGCUpdateHandle& UpdateHandle)>& OnUpdateStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("CallbackProxyUpdateWorkshopItem", "SteamWorkshop_UpdateItem");

	Params::CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.UpdateDetails = std::move(UpdateDetails);
	Parms.OnUpdateStarted = OnUpdateStarted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamUGCQueryParameterTagsAllUser
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   RequiredTags                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   ExcludedTags                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FSteamKeyValuePair>       RequiredKeyValueTags                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSteamUGCQueryParameterTagsAllUserReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSteamUGCQueryParameterTagsAllUser USteamWorkshopLibrary::MakeSteamUGCQueryParameterTagsAllUser(const TArray<class FString>& RequiredTags, const TArray<class FString>& ExcludedTags, const TArray<struct FSteamKeyValuePair>& RequiredKeyValueTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "MakeSteamUGCQueryParameterTagsAllUser");

	Params::SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser Parms{};

	Parms.RequiredTags = std::move(RequiredTags);
	Parms.ExcludedTags = std::move(ExcludedTags);
	Parms.RequiredKeyValueTags = std::move(RequiredKeyValueTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamUGCQueryParameterTagsAllUserDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSteamKeyValuePair>       RequiredKeyValueTags                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSteamUGCQueryParameterTagsAllUserDetailsReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSteamUGCQueryParameterTagsAllUserDetails USteamWorkshopLibrary::MakeSteamUGCQueryParameterTagsAllUserDetails(const TArray<struct FSteamKeyValuePair>& RequiredKeyValueTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "MakeSteamUGCQueryParameterTagsAllUserDetails");

	Params::SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails Parms{};

	Parms.RequiredKeyValueTags = std::move(RequiredKeyValueTags);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamWorkshopUpdateDetails
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Title                                                  (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Description                                            (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UpdateNotice                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           MetaData                                               (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Tags                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FSteamKeyValuePair>       KeyValueTags                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           ContentDirectory                                       (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           PreviewImage                                           (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   AdditionalImages                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   YoutubeVideoIDs                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class FString>                   KeysOfKeyValueTagsToRemove                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           IndexOfPreviewToRemove                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// ESteamSupportedLanguages                UpdateLanguage                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESteamItemVisibility                    Visibility                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSteamWorkshopUpdateDetails      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FSteamWorkshopUpdateDetails USteamWorkshopLibrary::MakeSteamWorkshopUpdateDetails(const class FString& Title, const class FString& Description, const class FString& UpdateNotice, const class FString& MetaData, const TArray<class FString>& Tags, const TArray<struct FSteamKeyValuePair>& KeyValueTags, const class FString& ContentDirectory, const class FString& PreviewImage, const TArray<class FString>& AdditionalImages, const TArray<class FString>& YoutubeVideoIDs, const TArray<class FString>& KeysOfKeyValueTagsToRemove, const TArray<int32>& IndexOfPreviewToRemove, const ESteamSupportedLanguages UpdateLanguage, const ESteamItemVisibility Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "MakeSteamWorkshopUpdateDetails");

	Params::SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails Parms{};

	Parms.Title = std::move(Title);
	Parms.Description = std::move(Description);
	Parms.UpdateNotice = std::move(UpdateNotice);
	Parms.MetaData = std::move(MetaData);
	Parms.Tags = std::move(Tags);
	Parms.KeyValueTags = std::move(KeyValueTags);
	Parms.ContentDirectory = std::move(ContentDirectory);
	Parms.PreviewImage = std::move(PreviewImage);
	Parms.AdditionalImages = std::move(AdditionalImages);
	Parms.YoutubeVideoIDs = std::move(YoutubeVideoIDs);
	Parms.KeysOfKeyValueTagsToRemove = std::move(KeysOfKeyValueTagsToRemove);
	Parms.IndexOfPreviewToRemove = std::move(IndexOfPreviewToRemove);
	Parms.UpdateLanguage = UpdateLanguage;
	Parms.Visibility = Visibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.PrintWorkshopItemDetails
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSteamWorkshopItemDetails        ItemDetails                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                                   DisplayTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPrintToScreen                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bPrintToLog                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USteamWorkshopLibrary::PrintWorkshopItemDetails(const struct FSteamWorkshopItemDetails& ItemDetails, float DisplayTime, const struct FLinearColor& Color, bool bPrintToScreen, bool bPrintToLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "PrintWorkshopItemDetails");

	Params::SteamWorkshopLibrary_PrintWorkshopItemDetails Parms{};

	Parms.ItemDetails = std::move(ItemDetails);
	Parms.DisplayTime = DisplayTime;
	Parms.Color = std::move(Color);
	Parms.bPrintToScreen = bPrintToScreen;
	Parms.bPrintToLog = bPrintToLog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamDelegate_OnWorkshopItemDownloaded_Bind
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FDownloadItemResult& Result)>DelegateToCall                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USteamWorkshopLibrary::SteamDelegate_OnWorkshopItemDownloaded_Bind(TDelegate<void(const struct FDownloadItemResult& Result)> DelegateToCall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamDelegate_OnWorkshopItemDownloaded_Bind");

	Params::SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind Parms{};

	Parms.DelegateToCall = DelegateToCall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamDelegate_OnWorkshopItemDownloaded_Unbind
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TDelegate<void(const struct FDownloadItemResult& Result)>DelegateToCall                                         (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USteamWorkshopLibrary::SteamDelegate_OnWorkshopItemDownloaded_Unbind(TDelegate<void(const struct FDownloadItemResult& Result)> DelegateToCall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamDelegate_OnWorkshopItemDownloaded_Unbind");

	Params::SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind Parms{};

	Parms.DelegateToCall = DelegateToCall;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_ActivateGameOverlayToWorkshopItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void USteamWorkshopLibrary::SteamWorkshop_ActivateGameOverlayToWorkshopItem(const struct FSteamUGCItemId& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_ActivateGameOverlayToWorkshopItem");

	Params::SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_DownloadItem
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    bHighPriority                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EResultBP                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultBP USteamWorkshopLibrary::SteamWorkshop_DownloadItem(const struct FSteamUGCItemId& ItemId, bool bHighPriority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_DownloadItem");

	Params::SteamWorkshopLibrary_SteamWorkshop_DownloadItem Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.bHighPriority = bHighPriority;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemDownloadInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FWorkshopItemDownloadInfo        DownloadInfo                                           (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// EResultBP                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultBP USteamWorkshopLibrary::SteamWorkshop_GetItemDownloadInfo(const struct FSteamUGCItemId& ItemId, struct FWorkshopItemDownloadInfo* DownloadInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemDownloadInfo");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DownloadInfo != nullptr)
		*DownloadInfo = std::move(Parms.DownloadInfo);

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemInstallInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSteamWorkshopItemInstallInfo    Info                                                   (Parm, OutParm, NativeAccessSpecifierPublic)
// EResultBP                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultBP USteamWorkshopLibrary::SteamWorkshop_GetItemInstallInfo(const struct FSteamUGCItemId& ItemId, struct FSteamWorkshopItemInstallInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemInstallInfo");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemQueryStatistic
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCQueryHandle             QueryHandle                                            (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ItemIndex                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EItemStatisticBP                        StatToRetrieve                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FUInt64                          StatValue                                              (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USteamWorkshopLibrary::SteamWorkshop_GetItemQueryStatistic(const struct FSteamUGCQueryHandle& QueryHandle, const int32 ItemIndex, const EItemStatisticBP StatToRetrieve, struct FUInt64* StatValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemQueryStatistic");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic Parms{};

	Parms.QueryHandle = std::move(QueryHandle);
	Parms.ItemIndex = ItemIndex;
	Parms.StatToRetrieve = StatToRetrieve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (StatValue != nullptr)
		*StatValue = std::move(Parms.StatValue);

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<EItemStateBP>                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<EItemStateBP> USteamWorkshopLibrary::SteamWorkshop_GetItemState(const struct FSteamUGCItemId& ItemId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemState");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemState Parms{};

	Parms.ItemId = std::move(ItemId);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemStateFlag
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCItemId                  ItemId                                                 (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// EItemStateBP                            FlagToQuery                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool USteamWorkshopLibrary::SteamWorkshop_GetItemStateFlag(const struct FSteamUGCItemId& ItemId, const EItemStateBP FlagToQuery)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemStateFlag");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag Parms{};

	Parms.ItemId = std::move(ItemId);
	Parms.FlagToQuery = FlagToQuery;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemUpdateProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSteamUGCUpdateHandle            UpdateHandle                                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FWorkshopItemUpdateInfo          Info                                                   (Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)

void USteamWorkshopLibrary::SteamWorkshop_GetItemUpdateProgress(const struct FSteamUGCUpdateHandle& UpdateHandle, struct FWorkshopItemUpdateInfo* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetItemUpdateProgress");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress Parms{};

	Parms.UpdateHandle = std::move(UpdateHandle);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetNumSubscribedItems
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USteamWorkshopLibrary::SteamWorkshop_GetNumSubscribedItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetNumSubscribedItems");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetSubscribedItems
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   MaxNumItemsToReturn                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSteamUGCItemId>          OutItems                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void USteamWorkshopLibrary::SteamWorkshop_GetSubscribedItems(const int32 MaxNumItemsToReturn, TArray<struct FSteamUGCItemId>* OutItems)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_GetSubscribedItems");

	Params::SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems Parms{};

	Parms.MaxNumItemsToReturn = MaxNumItemsToReturn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutItems != nullptr)
		*OutItems = std::move(Parms.OutItems);
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_SetServerDownloadDirectory
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSteamDepotId                    ServerDepotId                                          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           Directory                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EResultBP                               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

EResultBP USteamWorkshopLibrary::SteamWorkshop_SetServerDownloadDirectory(const struct FSteamDepotId& ServerDepotId, const class FString& Directory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_SetServerDownloadDirectory");

	Params::SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory Parms{};

	Parms.ServerDepotId = std::move(ServerDepotId);
	Parms.Directory = std::move(Directory);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_SuspendResumeDownloads
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                                    bDoSuspend                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USteamWorkshopLibrary::SteamWorkshop_SuspendResumeDownloads(const bool bDoSuspend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_SuspendResumeDownloads");

	Params::SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads Parms{};

	Parms.bDoSuspend = bDoSuspend;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_UpdateDescriptionLengthMin_FromConfig
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USteamWorkshopLibrary::SteamWorkshop_UpdateDescriptionLengthMin_FromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_UpdateDescriptionLengthMin_FromConfig");

	Params::SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_UpdateTitleLengthMin_FromConfig
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 USteamWorkshopLibrary::SteamWorkshop_UpdateTitleLengthMin_FromConfig()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("SteamWorkshopLibrary", "SteamWorkshop_UpdateTitleLengthMin_FromConfig");

	Params::SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

