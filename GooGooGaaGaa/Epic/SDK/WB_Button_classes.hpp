#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Button

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "WB_BaseButton_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Button.WB_Button_C
// 0x0090 (0x07F0 - 0x0760)
class UWB_Button_C final : public UWB_BaseButton_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_Button_C;                        // 0x0758(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FocusAnimation;                                    // 0x0760(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetSwitcher*                        GamepadSwitcher;                                   // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label;                                             // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                MyButton;                                          // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NotifyIcon;                                        // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIconWithLabel_C*          WB_ControllerIconWithLabel;                        // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0790(0x0010)(Edit, BlueprintVisible)
	bool                                          Notify;                                            // 0x07A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   BoundKey;                                          // 0x07A8(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   KeyNone;                                           // 0x07C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ClickedWithSender;                                 // 0x07D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        FontSize;                                          // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeActiveWidget(class UWidget* Widget);
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	ESlateVisibility Get_NotifyIcon_Visibility_0();
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void PreConstruct(bool IsDesignTime);
	void BndEvt__MyButton_K2Node_ComponentBoundEvent_24_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void BndEvt__MyButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnGamePadModeChanged_Event(bool bGamePadMode);
	void InitControllerLayout();
	void ChangeControllerLayout(bool GamePadMode);
	void ClickedWithSender__DelegateSignature(class UWB_Button_C* Button);
	void ExecuteUbergraph_WB_Button(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Button_C">();
	}
	static class UWB_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Button_C>();
	}
};
static_assert(alignof(UWB_Button_C) == 0x000010, "Wrong alignment on UWB_Button_C");
static_assert(sizeof(UWB_Button_C) == 0x0007F0, "Wrong size on UWB_Button_C");
static_assert(offsetof(UWB_Button_C, UberGraphFrame_WB_Button_C) == 0x000758, "Member 'UWB_Button_C::UberGraphFrame_WB_Button_C' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, FocusAnimation) == 0x000760, "Member 'UWB_Button_C::FocusAnimation' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, GamepadSwitcher) == 0x000768, "Member 'UWB_Button_C::GamepadSwitcher' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, Label) == 0x000770, "Member 'UWB_Button_C::Label' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, MyButton) == 0x000778, "Member 'UWB_Button_C::MyButton' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, NotifyIcon) == 0x000780, "Member 'UWB_Button_C::NotifyIcon' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, WB_ControllerIconWithLabel) == 0x000788, "Member 'UWB_Button_C::WB_ControllerIconWithLabel' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, Text) == 0x000790, "Member 'UWB_Button_C::Text' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, Notify) == 0x0007A0, "Member 'UWB_Button_C::Notify' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, BoundKey) == 0x0007A8, "Member 'UWB_Button_C::BoundKey' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, KeyNone) == 0x0007C0, "Member 'UWB_Button_C::KeyNone' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, ClickedWithSender) == 0x0007D8, "Member 'UWB_Button_C::ClickedWithSender' has a wrong offset!");
static_assert(offsetof(UWB_Button_C, FontSize) == 0x0007E8, "Member 'UWB_Button_C::FontSize' has a wrong offset!");

}

