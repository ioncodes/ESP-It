#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ProgressionManager

#include "Basic.hpp"

#include "B_ProgressionManager_classes.hpp"
#include "B_ProgressionManager_parameters.hpp"


namespace SDK
{

// Function B_ProgressionManager.B_ProgressionManager_C.DidLoadOnlineStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::DidLoadOnlineStats(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "DidLoadOnlineStats");

	Params::B_ProgressionManager_C_DidLoadOnlineStats Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionManager.B_ProgressionManager_C.DidStoreStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::DidStoreStats(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "DidStoreStats");

	Params::B_ProgressionManager_C_DidStoreStats Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionManager.B_ProgressionManager_C.ExecuteUbergraph_B_ProgressionManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::ExecuteUbergraph_B_ProgressionManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "ExecuteUbergraph_B_ProgressionManager");

	Params::B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetCurrentPendingLevelUpsLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PendingLevelUps                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetCurrentPendingLevelUpsLocal(int32* PendingLevelUps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetCurrentPendingLevelUpsLocal");

	Params::B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PendingLevelUps != nullptr)
		*PendingLevelUps = Parms.PendingLevelUps;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetExp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Exp                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetExp(int32* Exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetExp");

	Params::B_ProgressionManager_C_GetExp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Exp != nullptr)
		*Exp = Parms.Exp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetExpPercentalLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Exp                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentalExp                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetExpPercentalLocal(double Exp, double* PercentalExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetExpPercentalLocal");

	Params::B_ProgressionManager_C_GetExpPercentalLocal Parms{};

	Parms.Exp = Exp;

	UObject::ProcessEvent(Func, &Parms);

	if (PercentalExp != nullptr)
		*PercentalExp = Parms.PercentalExp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetExpPercentalPrestige
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Exp                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PercentalExp                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetExpPercentalPrestige(double Exp, double* PercentalExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetExpPercentalPrestige");

	Params::B_ProgressionManager_C_GetExpPercentalPrestige Parms{};

	Parms.Exp = Exp;

	UObject::ProcessEvent(Func, &Parms);

	if (PercentalExp != nullptr)
		*PercentalExp = Parms.PercentalExp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Level                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetLevel(int32* Level)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetLevel");

	Params::B_ProgressionManager_C_GetLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Level != nullptr)
		*Level = Parms.Level;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxExp                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetMaxExp(int32* MaxExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetMaxExp");

	Params::B_ProgressionManager_C_GetMaxExp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxExp != nullptr)
		*MaxExp = Parms.MaxExp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExpLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxExp                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetMaxExpLocal(int32* MaxExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetMaxExpLocal");

	Params::B_ProgressionManager_C_GetMaxExpLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxExp != nullptr)
		*MaxExp = Parms.MaxExp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExpPrestige
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaxExp                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetMaxExpPrestige(int32* MaxExp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetMaxExpPrestige");

	Params::B_ProgressionManager_C_GetMaxExpPrestige Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxExp != nullptr)
		*MaxExp = Parms.MaxExp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetPrestigeExp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PrestigeExp_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetPrestigeExp(int32* PrestigeExp_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetPrestigeExp");

	Params::B_ProgressionManager_C_GetPrestigeExp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrestigeExp_0 != nullptr)
		*PrestigeExp_0 = Parms.PrestigeExp_0;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetPrestigeLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PrestigeLevel_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetPrestigeLevel(int32* PrestigeLevel_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetPrestigeLevel");

	Params::B_ProgressionManager_C_GetPrestigeLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PrestigeLevel_0 != nullptr)
		*PrestigeLevel_0 = Parms.PrestigeLevel_0;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetRoundsPlayed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   RoundsPlayed                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetRoundsPlayed(int32* RoundsPlayed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetRoundsPlayed");

	Params::B_ProgressionManager_C_GetRoundsPlayed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RoundsPlayed != nullptr)
		*RoundsPlayed = Parms.RoundsPlayed;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GrantExp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Exp                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LevelUps                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GrantExp(int32 Exp, int32* LevelUps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GrantExp");

	Params::B_ProgressionManager_C_GrantExp Parms{};

	Parms.Exp = Exp;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelUps != nullptr)
		*LevelUps = Parms.LevelUps;
}


// Function B_ProgressionManager.B_ProgressionManager_C.GrantPendingLevelUp
// (Private, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::GrantPendingLevelUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GrantPendingLevelUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.GrantPendingLevelUpLocal
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::GrantPendingLevelUpLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GrantPendingLevelUpLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.GrantPrestigeExpLocal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Exp                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GrantPrestigeExpLocal(int32 Exp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GrantPrestigeExpLocal");

	Params::B_ProgressionManager_C_GrantPrestigeExpLocal Parms{};

	Parms.Exp = Exp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionManager.B_ProgressionManager_C.GrantPrestigeLevelUpLocal
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::GrantPrestigeLevelUpLocal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GrantPrestigeLevelUpLocal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.IncrementRoundsPlayed
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::IncrementRoundsPlayed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "IncrementRoundsPlayed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.Initialize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    InGameInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::Initialize(class UGameInstance* InGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "Initialize");

	Params::B_ProgressionManager_C_Initialize Parms{};

	Parms.InGameInstance = InGameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ProgressionManager.B_ProgressionManager_C.IsPendingLevelUp
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    PendingLevelUp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::IsPendingLevelUp(bool* PendingLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "IsPendingLevelUp");

	Params::B_ProgressionManager_C_IsPendingLevelUp Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PendingLevelUp != nullptr)
		*PendingLevelUp = Parms.PendingLevelUp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.IsPendingLevelUpLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    PendingLevelUp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::IsPendingLevelUpLocal(bool* PendingLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "IsPendingLevelUpLocal");

	Params::B_ProgressionManager_C_IsPendingLevelUpLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PendingLevelUp != nullptr)
		*PendingLevelUp = Parms.PendingLevelUp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.IsPrestigeLevelUpLocal
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPrestigeLevelUp                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::IsPrestigeLevelUpLocal(bool* IsPrestigeLevelUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "IsPrestigeLevelUpLocal");

	Params::B_ProgressionManager_C_IsPrestigeLevelUpLocal Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPrestigeLevelUp != nullptr)
		*IsPrestigeLevelUp = Parms.IsPrestigeLevelUp;
}


// Function B_ProgressionManager.B_ProgressionManager_C.RefreshLocalProgress
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::RefreshLocalProgress()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "RefreshLocalProgress");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.ResetAllExpAndLevel
// (Public, BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::ResetAllExpAndLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "ResetAllExpAndLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.StoreOnlineStats
// (BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::StoreOnlineStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "StoreOnlineStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.UpdateOnlineStats
// (BlueprintCallable, BlueprintEvent)

void UB_ProgressionManager_C::UpdateOnlineStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "UpdateOnlineStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ProgressionManager.B_ProgressionManager_C.GetStatsAndAchievementsManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UB_NewStatsAndAchievementsManager_C*Result                                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_ProgressionManager_C::GetStatsAndAchievementsManager(class UB_NewStatsAndAchievementsManager_C** Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ProgressionManager_C", "GetStatsAndAchievementsManager");

	Params::B_ProgressionManager_C_GetStatsAndAchievementsManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}

