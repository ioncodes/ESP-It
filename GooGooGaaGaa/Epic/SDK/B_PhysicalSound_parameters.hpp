#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PhysicalSound

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_PhysicalSound.B_PhysicalSound_C.ExecuteUbergraph_B_PhysicalSound
// 0x0030 (0x0030 - 0x0000)
struct B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound) == 0x000008, "Wrong alignment on B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound");
static_assert(sizeof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound) == 0x000030, "Wrong size on B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound");
static_assert(offsetof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound, EntryPoint) == 0x000000, "Member 'B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound, K2Node_CustomEvent_DestroyedActor) == 0x000020, "Member 'B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound, K2Node_Event_EndPlayReason) == 0x000028, "Member 'B_PhysicalSound_C_ExecuteUbergraph_B_PhysicalSound::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function B_PhysicalSound.B_PhysicalSound_C.OnDestroyed
// 0x0008 (0x0008 - 0x0000)
struct B_PhysicalSound_C_OnDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PhysicalSound_C_OnDestroyed) == 0x000008, "Wrong alignment on B_PhysicalSound_C_OnDestroyed");
static_assert(sizeof(B_PhysicalSound_C_OnDestroyed) == 0x000008, "Wrong size on B_PhysicalSound_C_OnDestroyed");
static_assert(offsetof(B_PhysicalSound_C_OnDestroyed, DestroyedActor) == 0x000000, "Member 'B_PhysicalSound_C_OnDestroyed::DestroyedActor' has a wrong offset!");

// Function B_PhysicalSound.B_PhysicalSound_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct B_PhysicalSound_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PhysicalSound_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on B_PhysicalSound_C_ReceiveEndPlay");
static_assert(sizeof(B_PhysicalSound_C_ReceiveEndPlay) == 0x000001, "Wrong size on B_PhysicalSound_C_ReceiveEndPlay");
static_assert(offsetof(B_PhysicalSound_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'B_PhysicalSound_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

}

