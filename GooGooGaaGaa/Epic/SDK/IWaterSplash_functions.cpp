#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IWaterSplash

#include "Basic.hpp"

#include "IWaterSplash_classes.hpp"
#include "IWaterSplash_parameters.hpp"


namespace SDK
{

// Function IWaterSplash.IWaterSplash_C.GetRippleEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   RippleEffectNiagara                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIWaterSplash_C::GetRippleEffect(class UNiagaraSystem** RippleEffectNiagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IWaterSplash_C", "GetRippleEffect");

	Params::IWaterSplash_C_GetRippleEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RippleEffectNiagara != nullptr)
		*RippleEffectNiagara = Parms.RippleEffectNiagara;
}


// Function IWaterSplash.IWaterSplash_C.GetRippleScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IIWaterSplash_C::GetRippleScale(struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IWaterSplash_C", "GetRippleScale");

	Params::IWaterSplash_C_GetRippleScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function IWaterSplash.IWaterSplash_C.GetSplashEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   SplashEffectNiagara                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIWaterSplash_C::GetSplashEffect(class UNiagaraSystem** SplashEffectNiagara)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IWaterSplash_C", "GetSplashEffect");

	Params::IWaterSplash_C_GetSplashEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SplashEffectNiagara != nullptr)
		*SplashEffectNiagara = Parms.SplashEffectNiagara;
}


// Function IWaterSplash.IWaterSplash_C.GetSplashScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IIWaterSplash_C::GetSplashScale(struct FVector* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IWaterSplash_C", "GetSplashScale");

	Params::IWaterSplash_C_GetSplashScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = std::move(Parms.Scale);
}


// Function IWaterSplash.IWaterSplash_C.GetSplashSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        Sound                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IIWaterSplash_C::GetSplashSound(class USoundCue** Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IWaterSplash_C", "GetSplashSound");

	Params::IWaterSplash_C_GetSplashSound Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sound != nullptr)
		*Sound = Parms.Sound;
}

}

