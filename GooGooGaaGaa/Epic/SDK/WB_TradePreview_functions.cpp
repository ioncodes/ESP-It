#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TradePreview

#include "Basic.hpp"

#include "WB_TradePreview_classes.hpp"
#include "WB_TradePreview_parameters.hpp"


namespace SDK
{

// Function WB_TradePreview.WB_TradePreview_C.GetSkinAndRecipeInfos
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTradingItem                     TradingItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FS_ItemInfo                      SkinInfo                                               (Parm, OutParm, HasGetValueTypeHash)
// struct FS_RecipeInfo                    RecipeInfo                                             (Parm, OutParm, HasGetValueTypeHash)

void UWB_TradePreview_C::GetSkinAndRecipeInfos(const struct FTradingItem& TradingItem, struct FS_ItemInfo* SkinInfo, struct FS_RecipeInfo* RecipeInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "GetSkinAndRecipeInfos");

	Params::WB_TradePreview_C_GetSkinAndRecipeInfos Parms{};

	Parms.TradingItem = std::move(TradingItem);

	UObject::ProcessEvent(Func, &Parms);

	if (SkinInfo != nullptr)
		*SkinInfo = std::move(Parms.SkinInfo);

	if (RecipeInfo != nullptr)
		*RecipeInfo = std::move(Parms.RecipeInfo);
}


// Function WB_TradePreview.WB_TradePreview_C.AddNewItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTradingItem                     TradingItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWB_TradePreview_C::AddNewItem(const struct FTradingItem& TradingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "AddNewItem");

	Params::WB_TradePreview_C_AddNewItem Parms{};

	Parms.TradingItem = std::move(TradingItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TradePreview.WB_TradePreview_C.GetIndividualItemDataAndFocus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      CategoryButton                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ESalvageCategory                        SalvageCategory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UB_TileViewData_C*>        Data                                                   (Parm, OutParm)
// TArray<bool>                            FocusNeeded                                            (Parm, OutParm)

void UWB_TradePreview_C::GetIndividualItemDataAndFocus(class UUserWidget* CategoryButton, ESalvageCategory SalvageCategory, TArray<class UB_TileViewData_C*>* Data, TArray<bool>* FocusNeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "GetIndividualItemDataAndFocus");

	Params::WB_TradePreview_C_GetIndividualItemDataAndFocus Parms{};

	Parms.CategoryButton = CategoryButton;
	Parms.SalvageCategory = SalvageCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (FocusNeeded != nullptr)
		*FocusNeeded = std::move(Parms.FocusNeeded);
}


// Function WB_TradePreview.WB_TradePreview_C.GetTileView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTileView*                        TileView                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_TradePreview_C::GetTileView(class UTileView** TileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "GetTileView");

	Params::WB_TradePreview_C_GetTileView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TileView != nullptr)
		*TileView = Parms.TileView;
}


// Function WB_TradePreview.WB_TradePreview_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TradePreview_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TradePreview.WB_TradePreview_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TradePreview_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "PreConstruct");

	Params::WB_TradePreview_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TradePreview.WB_TradePreview_C.ExecuteUbergraph_WB_TradePreview
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TradePreview_C::ExecuteUbergraph_WB_TradePreview(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TradePreview_C", "ExecuteUbergraph_WB_TradePreview");

	Params::WB_TradePreview_C_ExecuteUbergraph_WB_TradePreview Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

