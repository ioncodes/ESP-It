#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ManaComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ManaComponent.B_ManaComponent_C
// 0x0038 (0x00D8 - 0x00A0)
class UB_ManaComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        DefaultMaximumMana;                                // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaximumMana;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMana;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultManaRegenPerSecond;                         // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ManaRegendPerSecond;                               // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentManaRegenPerSecond;                         // 0x00D0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeRules();
	void ConsumeMana(double Amount);
	void TickManaRegen();
	void SetCurrentManaRegenPerSecond(double NewManaRegenPerSecond);
	void SetCurrentMana(double CurrentMana_0);
	void SetMaximumMana(double MaximumMana_0);
	void GetValues(double* MaximumMana_0, double* CurrentMana_0, double* CurrentManaRegenPerSecond_0);
	void SetValues(double MaximumMana_0, double CurrentMana_0, double CurrentManaRegenPerSecond_0);
	void ApplyCurrentBuffs();
	void Initialize();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_B_ManaComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ManaComponent_C">();
	}
	static class UB_ManaComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ManaComponent_C>();
	}
};
static_assert(alignof(UB_ManaComponent_C) == 0x000008, "Wrong alignment on UB_ManaComponent_C");
static_assert(sizeof(UB_ManaComponent_C) == 0x0000D8, "Wrong size on UB_ManaComponent_C");
static_assert(offsetof(UB_ManaComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UB_ManaComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, DefaultMaximumMana) == 0x0000A8, "Member 'UB_ManaComponent_C::DefaultMaximumMana' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, MaximumMana) == 0x0000B0, "Member 'UB_ManaComponent_C::MaximumMana' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, CurrentMana) == 0x0000B8, "Member 'UB_ManaComponent_C::CurrentMana' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, DefaultManaRegenPerSecond) == 0x0000C0, "Member 'UB_ManaComponent_C::DefaultManaRegenPerSecond' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, ManaRegendPerSecond) == 0x0000C8, "Member 'UB_ManaComponent_C::ManaRegendPerSecond' has a wrong offset!");
static_assert(offsetof(UB_ManaComponent_C, CurrentManaRegenPerSecond) == 0x0000D0, "Member 'UB_ManaComponent_C::CurrentManaRegenPerSecond' has a wrong offset!");

}

