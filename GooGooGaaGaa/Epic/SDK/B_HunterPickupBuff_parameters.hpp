#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HunterPickupBuff

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_HunterPickupBuff.B_HunterPickupBuff_C.AddBuffToPlayerState
// 0x0030 (0x0030 - 0x0000)
struct B_HunterPickupBuff_C_AddBuffToPlayerState final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerStateToBuff;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_PowerBall_C*                         K2Node_DynamicCast_AsB_Power_Ball;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterPickupBuff_C_AddBuffToPlayerState) == 0x000008, "Wrong alignment on B_HunterPickupBuff_C_AddBuffToPlayerState");
static_assert(sizeof(B_HunterPickupBuff_C_AddBuffToPlayerState) == 0x000030, "Wrong size on B_HunterPickupBuff_C_AddBuffToPlayerState");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, Pawn) == 0x000000, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::Pawn' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, PlayerStateToBuff) == 0x000008, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::PlayerStateToBuff' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, K2Node_DynamicCast_AsB_Power_Ball) == 0x000010, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::K2Node_DynamicCast_AsB_Power_Ball' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, K2Node_DynamicCast_AsB_Player_State) == 0x000020, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_AddBuffToPlayerState, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_HunterPickupBuff_C_AddBuffToPlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_HunterPickupBuff.B_HunterPickupBuff_C.PickupCollected
// 0x0008 (0x0008 - 0x0000)
struct B_HunterPickupBuff_C_PickupCollected final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterPickupBuff_C_PickupCollected) == 0x000008, "Wrong alignment on B_HunterPickupBuff_C_PickupCollected");
static_assert(sizeof(B_HunterPickupBuff_C_PickupCollected) == 0x000008, "Wrong size on B_HunterPickupBuff_C_PickupCollected");
static_assert(offsetof(B_HunterPickupBuff_C_PickupCollected, Pawn) == 0x000000, "Member 'B_HunterPickupBuff_C_PickupCollected::Pawn' has a wrong offset!");

// Function B_HunterPickupBuff.B_HunterPickupBuff_C.ExecuteUbergraph_B_HunterPickupBuff
// 0x0010 (0x0010 - 0x0000)
struct B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff) == 0x000008, "Wrong alignment on B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff");
static_assert(sizeof(B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff) == 0x000010, "Wrong size on B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff");
static_assert(offsetof(B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff, EntryPoint) == 0x000000, "Member 'B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff, K2Node_Event_Pawn) == 0x000008, "Member 'B_HunterPickupBuff_C_ExecuteUbergraph_B_HunterPickupBuff::K2Node_Event_Pawn' has a wrong offset!");

}

