#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_ChatAndVoice

#include "Basic.hpp"

#include "BFL_ChatAndVoice_classes.hpp"
#include "BFL_ChatAndVoice_parameters.hpp"


namespace SDK
{

// Function BFL_ChatAndVoice.BFL_ChatAndVoice_C.ArePlayersInSameObjectiveTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerStateA                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          PlayerStateB                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBFL_ChatAndVoice_C::ArePlayersInSameObjectiveTeam(class APlayerState* PlayerStateA, class UObject* PlayerStateB, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_ChatAndVoice_C", "ArePlayersInSameObjectiveTeam");

	Params::BFL_ChatAndVoice_C_ArePlayersInSameObjectiveTeam Parms{};

	Parms.PlayerStateA = PlayerStateA;
	Parms.PlayerStateB = PlayerStateB;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFL_ChatAndVoice.BFL_ChatAndVoice_C.ArePlayersInSameTeam
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerStateA                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     PlayerStateB                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBFL_ChatAndVoice_C::ArePlayersInSameTeam(class APlayerState* PlayerStateA, class APlayerState* PlayerStateB, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_ChatAndVoice_C", "ArePlayersInSameTeam");

	Params::BFL_ChatAndVoice_C_ArePlayersInSameTeam Parms{};

	Parms.PlayerStateA = PlayerStateA;
	Parms.PlayerStateB = PlayerStateB;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFL_ChatAndVoice.BFL_ChatAndVoice_C.IsPlayerBlockedWrapper
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     MyPlayerState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     OtherPlayerState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBFL_ChatAndVoice_C::IsPlayerBlockedWrapper(class APlayerState* MyPlayerState, class APlayerState* OtherPlayerState, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_ChatAndVoice_C", "IsPlayerBlockedWrapper");

	Params::BFL_ChatAndVoice_C_IsPlayerBlockedWrapper Parms{};

	Parms.MyPlayerState = MyPlayerState;
	Parms.OtherPlayerState = OtherPlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BFL_ChatAndVoice.BFL_ChatAndVoice_C.IsPlayerMutedManually
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     Player_State                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UB_SaveGameManager_C*             SaveGameManager                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBFL_ChatAndVoice_C::IsPlayerMutedManually(class APlayerState* Player_State, class UB_SaveGameManager_C* SaveGameManager, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_ChatAndVoice_C", "IsPlayerMutedManually");

	Params::BFL_ChatAndVoice_C_IsPlayerMutedManually Parms{};

	Parms.Player_State = Player_State;
	Parms.SaveGameManager = SaveGameManager;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

