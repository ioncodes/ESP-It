#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseGizmo

#include "Basic.hpp"

#include "E_Axis_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_BaseGizmo.B_BaseGizmo_C.SetColor
// 0x0168 (0x0168 - 0x0000)
struct B_BaseGizmo_C_SetColor final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_Axis                                        Axis;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Axis                                        Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0010(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Axis                                        Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_1;                            // 0x0030(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_2;   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_3;   // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_4;   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_5;   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_6;   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_7;   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0110(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0128(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_2;                           // 0x0140(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0158(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0160(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseGizmo_C_SetColor) == 0x000008, "Wrong alignment on B_BaseGizmo_C_SetColor");
static_assert(sizeof(B_BaseGizmo_C_SetColor) == 0x000168, "Wrong size on B_BaseGizmo_C_SetColor");
static_assert(offsetof(B_BaseGizmo_C_SetColor, MeshComponent) == 0x000000, "Member 'B_BaseGizmo_C_SetColor::MeshComponent' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Axis) == 0x000008, "Member 'B_BaseGizmo_C_SetColor::Axis' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Selected) == 0x000009, "Member 'B_BaseGizmo_C_SetColor::Selected' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_byte_Variable) == 0x00000A, "Member 'B_BaseGizmo_C_SetColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_struct_Variable) == 0x000010, "Member 'B_BaseGizmo_C_SetColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_byte_Variable_1) == 0x000028, "Member 'B_BaseGizmo_C_SetColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_struct_Variable_1) == 0x000030, "Member 'B_BaseGizmo_C_SetColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_bool_Variable) == 0x000048, "Member 'B_BaseGizmo_C_SetColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, Temp_bool_Variable_1) == 0x000049, "Member 'B_BaseGizmo_C_SetColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000050, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000068, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_2) == 0x000080, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_3) == 0x000098, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_4) == 0x0000B0, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_5) == 0x0000C8, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_6) == 0x0000E0, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_Conv_LinearColorToVector_ReturnValue_7) == 0x0000F8, "Member 'B_BaseGizmo_C_SetColor::CallFunc_Conv_LinearColorToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, K2Node_Select_Default) == 0x000110, "Member 'B_BaseGizmo_C_SetColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, K2Node_Select_Default_1) == 0x000128, "Member 'B_BaseGizmo_C_SetColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, K2Node_Select_Default_2) == 0x000140, "Member 'B_BaseGizmo_C_SetColor::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, K2Node_Select_Default_3) == 0x000158, "Member 'B_BaseGizmo_C_SetColor::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetColor, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000160, "Member 'B_BaseGizmo_C_SetColor::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function B_BaseGizmo.B_BaseGizmo_C.SetHighlightAxis
// 0x0002 (0x0002 - 0x0000)
struct B_BaseGizmo_C_SetHighlightAxis final
{
public:
	E_Axis                                        Axis;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBool;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseGizmo_C_SetHighlightAxis) == 0x000001, "Wrong alignment on B_BaseGizmo_C_SetHighlightAxis");
static_assert(sizeof(B_BaseGizmo_C_SetHighlightAxis) == 0x000002, "Wrong size on B_BaseGizmo_C_SetHighlightAxis");
static_assert(offsetof(B_BaseGizmo_C_SetHighlightAxis, Axis) == 0x000000, "Member 'B_BaseGizmo_C_SetHighlightAxis::Axis' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetHighlightAxis, ForcedBool) == 0x000001, "Member 'B_BaseGizmo_C_SetHighlightAxis::ForcedBool' has a wrong offset!");

// Function B_BaseGizmo.B_BaseGizmo_C.SetMultipleColors
// 0x0030 (0x0030 - 0x0000)
struct B_BaseGizmo_C_SetMultipleColors final
{
public:
	TArray<class UMeshComponent*>                 MeshComponent;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	E_Axis                                        Axis;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseGizmo_C_SetMultipleColors) == 0x000008, "Wrong alignment on B_BaseGizmo_C_SetMultipleColors");
static_assert(sizeof(B_BaseGizmo_C_SetMultipleColors) == 0x000030, "Wrong size on B_BaseGizmo_C_SetMultipleColors");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, MeshComponent) == 0x000000, "Member 'B_BaseGizmo_C_SetMultipleColors::MeshComponent' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, Axis) == 0x000010, "Member 'B_BaseGizmo_C_SetMultipleColors::Axis' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, Selected) == 0x000011, "Member 'B_BaseGizmo_C_SetMultipleColors::Selected' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'B_BaseGizmo_C_SetMultipleColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_BaseGizmo_C_SetMultipleColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'B_BaseGizmo_C_SetMultipleColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_BaseGizmo_C_SetMultipleColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'B_BaseGizmo_C_SetMultipleColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseGizmo_C_SetMultipleColors, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'B_BaseGizmo_C_SetMultipleColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

