#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DecoyWitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_DecoyState_structs.hpp"
#include "EHighlightChannel_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_DecoyWitch.B_DecoyWitch_C
// 0x00C0 (0x0730 - 0x0670)
class AB_DecoyWitch_C final : public ACharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0670(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   AimAssistTarget;                                   // 0x0678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UB_AimAssistTargetComponent_C*          B_AimAssistTargetComponent;                        // 0x0680(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UB_DecoyHandler_C*                      B_DecoyHandler;                                    // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0690(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WitchMaterial;                                     // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastMovementInput;                                 // 0x06B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FadeOutCurve;                                      // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFadeTime;                                   // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DecoyState                                  CurrentState;                                      // 0x06D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FastFadeOut;                                       // 0x06D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DA[0x6];                                      // 0x06DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FadeInCurve;                                       // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkinMeshes;                                        // 0x06E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class UMeshComponent*>                 SkinMeshComponents;                                // 0x06F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bHighlighted;                                      // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ActiveTimeAfterRelease;                            // 0x0710(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadingIn;                                          // 0x0718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            WitchController;                                   // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BindOnDestroyed();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void EnableHighlightForOwner();
	void ExecuteUbergraph_B_DecoyWitch(int32 EntryPoint);
	void FadeOut(bool Fast);
	void FadeOutMulti(bool Fast, bool TrappedInVacuum);
	void HandleMoveToTargetLocation();
	void HandleOverlap(const class UObject* OtherActor);
	void InitializeSkin();
	void OwnerDestroy(class AActor* DestroyedActor);
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void ReceiveTick(float DeltaSeconds);
	void RefreshHighlight(bool* Highlightable);
	void RemoveAimAssistOnDedicatedServer();
	void SetHighlight(bool Highlighted, bool* ForcedBoolean);
	void SetHighlightChannel(EHighlightChannel Channel);
	void TickFadeIn();
	void TickFadeOut();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_DecoyWitch_C">();
	}
	static class AB_DecoyWitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_DecoyWitch_C>();
	}
};
static_assert(alignof(AB_DecoyWitch_C) == 0x000010, "Wrong alignment on AB_DecoyWitch_C");
static_assert(sizeof(AB_DecoyWitch_C) == 0x000730, "Wrong size on AB_DecoyWitch_C");
static_assert(offsetof(AB_DecoyWitch_C, UberGraphFrame) == 0x000670, "Member 'AB_DecoyWitch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, AimAssistTarget) == 0x000678, "Member 'AB_DecoyWitch_C::AimAssistTarget' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, B_AimAssistTargetComponent) == 0x000680, "Member 'AB_DecoyWitch_C::B_AimAssistTargetComponent' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, B_DecoyHandler) == 0x000688, "Member 'AB_DecoyWitch_C::B_DecoyHandler' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, TargetLocation) == 0x000690, "Member 'AB_DecoyWitch_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, WitchMaterial) == 0x0006A8, "Member 'AB_DecoyWitch_C::WitchMaterial' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, LastMovementInput) == 0x0006B0, "Member 'AB_DecoyWitch_C::LastMovementInput' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, FadeOutCurve) == 0x0006C8, "Member 'AB_DecoyWitch_C::FadeOutCurve' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, CurrentFadeTime) == 0x0006D0, "Member 'AB_DecoyWitch_C::CurrentFadeTime' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, CurrentState) == 0x0006D8, "Member 'AB_DecoyWitch_C::CurrentState' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, FastFadeOut) == 0x0006D9, "Member 'AB_DecoyWitch_C::FastFadeOut' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, FadeInCurve) == 0x0006E0, "Member 'AB_DecoyWitch_C::FadeInCurve' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, SkinMeshes) == 0x0006E8, "Member 'AB_DecoyWitch_C::SkinMeshes' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, SkinMeshComponents) == 0x0006F8, "Member 'AB_DecoyWitch_C::SkinMeshComponents' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, bHighlighted) == 0x000708, "Member 'AB_DecoyWitch_C::bHighlighted' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, ActiveTimeAfterRelease) == 0x000710, "Member 'AB_DecoyWitch_C::ActiveTimeAfterRelease' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, FadingIn) == 0x000718, "Member 'AB_DecoyWitch_C::FadingIn' has a wrong offset!");
static_assert(offsetof(AB_DecoyWitch_C, WitchController) == 0x000720, "Member 'AB_DecoyWitch_C::WitchController' has a wrong offset!");

}

