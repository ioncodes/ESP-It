#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ShootingRangeTile

#include "Basic.hpp"

#include "B_Tile_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ShootingRangeTile.B_ShootingRangeTile_C
// 0x0060 (0x0358 - 0x02F8)
class AB_ShootingRangeTile_C final : public AB_Tile_C
{
public:
	class UStaticMeshComponent*                   ViewBlock11;                                       // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock10;                                       // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock9;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock8;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock7;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock6;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock1;                                        // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock;                                         // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock2;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock3;                                        // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock5;                                        // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ViewBlock4;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ShootingRangeTile_C">();
	}
	static class AB_ShootingRangeTile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_ShootingRangeTile_C>();
	}
};
static_assert(alignof(AB_ShootingRangeTile_C) == 0x000008, "Wrong alignment on AB_ShootingRangeTile_C");
static_assert(sizeof(AB_ShootingRangeTile_C) == 0x000358, "Wrong size on AB_ShootingRangeTile_C");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock11) == 0x0002F8, "Member 'AB_ShootingRangeTile_C::ViewBlock11' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock10) == 0x000300, "Member 'AB_ShootingRangeTile_C::ViewBlock10' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock9) == 0x000308, "Member 'AB_ShootingRangeTile_C::ViewBlock9' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock8) == 0x000310, "Member 'AB_ShootingRangeTile_C::ViewBlock8' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock7) == 0x000318, "Member 'AB_ShootingRangeTile_C::ViewBlock7' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock6) == 0x000320, "Member 'AB_ShootingRangeTile_C::ViewBlock6' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock1) == 0x000328, "Member 'AB_ShootingRangeTile_C::ViewBlock1' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock) == 0x000330, "Member 'AB_ShootingRangeTile_C::ViewBlock' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock2) == 0x000338, "Member 'AB_ShootingRangeTile_C::ViewBlock2' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock3) == 0x000340, "Member 'AB_ShootingRangeTile_C::ViewBlock3' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock5) == 0x000348, "Member 'AB_ShootingRangeTile_C::ViewBlock5' has a wrong offset!");
static_assert(offsetof(AB_ShootingRangeTile_C, ViewBlock4) == 0x000350, "Member 'AB_ShootingRangeTile_C::ViewBlock4' has a wrong offset!");

}

