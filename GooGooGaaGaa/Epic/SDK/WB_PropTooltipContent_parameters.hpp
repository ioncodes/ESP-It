#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PropTooltipContent

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_PropData_structs.hpp"
#include "Engine_structs.hpp"
#include "S_PropVolumeCategory_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.ExecuteUbergraph_WB_PropTooltipContent
// 0x0190 (0x0190 - 0x0000)
struct WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetPropIcon_Prop_Data_Icon;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropData                            CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_PropData>                    CallFunc_Map_Values_Values;                        // 0x0078(0x0010)(ReferenceParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0088(0x0014)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00A0(0x00D0)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent) == 0x000010, "Wrong alignment on WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent");
static_assert(sizeof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent) == 0x000190, "Wrong size on WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, EntryPoint) == 0x000000, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_GetPropIcon_Prop_Data_Icon) == 0x000008, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_GetPropIcon_Prop_Data_Icon' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, Temp_int_Variable) == 0x00001C, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Set_Contains_ReturnValue) == 0x000055, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_GetGameInstance_ReturnValue_1) == 0x000058, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, Temp_int_Variable_1) == 0x000060, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000068, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Map_Values_Values) == 0x000078, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_MakeStruct_SlateColor) == 0x000088, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00009C, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, K2Node_MakeStruct_SlateBrush) == 0x0000A0, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000170, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Add_IntInt_ReturnValue_2) == 0x000174, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000178, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent, CallFunc_Not_PreBool_ReturnValue) == 0x000180, "Member 'WB_PropTooltipContent_C_ExecuteUbergraph_WB_PropTooltipContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_HP_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct WB_PropTooltipContent_C_Get_HP_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	struct FS_PropVolumeCategory                  CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory; // 0x0010(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(WB_PropTooltipContent_C_Get_HP_Text_0) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_Get_HP_Text_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_HP_Text_0) == 0x0000A0, "Wrong size on WB_PropTooltipContent_C_Get_HP_Text_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory) == 0x000010, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, K2Node_MakeArray_Array) == 0x000080, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_HP_Text_0, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WB_PropTooltipContent_C_Get_HP_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_Name_Text_0
// 0x0010 (0x0010 - 0x0000)
struct WB_PropTooltipContent_C_Get_Name_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(WB_PropTooltipContent_C_Get_Name_Text_0) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_Get_Name_Text_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_Name_Text_0) == 0x000010, "Wrong size on WB_PropTooltipContent_C_Get_Name_Text_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Text_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_Name_Text_0::ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_Name_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_PropTooltipContent_C_Get_Name_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_Get_Name_Visibility_0) == 0x000001, "Wrong alignment on WB_PropTooltipContent_C_Get_Name_Visibility_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_Name_Visibility_0) == 0x000005, "Wrong size on WB_PropTooltipContent_C_Get_Name_Visibility_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_Name_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_PropTooltipContent_C_Get_Name_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_PropTooltipContent_C_Get_Name_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PropTooltipContent_C_Get_Name_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Name_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_PropTooltipContent_C_Get_Name_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_SetcompletedText_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0) == 0x000001, "Wrong alignment on WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0) == 0x000005, "Wrong size on WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_PropTooltipContent_C_Get_SetcompletedText_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_SetProgress_Percent_0
// 0x0028 (0x0028 - 0x0000)
struct WB_PropTooltipContent_C_Get_SetProgress_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_Get_SetProgress_Percent_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0) == 0x000028, "Wrong size on WB_PropTooltipContent_C_Get_SetProgress_Percent_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_SetProgress_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WB_PropTooltipContent_C_Get_SetProgress_Percent_0::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000010, "Member 'WB_PropTooltipContent_C_Get_SetProgress_Percent_0::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'WB_PropTooltipContent_C_Get_SetProgress_Percent_0::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgress_Percent_0, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'WB_PropTooltipContent_C_Get_SetProgress_Percent_0::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_SetProgressText_Text_0
// 0x00D0 (0x00D0 - 0x0000)
struct WB_PropTooltipContent_C_Get_SetProgressText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0048)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0010)()
};
static_assert(alignof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_Get_SetProgressText_Text_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0) == 0x0000D0, "Wrong size on WB_PropTooltipContent_C_Get_SetProgressText_Text_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000018, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, K2Node_MakeArray_Array) == 0x0000B0, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_SetProgressText_Text_0, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WB_PropTooltipContent_C_Get_SetProgressText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.Get_Speed_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct WB_PropTooltipContent_C_Get_Speed_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	struct FS_PropVolumeCategory                  CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory; // 0x0010(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0010)()
};
static_assert(alignof(WB_PropTooltipContent_C_Get_Speed_Text_0) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_Get_Speed_Text_0");
static_assert(sizeof(WB_PropTooltipContent_C_Get_Speed_Text_0) == 0x0000A0, "Wrong size on WB_PropTooltipContent_C_Get_Speed_Text_0");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory) == 0x000010, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, K2Node_MakeArray_Array) == 0x000080, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_Get_Speed_Text_0, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WB_PropTooltipContent_C_Get_Speed_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.GetPropIcon
// 0x0010 (0x0010 - 0x0000)
struct WB_PropTooltipContent_C_GetPropIcon final
{
public:
	class UObject*                                Prop_Data_Icon;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_GetPropIcon) == 0x000008, "Wrong alignment on WB_PropTooltipContent_C_GetPropIcon");
static_assert(sizeof(WB_PropTooltipContent_C_GetPropIcon) == 0x000010, "Wrong size on WB_PropTooltipContent_C_GetPropIcon");
static_assert(offsetof(WB_PropTooltipContent_C_GetPropIcon, Prop_Data_Icon) == 0x000000, "Member 'WB_PropTooltipContent_C_GetPropIcon::Prop_Data_Icon' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_GetPropIcon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WB_PropTooltipContent_C_GetPropIcon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_PropTooltipContent.WB_PropTooltipContent_C.GetVisibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_PropTooltipContent_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PropTooltipContent_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_PropTooltipContent_C_GetVisibility_0");
static_assert(sizeof(WB_PropTooltipContent_C_GetVisibility_0) == 0x000005, "Wrong size on WB_PropTooltipContent_C_GetVisibility_0");
static_assert(offsetof(WB_PropTooltipContent_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_PropTooltipContent_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_PropTooltipContent_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_PropTooltipContent_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PropTooltipContent_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PropTooltipContent_C_GetVisibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_PropTooltipContent_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

}

