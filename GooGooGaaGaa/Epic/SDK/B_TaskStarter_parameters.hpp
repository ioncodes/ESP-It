#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TaskStarter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_TaskType_structs.hpp"
#include "S_Task_structs.hpp"


namespace SDK::Params
{

// Function B_TaskStarter.B_TaskStarter_C.CheckPrerequisiteTask
// 0x0006 (0x0006 - 0x0000)
struct B_TaskStarter_C_CheckPrerequisiteTask final
{
public:
	E_TaskType                                    CallFunc_Map_Find_Value;                           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_CheckPrerequisiteTask) == 0x000001, "Wrong alignment on B_TaskStarter_C_CheckPrerequisiteTask");
static_assert(sizeof(B_TaskStarter_C_CheckPrerequisiteTask) == 0x000006, "Wrong size on B_TaskStarter_C_CheckPrerequisiteTask");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_Map_Find_Value) == 0x000000, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_Map_Find_ReturnValue) == 0x000001, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_Map_Find_Value_1) == 0x000002, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_Map_Find_ReturnValue_1) == 0x000003, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_CheckPrerequisiteTask, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'B_TaskStarter_C_CheckPrerequisiteTask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_TaskStarter.B_TaskStarter_C.ExecuteUbergraph_B_TaskStarter
// 0x0010 (0x0010 - 0x0000)
struct B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter) == 0x000004, "Wrong alignment on B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter");
static_assert(sizeof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter) == 0x000010, "Wrong size on B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, EntryPoint) == 0x000000, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_Map_Contains_ReturnValue) == 0x00000B, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_Map_Find_Value) == 0x00000D, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter, CallFunc_Map_Find_ReturnValue) == 0x00000E, "Member 'B_TaskStarter_C_ExecuteUbergraph_B_TaskStarter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_TaskStarter.B_TaskStarter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_TaskStarter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_ReceiveTick) == 0x000004, "Wrong alignment on B_TaskStarter_C_ReceiveTick");
static_assert(sizeof(B_TaskStarter_C_ReceiveTick) == 0x000004, "Wrong size on B_TaskStarter_C_ReceiveTick");
static_assert(offsetof(B_TaskStarter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_TaskStarter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_TaskStarter.B_TaskStarter_C.TickInitialization
// 0x0048 (0x0048 - 0x0000)
struct B_TaskStarter_C_TickInitialization final
{
public:
	bool                                          TaskManagerValid;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameStateValid;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerValid;                                       // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_TickInitialization) == 0x000008, "Wrong alignment on B_TaskStarter_C_TickInitialization");
static_assert(sizeof(B_TaskStarter_C_TickInitialization) == 0x000048, "Wrong size on B_TaskStarter_C_TickInitialization");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, TaskManagerValid) == 0x000000, "Member 'B_TaskStarter_C_TickInitialization::TaskManagerValid' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, GameStateValid) == 0x000001, "Member 'B_TaskStarter_C_TickInitialization::GameStateValid' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, PlayerValid) == 0x000002, "Member 'B_TaskStarter_C_TickInitialization::PlayerValid' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_IsValid_ReturnValue_1) == 0x000004, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_BooleanAND_ReturnValue_1) == 0x000008, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000018, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_TaskStarter_C_TickInitialization::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000028, "Member 'B_TaskStarter_C_TickInitialization::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_TaskStarter_C_TickInitialization::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000038, "Member 'B_TaskStarter_C_TickInitialization::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TickInitialization, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_TaskStarter_C_TickInitialization::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_TaskStarter.B_TaskStarter_C.ToggleHighlight
// 0x0028 (0x0028 - 0x0000)
struct B_TaskStarter_C_ToggleHighlight final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTickingCooldowns_TickingCooldowns;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_ToggleHighlight) == 0x000008, "Wrong alignment on B_TaskStarter_C_ToggleHighlight");
static_assert(sizeof(B_TaskStarter_C_ToggleHighlight) == 0x000028, "Wrong size on B_TaskStarter_C_ToggleHighlight");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_Map_Contains_ReturnValue) == 0x000005, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_Map_Find_Value) == 0x000010, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_Map_Find_ReturnValue) == 0x000011, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000018, "Member 'B_TaskStarter_C_ToggleHighlight::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_TaskStarter_C_ToggleHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_IsTickingCooldowns_TickingCooldowns) == 0x000022, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_IsTickingCooldowns_TickingCooldowns' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_ToggleHighlight, CallFunc_BooleanAND_ReturnValue_2) == 0x000024, "Member 'B_TaskStarter_C_ToggleHighlight::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function B_TaskStarter.B_TaskStarter_C.TryStartTask
// 0x00D0 (0x00D0 - 0x0000)
struct B_TaskStarter_C_TryStartTask final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTickingCooldowns_TickingCooldowns;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_Task                                CallFunc_GetTask_Task;                             // 0x0028(0x0030)(HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Task_C*                              CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TaskStarter_C_TryStartTask) == 0x000010, "Wrong alignment on B_TaskStarter_C_TryStartTask");
static_assert(sizeof(B_TaskStarter_C_TryStartTask) == 0x0000D0, "Wrong size on B_TaskStarter_C_TryStartTask");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000008, "Member 'B_TaskStarter_C_TryStartTask::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_TaskStarter_C_TryStartTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_IsTickingCooldowns_TickingCooldowns) == 0x000011, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_IsTickingCooldowns_TickingCooldowns' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Map_Contains_ReturnValue) == 0x00001B, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_BooleanAND_ReturnValue_2) == 0x00001C, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Map_Find_Value) == 0x00001D, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Map_Find_ReturnValue) == 0x00001E, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Not_PreBool_ReturnValue) == 0x00001F, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_GetTask_Task) == 0x000028, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_GetTask_Task' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000C0, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TaskStarter_C_TryStartTask, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'B_TaskStarter_C_TryStartTask::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

}

