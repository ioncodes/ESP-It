#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseGizmo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"
#include "E_Axis_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_BaseGizmo.B_BaseGizmo_C
// 0x0098 (0x0328 - 0x0290)
class AB_BaseGizmo_C : public AActor
{
public:
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedX;                                       // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedY;                                       // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedZ;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnselectedUniform;                                 // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UnselectedOpacity;                                 // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedX;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedY;                                         // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedZ;                                         // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           SelectedUniform;                                   // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SelectedOpacity;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetColor(class UMeshComponent* MeshComponent, E_Axis Axis, bool Selected);
	void SetHighlightAxis(E_Axis Axis, bool* ForcedBool);
	void SetMultipleColors(TArray<class UMeshComponent*>& MeshComponent, E_Axis Axis, bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_BaseGizmo_C">();
	}
	static class AB_BaseGizmo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_BaseGizmo_C>();
	}
};
static_assert(alignof(AB_BaseGizmo_C) == 0x000008, "Wrong alignment on AB_BaseGizmo_C");
static_assert(sizeof(AB_BaseGizmo_C) == 0x000328, "Wrong size on AB_BaseGizmo_C");
static_assert(offsetof(AB_BaseGizmo_C, DefaultSceneRoot) == 0x000290, "Member 'AB_BaseGizmo_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, UnselectedX) == 0x000298, "Member 'AB_BaseGizmo_C::UnselectedX' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, UnselectedY) == 0x0002A8, "Member 'AB_BaseGizmo_C::UnselectedY' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, UnselectedZ) == 0x0002B8, "Member 'AB_BaseGizmo_C::UnselectedZ' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, UnselectedUniform) == 0x0002C8, "Member 'AB_BaseGizmo_C::UnselectedUniform' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, UnselectedOpacity) == 0x0002D8, "Member 'AB_BaseGizmo_C::UnselectedOpacity' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, SelectedX) == 0x0002E0, "Member 'AB_BaseGizmo_C::SelectedX' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, SelectedY) == 0x0002F0, "Member 'AB_BaseGizmo_C::SelectedY' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, SelectedZ) == 0x000300, "Member 'AB_BaseGizmo_C::SelectedZ' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, SelectedUniform) == 0x000310, "Member 'AB_BaseGizmo_C::SelectedUniform' has a wrong offset!");
static_assert(offsetof(AB_BaseGizmo_C, SelectedOpacity) == 0x000320, "Member 'AB_BaseGizmo_C::SelectedOpacity' has a wrong offset!");

}

