#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ConfirmRegionSpecificInformation

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ConfirmRegionSpecificInformation.WB_ConfirmRegionSpecificInformation_C.ExecuteUbergraph_WB_ConfirmRegionSpecificInformation
// 0x0020 (0x0020 - 0x0000)
struct WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation) == 0x000008, "Wrong alignment on WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation");
static_assert(sizeof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation) == 0x000020, "Wrong size on WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, EntryPoint) == 0x000000, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, CallFunc_IsChecked_ReturnValue) == 0x000019, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WB_ConfirmRegionSpecificInformation_C_ExecuteUbergraph_WB_ConfirmRegionSpecificInformation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_ConfirmRegionSpecificInformation.WB_ConfirmRegionSpecificInformation_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget");
static_assert(sizeof(WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_ConfirmRegionSpecificInformation_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_ConfirmRegionSpecificInformation.WB_ConfirmRegionSpecificInformation_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_ConfirmRegionSpecificInformation_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_ConfirmRegionSpecificInformation_C_GetVisibility_0");
static_assert(sizeof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0) == 0x000006, "Wrong size on WB_ConfirmRegionSpecificInformation_C_GetVisibility_0");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_ConfirmRegionSpecificInformation_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_ConfirmRegionSpecificInformation.WB_ConfirmRegionSpecificInformation_C.Hide Dialog for Future
// 0x0020 (0x0020 - 0x0000)
struct WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future) == 0x000008, "Wrong alignment on WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future");
static_assert(sizeof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future) == 0x000020, "Wrong size on WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future, CallFunc_IsChecked_ReturnValue) == 0x000008, "Member 'WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WB_ConfirmRegionSpecificInformation_C_Hide_Dialog_for_Future::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_ConfirmRegionSpecificInformation.WB_ConfirmRegionSpecificInformation_C.OnPreviewKeyDown
// 0x02D8 (0x02D8 - 0x0000)
struct WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetGamepadAcceptKey_ReturnValue;          // 0x0200(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0218(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown");
static_assert(sizeof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown) == 0x0002D8, "Wrong size on WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000130, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, CallFunc_GetGamepadAcceptKey_ReturnValue) == 0x000200, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::CallFunc_GetGamepadAcceptKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000218, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002D0, "Member 'WB_ConfirmRegionSpecificInformation_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

}

