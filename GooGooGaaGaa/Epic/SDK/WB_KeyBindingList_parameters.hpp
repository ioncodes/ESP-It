#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyBindingList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "SAxisToEdit_structs.hpp"


namespace SDK::Params
{

// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidget
// 0x0060 (0x0060 - 0x0000)
struct WB_KeyBindingList_C_CreateKeyBindingWidget final
{
public:
	class UWB_KeyBinding_C*                       KeyBindingWidget;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBinding_C*                       Widget;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildIndex_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWB_KeyBinding_C* KeyBindingWidget, class UWB_KeyBindingButton_C* KeyBindingButton, int32 Index)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBinding_C*                       CallFunc_Create_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_CreateKeyBindingWidget) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_CreateKeyBindingWidget");
static_assert(sizeof(WB_KeyBindingList_C_CreateKeyBindingWidget) == 0x000060, "Wrong size on WB_KeyBindingList_C_CreateKeyBindingWidget");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, KeyBindingWidget) == 0x000000, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::KeyBindingWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, Widget) == 0x000008, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::Widget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_GetChildIndex_ReturnValue) == 0x000018, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_GetChildIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000020, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, K2Node_MathExpression_ReturnValue) == 0x000030, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_Divide_IntInt_ReturnValue) == 0x00003C, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidget, CallFunc_Create_ReturnValue) == 0x000058, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidget::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidgetFromAction
// 0x0010 (0x0010 - 0x0000)
struct WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBinding_C*                       CallFunc_CreateKeyBindingWidget_KeyBindingWidget;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction");
static_assert(sizeof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction) == 0x000010, "Wrong size on WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction, ActionName) == 0x000000, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction::ActionName' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction, CallFunc_CreateKeyBindingWidget_KeyBindingWidget) == 0x000008, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction::CallFunc_CreateKeyBindingWidget_KeyBindingWidget' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidgetFromAxis
// 0x0028 (0x0028 - 0x0000)
struct WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis final
{
public:
	struct FSAxisToEdit                           AxisToEdit_0;                                      // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UWB_KeyBinding_C*                       CallFunc_CreateKeyBindingWidget_KeyBindingWidget;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis");
static_assert(sizeof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis) == 0x000028, "Wrong size on WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis, AxisToEdit_0) == 0x000000, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis::AxisToEdit_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis, CallFunc_CreateKeyBindingWidget_KeyBindingWidget) == 0x000020, "Member 'WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis::CallFunc_CreateKeyBindingWidget_KeyBindingWidget' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.ExecuteUbergraph_WB_KeyBindingList
// 0x0080 (0x0080 - 0x0000)
struct WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KeyBinding_C*                       K2Node_CustomEvent_KeyBindingWidget;               // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBindingButton_C*                 K2Node_CustomEvent_KeyBindingButton;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList");
static_assert(sizeof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList) == 0x000080, "Wrong size on WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, EntryPoint) == 0x000000, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, CallFunc_MakeLiteralByte_ReturnValue) == 0x000040, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_CustomEvent_KeyBindingWidget) == 0x000048, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_CustomEvent_KeyBindingWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_CustomEvent_KeyBindingButton) == 0x000050, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_CustomEvent_KeyBindingButton' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_CustomEvent_Index) == 0x000058, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_DynamicCast_AsB_Game_Instance) == 0x000070, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.GetInitialFocusWidget
// 0x0020 (0x0020 - 0x0000)
struct WB_KeyBindingList_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_DynamicCast_AsUser_Widget;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_GetInitialFocusWidget");
static_assert(sizeof(WB_KeyBindingList_C_GetInitialFocusWidget) == 0x000020, "Wrong size on WB_KeyBindingList_C_GetInitialFocusWidget");
static_assert(offsetof(WB_KeyBindingList_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_KeyBindingList_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_GetInitialFocusWidget, CallFunc_GetChildAt_ReturnValue) == 0x000008, "Member 'WB_KeyBindingList_C_GetInitialFocusWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_GetInitialFocusWidget, K2Node_DynamicCast_AsUser_Widget) == 0x000010, "Member 'WB_KeyBindingList_C_GetInitialFocusWidget::K2Node_DynamicCast_AsUser_Widget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_GetInitialFocusWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_KeyBindingList_C_GetInitialFocusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.InitializeBindingWidgets
// 0x0050 (0x0050 - 0x0000)
struct WB_KeyBindingList_C_InitializeBindingWidgets final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSAxisToEdit                           CallFunc_Array_Get_Item;                           // 0x0018(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_InitializeBindingWidgets) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_InitializeBindingWidgets");
static_assert(sizeof(WB_KeyBindingList_C_InitializeBindingWidgets) == 0x000050, "Wrong size on WB_KeyBindingList_C_InitializeBindingWidgets");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_InitializeBindingWidgets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'WB_KeyBindingList_C_InitializeBindingWidgets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.LoadInputMappingsManagerSettings
// 0x0018 (0x0018 - 0x0000)
struct WB_KeyBindingList_C_LoadInputMappingsManagerSettings final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_LoadInputMappingsManagerSettings) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_LoadInputMappingsManagerSettings");
static_assert(sizeof(WB_KeyBindingList_C_LoadInputMappingsManagerSettings) == 0x000018, "Wrong size on WB_KeyBindingList_C_LoadInputMappingsManagerSettings");
static_assert(offsetof(WB_KeyBindingList_C_LoadInputMappingsManagerSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_KeyBindingList_C_LoadInputMappingsManagerSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_LoadInputMappingsManagerSettings, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_KeyBindingList_C_LoadInputMappingsManagerSettings::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_LoadInputMappingsManagerSettings, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_KeyBindingList_C_LoadInputMappingsManagerSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.OnKeyBindingButtonClicked
// 0x0018 (0x0018 - 0x0000)
struct WB_KeyBindingList_C_OnKeyBindingButtonClicked final
{
public:
	class UWB_KeyBinding_C*                       KeyBindingWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBindingButton_C*                 KeyBindingButton;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_OnKeyBindingButtonClicked) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_OnKeyBindingButtonClicked");
static_assert(sizeof(WB_KeyBindingList_C_OnKeyBindingButtonClicked) == 0x000018, "Wrong size on WB_KeyBindingList_C_OnKeyBindingButtonClicked");
static_assert(offsetof(WB_KeyBindingList_C_OnKeyBindingButtonClicked, KeyBindingWidget) == 0x000000, "Member 'WB_KeyBindingList_C_OnKeyBindingButtonClicked::KeyBindingWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnKeyBindingButtonClicked, KeyBindingButton) == 0x000008, "Member 'WB_KeyBindingList_C_OnKeyBindingButtonClicked::KeyBindingButton' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnKeyBindingButtonClicked, Index_0) == 0x000010, "Member 'WB_KeyBindingList_C_OnKeyBindingButtonClicked::Index_0' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.OnPreviewKeyDown
// 0x02C0 (0x02C0 - 0x0000)
struct WB_KeyBindingList_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0150(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0208(0x00B8)()
};
static_assert(alignof(WB_KeyBindingList_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_OnPreviewKeyDown");
static_assert(sizeof(WB_KeyBindingList_C_OnPreviewKeyDown) == 0x0002C0, "Wrong size on WB_KeyBindingList_C_OnPreviewKeyDown");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000149, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000150, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000208, "Member 'WB_KeyBindingList_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.OnPreviewMouseButtonDown
// 0x02F0 (0x02F0 - 0x0000)
struct WB_KeyBindingList_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnPreviewMouseButtonDown_ReturnValue;     // 0x0180(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0238(0x00B8)()
};
static_assert(alignof(WB_KeyBindingList_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on WB_KeyBindingList_C_OnPreviewMouseButtonDown");
static_assert(sizeof(WB_KeyBindingList_C_OnPreviewMouseButtonDown) == 0x0002F0, "Wrong size on WB_KeyBindingList_C_OnPreviewMouseButtonDown");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, CallFunc_OnPreviewMouseButtonDown_ReturnValue) == 0x000180, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::CallFunc_OnPreviewMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_OnPreviewMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000238, "Member 'WB_KeyBindingList_C_OnPreviewMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WB_KeyBindingList.WB_KeyBindingList_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_KeyBindingList_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindingList_C_Tick) == 0x000004, "Wrong alignment on WB_KeyBindingList_C_Tick");
static_assert(sizeof(WB_KeyBindingList_C_Tick) == 0x00003C, "Wrong size on WB_KeyBindingList_C_Tick");
static_assert(offsetof(WB_KeyBindingList_C_Tick, MyGeometry) == 0x000000, "Member 'WB_KeyBindingList_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindingList_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_KeyBindingList_C_Tick::InDeltaTime' has a wrong offset!");

}

