#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamParty

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function SteamParty.SteamBeaconPlayerController.BPEvent_PartyInviteReceived
// 0x0010 (0x0010 - 0x0000)
struct SteamBeaconPlayerController_BPEvent_PartyInviteReceived final
{
public:
	class FString                                 FriendName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamBeaconPlayerController_BPEvent_PartyInviteReceived) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_BPEvent_PartyInviteReceived");
static_assert(sizeof(SteamBeaconPlayerController_BPEvent_PartyInviteReceived) == 0x000010, "Wrong size on SteamBeaconPlayerController_BPEvent_PartyInviteReceived");
static_assert(offsetof(SteamBeaconPlayerController_BPEvent_PartyInviteReceived, FriendName) == 0x000000, "Member 'SteamBeaconPlayerController_BPEvent_PartyInviteReceived::FriendName' has a wrong offset!");

// Function SteamParty.SteamBeaconPlayerController.BPEvent_PartyOwnerChanged
// 0x0030 (0x0030 - 0x0000)
struct SteamBeaconPlayerController_BPEvent_PartyOwnerChanged final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamBeaconPlayerController_BPEvent_PartyOwnerChanged) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_BPEvent_PartyOwnerChanged");
static_assert(sizeof(SteamBeaconPlayerController_BPEvent_PartyOwnerChanged) == 0x000030, "Wrong size on SteamBeaconPlayerController_BPEvent_PartyOwnerChanged");
static_assert(offsetof(SteamBeaconPlayerController_BPEvent_PartyOwnerChanged, InUniqueId) == 0x000000, "Member 'SteamBeaconPlayerController_BPEvent_PartyOwnerChanged::InUniqueId' has a wrong offset!");

// Function SteamParty.SteamBeaconPlayerController.IsPlayerControllerUniqueIdMatch
// 0x0038 (0x0038 - 0x0000)
struct SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch");
static_assert(sizeof(SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch) == 0x000038, "Wrong size on SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch");
static_assert(offsetof(SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch, PlayerId) == 0x000000, "Member 'SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch::PlayerId' has a wrong offset!");
static_assert(offsetof(SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch, ReturnValue) == 0x000030, "Member 'SteamBeaconPlayerController_IsPlayerControllerUniqueIdMatch::ReturnValue' has a wrong offset!");

// Function SteamParty.SteamBeaconPlayerController.IsPlayerVoiceMuted
// 0x0038 (0x0038 - 0x0000)
struct SteamBeaconPlayerController_IsPlayerVoiceMuted final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamBeaconPlayerController_IsPlayerVoiceMuted) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_IsPlayerVoiceMuted");
static_assert(sizeof(SteamBeaconPlayerController_IsPlayerVoiceMuted) == 0x000038, "Wrong size on SteamBeaconPlayerController_IsPlayerVoiceMuted");
static_assert(offsetof(SteamBeaconPlayerController_IsPlayerVoiceMuted, PlayerId) == 0x000000, "Member 'SteamBeaconPlayerController_IsPlayerVoiceMuted::PlayerId' has a wrong offset!");
static_assert(offsetof(SteamBeaconPlayerController_IsPlayerVoiceMuted, ReturnValue) == 0x000030, "Member 'SteamBeaconPlayerController_IsPlayerVoiceMuted::ReturnValue' has a wrong offset!");

// Function SteamParty.SteamBeaconPlayerController.MutePlayerVoice
// 0x0030 (0x0030 - 0x0000)
struct SteamBeaconPlayerController_MutePlayerVoice final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamBeaconPlayerController_MutePlayerVoice) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_MutePlayerVoice");
static_assert(sizeof(SteamBeaconPlayerController_MutePlayerVoice) == 0x000030, "Wrong size on SteamBeaconPlayerController_MutePlayerVoice");
static_assert(offsetof(SteamBeaconPlayerController_MutePlayerVoice, PlayerId) == 0x000000, "Member 'SteamBeaconPlayerController_MutePlayerVoice::PlayerId' has a wrong offset!");

// Function SteamParty.SteamBeaconPlayerController.UnMutePlayerVoice
// 0x0030 (0x0030 - 0x0000)
struct SteamBeaconPlayerController_UnMutePlayerVoice final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamBeaconPlayerController_UnMutePlayerVoice) == 0x000008, "Wrong alignment on SteamBeaconPlayerController_UnMutePlayerVoice");
static_assert(sizeof(SteamBeaconPlayerController_UnMutePlayerVoice) == 0x000030, "Wrong size on SteamBeaconPlayerController_UnMutePlayerVoice");
static_assert(offsetof(SteamBeaconPlayerController_UnMutePlayerVoice, PlayerId) == 0x000000, "Member 'SteamBeaconPlayerController_UnMutePlayerVoice::PlayerId' has a wrong offset!");

}

