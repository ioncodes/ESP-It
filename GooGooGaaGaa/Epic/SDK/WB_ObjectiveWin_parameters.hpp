#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ObjectiveWin

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "E_ObjectiveResult_structs.hpp"


namespace SDK::Params
{

// Function WB_ObjectiveWin.WB_ObjectiveWin_C.Get_Defeat_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_ObjectiveWin_C_Get_Defeat_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveResult                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0) == 0x000001, "Wrong alignment on WB_ObjectiveWin_C_Get_Defeat_Visibility_0");
static_assert(sizeof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0) == 0x000006, "Wrong size on WB_ObjectiveWin_C_Get_Defeat_Visibility_0");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, Temp_byte_Variable_2) == 0x000003, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, Temp_byte_Variable_3) == 0x000004, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Defeat_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_ObjectiveWin_C_Get_Defeat_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_ObjectiveWin.WB_ObjectiveWin_C.Get_Draw_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_ObjectiveWin_C_Get_Draw_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveResult                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ObjectiveWin_C_Get_Draw_Visibility_0) == 0x000001, "Wrong alignment on WB_ObjectiveWin_C_Get_Draw_Visibility_0");
static_assert(sizeof(WB_ObjectiveWin_C_Get_Draw_Visibility_0) == 0x000006, "Wrong size on WB_ObjectiveWin_C_Get_Draw_Visibility_0");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, Temp_byte_Variable_2) == 0x000003, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, Temp_byte_Variable_3) == 0x000004, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Draw_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_ObjectiveWin_C_Get_Draw_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_ObjectiveWin.WB_ObjectiveWin_C.Get_Victory_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_ObjectiveWin_C_Get_Victory_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveResult                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ObjectiveWin_C_Get_Victory_Visibility_0) == 0x000001, "Wrong alignment on WB_ObjectiveWin_C_Get_Victory_Visibility_0");
static_assert(sizeof(WB_ObjectiveWin_C_Get_Victory_Visibility_0) == 0x000006, "Wrong size on WB_ObjectiveWin_C_Get_Victory_Visibility_0");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, Temp_byte_Variable_2) == 0x000003, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, Temp_byte_Variable_3) == 0x000004, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ObjectiveWin_C_Get_Victory_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_ObjectiveWin_C_Get_Victory_Visibility_0::K2Node_Select_Default' has a wrong offset!");

}

