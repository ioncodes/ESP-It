#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MenuTileViewManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "ETeamID_structs.hpp"
#include "E_PowerupRuleType_structs.hpp"
#include "E_GameModifierType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MenuTileViewManager.B_MenuTileViewManager_C
// 0x0008 (0x0030 - 0x0028)
class UB_MenuTileViewManager_C final : public UObject
{
public:
	bool                                          InitialFocusNeeded;                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddItemToTileView(class UTileView* TileView, class UB_TileViewData_C* ItemData, bool FocusNeeded);
	void ClearTileView(class UTileView* TileView);
	void GetMapButtonData(bool HasInitialFocusOrSelection, class UUserWidget* Parent, const struct FSMapData& MapData, const struct FS_PropLayoutData& LayoutData, bool MapCycleIsEditable, class UB_MapButtonData_C** Data);
	void GetMaterialButtonData(class UUserWidget* Parent, bool IsInitial, class UMaterialInterface* Material, class UB_BasePlaceableMaterialOverwrite_C* MaterialOverwrite, int32 SlotIndex, class UTexture2D* MaterialIcon, class UB_MaterialButtonData_C** MaterialButtonData);
	void GetModButtonData(E_GameModifierType Modifier, bool HasInitialFocus, class UUserWidget* Parent, class UB_ModButtonData_C** ButtonData);
	void GetPowerupButtonData(E_PowerupRuleType Powerup, bool HasInitialFocus, class UUserWidget* Parent, class UB_PowerupButtonData_C** ButtonData);
	void GetPropButtonData(int32 PropID, bool UnlockedByDefault, bool IsInitial, class UClass* Structure, class UUserWidget* Parent, const struct FPrefabToSave& Prefab, class UB_PropButtonData_C** Data);
	void GetSkillButtonData(bool HasInitialFocus, class UClass* SkillClass, class UUserWidget* Parent, class UB_SkillButtonData_C** ButtonData);
	void GetSkinConfigButtonData(bool HasInitialFocusOrSelection, class UUserWidget* Parent, int32 SkinConfigNr, class UB_SkinConfigButtonData_C** Data);
	void GetSkinOrRecipeData(const struct FS_ItemInfo& SkinInfo, const struct FS_RecipeInfo& RecipeInfo, bool HasInitialFocusOrSelection, class UUserWidget* Parent, class UB_SkinOrRecipeItemData_C** Data);
	void GetTradingButtonData(const struct FTradingItem& Item, const struct FS_ItemInfo& SkinItem, const struct FS_RecipeInfo& RecipeItem, bool HasInitialFocus, class UUserWidget* Parent, class UB_TradingItemData_C** Data);
	void SetGeneralData(class UB_TileViewData_C* TileViewData, bool HasInitialFocusOrSelection, class UUserWidget* Parent);
	void TileViewIsEmpty(class UListViewBase* TileView, bool* IsEmpty);
	void UpdateSkinConfigTileView(class UTileView* TileView, class UB_SkinSelection_C* SkinSaves, ETeamID Team, class UUserWidget* Parent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MenuTileViewManager_C">();
	}
	static class UB_MenuTileViewManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MenuTileViewManager_C>();
	}
};
static_assert(alignof(UB_MenuTileViewManager_C) == 0x000008, "Wrong alignment on UB_MenuTileViewManager_C");
static_assert(sizeof(UB_MenuTileViewManager_C) == 0x000030, "Wrong size on UB_MenuTileViewManager_C");
static_assert(offsetof(UB_MenuTileViewManager_C, InitialFocusNeeded) == 0x000028, "Member 'UB_MenuTileViewManager_C::InitialFocusNeeded' has a wrong offset!");

}

