#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Timer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Timer.B_Timer_C
// 0x0040 (0x0270 - 0x0230)
class UB_Timer_C final : public USceneComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	FMulticastInlineDelegateProperty_             OnSecondElapsed;                                   // 0x0238(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         RemainingSeconds;                                  // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InitialTime;                                       // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCounting;                                        // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnFinished;                                        // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ExecuteUbergraph_B_Timer(int32 EntryPoint);
	void OnFinished__DelegateSignature();
	void OnSecondElapsed__DelegateSignature(int32 ElapsedSeconds, int32 RemainingSeconds_0);
	void ReceiveTick(float DeltaSeconds);
	void Start(int32 Time);
	void Stop();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Timer_C">();
	}
	static class UB_Timer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_Timer_C>();
	}
};
static_assert(alignof(UB_Timer_C) == 0x000010, "Wrong alignment on UB_Timer_C");
static_assert(sizeof(UB_Timer_C) == 0x000270, "Wrong size on UB_Timer_C");
static_assert(offsetof(UB_Timer_C, UberGraphFrame) == 0x000230, "Member 'UB_Timer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_Timer_C, OnSecondElapsed) == 0x000238, "Member 'UB_Timer_C::OnSecondElapsed' has a wrong offset!");
static_assert(offsetof(UB_Timer_C, RemainingSeconds) == 0x000248, "Member 'UB_Timer_C::RemainingSeconds' has a wrong offset!");
static_assert(offsetof(UB_Timer_C, InitialTime) == 0x00024C, "Member 'UB_Timer_C::InitialTime' has a wrong offset!");
static_assert(offsetof(UB_Timer_C, IsCounting) == 0x000250, "Member 'UB_Timer_C::IsCounting' has a wrong offset!");
static_assert(offsetof(UB_Timer_C, OnFinished) == 0x000258, "Member 'UB_Timer_C::OnFinished' has a wrong offset!");

}

