#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Presence

#include "Basic.hpp"

#include "BFL_Presence_classes.hpp"
#include "BFL_Presence_parameters.hpp"


namespace SDK
{

// Function BFL_Presence.BFL_Presence_C.DeclarePresence
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Presence                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_Presence_C::DeclarePresence(const class FString& Presence, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_Presence_C", "DeclarePresence");

	Params::BFL_Presence_C_DeclarePresence Parms{};

	Parms.Presence = std::move(Presence);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BFL_Presence.BFL_Presence_C.GetPresenceForUser
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOnlineUserRef*                   ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAccountPresenceEntry            Out                                                    (Parm, OutParm)

void UBFL_Presence_C::GetPresenceForUser(class UOnlineUserRef* ProductUserId, class UObject* __WorldContext, bool* bIsValid, struct FAccountPresenceEntry* Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_Presence_C", "GetPresenceForUser");

	Params::BFL_Presence_C_GetPresenceForUser Parms{};

	Parms.ProductUserId = ProductUserId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	if (Out != nullptr)
		*Out = std::move(Parms.Out);
}


// Function BFL_Presence.BFL_Presence_C.RequestPresenceForUsers
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UOnlineUserRef*>           Friends                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_Presence_C::RequestPresenceForUsers(TArray<class UOnlineUserRef*>& Friends, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_Presence_C", "RequestPresenceForUsers");

	Params::BFL_Presence_C_RequestPresenceForUsers Parms{};

	Parms.Friends = std::move(Friends);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Friends = std::move(Parms.Friends);
}

}

