#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveCauldron

#include "Basic.hpp"

#include "S_PropList_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_ObjectiveCauldron_C_BndEvt__CheckSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_ObjectiveCauldron_C_BndEvt__WitchCheckSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.CheckIsInitializeForPlayers
// 0x0060 (0x0060 - 0x0000)
struct B_ObjectiveCauldron_C_CheckIsInitializeForPlayers final
{
public:
	class AB_PlayerState_C*                       CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLevelInitializedForActor_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_CheckIsInitializeForPlayers");
static_assert(sizeof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers) == 0x000060, "Wrong size on B_ObjectiveCauldron_C_CheckIsInitializeForPlayers");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CurrentPlayer) == 0x000000, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, K2Node_DynamicCast_AsB_Player_State) == 0x000028, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Map_Find_Value) == 0x00003C, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_IsLevelInitializedForActor_ReturnValue) == 0x000048, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_IsLevelInitializedForActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Map_Find_Value_1) == 0x00004C, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Map_Find_ReturnValue_1) == 0x000050, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_CheckIsInitializeForPlayers, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'B_ObjectiveCauldron_C_CheckIsInitializeForPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.EditorCheckProps
// 0x02A0 (0x02A0 - 0x0000)
struct B_ObjectiveCauldron_C_EditorCheckProps final
{
public:
	bool                                          TooClose;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_StaticMeshProp_C*>            TempProps;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class UClass*>                         PropsToRemove;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         TempPropClasses;                                   // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<class AB_StaticMeshProp_C*>            Temp;                                              // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class UClass*>                         ValidProps;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	TMap<class UClass*, struct FS_PropList>       Proplist;                                          // 0x0058(0x0050)(Edit, BlueprintVisible)
	TArray<class AB_StaticMeshProp_C*>            AllProps;                                          // 0x00A8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_StaticMeshProp_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0118(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0130(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue_1;        // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropList                            CallFunc_Map_Find_Value;                           // 0x0190(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropList                            CallFunc_Map_Find_Value_1;                         // 0x01C0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys_1;                          // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    CallFunc_Array_Get_Item_3;                         // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_StaticMeshProp_C*>            K2Node_MakeArray_Array;                            // 0x01F8(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PropList                            K2Node_MakeStruct_S_PropList;                      // 0x0210(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_226[0x2];                                      // 0x0226(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropList                            CallFunc_Map_Find_Value_2;                         // 0x0228(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_Array_Get_Item_4;                         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PropList                            K2Node_MakeStruct_S_PropList_1;                    // 0x0280(0x0010)(HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x3];                                      // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_EditorCheckProps) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_EditorCheckProps");
static_assert(sizeof(B_ObjectiveCauldron_C_EditorCheckProps) == 0x0002A0, "Wrong size on B_ObjectiveCauldron_C_EditorCheckProps");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, TooClose) == 0x000000, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::TooClose' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, TempProps) == 0x000008, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::TempProps' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, PropsToRemove) == 0x000018, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::PropsToRemove' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, TempPropClasses) == 0x000028, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::TempPropClasses' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp) == 0x000038, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, ValidProps) == 0x000048, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::ValidProps' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Proplist) == 0x000058, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Proplist' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, AllProps) == 0x0000A8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::AllProps' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Loop_Counter_Variable_1) == 0x0000C4, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Loop_Counter_Variable_3) == 0x0000DC, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000E0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Array_Index_Variable_3) == 0x0000E4, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000108, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Loop_Counter_Variable_4) == 0x000110, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Add_IntInt_ReturnValue_4) == 0x000114, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_GetAllActorsOfClass_OutActors) == 0x000118, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Keys_Keys) == 0x000130, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Length_ReturnValue) == 0x000140, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Get_Item) == 0x000148, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Remove_ReturnValue) == 0x000154, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Less_IntInt_ReturnValue_1) == 0x000155, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, Temp_int_Array_Index_Variable_4) == 0x000158, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_GetClassDisplayName_ReturnValue) == 0x000168, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_GetClassDisplayName_ReturnValue_1) == 0x000178, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_GetClassDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Add_ReturnValue) == 0x000188, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Contains_ReturnValue) == 0x00018C, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_Value) == 0x000190, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_ReturnValue) == 0x0001A0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001A1, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue_2) == 0x0001B0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Add_ReturnValue_1) == 0x0001B4, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001B8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_Value_1) == 0x0001C0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_ReturnValue_1) == 0x0001D0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue_3) == 0x0001D4, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Keys_Keys_1) == 0x0001D8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001E8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Length_ReturnValue_1) == 0x0001EC, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Get_Item_3) == 0x0001F0, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, K2Node_MakeArray_Array) == 0x0001F8, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_GetObjectClass_ReturnValue) == 0x000208, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, K2Node_MakeStruct_S_PropList) == 0x000210, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::K2Node_MakeStruct_S_PropList' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue_4) == 0x000220, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000224, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Less_IntInt_ReturnValue_3) == 0x000225, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_Value_2) == 0x000228, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Map_Find_ReturnValue_2) == 0x000238, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Get_Item_4) == 0x000240, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Length_ReturnValue_5) == 0x000248, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_IsValid_ReturnValue) == 0x00024C, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Less_IntInt_ReturnValue_4) == 0x00024D, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000250, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000268, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, K2Node_MakeStruct_S_PropList_1) == 0x000280, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::K2Node_MakeStruct_S_PropList_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_VSizeSquared_ReturnValue) == 0x000290, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000298, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_EditorCheckProps, CallFunc_Array_Add_ReturnValue_2) == 0x00029C, "Member 'B_ObjectiveCauldron_C_EditorCheckProps::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.ExecuteUbergraph_B_ObjectiveCauldron
// 0x0660 (0x0660 - 0x0000)
struct B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_ByteToDouble_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue_1;               // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x1];                                       // 0x00D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RespawnWitch_Success;                     // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0190(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CauldronPawn_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0238(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveWitch_C*                    K2Node_DynamicCast_AsB_Objective_Witch;            // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetWitchPlayerController_PlayerController; // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GenerateWantedProp_FoundProp;             // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GenerateWantedProp_PropClass;             // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0388(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0480(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0490(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x049C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D[0x3];                                      // 0x049D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x04A0(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A4[0x4];                                      // 0x05A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetWitchPlayerController_PlayerController_1; // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerName_PlayerName;                 // 0x05D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x05E8(0x0010)()
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x05FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x05FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue_1;      // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x064A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x064B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0658(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron) == 0x000010, "Wrong alignment on B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron");
static_assert(sizeof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron) == 0x000660, "Wrong size on B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, EntryPoint) == 0x000000, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000018, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000022, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, Temp_real_Variable) == 0x000028, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, Temp_real_Variable_1) == 0x000038, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Game_Mode) == 0x000040, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_IsDedicatedServer_ReturnValue) == 0x000049, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, Temp_int_Variable) == 0x00004C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_HasAuthority_ReturnValue_1) == 0x000050, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000058, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_HasAuthority_ReturnValue_2) == 0x000078, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_ByteByte_ReturnValue) == 0x000079, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, Temp_bool_Variable) == 0x00007A, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_Event_DeltaSeconds) == 0x00007C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Conv_ByteToDouble_ReturnValue) == 0x000080, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Conv_ByteToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Conv_ByteToDouble_ReturnValue_1) == 0x000088, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Conv_ByteToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000098, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0000A8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_FInterpTo_ReturnValue) == 0x0000B8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetGameState_ReturnValue_1) == 0x0000C0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x0000C8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x0000D1, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_ByteByte_ReturnValue_1) == 0x0000D2, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Max_ReturnValue) == 0x0000D8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_Select_Default) == 0x0000E0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000E8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000100, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000118, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000130, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000138, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherActor) == 0x000140, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherComp) == 0x000148, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000150, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetObjectClass_ReturnValue) == 0x000158, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000160, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_ClassIsChildOf_ReturnValue) == 0x000168, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000170, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_IntInt_ReturnValue_1) == 0x000178, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_RespawnWitch_Success) == 0x00017C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_RespawnWitch_Success' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_CreateDelegate_OutputDelegate) == 0x000180, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000190, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetTransform_ReturnValue) == 0x0001A0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000200, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_FinishSpawningActor_ReturnValue) == 0x000208, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Array_Add_ReturnValue) == 0x000210, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000218, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000220, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000228, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000230, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_bFromSweep) == 0x000234, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_SweepResult) == 0x000238, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000330, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Objective_Witch) == 0x000338, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Objective_Witch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_3) == 0x000340, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetWitchPlayerController_PlayerController) == 0x000348, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetWitchPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetObjectClass_ReturnValue_1) == 0x000350, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_HasAuthority_ReturnValue_3) == 0x000358, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000359, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x00035A, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Greater_IntInt_ReturnValue) == 0x00035B, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue_1) == 0x00035C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue) == 0x00035D, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_MakeVector_ReturnValue) == 0x000360, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GenerateWantedProp_FoundProp) == 0x000378, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GenerateWantedProp_FoundProp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GenerateWantedProp_PropClass) == 0x000380, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GenerateWantedProp_PropClass' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000388, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000480, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000488, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000490, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000498, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00049C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_ComponentBoundEvent_SweepResult_1) == 0x0004A0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetInstigatorController_ReturnValue) == 0x000598, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Array_Add_ReturnValue_1) == 0x0005A0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x0005A8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_4) == 0x0005B0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x0005B8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_5) == 0x0005C0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetWitchPlayerController_PlayerController_1) == 0x0005C8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetWitchPlayerController_PlayerController_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetPlayerName_PlayerName) == 0x0005D0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetPlayerName_PlayerName' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetObjectClass_ReturnValue_2) == 0x0005E0, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Conv_StringToText_ReturnValue) == 0x0005E8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0005F8, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue_1) == 0x0005F9, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue_2) == 0x0005FA, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue_2) == 0x0005FB, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000600, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000608, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue_3) == 0x000610, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetGameInstance_ReturnValue) == 0x000618, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000620, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000638, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_AsB_Player_State) == 0x000640, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, K2Node_DynamicCast_bSuccess_6) == 0x000648, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_GreaterEqual_ByteByte_ReturnValue_1) == 0x000649, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_GreaterEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00064A, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue_4) == 0x00064B, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_Not_PreBool_ReturnValue_5) == 0x00064C, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue_3) == 0x00064D, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00064E, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue_4) == 0x00064F, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_BooleanAND_ReturnValue_5) == 0x000650, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000654, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000658, "Member 'B_ObjectiveCauldron_C_ExecuteUbergraph_B_ObjectiveCauldron::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.GenerateWantedProp
// 0x0128 (0x0128 - 0x0000)
struct B_ObjectiveCauldron_C_GenerateWantedProp final
{
public:
	bool                                          FoundProp;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PropClass;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         PropsToAvoid;                                      // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AB_StaticMeshProp_C*>            TempProps;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UClass*                                 TempPropClass;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          TooClose;                                          // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveCauldron_C*                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetClassDisplayName_ReturnValue;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropList                            CallFunc_Map_Find_Value;                           // 0x00C0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_GenerateWantedProp) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_GenerateWantedProp");
static_assert(sizeof(B_ObjectiveCauldron_C_GenerateWantedProp) == 0x000128, "Wrong size on B_ObjectiveCauldron_C_GenerateWantedProp");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, FoundProp) == 0x000000, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::FoundProp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, PropClass) == 0x000008, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::PropClass' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, PropsToAvoid) == 0x000010, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::PropsToAvoid' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, TempProps) == 0x000020, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::TempProps' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, TempPropClass) == 0x000030, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::TempPropClass' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, TooClose) == 0x000038, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::TooClose' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, Found) == 0x000039, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::Found' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_IsValidClass_ReturnValue) == 0x000090, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_GetClassDisplayName_ReturnValue) == 0x000098, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_GetClassDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Contains_ReturnValue) == 0x0000A8, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Contains_ReturnValue_1) == 0x0000A9, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Not_PreBool_ReturnValue) == 0x0000AA, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AB, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B1, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B4, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_RandomInteger_ReturnValue) == 0x0000D4, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Array_Get_Item_2) == 0x0000D8, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000E0, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E1, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000E8, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000100, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_VSizeSquared_ReturnValue) == 0x000118, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_GenerateWantedProp, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000120, "Member 'B_ObjectiveCauldron_C_GenerateWantedProp::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.Init
// 0x00F0 (0x00F0 - 0x0000)
struct B_ObjectiveCauldron_C_Init final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveGameMode_C*                 K2Node_DynamicCast_AsB_Objective_Game_Mode;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_CauldronUI_C*                       K2Node_DynamicCast_AsWB_Cauldron_UI;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0084(0x0014)()
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_CauldronUI_C*                       K2Node_DynamicCast_AsWB_Cauldron_UI_1;             // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_2;   // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_Init) == 0x000008, "Wrong alignment on B_ObjectiveCauldron_C_Init");
static_assert(sizeof(B_ObjectiveCauldron_C_Init) == 0x0000F0, "Wrong size on B_ObjectiveCauldron_C_Init");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_AsB_Game_Mode) == 0x000008, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_AsB_Objective_Game_Mode) == 0x000018, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_AsB_Objective_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000028, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000040, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000058, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_AsWB_Cauldron_UI) == 0x000060, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_AsWB_Cauldron_UI' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000078, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_MakeStruct_SlateColor) == 0x000084, "Member 'B_ObjectiveCauldron_C_Init::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000098, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_AsWB_Cauldron_UI_1) == 0x0000A0, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_AsWB_Cauldron_UI_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'B_ObjectiveCauldron_C_Init::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_Conv_LinearColorToVector_ReturnValue_2) == 0x0000B0, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_Conv_LinearColorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000C8, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0000D8, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0000E0, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveCauldron_C_Init, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000E8, "Member 'B_ObjectiveCauldron_C_Init::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectiveCauldron_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ObjectiveCauldron_C_ReceiveTick");
static_assert(sizeof(B_ObjectiveCauldron_C_ReceiveTick) == 0x000004, "Wrong size on B_ObjectiveCauldron_C_ReceiveTick");
static_assert(offsetof(B_ObjectiveCauldron_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ObjectiveCauldron_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.UpdateFillVisibility
// 0x0001 (0x0001 - 0x0000)
struct B_ObjectiveCauldron_C_UpdateFillVisibility final
{
public:
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_UpdateFillVisibility) == 0x000001, "Wrong alignment on B_ObjectiveCauldron_C_UpdateFillVisibility");
static_assert(sizeof(B_ObjectiveCauldron_C_UpdateFillVisibility) == 0x000001, "Wrong size on B_ObjectiveCauldron_C_UpdateFillVisibility");
static_assert(offsetof(B_ObjectiveCauldron_C_UpdateFillVisibility, CallFunc_Greater_ByteByte_ReturnValue) == 0x000000, "Member 'B_ObjectiveCauldron_C_UpdateFillVisibility::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function B_ObjectiveCauldron.B_ObjectiveCauldron_C.UserConstructionScript
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectiveCauldron_C_UserConstructionScript final
{
public:
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveCauldron_C_UserConstructionScript) == 0x000004, "Wrong alignment on B_ObjectiveCauldron_C_UserConstructionScript");
static_assert(sizeof(B_ObjectiveCauldron_C_UserConstructionScript) == 0x000004, "Wrong size on B_ObjectiveCauldron_C_UserConstructionScript");
static_assert(offsetof(B_ObjectiveCauldron_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000000, "Member 'B_ObjectiveCauldron_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

}

