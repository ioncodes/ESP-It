#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ClientQuestInterface

#include "Basic.hpp"

#include "ClientQuest_structs.hpp"
#include "LowEntryJson_structs.hpp"
#include "ClientQuestType_structs.hpp"
#include "Engine_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "LowEntryExtendedStandardLibrary_structs.hpp"
#include "ERestCommonError_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ClientQuestInterface.B_ClientQuestInterface_C
// 0x0098 (0x00C0 - 0x0028)
class UB_ClientQuestInterface_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_NewMasterServerManager_C*            NewMasterServerManager;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnReceiveAssignedQuests;                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDailyQuestReplaceFlagDidChange;                  // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnWeeklyQuestReplaceFlagDidChange;                 // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CanReplaceWeeklyQuest;                             // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanReplaceDailyQuest;                              // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FClientQuest>                   CurrentAssignedQuests;                             // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         RemainingTimeMinutesDailyReset;                    // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingTimeMinutesWeeklyReset;                   // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 TimeAtLastUpdate;                                  // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MaxNumberOfDailyQuests;                            // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxNumberOfWeeklyQuests;                           // 0x009C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnQuestChanged;                                    // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<int64>                                 ChangedQuests;                                     // 0x00B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnDailyQuestReplaceFlagDidChange__DelegateSignature();
	void OnReceiveAssignedQuests__DelegateSignature(TArray<struct FClientQuest>& Quests);
	void Build_Replace_Weekly_Quest_Request(int64 AccountQuestId, class UVaRestRequestJSON** Request);
	void BuildFinalizeQuestRequest(int64 AccountQuestId, int32 QuestID, class UVaRestRequestJSON** Request);
	void BuildGetAssignedQuestsRequest(class UVaRestRequestJSON** Request);
	void BuildReplaceDailyQuestRequest(int64 AccountQuestId, class UVaRestRequestJSON** Request);
	void BuildRequestDailyFlagRequest(class UVaRestRequestJSON** Request);
	void BuildRequestWeeklyFlagRequest(class UVaRestRequestJSON** Request);
	void ExecuteUbergraph_B_ClientQuestInterface(int32 EntryPoint);
	void FinalizeQuest(int64 AccountQuestId, int32 QuestID);
	void GamemodeNameHelper(bool Win, class UClass* GameMode, int32 Value, class FText* Text);
	void GetCachedQuests(TArray<struct FClientQuest>* CurrentAssignedQuests_0);
	void GetJsonValueObjectField(class ULowEntryJsonValue* Value, const class FString& FieldName, class ULowEntryJsonValue** Result);
	void GetQuestFromID(int64 AccountQuestId, bool* QuestFound, struct FClientQuest* Quest);
	void GetQuestName(int32 QuestID, int32 MaxValue, class FText* QuestName);
	void HandleInvalidRequestActiveQuests(int32 Code);
	void HandleQuestDidChange(EQuestChangeReason Reason, int64 AccountQuestId);
	void Init(const class UB_NewMasterServerManager_C*& NewMasterServerManager_0);
	void OnCompleteQuestRequestComplete(class UVaRestRequestJSON* Request);
	void OnGetAssignedQuestsRequestComplete(class UVaRestRequestJSON* Request);
	void OnQuestChanged__DelegateSignature(const struct FClientQuest& UpdatedQuest);
	void OnReplaceDailyRequestComplete(class UVaRestRequestJSON* Request);
	void OnReplaceWeeklyRequestComplete(class UVaRestRequestJSON* Request);
	void OnRequestDailyReplaceFlagComplete(class UVaRestRequestJSON* Request);
	void OnRequestWeeklyReplaceFlagComplete(class UVaRestRequestJSON* Request);
	void OnWeeklyQuestReplaceFlagDidChange__DelegateSignature();
	void ParseClientQuestFromJsonObject(class ULowEntryJsonValue* Object, struct FClientQuest* Quest, bool* Success);
	void ParseClientQuestsFromResponse(class ULowEntryJsonObject* JsonObject, TArray<struct FClientQuest>* Quests);
	void ParseQuestTypeEnum(const class FString& Value, EClientQuestType* Result);
	void ReplaceDailyQuest(int64 AccountQuestId);
	void ReplaceWeeklyQuest(int64 AccountQuestId);
	void Request_Assigned_Quests();
	void RequestDailyReplaceFlag();
	void RequestWeeklyReplaceFlag();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ClientQuestInterface_C">();
	}
	static class UB_ClientQuestInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ClientQuestInterface_C>();
	}
};
static_assert(alignof(UB_ClientQuestInterface_C) == 0x000008, "Wrong alignment on UB_ClientQuestInterface_C");
static_assert(sizeof(UB_ClientQuestInterface_C) == 0x0000C0, "Wrong size on UB_ClientQuestInterface_C");
static_assert(offsetof(UB_ClientQuestInterface_C, UberGraphFrame) == 0x000028, "Member 'UB_ClientQuestInterface_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, NewMasterServerManager) == 0x000030, "Member 'UB_ClientQuestInterface_C::NewMasterServerManager' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, OnReceiveAssignedQuests) == 0x000038, "Member 'UB_ClientQuestInterface_C::OnReceiveAssignedQuests' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, OnDailyQuestReplaceFlagDidChange) == 0x000048, "Member 'UB_ClientQuestInterface_C::OnDailyQuestReplaceFlagDidChange' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, OnWeeklyQuestReplaceFlagDidChange) == 0x000058, "Member 'UB_ClientQuestInterface_C::OnWeeklyQuestReplaceFlagDidChange' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, CanReplaceWeeklyQuest) == 0x000068, "Member 'UB_ClientQuestInterface_C::CanReplaceWeeklyQuest' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, CanReplaceDailyQuest) == 0x000069, "Member 'UB_ClientQuestInterface_C::CanReplaceDailyQuest' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, CurrentAssignedQuests) == 0x000070, "Member 'UB_ClientQuestInterface_C::CurrentAssignedQuests' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, RemainingTimeMinutesDailyReset) == 0x000080, "Member 'UB_ClientQuestInterface_C::RemainingTimeMinutesDailyReset' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, RemainingTimeMinutesWeeklyReset) == 0x000084, "Member 'UB_ClientQuestInterface_C::RemainingTimeMinutesWeeklyReset' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, TimeAtLastUpdate) == 0x000088, "Member 'UB_ClientQuestInterface_C::TimeAtLastUpdate' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, MaxNumberOfDailyQuests) == 0x000098, "Member 'UB_ClientQuestInterface_C::MaxNumberOfDailyQuests' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, MaxNumberOfWeeklyQuests) == 0x00009C, "Member 'UB_ClientQuestInterface_C::MaxNumberOfWeeklyQuests' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, OnQuestChanged) == 0x0000A0, "Member 'UB_ClientQuestInterface_C::OnQuestChanged' has a wrong offset!");
static_assert(offsetof(UB_ClientQuestInterface_C, ChangedQuests) == 0x0000B0, "Member 'UB_ClientQuestInterface_C::ChangedQuests' has a wrong offset!");

}

