#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SmallDowntimeBlock

#include "Basic.hpp"

#include "S_SystemMessage_structs.hpp"
#include "E_DowntimeType_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AffectedService_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_SmallDowntimeBlock.WB_SmallDowntimeBlock_C
// 0x0058 (0x0338 - 0x02E0)
class UWB_SmallDowntimeBlock_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_TabButton_C*                        MoreInfoButton;                                    // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             StartDate;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_DowntimeType                                DowntimeType;                                      // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_AffectedService                             AffectedServices;                                  // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              StartTime;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              Duration;                                          // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_SystemMessage                       Message;                                           // 0x0310(0x0028)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void BndEvt__WB_SmallDowntimeBlock_MoreInfoButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature();
	void ExecuteUbergraph_WB_SmallDowntimeBlock(int32 EntryPoint);
	void HideDowntimeMessage();
	void ParseSystemMessage(const struct FS_SystemMessage& SystemMessage, bool* bSuccess);
	void ShowDowntimeMessage(const struct FS_SystemMessage& Message_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_SmallDowntimeBlock_C">();
	}
	static class UWB_SmallDowntimeBlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_SmallDowntimeBlock_C>();
	}
};
static_assert(alignof(UWB_SmallDowntimeBlock_C) == 0x000008, "Wrong alignment on UWB_SmallDowntimeBlock_C");
static_assert(sizeof(UWB_SmallDowntimeBlock_C) == 0x000338, "Wrong size on UWB_SmallDowntimeBlock_C");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_SmallDowntimeBlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, MoreInfoButton) == 0x0002E8, "Member 'UWB_SmallDowntimeBlock_C::MoreInfoButton' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, StartDate) == 0x0002F0, "Member 'UWB_SmallDowntimeBlock_C::StartDate' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, DowntimeType) == 0x0002F8, "Member 'UWB_SmallDowntimeBlock_C::DowntimeType' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, AffectedServices) == 0x0002F9, "Member 'UWB_SmallDowntimeBlock_C::AffectedServices' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, StartTime) == 0x000300, "Member 'UWB_SmallDowntimeBlock_C::StartTime' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, Duration) == 0x000308, "Member 'UWB_SmallDowntimeBlock_C::Duration' has a wrong offset!");
static_assert(offsetof(UWB_SmallDowntimeBlock_C, Message) == 0x000310, "Member 'UWB_SmallDowntimeBlock_C::Message' has a wrong offset!");

}

