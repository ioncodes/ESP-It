#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyBindings

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_KeyBindings.WB_KeyBindings_C.ExecuteUbergraph_WB_KeyBindings
// 0x0090 (0x0090 - 0x0000)
struct WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamePadMode;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bGamePadMode)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings) == 0x000008, "Wrong alignment on WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings");
static_assert(sizeof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings) == 0x000090, "Wrong size on WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, EntryPoint) == 0x000000, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_CustomEvent_bGamePadMode) == 0x000050, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_CustomEvent_bGamePadMode' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_DynamicCast_AsB_Game_Instance) == 0x000058, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, CallFunc_MakeLiteralByte_ReturnValue) == 0x000074, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, CallFunc_GetGameInstance_ReturnValue_1) == 0x000078, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000080, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WB_KeyBindings_C_ExecuteUbergraph_WB_KeyBindings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_KeyBindings.WB_KeyBindings_C.GetInitialFocusWidget
// 0x0030 (0x0030 - 0x0000)
struct WB_KeyBindings_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_InitialFocusWidget; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindings_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_KeyBindings_C_GetInitialFocusWidget");
static_assert(sizeof(WB_KeyBindings_C_GetInitialFocusWidget) == 0x000030, "Wrong size on WB_KeyBindings_C_GetInitialFocusWidget");
static_assert(offsetof(WB_KeyBindings_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_KeyBindings_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_GetInitialFocusWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WB_KeyBindings_C_GetInitialFocusWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_GetInitialFocusWidget, K2Node_DynamicCast_AsIMenu_Screen) == 0x000010, "Member 'WB_KeyBindings_C_GetInitialFocusWidget::K2Node_DynamicCast_AsIMenu_Screen' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_GetInitialFocusWidget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_KeyBindings_C_GetInitialFocusWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_GetInitialFocusWidget, CallFunc_GetInitialFocusWidget_InitialFocusWidget) == 0x000028, "Member 'WB_KeyBindings_C_GetInitialFocusWidget::CallFunc_GetInitialFocusWidget_InitialFocusWidget' has a wrong offset!");

// Function WB_KeyBindings.WB_KeyBindings_C.OnGamePadModeChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_KeyBindings_C_OnGamePadModeChanged final
{
public:
	bool                                          bGamePadMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindings_C_OnGamePadModeChanged) == 0x000001, "Wrong alignment on WB_KeyBindings_C_OnGamePadModeChanged");
static_assert(sizeof(WB_KeyBindings_C_OnGamePadModeChanged) == 0x000001, "Wrong size on WB_KeyBindings_C_OnGamePadModeChanged");
static_assert(offsetof(WB_KeyBindings_C_OnGamePadModeChanged, bGamePadMode) == 0x000000, "Member 'WB_KeyBindings_C_OnGamePadModeChanged::bGamePadMode' has a wrong offset!");

// Function WB_KeyBindings.WB_KeyBindings_C.SetActiveWidget
// 0x0010 (0x0010 - 0x0000)
struct WB_KeyBindings_C_SetActiveWidget final
{
public:
	bool                                          bGamePadMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindings_C_SetActiveWidget) == 0x000008, "Wrong alignment on WB_KeyBindings_C_SetActiveWidget");
static_assert(sizeof(WB_KeyBindings_C_SetActiveWidget) == 0x000010, "Wrong size on WB_KeyBindings_C_SetActiveWidget");
static_assert(offsetof(WB_KeyBindings_C_SetActiveWidget, bGamePadMode) == 0x000000, "Member 'WB_KeyBindings_C_SetActiveWidget::bGamePadMode' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_SetActiveWidget, Temp_bool_Variable) == 0x000001, "Member 'WB_KeyBindings_C_SetActiveWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_SetActiveWidget, K2Node_Select_Default) == 0x000008, "Member 'WB_KeyBindings_C_SetActiveWidget::K2Node_Select_Default' has a wrong offset!");

// Function WB_KeyBindings.WB_KeyBindings_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_KeyBindings_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBindings_C_Tick) == 0x000004, "Wrong alignment on WB_KeyBindings_C_Tick");
static_assert(sizeof(WB_KeyBindings_C_Tick) == 0x00003C, "Wrong size on WB_KeyBindings_C_Tick");
static_assert(offsetof(WB_KeyBindings_C_Tick, MyGeometry) == 0x000000, "Member 'WB_KeyBindings_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_KeyBindings_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_KeyBindings_C_Tick::InDeltaTime' has a wrong offset!");

}

