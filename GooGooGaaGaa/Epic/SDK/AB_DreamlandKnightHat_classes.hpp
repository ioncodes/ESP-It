#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_DreamlandKnightHat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_DreamlandKnightHat.AB_DreamlandKnightHat_C
// 0x09D0 (0x0D40 - 0x0370)
class UAB_DreamlandKnightHat_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0378(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0380(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0388(0x0020)()
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x03B0(0x0970)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0D20(0x0020)()

public:
	void ExecuteUbergraph_AB_DreamlandKnightHat(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_DreamlandKnightHat_C">();
	}
	static class UAB_DreamlandKnightHat_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_DreamlandKnightHat_C>();
	}
};
static_assert(alignof(UAB_DreamlandKnightHat_C) == 0x000010, "Wrong alignment on UAB_DreamlandKnightHat_C");
static_assert(sizeof(UAB_DreamlandKnightHat_C) == 0x000D40, "Wrong size on UAB_DreamlandKnightHat_C");
static_assert(offsetof(UAB_DreamlandKnightHat_C, UberGraphFrame) == 0x000370, "Member 'UAB_DreamlandKnightHat_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_DreamlandKnightHat_C, AnimBlueprintExtension_PropertyAccess) == 0x000378, "Member 'UAB_DreamlandKnightHat_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_DreamlandKnightHat_C, AnimBlueprintExtension_Base) == 0x000380, "Member 'UAB_DreamlandKnightHat_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_DreamlandKnightHat_C, AnimGraphNode_Root) == 0x000388, "Member 'UAB_DreamlandKnightHat_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_DreamlandKnightHat_C, AnimGraphNode_RigidBody) == 0x0003B0, "Member 'UAB_DreamlandKnightHat_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UAB_DreamlandKnightHat_C, AnimGraphNode_ComponentToLocalSpace) == 0x000D20, "Member 'UAB_DreamlandKnightHat_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");

}

