#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PlayerPrestigeLevel

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_PlayerPrestigeLevel.B_PlayerPrestigeLevel_C
// 0x0048 (0x0070 - 0x0028)
class UB_PlayerPrestigeLevel_C final : public UObject
{
public:
	class UGameInstance*                          GameInstance;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerState;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PrestigeLevel;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrestigeExperience;                                // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AccountLevel;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StatAccountLevel;                                  // 0x0044(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StatServerLevel;                                   // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StatServerExperience;                              // 0x0054(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            LevelingCurve;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxLevel;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetMaxExp(int32* MaxExp);
	void GrantExp(int32 Exp);
	void InitializeGS(class UGameInstance* GameInstance_0, class APlayerState* PlayerState_0);

	void Get_Stats_and_Achievements_Manager(class UB_NewStatsAndAchievementsManager_C** Result) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_PlayerPrestigeLevel_C">();
	}
	static class UB_PlayerPrestigeLevel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_PlayerPrestigeLevel_C>();
	}
};
static_assert(alignof(UB_PlayerPrestigeLevel_C) == 0x000008, "Wrong alignment on UB_PlayerPrestigeLevel_C");
static_assert(sizeof(UB_PlayerPrestigeLevel_C) == 0x000070, "Wrong size on UB_PlayerPrestigeLevel_C");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, GameInstance) == 0x000028, "Member 'UB_PlayerPrestigeLevel_C::GameInstance' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, PlayerState) == 0x000030, "Member 'UB_PlayerPrestigeLevel_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, PrestigeLevel) == 0x000038, "Member 'UB_PlayerPrestigeLevel_C::PrestigeLevel' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, PrestigeExperience) == 0x00003C, "Member 'UB_PlayerPrestigeLevel_C::PrestigeExperience' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, AccountLevel) == 0x000040, "Member 'UB_PlayerPrestigeLevel_C::AccountLevel' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, StatAccountLevel) == 0x000044, "Member 'UB_PlayerPrestigeLevel_C::StatAccountLevel' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, StatServerLevel) == 0x00004C, "Member 'UB_PlayerPrestigeLevel_C::StatServerLevel' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, StatServerExperience) == 0x000054, "Member 'UB_PlayerPrestigeLevel_C::StatServerExperience' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, LevelingCurve) == 0x000060, "Member 'UB_PlayerPrestigeLevel_C::LevelingCurve' has a wrong offset!");
static_assert(offsetof(UB_PlayerPrestigeLevel_C, MaxLevel) == 0x000068, "Member 'UB_PlayerPrestigeLevel_C::MaxLevel' has a wrong offset!");

}

