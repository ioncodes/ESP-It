#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ActionIcon

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ActionIcon.WB_ActionIcon_C.UpdateIcon
// 0x0048 (0x0048 - 0x0000)
struct WB_ActionIcon_C_UpdateIcon final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_LocalizationManager_C*               CallFunc_GetLocalizationManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKeyForAction_ReturnValue;              // 0x0028(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetKeyForAction_bKeyFound;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionIcon_C_UpdateIcon) == 0x000008, "Wrong alignment on WB_ActionIcon_C_UpdateIcon");
static_assert(sizeof(WB_ActionIcon_C_UpdateIcon) == 0x000048, "Wrong size on WB_ActionIcon_C_UpdateIcon");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, Key) == 0x000000, "Member 'WB_ActionIcon_C_UpdateIcon::Key' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000018, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x00001A, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_GetLocalizationManager_ReturnValue) == 0x000020, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_GetLocalizationManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_GetKeyForAction_ReturnValue) == 0x000028, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_GetKeyForAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_UpdateIcon, CallFunc_GetKeyForAction_bKeyFound) == 0x000040, "Member 'WB_ActionIcon_C_UpdateIcon::CallFunc_GetKeyForAction_bKeyFound' has a wrong offset!");

// Function WB_ActionIcon.WB_ActionIcon_C.GetLocalizationManager
// 0x0020 (0x0020 - 0x0000)
struct WB_ActionIcon_C_GetLocalizationManager final
{
public:
	class UB_LocalizationManager_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionIcon_C_GetLocalizationManager) == 0x000008, "Wrong alignment on WB_ActionIcon_C_GetLocalizationManager");
static_assert(sizeof(WB_ActionIcon_C_GetLocalizationManager) == 0x000020, "Wrong size on WB_ActionIcon_C_GetLocalizationManager");
static_assert(offsetof(WB_ActionIcon_C_GetLocalizationManager, ReturnValue) == 0x000000, "Member 'WB_ActionIcon_C_GetLocalizationManager::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_GetLocalizationManager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_ActionIcon_C_GetLocalizationManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_GetLocalizationManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_ActionIcon_C_GetLocalizationManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_GetLocalizationManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ActionIcon_C_GetLocalizationManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_GetLocalizationManager, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_ActionIcon_C_GetLocalizationManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_ActionIcon.WB_ActionIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_ActionIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WB_ActionIcon_C_PreConstruct");
static_assert(sizeof(WB_ActionIcon_C_PreConstruct) == 0x000001, "Wrong size on WB_ActionIcon_C_PreConstruct");
static_assert(offsetof(WB_ActionIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_ActionIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_ActionIcon.WB_ActionIcon_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_ActionIcon_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionIcon_C_Tick) == 0x000004, "Wrong alignment on WB_ActionIcon_C_Tick");
static_assert(sizeof(WB_ActionIcon_C_Tick) == 0x00003C, "Wrong size on WB_ActionIcon_C_Tick");
static_assert(offsetof(WB_ActionIcon_C_Tick, MyGeometry) == 0x000000, "Member 'WB_ActionIcon_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_ActionIcon_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_ActionIcon.WB_ActionIcon_C.ExecuteUbergraph_WB_ActionIcon
// 0x0048 (0x0048 - 0x0000)
struct WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon) == 0x000004, "Wrong alignment on WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon");
static_assert(sizeof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon) == 0x000048, "Wrong size on WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon");
static_assert(offsetof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon, EntryPoint) == 0x000000, "Member 'WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon, CallFunc_IsVisible_ReturnValue) == 0x000044, "Member 'WB_ActionIcon_C_ExecuteUbergraph_WB_ActionIcon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

}

