#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BlockedPlayers

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_BlockedPlayers.WB_BlockedPlayers_C
// 0x0090 (0x0370 - 0x02E0)
class UWB_BlockedPlayers_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UListView*                              BlockedPlayerList;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<struct FUniqueNetIdRepl, class UB_OnlineUserEntryData_C*> BlockedPlayerEntries;                              // 0x0300(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         BlockedPlayers;                                    // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FUniqueNetIdRepl>               BlockedPlayerIds;                                  // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AcceptButtonPressed();
	void AddListItemsSorted(TArray<class UOnlineUserRef*>& NewPlayers);
	void AddUsersToList(TArray<class UOnlineUserRef*>& NewUsers);
	void Construct();
	void Deinit();
	void ExecuteUbergraph_WB_BlockedPlayers(int32 EntryPoint);
	void GetCurrentlyFocusedWidget(class UWidget** FocusedWidget);
	void GetSelectedEntry(class UWB_OnlineUserEntry_C** ListEntry);
	void Init();
	void ListSelectionChanged(class UObject* Item, bool bIsSelected);
	void PresenceUpdated();
	void RemoveEntry(class UObject* EntryListObject);
	void RemoveEntryFromMap(class UObject* EntryListObject);
	void RequestUserInfos();
	void ScrollToSelectedItem();
	void SetItemFocus(bool ResetFocus);
	void SortBlockedPlayersAlphabetically(class UObject* ObjectA, class UObject* ObjectB, bool* Result);
	void SpecialButtonPressed();
	void UserInfosReceived(TArray<struct FUniqueNetIdRepl>& UserIds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_BlockedPlayers_C">();
	}
	static class UWB_BlockedPlayers_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_BlockedPlayers_C>();
	}
};
static_assert(alignof(UWB_BlockedPlayers_C) == 0x000008, "Wrong alignment on UWB_BlockedPlayers_C");
static_assert(sizeof(UWB_BlockedPlayers_C) == 0x000370, "Wrong size on UWB_BlockedPlayers_C");
static_assert(offsetof(UWB_BlockedPlayers_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_BlockedPlayers_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, BlockedPlayerList) == 0x0002E8, "Member 'UWB_BlockedPlayers_C::BlockedPlayerList' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, CircularThrobber) == 0x0002F0, "Member 'UWB_BlockedPlayers_C::CircularThrobber' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, ScrollBox) == 0x0002F8, "Member 'UWB_BlockedPlayers_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, BlockedPlayerEntries) == 0x000300, "Member 'UWB_BlockedPlayers_C::BlockedPlayerEntries' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, BlockedPlayers) == 0x000350, "Member 'UWB_BlockedPlayers_C::BlockedPlayers' has a wrong offset!");
static_assert(offsetof(UWB_BlockedPlayers_C, BlockedPlayerIds) == 0x000360, "Member 'UWB_BlockedPlayers_C::BlockedPlayerIds' has a wrong offset!");

}

