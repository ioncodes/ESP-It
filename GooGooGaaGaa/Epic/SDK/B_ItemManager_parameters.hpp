#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ItemManager

#include "Basic.hpp"

#include "MasterServerPlugin_structs.hpp"
#include "SGrantedItem_structs.hpp"


namespace SDK::Params
{

// Function B_ItemManager.B_ItemManager_C.ConsolidateIngredientItems
// 0x0008 (0x0008 - 0x0000)
struct B_ItemManager_C_ConsolidateIngredientItems final
{
public:
	class APlayerState*                           TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_ConsolidateIngredientItems) == 0x000008, "Wrong alignment on B_ItemManager_C_ConsolidateIngredientItems");
static_assert(sizeof(B_ItemManager_C_ConsolidateIngredientItems) == 0x000008, "Wrong size on B_ItemManager_C_ConsolidateIngredientItems");
static_assert(offsetof(B_ItemManager_C_ConsolidateIngredientItems, TargetPlayer) == 0x000000, "Member 'B_ItemManager_C_ConsolidateIngredientItems::TargetPlayer' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.ExecuteUbergraph_B_ItemManager
// 0x0140 (0x0140 - 0x0000)
struct B_ItemManager_C_ExecuteUbergraph_B_ItemManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_TargetPlayer;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Notify;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_ItemDefIds;                     // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_IsDrop;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsExtraItem;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AccountId;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGrantItemResultEntry>          K2Node_CustomEvent_Items;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bNotify;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsDrop;                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsExtraItem;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState;                    // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrantItemResultEntry>          Temp_struct_Variable;                              // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_TargetPlayer_3;                 // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_TargetPlayer_2;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Notify_2;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_ItemDefIds_2;                   // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_IsDrop_2;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsExtraItem_2;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_CustomEvent_TargetPlayer_1;                 // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_CustomEvent_ItemDefIds_1;                   // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_Notify_1;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsDrop_1;                       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsExtraItem_1;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x1];                                       // 0x00E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 AccountId, TArray<struct FGrantItemResultEntry>& Items, bool bNotify, bool bIsDrop, bool bIsExtraItem, class APlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate;              // 0x00E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGrantItemsCallbackProxy*               CallFunc_GrantItems_ReturnValue;                   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AccountId_1;                    // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGrantItemResultEntry>          K2Node_CustomEvent_Items_1;                        // 0x0110(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bNotify_1;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsDrop_1;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsExtraItem_1;                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_CustomEvent_PlayerState_1;                  // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 AccountId, TArray<struct FGrantItemResultEntry>& Items, bool bNotify, bool bIsDrop, bool bIsExtraItem, class APlayerState* PlayerState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager) == 0x000008, "Wrong alignment on B_ItemManager_C_ExecuteUbergraph_B_ItemManager");
static_assert(sizeof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager) == 0x000140, "Wrong size on B_ItemManager_C_ExecuteUbergraph_B_ItemManager");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, EntryPoint) == 0x000000, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_TargetPlayer) == 0x000008, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_TargetPlayer' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_Notify) == 0x000010, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_Notify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_ItemDefIds) == 0x000018, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_ItemDefIds' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsDrop) == 0x000028, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsExtraItem) == 0x000029, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsExtraItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_AccountId) == 0x00002C, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_AccountId' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_Items) == 0x000030, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_Items' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bNotify) == 0x000040, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bNotify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bIsDrop) == 0x000041, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bIsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bIsExtraItem) == 0x000042, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bIsExtraItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_PlayerState) == 0x000048, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_PlayerState' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_DynamicCast_AsB_Player_State) == 0x000050, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_object_Variable) == 0x000060, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_DynamicCast_AsB_Player_State_1) == 0x000068, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_bool_Variable) == 0x000071, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_bool_Variable_1) == 0x000072, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_bool_Variable_2) == 0x000073, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_struct_Variable) == 0x000078, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, Temp_int_Variable) == 0x000088, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000090, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_TargetPlayer_3) == 0x000098, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_TargetPlayer_3' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_TargetPlayer_2) == 0x0000A0, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_TargetPlayer_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_Notify_2) == 0x0000A8, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_Notify_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_ItemDefIds_2) == 0x0000B0, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_ItemDefIds_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsDrop_2) == 0x0000C0, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsDrop_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsExtraItem_2) == 0x0000C1, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsExtraItem_2' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_TargetPlayer_1) == 0x0000C8, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_TargetPlayer_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_ItemDefIds_1) == 0x0000D0, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_ItemDefIds_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_Notify_1) == 0x0000E0, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_Notify_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsDrop_1) == 0x0000E1, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsDrop_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_IsExtraItem_1) == 0x0000E2, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_IsExtraItem_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CreateDelegate_OutputDelegate) == 0x0000E4, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, CallFunc_GrantItems_ReturnValue) == 0x0000F8, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::CallFunc_GrantItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000100, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_AccountId_1) == 0x00010C, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_AccountId_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_Items_1) == 0x000110, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_Items_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bNotify_1) == 0x000120, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bNotify_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bIsDrop_1) == 0x000121, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bIsDrop_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_bIsExtraItem_1) == 0x000122, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_bIsExtraItem_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CustomEvent_PlayerState_1) == 0x000128, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CustomEvent_PlayerState_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_ExecuteUbergraph_B_ItemManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000130, "Member 'B_ItemManager_C_ExecuteUbergraph_B_ItemManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.FixSteamJsonString
// 0x0050 (0x0050 - 0x0000)
struct B_ItemManager_C_FixSteamJsonString final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FixedJsonString;                                   // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_FixSteamJsonString) == 0x000008, "Wrong alignment on B_ItemManager_C_FixSteamJsonString");
static_assert(sizeof(B_ItemManager_C_FixSteamJsonString) == 0x000050, "Wrong size on B_ItemManager_C_FixSteamJsonString");
static_assert(offsetof(B_ItemManager_C_FixSteamJsonString, JsonString) == 0x000000, "Member 'B_ItemManager_C_FixSteamJsonString::JsonString' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_FixSteamJsonString, FixedJsonString) == 0x000010, "Member 'B_ItemManager_C_FixSteamJsonString::FixedJsonString' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_FixSteamJsonString, CallFunc_Replace_ReturnValue) == 0x000020, "Member 'B_ItemManager_C_FixSteamJsonString::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_FixSteamJsonString, CallFunc_Replace_ReturnValue_1) == 0x000030, "Member 'B_ItemManager_C_FixSteamJsonString::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_FixSteamJsonString, CallFunc_Replace_ReturnValue_2) == 0x000040, "Member 'B_ItemManager_C_FixSteamJsonString::CallFunc_Replace_ReturnValue_2' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.GrantItems
// 0x0028 (0x0028 - 0x0000)
struct B_ItemManager_C_GrantItems final
{
public:
	class APlayerState*                           TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Notify;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ItemDefIds;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsDrop;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExtraItem;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_GrantItems) == 0x000008, "Wrong alignment on B_ItemManager_C_GrantItems");
static_assert(sizeof(B_ItemManager_C_GrantItems) == 0x000028, "Wrong size on B_ItemManager_C_GrantItems");
static_assert(offsetof(B_ItemManager_C_GrantItems, TargetPlayer) == 0x000000, "Member 'B_ItemManager_C_GrantItems::TargetPlayer' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItems, Notify) == 0x000008, "Member 'B_ItemManager_C_GrantItems::Notify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItems, ItemDefIds) == 0x000010, "Member 'B_ItemManager_C_GrantItems::ItemDefIds' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItems, IsDrop) == 0x000020, "Member 'B_ItemManager_C_GrantItems::IsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItems, IsExtraItem) == 0x000021, "Member 'B_ItemManager_C_GrantItems::IsExtraItem' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.GrantItemsBRG
// 0x0020 (0x0020 - 0x0000)
struct B_ItemManager_C_GrantItemsBRG final
{
public:
	class AB_PlayerState_C*                       TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ItemDefIds;                                        // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Notify;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDrop;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExtraItem;                                       // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_GrantItemsBRG) == 0x000008, "Wrong alignment on B_ItemManager_C_GrantItemsBRG");
static_assert(sizeof(B_ItemManager_C_GrantItemsBRG) == 0x000020, "Wrong size on B_ItemManager_C_GrantItemsBRG");
static_assert(offsetof(B_ItemManager_C_GrantItemsBRG, TargetPlayer) == 0x000000, "Member 'B_ItemManager_C_GrantItemsBRG::TargetPlayer' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsBRG, ItemDefIds) == 0x000008, "Member 'B_ItemManager_C_GrantItemsBRG::ItemDefIds' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsBRG, Notify) == 0x000018, "Member 'B_ItemManager_C_GrantItemsBRG::Notify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsBRG, IsDrop) == 0x000019, "Member 'B_ItemManager_C_GrantItemsBRG::IsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsBRG, IsExtraItem) == 0x00001A, "Member 'B_ItemManager_C_GrantItemsBRG::IsExtraItem' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.GrantItemsSteam
// 0x0028 (0x0028 - 0x0000)
struct B_ItemManager_C_GrantItemsSteam final
{
public:
	class APlayerState*                           TargetPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Notify;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 ItemDefIds;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsDrop;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExtraItem;                                       // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_GrantItemsSteam) == 0x000008, "Wrong alignment on B_ItemManager_C_GrantItemsSteam");
static_assert(sizeof(B_ItemManager_C_GrantItemsSteam) == 0x000028, "Wrong size on B_ItemManager_C_GrantItemsSteam");
static_assert(offsetof(B_ItemManager_C_GrantItemsSteam, TargetPlayer) == 0x000000, "Member 'B_ItemManager_C_GrantItemsSteam::TargetPlayer' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsSteam, Notify) == 0x000008, "Member 'B_ItemManager_C_GrantItemsSteam::Notify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsSteam, ItemDefIds) == 0x000010, "Member 'B_ItemManager_C_GrantItemsSteam::ItemDefIds' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsSteam, IsDrop) == 0x000020, "Member 'B_ItemManager_C_GrantItemsSteam::IsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_GrantItemsSteam, IsExtraItem) == 0x000021, "Member 'B_ItemManager_C_GrantItemsSteam::IsExtraItem' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.HandleItemsAddedBRG
// 0x0070 (0x0070 - 0x0000)
struct B_ItemManager_C_HandleItemsAddedBRG final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGrantItemResultEntry>          Items;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bNotify;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDrop;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsExtraItem;                                      // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AB_PlayerState_C*                       Player;                                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGrantItemResultEntry                  CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(NoDestructor)
	struct FSGrantedItem                          K2Node_MakeStruct_SGrantedItem;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_HandleItemsAddedBRG) == 0x000008, "Wrong alignment on B_ItemManager_C_HandleItemsAddedBRG");
static_assert(sizeof(B_ItemManager_C_HandleItemsAddedBRG) == 0x000070, "Wrong size on B_ItemManager_C_HandleItemsAddedBRG");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, PlayerState) == 0x000000, "Member 'B_ItemManager_C_HandleItemsAddedBRG::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, Items) == 0x000008, "Member 'B_ItemManager_C_HandleItemsAddedBRG::Items' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, bNotify) == 0x000018, "Member 'B_ItemManager_C_HandleItemsAddedBRG::bNotify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, bIsDrop) == 0x000019, "Member 'B_ItemManager_C_HandleItemsAddedBRG::bIsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, bIsExtraItem) == 0x00001A, "Member 'B_ItemManager_C_HandleItemsAddedBRG::bIsExtraItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, GrantedItems) == 0x000020, "Member 'B_ItemManager_C_HandleItemsAddedBRG::GrantedItems' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, Player) == 0x000030, "Member 'B_ItemManager_C_HandleItemsAddedBRG::Player' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, Temp_int_Array_Index_Variable) == 0x000038, "Member 'B_ItemManager_C_HandleItemsAddedBRG::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, K2Node_MakeStruct_SGrantedItem) == 0x000048, "Member 'B_ItemManager_C_HandleItemsAddedBRG::K2Node_MakeStruct_SGrantedItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'B_ItemManager_C_HandleItemsAddedBRG::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_GetBGameInstance_ReturnValue) == 0x000060, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedBRG, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'B_ItemManager_C_HandleItemsAddedBRG::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.HandleItemsAddedSteam
// 0x0040 (0x0040 - 0x0000)
struct B_ItemManager_C_HandleItemsAddedSteam final
{
public:
	class FString                                 DownloadedString;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UB_AddItemQuery_C*                      Query;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Failed;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentQuantity;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentItemDefID;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     GrantedItemsArray;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_HandleItemsAddedSteam) == 0x000008, "Wrong alignment on B_ItemManager_C_HandleItemsAddedSteam");
static_assert(sizeof(B_ItemManager_C_HandleItemsAddedSteam) == 0x000040, "Wrong size on B_ItemManager_C_HandleItemsAddedSteam");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, DownloadedString) == 0x000000, "Member 'B_ItemManager_C_HandleItemsAddedSteam::DownloadedString' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, Query) == 0x000010, "Member 'B_ItemManager_C_HandleItemsAddedSteam::Query' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, Failed) == 0x000018, "Member 'B_ItemManager_C_HandleItemsAddedSteam::Failed' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, CurrentQuantity) == 0x00001C, "Member 'B_ItemManager_C_HandleItemsAddedSteam::CurrentQuantity' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, GrantedItems) == 0x000020, "Member 'B_ItemManager_C_HandleItemsAddedSteam::GrantedItems' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, CurrentItemDefID) == 0x000030, "Member 'B_ItemManager_C_HandleItemsAddedSteam::CurrentItemDefID' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_HandleItemsAddedSteam, GrantedItemsArray) == 0x000038, "Member 'B_ItemManager_C_HandleItemsAddedSteam::GrantedItemsArray' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.OnFailure_0E02496B446FDA893CF135AD7FA3391D
// 0x0028 (0x0028 - 0x0000)
struct B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D final
{
public:
	int32                                         AccountId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrantItemResultEntry>          Items;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bNotify;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDrop;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsExtraItem;                                      // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           PlayerState;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D) == 0x000008, "Wrong alignment on B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D");
static_assert(sizeof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D) == 0x000028, "Wrong size on B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, AccountId) == 0x000000, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::AccountId' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, Items) == 0x000008, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::Items' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, bNotify) == 0x000018, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::bNotify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, bIsDrop) == 0x000019, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::bIsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, bIsExtraItem) == 0x00001A, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::bIsExtraItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D, PlayerState) == 0x000020, "Member 'B_ItemManager_C_OnFailure_0E02496B446FDA893CF135AD7FA3391D::PlayerState' has a wrong offset!");

// Function B_ItemManager.B_ItemManager_C.OnSuccess_0E02496B446FDA893CF135AD7FA3391D
// 0x0028 (0x0028 - 0x0000)
struct B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D final
{
public:
	int32                                         AccountId;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGrantItemResultEntry>          Items;                                             // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bNotify;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsDrop;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsExtraItem;                                      // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           PlayerState;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D) == 0x000008, "Wrong alignment on B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D");
static_assert(sizeof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D) == 0x000028, "Wrong size on B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, AccountId) == 0x000000, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::AccountId' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, Items) == 0x000008, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::Items' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, bNotify) == 0x000018, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::bNotify' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, bIsDrop) == 0x000019, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::bIsDrop' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, bIsExtraItem) == 0x00001A, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::bIsExtraItem' has a wrong offset!");
static_assert(offsetof(B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D, PlayerState) == 0x000020, "Member 'B_ItemManager_C_OnSuccess_0E02496B446FDA893CF135AD7FA3391D::PlayerState' has a wrong offset!");

}

