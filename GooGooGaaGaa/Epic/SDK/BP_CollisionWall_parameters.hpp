#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CollisionWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CollisionWall.BP_CollisionWall_C.ExecuteUbergraph_BP_CollisionWall
// 0x0010 (0x0010 - 0x0000)
struct BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Event_EditingPlayerState;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall) == 0x000008, "Wrong alignment on BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall");
static_assert(sizeof(BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall) == 0x000010, "Wrong size on BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall");
static_assert(offsetof(BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall, EntryPoint) == 0x000000, "Member 'BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall, K2Node_Event_EditingPlayerState) == 0x000008, "Member 'BP_CollisionWall_C_ExecuteUbergraph_BP_CollisionWall::K2Node_Event_EditingPlayerState' has a wrong offset!");

// Function BP_CollisionWall.BP_CollisionWall_C.SelectForEditing
// 0x0008 (0x0008 - 0x0000)
struct BP_CollisionWall_C_SelectForEditing final
{
public:
	class APlayerState*                           EditingPlayerState;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionWall_C_SelectForEditing) == 0x000008, "Wrong alignment on BP_CollisionWall_C_SelectForEditing");
static_assert(sizeof(BP_CollisionWall_C_SelectForEditing) == 0x000008, "Wrong size on BP_CollisionWall_C_SelectForEditing");
static_assert(offsetof(BP_CollisionWall_C_SelectForEditing, EditingPlayerState) == 0x000000, "Member 'BP_CollisionWall_C_SelectForEditing::EditingPlayerState' has a wrong offset!");

// Function BP_CollisionWall.BP_CollisionWall_C.UpdateMaterialAndDrawDistance
// 0x0010 (0x0010 - 0x0000)
struct BP_CollisionWall_C_UpdateMaterialAndDrawDistance final
{
public:
	bool                                          NeedsToBeSeen;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionWall_C_UpdateMaterialAndDrawDistance) == 0x000008, "Wrong alignment on BP_CollisionWall_C_UpdateMaterialAndDrawDistance");
static_assert(sizeof(BP_CollisionWall_C_UpdateMaterialAndDrawDistance) == 0x000010, "Wrong size on BP_CollisionWall_C_UpdateMaterialAndDrawDistance");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaterialAndDrawDistance, NeedsToBeSeen) == 0x000000, "Member 'BP_CollisionWall_C_UpdateMaterialAndDrawDistance::NeedsToBeSeen' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaterialAndDrawDistance, Temp_bool_Variable) == 0x000001, "Member 'BP_CollisionWall_C_UpdateMaterialAndDrawDistance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaterialAndDrawDistance, K2Node_Select_Default) == 0x000008, "Member 'BP_CollisionWall_C_UpdateMaterialAndDrawDistance::K2Node_Select_Default' has a wrong offset!");

// Function BP_CollisionWall.BP_CollisionWall_C.UpdateMaxDrawDistance
// 0x0078 (0x0078 - 0x0000)
struct BP_CollisionWall_C_UpdateMaxDrawDistance final
{
public:
	bool                                          AlwaysDraw;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCullDistance_NewCullDistance_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CollisionWall_C_UpdateMaxDrawDistance) == 0x000008, "Wrong alignment on BP_CollisionWall_C_UpdateMaxDrawDistance");
static_assert(sizeof(BP_CollisionWall_C_UpdateMaxDrawDistance) == 0x000078, "Wrong size on BP_CollisionWall_C_UpdateMaxDrawDistance");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, AlwaysDraw) == 0x000000, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::AlwaysDraw' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000004, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_GetComponentBounds_Origin) == 0x000008, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_GetComponentBounds_SphereRadius) == 0x000038, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CollisionWall_C_UpdateMaxDrawDistance, CallFunc_SetCullDistance_NewCullDistance_ImplicitCast) == 0x000070, "Member 'BP_CollisionWall_C_UpdateMaxDrawDistance::CallFunc_SetCullDistance_NewCullDistance_ImplicitCast' has a wrong offset!");

}

