#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LowEntryJson

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "LowEntryJson_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class LowEntryJson.LowEntryJsonArray
// 0x0010 (0x0038 - 0x0028)
class ULowEntryJsonArray final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonArray">();
	}
	static class ULowEntryJsonArray* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonArray>();
	}
};
static_assert(alignof(ULowEntryJsonArray) == 0x000008, "Wrong alignment on ULowEntryJsonArray");
static_assert(sizeof(ULowEntryJsonArray) == 0x000038, "Wrong size on ULowEntryJsonArray");

// Class LowEntryJson.LowEntryJsonDebugLibrary
// 0x0000 (0x0028 - 0x0028)
class ULowEntryJsonDebugLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void PrintBoolean(class UObject* WorldContextObject, const bool Boolean, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintBooleanArray(class UObject* WorldContextObject, const TArray<bool>& BooleanArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintByte(class UObject* WorldContextObject, const uint8 Byte, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintByteArray(class UObject* WorldContextObject, const TArray<uint8>& ByteArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintDoubleArray(class UObject* WorldContextObject, const TArray<double>& DoubleArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintFloat(class UObject* WorldContextObject, const double Float, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintFloatArray(class UObject* WorldContextObject, const TArray<float>& FloatArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintInteger(class UObject* WorldContextObject, const int32 Integer, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintIntegerArray(class UObject* WorldContextObject, const TArray<int32>& IntegerArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonArray(class UObject* WorldContextObject, class ULowEntryJsonArray* JsonArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonArrayArray(class UObject* WorldContextObject, const TArray<class ULowEntryJsonArray*>& JsonArrayArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonObject(class UObject* WorldContextObject, class ULowEntryJsonObject* JsonObject, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonObjectArray(class UObject* WorldContextObject, const TArray<class ULowEntryJsonObject*>& JsonObjectArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonValue(class UObject* WorldContextObject, class ULowEntryJsonValue* JsonValue, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintJsonValueArray(class UObject* WorldContextObject, const TArray<class ULowEntryJsonValue*>& JsonValueArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintLong(class UObject* WorldContextObject, const int64 Long, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintLongArray(class UObject* WorldContextObject, const TArray<int64>& LongArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintStringArrayEscaped(class UObject* WorldContextObject, const TArray<class FString>& StringArray, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);
	static void PrintStringEscaped(class UObject* WorldContextObject, const class FString& String, const class FString& Label, const float ScreenDurationTime, const bool bPrintToScreen, const bool bPrintToLog, const struct FLinearColor& TextColor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonDebugLibrary">();
	}
	static class ULowEntryJsonDebugLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonDebugLibrary>();
	}
};
static_assert(alignof(ULowEntryJsonDebugLibrary) == 0x000008, "Wrong alignment on ULowEntryJsonDebugLibrary");
static_assert(sizeof(ULowEntryJsonDebugLibrary) == 0x000028, "Wrong size on ULowEntryJsonDebugLibrary");

// Class LowEntryJson.LowEntryJsonLibrary
// 0x0000 (0x0028 - 0x0028)
class ULowEntryJsonLibrary final : public UBlueprintFunctionLibrary
{
public:
	static void Array_AddBoolean(class ULowEntryJsonArray* JsonArray, const bool Value);
	static void Array_AddByte(class ULowEntryJsonArray* JsonArray, const uint8 Value);
	static void Array_AddFloat(class ULowEntryJsonArray* JsonArray, const double Value);
	static void Array_AddInteger(class ULowEntryJsonArray* JsonArray, const int32 Value);
	static void Array_AddJsonArray(class ULowEntryJsonArray* JsonArray, class ULowEntryJsonArray* Value, const bool Unsafe);
	static void Array_AddJsonObject(class ULowEntryJsonArray* JsonArray, class ULowEntryJsonObject* Value, const bool Unsafe);
	static void Array_AddJsonValue(class ULowEntryJsonArray* JsonArray, class ULowEntryJsonValue* Value, const bool Unsafe);
	static void Array_AddLong(class ULowEntryJsonArray* JsonArray, const int64 Value);
	static void Array_AddNull(class ULowEntryJsonArray* JsonArray);
	static void Array_AddString(class ULowEntryJsonArray* JsonArray, const class FString& Value);
	static void Array_Append(class ULowEntryJsonArray* JsonArray, class ULowEntryJsonArray* AppendJsonArray);
	static void Array_Clear(class ULowEntryJsonArray* JsonArray);
	static class ULowEntryJsonArray* Array_Clone(class ULowEntryJsonArray* JsonArray);
	static class ULowEntryJsonArray* Array_CreateFromBooleanArray(const TArray<bool>& Value);
	static class ULowEntryJsonArray* Array_CreateFromByteArray(const TArray<uint8>& Value);
	static class ULowEntryJsonArray* Array_CreateFromFloatArray(const TArray<double>& Value);
	static class ULowEntryJsonArray* Array_CreateFromIntegerArray(const TArray<int32>& Value);
	static class ULowEntryJsonArray* Array_CreateFromJsonArrayArray(const TArray<class ULowEntryJsonArray*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_CreateFromJsonObjectArray(const TArray<class ULowEntryJsonObject*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_CreateFromJsonValueArray(const TArray<class ULowEntryJsonValue*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_CreateFromLongArray(const TArray<int64>& Value);
	static class ULowEntryJsonArray* Array_CreateFromStringArray(const TArray<class FString>& Value);
	static bool Array_Equals(class ULowEntryJsonArray* JsonArrayA, class ULowEntryJsonArray* JsonArrayB);
	static void Array_Expand(class ULowEntryJsonArray* JsonArray, const int32 Size);
	static void Array_Get(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonType* Branch, class FString* ReturnStringValue, int64* ReturnLongValue, int32* ReturnIntegerValue, double* ReturnFloatValue, uint8* ReturnByteValue, bool* ReturnBooleanValue, class ULowEntryJsonObject** ReturnJsonObjectValue, class ULowEntryJsonArray** ReturnJsonArrayValue);
	static bool Array_GetAsBooleanOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const bool Default);
	static uint8 Array_GetAsByteOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const uint8 Default);
	static double Array_GetAsFloatOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const double Default);
	static int32 Array_GetAsIntegerOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int32 Default);
	static class ULowEntryJsonArray* Array_GetAsJsonArrayOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonArray* Default);
	static class ULowEntryJsonObject* Array_GetAsJsonObjectOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonObject* Default);
	static class ULowEntryJsonValue* Array_GetAsJsonValueOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonValue* Default);
	static int64 Array_GetAsLongOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int64 Default);
	static class FString Array_GetAsStringOrDefault(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const class FString& Default);
	static bool Array_GetBoolean(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static uint8 Array_GetByte(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static double Array_GetFloat(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static int32 Array_GetInteger(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonArray* Array_GetJsonArray(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonObject* Array_GetJsonObject(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonValue* Array_GetJsonValue(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueFound* Branch);
	static int64 Array_GetLong(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static void Array_GetNull(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static class FString Array_GetString(class ULowEntryJsonArray* JsonArray, const int32 Index_0, ELowEntryJsonValueAndTypeFound* Branch);
	static void Array_InsertBoolean(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const bool Value);
	static void Array_InsertByte(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const uint8 Value);
	static void Array_InsertFloat(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const double Value);
	static void Array_InsertInteger(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int32 Value);
	static void Array_InsertJsonArray(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonArray* Value, const bool Unsafe);
	static void Array_InsertJsonObject(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonObject* Value, const bool Unsafe);
	static void Array_InsertJsonValue(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonValue* Value, const bool Unsafe);
	static void Array_InsertLong(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int64 Value);
	static void Array_InsertNull(class ULowEntryJsonArray* JsonArray, const int32 Index_0);
	static void Array_InsertString(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const class FString& Value);
	static bool Array_IsSet(class ULowEntryJsonArray* JsonArray, const int32 Index_0);
	static int32 Array_Length(class ULowEntryJsonArray* JsonArray);
	static class ULowEntryJsonArray* Array_Merge(class ULowEntryJsonArray* JsonArray1, class ULowEntryJsonArray* JsonArray2);
	static bool Array_NotEquals(class ULowEntryJsonArray* JsonArrayA, class ULowEntryJsonArray* JsonArrayB);
	static class ULowEntryJsonArray* Array_Pure_Clone(class ULowEntryJsonArray* JsonArray);
	static class ULowEntryJsonArray* Array_Pure_CreateFromBooleanArray(const TArray<bool>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromByteArray(const TArray<uint8>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromFloatArray(const TArray<double>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromIntegerArray(const TArray<int32>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromJsonArrayArray(const TArray<class ULowEntryJsonArray*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_Pure_CreateFromJsonObjectArray(const TArray<class ULowEntryJsonObject*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_Pure_CreateFromJsonValueArray(const TArray<class ULowEntryJsonValue*>& Value, const bool Unsafe);
	static class ULowEntryJsonArray* Array_Pure_CreateFromJsonValueArray_Internal_Safe(const TArray<class ULowEntryJsonValue*>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromJsonValueArray_Internal_Unsafe(const TArray<class ULowEntryJsonValue*>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromLongArray(const TArray<int64>& Value);
	static class ULowEntryJsonArray* Array_Pure_CreateFromStringArray(const TArray<class FString>& Value);
	static class ULowEntryJsonArray* Array_Pure_Merge(class ULowEntryJsonArray* JsonArray1, class ULowEntryJsonArray* JsonArray2);
	static class FString Array_Pure_ToJsonString(class ULowEntryJsonArray* JsonArray, const bool PrettyPrint);
	static void Array_Resize(class ULowEntryJsonArray* JsonArray, const int32 Size);
	static void Array_SetBoolean(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const bool Value);
	static void Array_SetByte(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const uint8 Value);
	static void Array_SetFloat(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const double Value);
	static void Array_SetInteger(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int32 Value);
	static void Array_SetJsonArray(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonArray* Value, const bool Unsafe);
	static void Array_SetJsonObject(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonObject* Value, const bool Unsafe);
	static void Array_SetJsonValue(class ULowEntryJsonArray* JsonArray, const int32 Index_0, class ULowEntryJsonValue* Value, const bool Unsafe);
	static void Array_SetLong(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int64 Value);
	static void Array_SetNull(class ULowEntryJsonArray* JsonArray, const int32 Index_0);
	static void Array_SetString(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const class FString& Value);
	static void Array_Shorten(class ULowEntryJsonArray* JsonArray, const int32 Size);
	static class FString Array_ToJsonString(class ULowEntryJsonArray* JsonArray, const bool PrettyPrint);
	static void Array_Unset(class ULowEntryJsonArray* JsonArray, const int32 Index_0, const int32 Count);
	static void Json_ParseJsonString(const class FString& JsonString, class ULowEntryJsonObject** ReturnJsonObjectValue, class ULowEntryJsonArray** ReturnJsonArrayValue, ELowEntryJsonParseResult* Branch);
	static void Object_Append(class ULowEntryJsonObject* JsonObject, class ULowEntryJsonObject* AppendJsonObject, const bool OverrideDuplicates);
	static void Object_Clear(class ULowEntryJsonObject* JsonObject);
	static class ULowEntryJsonObject* Object_Clone(class ULowEntryJsonObject* JsonObject);
	static class ULowEntryJsonObject* Object_CreateFromObjectEntryArray(const TArray<class ULowEntryJsonObjectEntry*>& Array);
	static bool Object_Equals(class ULowEntryJsonObject* JsonObjectA, class ULowEntryJsonObject* JsonObjectB);
	static void Object_Get(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonType* Branch, class FString* ReturnStringValue, int64* ReturnLongValue, int32* ReturnIntegerValue, double* ReturnFloatValue, uint8* ReturnByteValue, bool* ReturnBooleanValue, class ULowEntryJsonObject** ReturnJsonObjectValue, class ULowEntryJsonArray** ReturnJsonArrayValue);
	static bool Object_GetAsBooleanOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const bool Default);
	static uint8 Object_GetAsByteOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const uint8 Default);
	static double Object_GetAsFloatOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const double Default);
	static int32 Object_GetAsIntegerOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const int32 Default);
	static class ULowEntryJsonArray* Object_GetAsJsonArrayOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonArray* Default);
	static class ULowEntryJsonObject* Object_GetAsJsonObjectOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonObject* Default);
	static class ULowEntryJsonValue* Object_GetAsJsonValueOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonValue* Default);
	static int64 Object_GetAsLongOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const int64 Default);
	static class FString Object_GetAsStringOrDefault(class ULowEntryJsonObject* JsonObject, const class FString& Key, const class FString& Default);
	static bool Object_GetBoolean(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static uint8 Object_GetByte(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static double Object_GetFloat(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static int32 Object_GetInteger(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonArray* Object_GetJsonArray(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonObject* Object_GetJsonObject(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonValue* Object_GetJsonValue(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueFound* Branch);
	static TArray<class FString> Object_GetKeys(class ULowEntryJsonObject* JsonObject);
	static int64 Object_GetLong(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static void Object_GetNull(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static class FString Object_GetString(class ULowEntryJsonObject* JsonObject, const class FString& Key, ELowEntryJsonValueAndTypeFound* Branch);
	static class ULowEntryJsonArray* Object_GetValues(class ULowEntryJsonObject* JsonObject);
	static bool Object_IsSet(class ULowEntryJsonObject* JsonObject, const class FString& Key);
	static int32 Object_Length(class ULowEntryJsonObject* JsonObject);
	static class ULowEntryJsonObject* Object_Merge(class ULowEntryJsonObject* JsonObject1, class ULowEntryJsonObject* JsonObject2);
	static bool Object_NotEquals(class ULowEntryJsonObject* JsonObjectA, class ULowEntryJsonObject* JsonObjectB);
	static class ULowEntryJsonObject* Object_Pure_Clone(class ULowEntryJsonObject* JsonObject);
	static class ULowEntryJsonObject* Object_Pure_CreateFromObjectEntryArray(const TArray<class ULowEntryJsonObjectEntry*>& Array);
	static class ULowEntryJsonObject* Object_Pure_CreateFromObjectEntryArray_Internal_Safe(const TArray<class ULowEntryJsonObjectEntry*>& Array);
	static class ULowEntryJsonObject* Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe(const TArray<class ULowEntryJsonObjectEntry*>& Array);
	static class ULowEntryJsonObject* Object_Pure_Merge(class ULowEntryJsonObject* JsonObject1, class ULowEntryJsonObject* JsonObject2);
	static class FString Object_Pure_ToJsonString(class ULowEntryJsonObject* JsonObject, const bool PrettyPrint);
	static void Object_SetBoolean(class ULowEntryJsonObject* JsonObject, const class FString& Key, const bool Value);
	static void Object_SetByte(class ULowEntryJsonObject* JsonObject, const class FString& Key, const uint8 Value);
	static void Object_SetFloat(class ULowEntryJsonObject* JsonObject, const class FString& Key, const double Value);
	static void Object_SetInteger(class ULowEntryJsonObject* JsonObject, const class FString& Key, const int32 Value);
	static void Object_SetJsonArray(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonArray* Value, const bool Unsafe);
	static void Object_SetJsonObject(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonObject* Value, const bool Unsafe);
	static void Object_SetJsonValue(class ULowEntryJsonObject* JsonObject, const class FString& Key, class ULowEntryJsonValue* Value, const bool Unsafe);
	static void Object_SetLong(class ULowEntryJsonObject* JsonObject, const class FString& Key, const int64 Value);
	static void Object_SetNull(class ULowEntryJsonObject* JsonObject, const class FString& Key);
	static void Object_SetString(class ULowEntryJsonObject* JsonObject, const class FString& Key, const class FString& Value);
	static void Object_Sort(class ULowEntryJsonObject* JsonObject, const bool Reversed);
	static class FString Object_ToJsonString(class ULowEntryJsonObject* JsonObject, const bool PrettyPrint);
	static void Object_Unset(class ULowEntryJsonObject* JsonObject, const class FString& Key);
	static class FString ObjectEntry_GetKey(class ULowEntryJsonObjectEntry* JsonObjectEntry);
	static class ULowEntryJsonValue* ObjectEntry_GetValue(class ULowEntryJsonObjectEntry* JsonObjectEntry);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_Create(const class FString& Key, class ULowEntryJsonValue* Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromBoolean(const class FString& Key, const bool Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromByte(const class FString& Key, const uint8 Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromFloat(const class FString& Key, const double Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromInteger(const class FString& Key, const int32 Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromJsonArray(const class FString& Key, class ULowEntryJsonArray* Value, const bool Unsafe);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromJsonObject(const class FString& Key, class ULowEntryJsonObject* Value, const bool Unsafe);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromLong(const class FString& Key, const int64 Value);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromNull(const class FString& Key);
	static class ULowEntryJsonObjectEntry* ObjectEntry_Pure_CreateFromString(const class FString& Key, const class FString& Value);
	static class ULowEntryJsonObjectIterator* ObjectIterator_Clone(class ULowEntryJsonObjectIterator* JsonObjectIterator);
	static class ULowEntryJsonObjectIterator* ObjectIterator_Create(class ULowEntryJsonObject* JsonObject);
	static void ObjectIterator_Get(class ULowEntryJsonObjectIterator* JsonObjectIterator, const int32 Index_0, class FString* Key, class ULowEntryJsonValue** JsonValue, ELowEntryJsonValueFound* Branch);
	static TArray<class FString> ObjectIterator_GetKeys(class ULowEntryJsonObjectIterator* JsonObjectIterator);
	static class ULowEntryJsonArray* ObjectIterator_GetValues(class ULowEntryJsonObjectIterator* JsonObjectIterator);
	static int32 ObjectIterator_Length(class ULowEntryJsonObjectIterator* JsonObjectIterator);
	static class ULowEntryJsonValue* Value_Clone(class ULowEntryJsonValue* JsonValue);
	static class ULowEntryJsonValue* Value_Create();
	static class ULowEntryJsonValue* Value_CreateFromBoolean(const bool Value);
	static class ULowEntryJsonValue* Value_CreateFromByte(const uint8 Value);
	static class ULowEntryJsonValue* Value_CreateFromFloat(const double Value);
	static class ULowEntryJsonValue* Value_CreateFromInteger(const int32 Value);
	static class ULowEntryJsonValue* Value_CreateFromJsonArray(class ULowEntryJsonArray* Value, const bool Unsafe);
	static class ULowEntryJsonValue* Value_CreateFromJsonObject(class ULowEntryJsonObject* Value, const bool Unsafe);
	static class ULowEntryJsonValue* Value_CreateFromLong(const int64 Value);
	static class ULowEntryJsonValue* Value_CreateFromNull();
	static class ULowEntryJsonValue* Value_CreateFromString(const class FString& Value);
	static bool Value_Equals(class ULowEntryJsonValue* JsonValueA, class ULowEntryJsonValue* JsonValueB);
	static void Value_Get(class ULowEntryJsonValue* JsonValue, ELowEntryJsonType* Branch, class FString* ReturnStringValue, int64* ReturnLongValue, int32* ReturnIntegerValue, double* ReturnFloatValue, uint8* ReturnByteValue, bool* ReturnBooleanValue, class ULowEntryJsonObject** ReturnJsonObjectValue, class ULowEntryJsonArray** ReturnJsonArrayValue);
	static bool Value_GetAsBooleanOrDefault(class ULowEntryJsonValue* JsonValue, const bool Default);
	static uint8 Value_GetAsByteOrDefault(class ULowEntryJsonValue* JsonValue, const uint8 Default);
	static double Value_GetAsFloatOrDefault(class ULowEntryJsonValue* JsonValue, const double Default);
	static int32 Value_GetAsIntegerOrDefault(class ULowEntryJsonValue* JsonValue, const int32 Default);
	static class ULowEntryJsonArray* Value_GetAsJsonArrayOrDefault(class ULowEntryJsonValue* JsonValue, class ULowEntryJsonArray* Default);
	static class ULowEntryJsonObject* Value_GetAsJsonObjectOrDefault(class ULowEntryJsonValue* JsonValue, class ULowEntryJsonObject* Default);
	static int64 Value_GetAsLongOrDefault(class ULowEntryJsonValue* JsonValue, const int64 Default);
	static class FString Value_GetAsStringOrDefault(class ULowEntryJsonValue* JsonValue, const class FString& Default);
	static bool Value_GetBoolean(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static uint8 Value_GetByte(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static double Value_GetFloat(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static int32 Value_GetInteger(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static class ULowEntryJsonArray* Value_GetJsonArray(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static class ULowEntryJsonObject* Value_GetJsonObject(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static int64 Value_GetLong(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static void Value_GetNull(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static class FString Value_GetString(class ULowEntryJsonValue* JsonValue, ELowEntryJsonTypeFound* Branch);
	static bool Value_NotEquals(class ULowEntryJsonValue* JsonValueA, class ULowEntryJsonValue* JsonValueB);
	static class ULowEntryJsonValue* Value_Pure_Clone(class ULowEntryJsonValue* JsonValue);
	static class ULowEntryJsonValue* Value_Pure_Create();
	static class ULowEntryJsonValue* Value_Pure_CreateFromBoolean(const bool Value);
	static class ULowEntryJsonValue* Value_Pure_CreateFromByte(const uint8 Value);
	static class ULowEntryJsonValue* Value_Pure_CreateFromFloat(const double Value);
	static class ULowEntryJsonValue* Value_Pure_CreateFromInteger(const int32 Value);
	static class ULowEntryJsonValue* Value_Pure_CreateFromJsonArray(class ULowEntryJsonArray* Value, const bool Unsafe);
	static class ULowEntryJsonValue* Value_Pure_CreateFromJsonObject(class ULowEntryJsonObject* Value, const bool Unsafe);
	static class ULowEntryJsonValue* Value_Pure_CreateFromLong(const int64 Value);
	static class ULowEntryJsonValue* Value_Pure_CreateFromNull();
	static class ULowEntryJsonValue* Value_Pure_CreateFromString(const class FString& Value);
	static void Value_Set(class ULowEntryJsonValue* JsonValue, class ULowEntryJsonValue* Value, const bool Unsafe);
	static void Value_SetBoolean(class ULowEntryJsonValue* JsonValue, const bool Value);
	static void Value_SetByte(class ULowEntryJsonValue* JsonValue, const uint8 Value);
	static void Value_SetFloat(class ULowEntryJsonValue* JsonValue, const double Value);
	static void Value_SetInteger(class ULowEntryJsonValue* JsonValue, const int32 Value);
	static void Value_SetJsonArray(class ULowEntryJsonValue* JsonValue, class ULowEntryJsonArray* Value, const bool Unsafe);
	static void Value_SetJsonObject(class ULowEntryJsonValue* JsonValue, class ULowEntryJsonObject* Value, const bool Unsafe);
	static void Value_SetLong(class ULowEntryJsonValue* JsonValue, const int64 Value);
	static void Value_SetNull(class ULowEntryJsonValue* JsonValue);
	static void Value_SetString(class ULowEntryJsonValue* JsonValue, const class FString& Value);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonLibrary">();
	}
	static class ULowEntryJsonLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonLibrary>();
	}
};
static_assert(alignof(ULowEntryJsonLibrary) == 0x000008, "Wrong alignment on ULowEntryJsonLibrary");
static_assert(sizeof(ULowEntryJsonLibrary) == 0x000028, "Wrong size on ULowEntryJsonLibrary");

// Class LowEntryJson.LowEntryJsonObject
// 0x0010 (0x0038 - 0x0028)
class ULowEntryJsonObject final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonObject">();
	}
	static class ULowEntryJsonObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonObject>();
	}
};
static_assert(alignof(ULowEntryJsonObject) == 0x000008, "Wrong alignment on ULowEntryJsonObject");
static_assert(sizeof(ULowEntryJsonObject) == 0x000038, "Wrong size on ULowEntryJsonObject");

// Class LowEntryJson.LowEntryJsonObjectEntry
// 0x0018 (0x0040 - 0x0028)
class ULowEntryJsonObjectEntry final : public UObject
{
public:
	class FString                                 Key;                                               // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Value;                                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonObjectEntry">();
	}
	static class ULowEntryJsonObjectEntry* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonObjectEntry>();
	}
};
static_assert(alignof(ULowEntryJsonObjectEntry) == 0x000008, "Wrong alignment on ULowEntryJsonObjectEntry");
static_assert(sizeof(ULowEntryJsonObjectEntry) == 0x000040, "Wrong size on ULowEntryJsonObjectEntry");
static_assert(offsetof(ULowEntryJsonObjectEntry, Key) == 0x000028, "Member 'ULowEntryJsonObjectEntry::Key' has a wrong offset!");
static_assert(offsetof(ULowEntryJsonObjectEntry, Value) == 0x000038, "Member 'ULowEntryJsonObjectEntry::Value' has a wrong offset!");

// Class LowEntryJson.LowEntryJsonObjectIterator
// 0x0020 (0x0048 - 0x0028)
class ULowEntryJsonObjectIterator final : public UObject
{
public:
	TArray<class FString>                         Keys;                                              // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x10];                                      // 0x0038(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonObjectIterator">();
	}
	static class ULowEntryJsonObjectIterator* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonObjectIterator>();
	}
};
static_assert(alignof(ULowEntryJsonObjectIterator) == 0x000008, "Wrong alignment on ULowEntryJsonObjectIterator");
static_assert(sizeof(ULowEntryJsonObjectIterator) == 0x000048, "Wrong size on ULowEntryJsonObjectIterator");
static_assert(offsetof(ULowEntryJsonObjectIterator, Keys) == 0x000028, "Member 'ULowEntryJsonObjectIterator::Keys' has a wrong offset!");

// Class LowEntryJson.LowEntryJsonValue
// 0x0010 (0x0038 - 0x0028)
class ULowEntryJsonValue final : public UObject
{
public:
	uint8                                         Pad_28[0x10];                                      // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LowEntryJsonValue">();
	}
	static class ULowEntryJsonValue* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULowEntryJsonValue>();
	}
};
static_assert(alignof(ULowEntryJsonValue) == 0x000008, "Wrong alignment on ULowEntryJsonValue");
static_assert(sizeof(ULowEntryJsonValue) == 0x000038, "Wrong size on ULowEntryJsonValue");

}

