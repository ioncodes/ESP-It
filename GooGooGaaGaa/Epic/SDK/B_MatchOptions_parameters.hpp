#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MatchOptions

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_MatchOptions.B_MatchOptions_C.CopyMatchOptions
// 0x0018 (0x0018 - 0x0000)
struct B_MatchOptions_C_CopyMatchOptions final
{
public:
	class UB_MatchOptions_C*                      OptionsToCopy;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPlayersImpostor;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MatchOptions_C_CopyMatchOptions) == 0x000008, "Wrong alignment on B_MatchOptions_C_CopyMatchOptions");
static_assert(sizeof(B_MatchOptions_C_CopyMatchOptions) == 0x000018, "Wrong size on B_MatchOptions_C_CopyMatchOptions");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, OptionsToCopy) == 0x000000, "Member 'B_MatchOptions_C_CopyMatchOptions::OptionsToCopy' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, MaxPlayersImpostor) == 0x000008, "Member 'B_MatchOptions_C_CopyMatchOptions::MaxPlayersImpostor' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, CallFunc_ClassIsChildOf_ReturnValue) == 0x00000C, "Member 'B_MatchOptions_C_CopyMatchOptions::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'B_MatchOptions_C_CopyMatchOptions::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'B_MatchOptions_C_CopyMatchOptions::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, Temp_bool_Variable) == 0x00000F, "Member 'B_MatchOptions_C_CopyMatchOptions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_CopyMatchOptions, K2Node_Select_Default) == 0x000010, "Member 'B_MatchOptions_C_CopyMatchOptions::K2Node_Select_Default' has a wrong offset!");

// Function B_MatchOptions.B_MatchOptions_C.GetGameRules
// 0x0018 (0x0018 - 0x0000)
struct B_MatchOptions_C_GetGameRules final
{
public:
	class UB_GameRules_C*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UB_GameRules_C*                         CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MatchOptions_C_GetGameRules) == 0x000008, "Wrong alignment on B_MatchOptions_C_GetGameRules");
static_assert(sizeof(B_MatchOptions_C_GetGameRules) == 0x000018, "Wrong size on B_MatchOptions_C_GetGameRules");
static_assert(offsetof(B_MatchOptions_C_GetGameRules, ReturnValue) == 0x000000, "Member 'B_MatchOptions_C_GetGameRules::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_GetGameRules, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'B_MatchOptions_C_GetGameRules::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_GetGameRules, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_MatchOptions_C_GetGameRules::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_MatchOptions.B_MatchOptions_C.SetGameMode
// 0x0010 (0x0010 - 0x0000)
struct B_MatchOptions_C_SetGameMode final
{
public:
	class UClass*                                 GameModeClass;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MatchOptions_C_SetGameMode) == 0x000008, "Wrong alignment on B_MatchOptions_C_SetGameMode");
static_assert(sizeof(B_MatchOptions_C_SetGameMode) == 0x000010, "Wrong size on B_MatchOptions_C_SetGameMode");
static_assert(offsetof(B_MatchOptions_C_SetGameMode, GameModeClass) == 0x000000, "Member 'B_MatchOptions_C_SetGameMode::GameModeClass' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_SetGameMode, CallFunc_ClassIsChildOf_ReturnValue) == 0x000008, "Member 'B_MatchOptions_C_SetGameMode::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function B_MatchOptions.B_MatchOptions_C.IsSpecialGameModeSelected
// 0x0006 (0x0006 - 0x0000)
struct B_MatchOptions_C_IsSpecialGameModeSelected final
{
public:
	bool                                          SpecialGameModeSelected;                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MatchOptions_C_IsSpecialGameModeSelected) == 0x000001, "Wrong alignment on B_MatchOptions_C_IsSpecialGameModeSelected");
static_assert(sizeof(B_MatchOptions_C_IsSpecialGameModeSelected) == 0x000006, "Wrong size on B_MatchOptions_C_IsSpecialGameModeSelected");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, SpecialGameModeSelected) == 0x000000, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::SpecialGameModeSelected' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, CallFunc_ClassIsChildOf_ReturnValue) == 0x000001, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000002, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000003, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MatchOptions_C_IsSpecialGameModeSelected, CallFunc_BooleanOR_ReturnValue_1) == 0x000005, "Member 'B_MatchOptions_C_IsSpecialGameModeSelected::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

}

