#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_VoteScreen

#include "Basic.hpp"

#include "WB_VoteScreen_classes.hpp"
#include "WB_VoteScreen_parameters.hpp"


namespace SDK
{

// Function WB_VoteScreen.WB_VoteScreen_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_VoteScreen_C::BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.BndEvt__NoButton_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_VoteScreen_C::BndEvt__NoButton_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "BndEvt__NoButton_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.BndEvt__ScreenButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWB_VoteScreen_C::BndEvt__ScreenButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "BndEvt__ScreenButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.BndEvt__SkipVoteButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_VoteScreen_C::BndEvt__SkipVoteButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "BndEvt__SkipVoteButton_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.BndEvt__YesButton_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_VoteScreen_C::BndEvt__YesButton_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "BndEvt__YesButton_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_VoteScreen_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.CustomDown
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::CustomDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "CustomDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.CustomLeft
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::CustomLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "CustomLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.CustomRight
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::CustomRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "CustomRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.CustomUp
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::CustomUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "CustomUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.ExecuteUbergraph_WB_VoteScreen
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VoteScreen_C::ExecuteUbergraph_WB_VoteScreen(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "ExecuteUbergraph_WB_VoteScreen");

	Params::WB_VoteScreen_C_ExecuteUbergraph_WB_VoteScreen Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_VoteScreen.WB_VoteScreen_C.Get_VotePlayer_ColorAndOpacity_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSlateColor                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FSlateColor UWB_VoteScreen_C::Get_VotePlayer_ColorAndOpacity_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Get_VotePlayer_ColorAndOpacity_0");

	Params::WB_VoteScreen_C_Get_VotePlayer_ColorAndOpacity_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.Get_VotePlayer_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_VoteScreen_C::Get_VotePlayer_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Get_VotePlayer_Text_0");

	Params::WB_VoteScreen_C_Get_VotePlayer_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.Get_VotePlayer_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWB_VoteScreen_C::Get_VotePlayer_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Get_VotePlayer_Visibility_0");

	Params::WB_VoteScreen_C_Get_VotePlayer_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.Get_VoteQuestion_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_VoteScreen_C::Get_VoteQuestion_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Get_VoteQuestion_Text_0");

	Params::WB_VoteScreen_C_Get_VoteQuestion_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.Get_VoteQuestionBlur_Visibility_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

ESlateVisibility UWB_VoteScreen_C::Get_VoteQuestionBlur_Visibility_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Get_VoteQuestionBlur_Visibility_0");

	Params::WB_VoteScreen_C_Get_VoteQuestionBlur_Visibility_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.GetActorScreenPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VoteScreen_C::GetActorScreenPosition(class AActor* Actor, struct FVector2D* ScreenLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "GetActorScreenPosition");

	Params::WB_VoteScreen_C_GetActorScreenPosition Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenLocation != nullptr)
		*ScreenLocation = std::move(Parms.ScreenLocation);
}


// Function WB_VoteScreen.WB_VoteScreen_C.GetInitialFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      InitialFocusWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_VoteScreen_C::GetInitialFocusWidget(class UUserWidget** InitialFocusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "GetInitialFocusWidget");

	Params::WB_VoteScreen_C_GetInitialFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InitialFocusWidget != nullptr)
		*InitialFocusWidget = Parms.InitialFocusWidget;
}


// Function WB_VoteScreen.WB_VoteScreen_C.InteractPressed
// (BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::InteractPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "InteractPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.OnApply
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::OnApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "OnApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.OnBack
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_VoteScreen_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "OnPreviewKeyDown");

	Params::WB_VoteScreen_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_VoteScreen.WB_VoteScreen_C.OnSpecialAction
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_VoteScreen_C::OnSpecialAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "OnSpecialAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_VoteScreen.WB_VoteScreen_C.SetNewHunterHighlight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewHunter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWB_VoteScreen_C::SetNewHunterHighlight(class AActor* NewHunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "SetNewHunterHighlight");

	Params::WB_VoteScreen_C_SetNewHunterHighlight Parms{};

	Parms.NewHunter = NewHunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_VoteScreen.WB_VoteScreen_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_VoteScreen_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_VoteScreen_C", "Tick");

	Params::WB_VoteScreen_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

