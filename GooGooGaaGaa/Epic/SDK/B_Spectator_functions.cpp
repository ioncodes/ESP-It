#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Spectator

#include "Basic.hpp"

#include "B_Spectator_classes.hpp"
#include "B_Spectator_parameters.hpp"


namespace SDK
{

// Function B_Spectator.B_Spectator_C.TryShowTeamSelectionScreen
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ScreenShown                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::TryShowTeamSelectionScreen(class UObject* __WorldContext, bool* ScreenShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_Spectator_C", "TryShowTeamSelectionScreen");

	Params::B_Spectator_C_TryShowTeamSelectionScreen Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ScreenShown != nullptr)
		*ScreenShown = Parms.ScreenShown;
}


// Function B_Spectator.B_Spectator_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ReceivePossessed");

	Params::B_Spectator_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ExecuteUbergraph_B_Spectator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::ExecuteUbergraph_B_Spectator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ExecuteUbergraph_B_Spectator");

	Params::B_Spectator_C_ExecuteUbergraph_B_Spectator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.CanTeleport
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanTeleport_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::CanTeleport(bool* CanTeleport_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "CanTeleport");

	Params::B_Spectator_C_CanTeleport Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanTeleport_0 != nullptr)
		*CanTeleport_0 = Parms.CanTeleport_0;
}


// Function B_Spectator.B_Spectator_C.AddToMovementSpeedMutliplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AddedMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  NewMovementSpeedMultiplier                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ValueChanged                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::AddToMovementSpeedMutliplier(double AddedMultiplier, double* NewMovementSpeedMultiplier, bool* ValueChanged)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "AddToMovementSpeedMutliplier");

	Params::B_Spectator_C_AddToMovementSpeedMutliplier Parms{};

	Parms.AddedMultiplier = AddedMultiplier;

	UObject::ProcessEvent(Func, &Parms);

	if (NewMovementSpeedMultiplier != nullptr)
		*NewMovementSpeedMultiplier = Parms.NewMovementSpeedMultiplier;

	if (ValueChanged != nullptr)
		*ValueChanged = Parms.ValueChanged;
}


// Function B_Spectator.B_Spectator_C.OnRep_Invisible
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::OnRep_Invisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "OnRep_Invisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.TickHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::TickHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "TickHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.InitializeHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::InitializeHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InitializeHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.RefreshScreen
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::RefreshScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "RefreshScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.ShowSuitableSelectionScreen
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::ShowSuitableSelectionScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ShowSuitableSelectionScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.TryShowHunterSkillScreen
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ScreenShown                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::TryShowHunterSkillScreen(bool* ScreenShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "TryShowHunterSkillScreen");

	Params::B_Spectator_C_TryShowHunterSkillScreen Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenShown != nullptr)
		*ScreenShown = Parms.ScreenShown;
}


// Function B_Spectator.B_Spectator_C.HandleClientProcessed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::HandleClientProcessed(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "HandleClientProcessed");

	Params::B_Spectator_C_HandleClientProcessed Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_CameraShake_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_CameraShake_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_CameraShake_K2Node_InputActionEvent_6");

	Params::B_Spectator_C_InpActEvt_CameraShake_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_ResetCameraRoll_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_ResetCameraRoll_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_ResetCameraRoll_K2Node_InputActionEvent_5");

	Params::B_Spectator_C_InpActEvt_ResetCameraRoll_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_ToggleSmoothSpectator_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_ToggleSmoothSpectator_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_ToggleSmoothSpectator_K2Node_InputActionEvent_4");

	Params::B_Spectator_C_InpActEvt_ToggleSmoothSpectator_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_Jump_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_Jump_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_Jump_K2Node_InputActionEvent_3");

	Params::B_Spectator_C_InpActEvt_Jump_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_Jump_K2Node_InputActionEvent_2");

	Params::B_Spectator_C_InpActEvt_Jump_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_Crouch_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_Crouch_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_Crouch_K2Node_InputActionEvent_1");

	Params::B_Spectator_C_InpActEvt_Crouch_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpActEvt_Crouch_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_Spectator_C::InpActEvt_Crouch_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpActEvt_Crouch_K2Node_InputActionEvent_0");

	Params::B_Spectator_C_InpActEvt_Crouch_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ClientPossessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::ClientPossessed(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ClientPossessed");

	Params::B_Spectator_C_ClientPossessed Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_157
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_157(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_157");

	Params::B_Spectator_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_172
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_172(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");

	Params::B_Spectator_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");

	Params::B_Spectator_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");

	Params::B_Spectator_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_Zoom_K2Node_InputAxisEvent_132
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_Zoom_K2Node_InputAxisEvent_132(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_Zoom_K2Node_InputAxisEvent_132");

	Params::B_Spectator_C_InpAxisEvt_Zoom_K2Node_InputAxisEvent_132 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_CameraRoll_K2Node_InputAxisEvent_318
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_CameraRoll_K2Node_InputAxisEvent_318(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_CameraRoll_K2Node_InputAxisEvent_318");

	Params::B_Spectator_C_InpAxisEvt_CameraRoll_K2Node_InputAxisEvent_318 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ReceiveTick");

	Params::B_Spectator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ReceiveUnpossessed");

	Params::B_Spectator_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_Spectator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.SetTransformServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::SetTransformServer(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "SetTransformServer");

	Params::B_Spectator_C_SetTransformServer Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.SetTransformMulti
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_Spectator_C::SetTransformMulti(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "SetTransformMulti");

	Params::B_Spectator_C_SetTransformMulti Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.ProceedTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::ProceedTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ProceedTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.PostProccedTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::PostProccedTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "PostProccedTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_68
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_68(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_68");

	Params::B_Spectator_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_68 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_78
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_TurnRate_K2Node_InputAxisEvent_78(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_TurnRate_K2Node_InputAxisEvent_78");

	Params::B_Spectator_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_78 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.InpAxisEvt_MoveUp_K2Node_InputAxisEvent_245
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::InpAxisEvt_MoveUp_K2Node_InputAxisEvent_245(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "InpAxisEvt_MoveUp_K2Node_InputAxisEvent_245");

	Params::B_Spectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_245 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_Spectator.B_Spectator_C.TickVerticalMovement
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::TickVerticalMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "TickVerticalMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.ShowTeamSelectionScreen
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::ShowTeamSelectionScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ShowTeamSelectionScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.HandlePlayerJoin
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::HandlePlayerJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "HandlePlayerJoin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.ShowHunterScreen
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::ShowHunterScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "ShowHunterScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.TryInitializeHUD
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::TryInitializeHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "TryInitializeHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.UnhideSpectator
// (BlueprintCallable, BlueprintEvent)

void AB_Spectator_C::UnhideSpectator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "UnhideSpectator");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_Spectator.B_Spectator_C.UpdateJoinAsHunterMidgameClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_JoinAsHunterStates                    JoinAsHunter                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_Spectator_C::UpdateJoinAsHunterMidgameClient(E_JoinAsHunterStates JoinAsHunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Spectator_C", "UpdateJoinAsHunterMidgameClient");

	Params::B_Spectator_C_UpdateJoinAsHunterMidgameClient Parms{};

	Parms.JoinAsHunter = JoinAsHunter;

	UObject::ProcessEvent(Func, &Parms);
}

}

