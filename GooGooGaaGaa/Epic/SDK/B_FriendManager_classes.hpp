#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FriendManager

#include "Basic.hpp"

#include "S_InviteInfo_structs.hpp"
#include "OnlineSubsystemBlueprints_structs.hpp"
#include "Engine_structs.hpp"
#include "E_PopupType_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_FriendManager.B_FriendManager_C
// 0x0178 (0x01A8 - 0x0030)
class UB_FriendManager_C final : public UBaseManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<struct FUniqueNetIdRepl, struct FOnlineSessionSearchResultBP> SessionInvitations;                                // 0x0038(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UB_GameInstance_C*                      BGameInstance;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          FriendListRetrieved;                               // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RecentPlayersRetrieved;                            // 0x0091(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnFriendListReceived;                              // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnRecentPlayersReceived;                           // 0x00A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FS_InviteInfo>                  PopupQueue;                                        // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWB_InviteInfoPopup_C*                  CurrentPopup;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               UserInfoQueryQueue;                                // 0x00D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FUniqueNetIdRepl, E_PopupType>    PendingInvitations;                                // 0x00E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          UserInfoQueryInProgress;                           // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               SendFriendInviteQueue;                             // 0x0138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FUniqueNetIdRepl>               AcceptFriendRequestQueue;                          // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FUniqueNetIdRepl>               RejectFriendRequestQueue;                          // 0x0158(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FUniqueNetIdRepl>               DeleteFriendQueue;                                 // 0x0168(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SendFriendInviteInProgress;                        // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AcceptFriendInProgress;                            // 0x0179(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RejectFriendInProgress;                            // 0x017A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DeleteFriendInProgress;                            // 0x017B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaximumFriends;                                    // 0x017C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaximumFriendRequests;                             // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasIncomingTradeRequests;                          // 0x0184(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnHasIncomingTradeRequestsCompleted;               // 0x0188(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUserInfosReceived;                               // 0x0198(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnHasIncomingTradeRequestsCompleted__DelegateSignature(bool HasIncomingTradeRequests_0);
	void OnFriendListReceived__DelegateSignature();
	void OnUserInfosReceived__DelegateSignature(TArray<struct FUniqueNetIdRepl>& UserIds);
	void AcceptFriendRequest(const struct FUniqueNetIdRepl& FriendId, bool* InitialSuccess);
	void AcceptFriendRequestQueued();
	void AnyPendingFriendOrSessionInvitesExist(bool* ThereArePendingInvites);
	void CheckForPendingTradeRequests();
	void CheckForTooManyFriendsAndPending(bool* TooManyFriends, bool* TooManyPending);
	void CheckIncomingTradeRequests(TArray<struct FTradeRequest>& Requests);
	void CreateNecerssaryInvitationPopups();
	void CreateNewPopup();
	void DeleteFriend(const struct FUniqueNetIdRepl& FriendId);
	void DeleteFriendQueued();
	void ExecuteUbergraph_B_FriendManager(int32 EntryPoint);
	void GetCachedPlatformPresence(class UOnlineFriendRef* Friend, struct FOnlineUserPresenceData* Presence, EOnlineCachedResult_* CachedResult);
	void GetDisplayNamesFromUsers(TArray<class UOnlineUserRef*>& Users, TArray<class FString>* DisplayNames);
	void GetHasIncomingTradeRequests(bool* HasIncomingTradeRequests_0);
	void GetIsFriendListRetrieved(bool* FriendListRetrieved_0);
	void GetIsRecentPlayersRetrieved(bool* RecentPlayersRetrieved_0);
	void GetMaximumFriendRequests(int32* MaximumFriendRequests_0);
	void GetMaximumFriends(int32* MaximumFriends_0);
	void Initialize(class UGameInstance* InGameInstance);
	void InitializeFriendsAndPlayers();
	void OnAcceptInviteComplete_35A41B484B6CFFB9578A52A5BD3155FF(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_2564B7FD4AA17ABFFBFE3CA98D34953C(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_35A41B484B6CFFB9578A52A5BD3155FF(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_3ADB22B24A96F6453AEA11A8FEA28B30(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_53851A804A830E61AFB854AB13BB6C79(bool bWasSuccessful, const TArray<struct FUniqueNetIdRepl>& UserIds, const class FString& ErrorStr);
	void OnCallFailed_652B7B3045DC0C028A2E38958D67868C(bool bSuccess, const TArray<class FString>& SanitizedMessages);
	void OnCallFailed_77C017C448C1753B2D8EC78E394EC197(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful);
	void OnCallFailed_9163A3F940C5996E0C84719EFCC9D6CC(int32 LocalUserNum, bool bWasSuccessful, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_B33D6C834A0A27D7DA8F8F82F18E25A2(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnCallFailed_C6AF14174F5F3FA5A72F6B94079D59F1(const struct FUniqueNetIdRepl& UserId, const class FString& NameSpace, bool bWasSuccessful, const class FString& Error);
	void OnCallFailed_E50A00F64C1964CD8E4D5695C4575DCF(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful);
	void OnDeleteFriendComplete_3ADB22B24A96F6453AEA11A8FEA28B30(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnFailure_2BDD73BC4F7A4C29B5381C82D68320BC(const TArray<struct FTradeRequest>& Requests);
	void OnFriendInviteReceived(const struct FUniqueNetIdRepl& UserId, const struct FUniqueNetIdRepl& FriendId);
	void OnFriendSessionInviteReceived(const struct FUniqueNetIdRepl& UserId, const struct FUniqueNetIdRepl& FromId, const class FString& AppId, const struct FOnlineSessionSearchResultBP& InviteResult);
	void OnMessageArrayProcessed_652B7B3045DC0C028A2E38958D67868C(bool bSuccess, const TArray<class FString>& SanitizedMessages);
	void OnNewRecentPlayersAdded(const struct FUniqueNetIdRepl& UserId, const TArray<class UOnlineRecentPlayerRef*>& AddedPlayers);
	void OnPopupAnimationFinished();
	void OnPresenceReceived();
	void OnPresenceTaskComplete_77C017C448C1753B2D8EC78E394EC197(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful);
	void OnPresenceTaskComplete_E50A00F64C1964CD8E4D5695C4575DCF(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful);
	void OnQueryRecentPlayersComplete_C6AF14174F5F3FA5A72F6B94079D59F1(const struct FUniqueNetIdRepl& UserId, const class FString& NameSpace, bool bWasSuccessful, const class FString& Error);
	void OnQueryUserInfoComplete_53851A804A830E61AFB854AB13BB6C79(bool bWasSuccessful, const TArray<struct FUniqueNetIdRepl>& UserIds, const class FString& ErrorStr);
	void OnReadFriendsListComplete_9163A3F940C5996E0C84719EFCC9D6CC(int32 LocalUserNum, bool bWasSuccessful, const class FString& ListName, const class FString& ErrorStr);
	void OnRecentPlayersReceived__DelegateSignature();
	void OnRejectInviteComplete_2564B7FD4AA17ABFFBFE3CA98D34953C(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnSendInviteComplete_B33D6C834A0A27D7DA8F8F82F18E25A2(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr);
	void OnSuccess_2BDD73BC4F7A4C29B5381C82D68320BC(const TArray<struct FTradeRequest>& Requests);
	void QueryPlatformPresence();
	void QueryPS5FriendsPresence();
	void QueryUserInfoQueued();
	void RejectFriendRequest(const struct FUniqueNetIdRepl& FriendId);
	void RejectFriendRequestQueued();
	void RequestFriendsPresence();
	void RequestMultipleUserInfos(TArray<struct FUniqueNetIdRepl>& NetId);
	void RequestPresenceForIds(TArray<struct FUniqueNetIdRepl>& UserIds);
	void RequestRecentPlayersPresence();
	void RequestUserInfo(const struct FUniqueNetIdRepl& NetId);
	void SanitizeFriendNames();
	void SanitizePlayerNames(TArray<class UOnlineUserRef*>& Users);
	void SanitizeRecentPlayerNames();
	void SendFriendInvite(const struct FUniqueNetIdRepl& FriendId, bool* InitialSuccess);
	void SendFriendInviteQueued();
	void SendSessionInvite(const struct FUniqueNetIdRepl& Friend);
	void SetHasIncomingTradeRequests(bool HasIncomingTradeRequests_0);
	void TradeNotifyReceived(ETradeReason Reason, int64 PendingTradeId, const class FString& SourcePlayerId, const class FString& TargetPlayerId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_FriendManager_C">();
	}
	static class UB_FriendManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_FriendManager_C>();
	}
};
static_assert(alignof(UB_FriendManager_C) == 0x000008, "Wrong alignment on UB_FriendManager_C");
static_assert(sizeof(UB_FriendManager_C) == 0x0001A8, "Wrong size on UB_FriendManager_C");
static_assert(offsetof(UB_FriendManager_C, UberGraphFrame) == 0x000030, "Member 'UB_FriendManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, SessionInvitations) == 0x000038, "Member 'UB_FriendManager_C::SessionInvitations' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, BGameInstance) == 0x000088, "Member 'UB_FriendManager_C::BGameInstance' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, FriendListRetrieved) == 0x000090, "Member 'UB_FriendManager_C::FriendListRetrieved' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, RecentPlayersRetrieved) == 0x000091, "Member 'UB_FriendManager_C::RecentPlayersRetrieved' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, OnFriendListReceived) == 0x000098, "Member 'UB_FriendManager_C::OnFriendListReceived' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, OnRecentPlayersReceived) == 0x0000A8, "Member 'UB_FriendManager_C::OnRecentPlayersReceived' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, PopupQueue) == 0x0000B8, "Member 'UB_FriendManager_C::PopupQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, CurrentPopup) == 0x0000C8, "Member 'UB_FriendManager_C::CurrentPopup' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, UserInfoQueryQueue) == 0x0000D0, "Member 'UB_FriendManager_C::UserInfoQueryQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, PendingInvitations) == 0x0000E0, "Member 'UB_FriendManager_C::PendingInvitations' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, UserInfoQueryInProgress) == 0x000130, "Member 'UB_FriendManager_C::UserInfoQueryInProgress' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, SendFriendInviteQueue) == 0x000138, "Member 'UB_FriendManager_C::SendFriendInviteQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, AcceptFriendRequestQueue) == 0x000148, "Member 'UB_FriendManager_C::AcceptFriendRequestQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, RejectFriendRequestQueue) == 0x000158, "Member 'UB_FriendManager_C::RejectFriendRequestQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, DeleteFriendQueue) == 0x000168, "Member 'UB_FriendManager_C::DeleteFriendQueue' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, SendFriendInviteInProgress) == 0x000178, "Member 'UB_FriendManager_C::SendFriendInviteInProgress' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, AcceptFriendInProgress) == 0x000179, "Member 'UB_FriendManager_C::AcceptFriendInProgress' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, RejectFriendInProgress) == 0x00017A, "Member 'UB_FriendManager_C::RejectFriendInProgress' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, DeleteFriendInProgress) == 0x00017B, "Member 'UB_FriendManager_C::DeleteFriendInProgress' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, MaximumFriends) == 0x00017C, "Member 'UB_FriendManager_C::MaximumFriends' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, MaximumFriendRequests) == 0x000180, "Member 'UB_FriendManager_C::MaximumFriendRequests' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, HasIncomingTradeRequests) == 0x000184, "Member 'UB_FriendManager_C::HasIncomingTradeRequests' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, OnHasIncomingTradeRequestsCompleted) == 0x000188, "Member 'UB_FriendManager_C::OnHasIncomingTradeRequestsCompleted' has a wrong offset!");
static_assert(offsetof(UB_FriendManager_C, OnUserInfosReceived) == 0x000198, "Member 'UB_FriendManager_C::OnUserInfosReceived' has a wrong offset!");

}

