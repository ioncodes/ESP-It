#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyBindingList

#include "Basic.hpp"

#include "WB_KeyBindingList_classes.hpp"
#include "WB_KeyBindingList_parameters.hpp"


namespace SDK
{

// Function WB_KeyBindingList.WB_KeyBindingList_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_KeyBindingList_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_KeyBinding_C*                 KeyBindingWidget                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::CreateKeyBindingWidget(class UWB_KeyBinding_C** KeyBindingWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "CreateKeyBindingWidget");

	Params::WB_KeyBindingList_C_CreateKeyBindingWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KeyBindingWidget != nullptr)
		*KeyBindingWidget = Parms.KeyBindingWidget;
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidgetFromAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::CreateKeyBindingWidgetFromAction(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "CreateKeyBindingWidgetFromAction");

	Params::WB_KeyBindingList_C_CreateKeyBindingWidgetFromAction Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.CreateKeyBindingWidgetFromAxis
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSAxisToEdit                     AxisToEdit_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWB_KeyBindingList_C::CreateKeyBindingWidgetFromAxis(const struct FSAxisToEdit& AxisToEdit_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "CreateKeyBindingWidgetFromAxis");

	Params::WB_KeyBindingList_C_CreateKeyBindingWidgetFromAxis Parms{};

	Parms.AxisToEdit_0 = std::move(AxisToEdit_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.ExecuteUbergraph_WB_KeyBindingList
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::ExecuteUbergraph_WB_KeyBindingList(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "ExecuteUbergraph_WB_KeyBindingList");

	Params::WB_KeyBindingList_C_ExecuteUbergraph_WB_KeyBindingList Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.GetInitialFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      InitialFocusWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::GetInitialFocusWidget(class UUserWidget** InitialFocusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "GetInitialFocusWidget");

	Params::WB_KeyBindingList_C_GetInitialFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InitialFocusWidget != nullptr)
		*InitialFocusWidget = Parms.InitialFocusWidget;
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.InitializeBindingWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_KeyBindingList_C::InitializeBindingWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "InitializeBindingWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.LoadInputMappingsManagerSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_KeyBindingList_C::LoadInputMappingsManagerSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "LoadInputMappingsManagerSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnApply
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_KeyBindingList_C::OnApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnBack
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_KeyBindingList_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnKeyBindingButtonClicked
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_KeyBinding_C*                 KeyBindingWidget                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWB_KeyBindingButton_C*           KeyBindingButton                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::OnKeyBindingButtonClicked(class UWB_KeyBinding_C* KeyBindingWidget, class UWB_KeyBindingButton_C* KeyBindingButton, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnKeyBindingButtonClicked");

	Params::WB_KeyBindingList_C_OnKeyBindingButtonClicked Parms{};

	Parms.KeyBindingWidget = KeyBindingWidget;
	Parms.KeyBindingButton = KeyBindingButton;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_KeyBindingList_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnPreviewKeyDown");

	Params::WB_KeyBindingList_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnPreviewMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_KeyBindingList_C::OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnPreviewMouseButtonDown");

	Params::WB_KeyBindingList_C_OnPreviewMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.OnSpecialAction
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_KeyBindingList_C::OnSpecialAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "OnSpecialAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_KeyBindingList.WB_KeyBindingList_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_KeyBindingList_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_KeyBindingList_C", "Tick");

	Params::WB_KeyBindingList_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

