#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativePlayerState

#include "Basic.hpp"

#include "SSelectedSkills_structs.hpp"


namespace SDK::Params
{

// Function B_CreativePlayerState.B_CreativePlayerState_C.GetHunterMovementSkill
// 0x0008 (0x0008 - 0x0000)
struct B_CreativePlayerState_C_GetHunterMovementSkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_GetHunterMovementSkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_GetHunterMovementSkill");
static_assert(sizeof(B_CreativePlayerState_C_GetHunterMovementSkill) == 0x000008, "Wrong size on B_CreativePlayerState_C_GetHunterMovementSkill");
static_assert(offsetof(B_CreativePlayerState_C_GetHunterMovementSkill, ReturnValue) == 0x000000, "Member 'B_CreativePlayerState_C_GetHunterMovementSkill::ReturnValue' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.GetHunterUtilitySkill
// 0x0008 (0x0008 - 0x0000)
struct B_CreativePlayerState_C_GetHunterUtilitySkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_GetHunterUtilitySkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_GetHunterUtilitySkill");
static_assert(sizeof(B_CreativePlayerState_C_GetHunterUtilitySkill) == 0x000008, "Wrong size on B_CreativePlayerState_C_GetHunterUtilitySkill");
static_assert(offsetof(B_CreativePlayerState_C_GetHunterUtilitySkill, ReturnValue) == 0x000000, "Member 'B_CreativePlayerState_C_GetHunterUtilitySkill::ReturnValue' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.GetWitchMovementSkill
// 0x0008 (0x0008 - 0x0000)
struct B_CreativePlayerState_C_GetWitchMovementSkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_GetWitchMovementSkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_GetWitchMovementSkill");
static_assert(sizeof(B_CreativePlayerState_C_GetWitchMovementSkill) == 0x000008, "Wrong size on B_CreativePlayerState_C_GetWitchMovementSkill");
static_assert(offsetof(B_CreativePlayerState_C_GetWitchMovementSkill, ReturnValue) == 0x000000, "Member 'B_CreativePlayerState_C_GetWitchMovementSkill::ReturnValue' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.GetWitchUtilitySkill
// 0x0008 (0x0008 - 0x0000)
struct B_CreativePlayerState_C_GetWitchUtilitySkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_GetWitchUtilitySkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_GetWitchUtilitySkill");
static_assert(sizeof(B_CreativePlayerState_C_GetWitchUtilitySkill) == 0x000008, "Wrong size on B_CreativePlayerState_C_GetWitchUtilitySkill");
static_assert(offsetof(B_CreativePlayerState_C_GetWitchUtilitySkill, ReturnValue) == 0x000000, "Member 'B_CreativePlayerState_C_GetWitchUtilitySkill::ReturnValue' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.SetHunterMovementSkill
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePlayerState_C_SetHunterMovementSkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_MakeStruct_SSelectedSkills;                 // 0x0008(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_SetHunterMovementSkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_SetHunterMovementSkill");
static_assert(sizeof(B_CreativePlayerState_C_SetHunterMovementSkill) == 0x000028, "Wrong size on B_CreativePlayerState_C_SetHunterMovementSkill");
static_assert(offsetof(B_CreativePlayerState_C_SetHunterMovementSkill, Skill) == 0x000000, "Member 'B_CreativePlayerState_C_SetHunterMovementSkill::Skill' has a wrong offset!");
static_assert(offsetof(B_CreativePlayerState_C_SetHunterMovementSkill, K2Node_MakeStruct_SSelectedSkills) == 0x000008, "Member 'B_CreativePlayerState_C_SetHunterMovementSkill::K2Node_MakeStruct_SSelectedSkills' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.SetHunterUtilitySkill
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePlayerState_C_SetHunterUtilitySkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_MakeStruct_SSelectedSkills;                 // 0x0008(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_SetHunterUtilitySkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_SetHunterUtilitySkill");
static_assert(sizeof(B_CreativePlayerState_C_SetHunterUtilitySkill) == 0x000028, "Wrong size on B_CreativePlayerState_C_SetHunterUtilitySkill");
static_assert(offsetof(B_CreativePlayerState_C_SetHunterUtilitySkill, Skill) == 0x000000, "Member 'B_CreativePlayerState_C_SetHunterUtilitySkill::Skill' has a wrong offset!");
static_assert(offsetof(B_CreativePlayerState_C_SetHunterUtilitySkill, K2Node_MakeStruct_SSelectedSkills) == 0x000008, "Member 'B_CreativePlayerState_C_SetHunterUtilitySkill::K2Node_MakeStruct_SSelectedSkills' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.SetWitchMovementSkill
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePlayerState_C_SetWitchMovementSkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_MakeStruct_SSelectedSkills;                 // 0x0008(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_SetWitchMovementSkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_SetWitchMovementSkill");
static_assert(sizeof(B_CreativePlayerState_C_SetWitchMovementSkill) == 0x000028, "Wrong size on B_CreativePlayerState_C_SetWitchMovementSkill");
static_assert(offsetof(B_CreativePlayerState_C_SetWitchMovementSkill, Skill) == 0x000000, "Member 'B_CreativePlayerState_C_SetWitchMovementSkill::Skill' has a wrong offset!");
static_assert(offsetof(B_CreativePlayerState_C_SetWitchMovementSkill, K2Node_MakeStruct_SSelectedSkills) == 0x000008, "Member 'B_CreativePlayerState_C_SetWitchMovementSkill::K2Node_MakeStruct_SSelectedSkills' has a wrong offset!");

// Function B_CreativePlayerState.B_CreativePlayerState_C.SetWitchUtilitySkill
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePlayerState_C_SetWitchUtilitySkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_MakeStruct_SSelectedSkills;                 // 0x0008(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePlayerState_C_SetWitchUtilitySkill) == 0x000008, "Wrong alignment on B_CreativePlayerState_C_SetWitchUtilitySkill");
static_assert(sizeof(B_CreativePlayerState_C_SetWitchUtilitySkill) == 0x000028, "Wrong size on B_CreativePlayerState_C_SetWitchUtilitySkill");
static_assert(offsetof(B_CreativePlayerState_C_SetWitchUtilitySkill, Skill) == 0x000000, "Member 'B_CreativePlayerState_C_SetWitchUtilitySkill::Skill' has a wrong offset!");
static_assert(offsetof(B_CreativePlayerState_C_SetWitchUtilitySkill, K2Node_MakeStruct_SSelectedSkills) == 0x000008, "Member 'B_CreativePlayerState_C_SetWitchUtilitySkill::K2Node_MakeStruct_SSelectedSkills' has a wrong offset!");

}

