#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaRest

#include "Basic.hpp"

#include "VaRest_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VaRest.VaRestJsonObject.DecodeJson
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_DecodeJson final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseIncrementalParser;                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_DecodeJson) == 0x000008, "Wrong alignment on VaRestJsonObject_DecodeJson");
static_assert(sizeof(VaRestJsonObject_DecodeJson) == 0x000018, "Wrong size on VaRestJsonObject_DecodeJson");
static_assert(offsetof(VaRestJsonObject_DecodeJson, JsonString) == 0x000000, "Member 'VaRestJsonObject_DecodeJson::JsonString' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_DecodeJson, bUseIncrementalParser) == 0x000010, "Member 'VaRestJsonObject_DecodeJson::bUseIncrementalParser' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_DecodeJson, ReturnValue) == 0x000011, "Member 'VaRestJsonObject_DecodeJson::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.MergeJsonObject
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_MergeJsonObject final
{
public:
	class UVaRestJsonObject*                      InJsonObject;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Overwrite;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_MergeJsonObject) == 0x000008, "Wrong alignment on VaRestJsonObject_MergeJsonObject");
static_assert(sizeof(VaRestJsonObject_MergeJsonObject) == 0x000010, "Wrong size on VaRestJsonObject_MergeJsonObject");
static_assert(offsetof(VaRestJsonObject_MergeJsonObject, InJsonObject) == 0x000000, "Member 'VaRestJsonObject_MergeJsonObject::InJsonObject' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_MergeJsonObject, Overwrite) == 0x000008, "Member 'VaRestJsonObject_MergeJsonObject::Overwrite' has a wrong offset!");

// Function VaRest.VaRestJsonObject.RemoveField
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_RemoveField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_RemoveField) == 0x000008, "Wrong alignment on VaRestJsonObject_RemoveField");
static_assert(sizeof(VaRestJsonObject_RemoveField) == 0x000010, "Wrong size on VaRestJsonObject_RemoveField");
static_assert(offsetof(VaRestJsonObject_RemoveField, FieldName) == 0x000000, "Member 'VaRestJsonObject_RemoveField::FieldName' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonValue*>               InArray;                                           // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetArrayField");
static_assert(sizeof(VaRestJsonObject_SetArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetArrayField");
static_assert(offsetof(VaRestJsonObject_SetArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetArrayField, InArray) == 0x000010, "Member 'VaRestJsonObject_SetArrayField::InArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BoolArray;                                         // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetBoolArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetBoolArrayField");
static_assert(sizeof(VaRestJsonObject_SetBoolArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetBoolArrayField");
static_assert(offsetof(VaRestJsonObject_SetBoolArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetBoolArrayField, BoolArray) == 0x000010, "Member 'VaRestJsonObject_SetBoolArrayField::BoolArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetBoolField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InValue;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_SetBoolField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetBoolField");
static_assert(sizeof(VaRestJsonObject_SetBoolField) == 0x000018, "Wrong size on VaRestJsonObject_SetBoolField");
static_assert(offsetof(VaRestJsonObject_SetBoolField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetBoolField, InValue) == 0x000010, "Member 'VaRestJsonObject_SetBoolField::InValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       JsonValue;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetField");
static_assert(sizeof(VaRestJsonObject_SetField) == 0x000018, "Wrong size on VaRestJsonObject_SetField");
static_assert(offsetof(VaRestJsonObject_SetField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetField, JsonValue) == 0x000010, "Member 'VaRestJsonObject_SetField::JsonValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetInt64Field
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetInt64Field final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Number;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetInt64Field) == 0x000008, "Wrong alignment on VaRestJsonObject_SetInt64Field");
static_assert(sizeof(VaRestJsonObject_SetInt64Field) == 0x000018, "Wrong size on VaRestJsonObject_SetInt64Field");
static_assert(offsetof(VaRestJsonObject_SetInt64Field, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetInt64Field::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetInt64Field, Number) == 0x000010, "Member 'VaRestJsonObject_SetInt64Field::Number' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetIntegerField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetIntegerField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_SetIntegerField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetIntegerField");
static_assert(sizeof(VaRestJsonObject_SetIntegerField) == 0x000018, "Wrong size on VaRestJsonObject_SetIntegerField");
static_assert(offsetof(VaRestJsonObject_SetIntegerField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetIntegerField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetIntegerField, Number) == 0x000010, "Member 'VaRestJsonObject_SetIntegerField::Number' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetMapFields_bool
// 0x0050 (0x0050 - 0x0000)
struct VaRestJsonObject_SetMapFields_bool final
{
public:
	TMap<class FString, bool>                     Fields;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetMapFields_bool) == 0x000008, "Wrong alignment on VaRestJsonObject_SetMapFields_bool");
static_assert(sizeof(VaRestJsonObject_SetMapFields_bool) == 0x000050, "Wrong size on VaRestJsonObject_SetMapFields_bool");
static_assert(offsetof(VaRestJsonObject_SetMapFields_bool, Fields) == 0x000000, "Member 'VaRestJsonObject_SetMapFields_bool::Fields' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetMapFields_int32
// 0x0050 (0x0050 - 0x0000)
struct VaRestJsonObject_SetMapFields_int32 final
{
public:
	TMap<class FString, int32>                    Fields;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetMapFields_int32) == 0x000008, "Wrong alignment on VaRestJsonObject_SetMapFields_int32");
static_assert(sizeof(VaRestJsonObject_SetMapFields_int32) == 0x000050, "Wrong size on VaRestJsonObject_SetMapFields_int32");
static_assert(offsetof(VaRestJsonObject_SetMapFields_int32, Fields) == 0x000000, "Member 'VaRestJsonObject_SetMapFields_int32::Fields' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetMapFields_int64
// 0x0050 (0x0050 - 0x0000)
struct VaRestJsonObject_SetMapFields_int64 final
{
public:
	TMap<class FString, int64>                    Fields;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetMapFields_int64) == 0x000008, "Wrong alignment on VaRestJsonObject_SetMapFields_int64");
static_assert(sizeof(VaRestJsonObject_SetMapFields_int64) == 0x000050, "Wrong size on VaRestJsonObject_SetMapFields_int64");
static_assert(offsetof(VaRestJsonObject_SetMapFields_int64, Fields) == 0x000000, "Member 'VaRestJsonObject_SetMapFields_int64::Fields' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetMapFields_string
// 0x0050 (0x0050 - 0x0000)
struct VaRestJsonObject_SetMapFields_string final
{
public:
	TMap<class FString, class FString>            Fields;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetMapFields_string) == 0x000008, "Wrong alignment on VaRestJsonObject_SetMapFields_string");
static_assert(sizeof(VaRestJsonObject_SetMapFields_string) == 0x000050, "Wrong size on VaRestJsonObject_SetMapFields_string");
static_assert(offsetof(VaRestJsonObject_SetMapFields_string, Fields) == 0x000000, "Member 'VaRestJsonObject_SetMapFields_string::Fields' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetMapFields_uint8
// 0x0050 (0x0050 - 0x0000)
struct VaRestJsonObject_SetMapFields_uint8 final
{
public:
	TMap<class FString, uint8>                    Fields;                                            // 0x0000(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetMapFields_uint8) == 0x000008, "Wrong alignment on VaRestJsonObject_SetMapFields_uint8");
static_assert(sizeof(VaRestJsonObject_SetMapFields_uint8) == 0x000050, "Wrong size on VaRestJsonObject_SetMapFields_uint8");
static_assert(offsetof(VaRestJsonObject_SetMapFields_uint8, Fields) == 0x000000, "Member 'VaRestJsonObject_SetMapFields_uint8::Fields' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetNumberArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberArrayField");
static_assert(sizeof(VaRestJsonObject_SetNumberArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetNumberArrayField");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayField, NumberArray) == 0x000010, "Member 'VaRestJsonObject_SetNumberArrayField::NumberArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetNumberArrayFieldDouble
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetNumberArrayFieldDouble final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<double>                                NumberArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetNumberArrayFieldDouble) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberArrayFieldDouble");
static_assert(sizeof(VaRestJsonObject_SetNumberArrayFieldDouble) == 0x000020, "Wrong size on VaRestJsonObject_SetNumberArrayFieldDouble");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayFieldDouble, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberArrayFieldDouble::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberArrayFieldDouble, NumberArray) == 0x000010, "Member 'VaRestJsonObject_SetNumberArrayFieldDouble::NumberArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetNumberField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Number;                                            // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_SetNumberField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberField");
static_assert(sizeof(VaRestJsonObject_SetNumberField) == 0x000018, "Wrong size on VaRestJsonObject_SetNumberField");
static_assert(offsetof(VaRestJsonObject_SetNumberField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberField, Number) == 0x000010, "Member 'VaRestJsonObject_SetNumberField::Number' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetNumberFieldDouble
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetNumberFieldDouble final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Number;                                            // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetNumberFieldDouble) == 0x000008, "Wrong alignment on VaRestJsonObject_SetNumberFieldDouble");
static_assert(sizeof(VaRestJsonObject_SetNumberFieldDouble) == 0x000018, "Wrong size on VaRestJsonObject_SetNumberFieldDouble");
static_assert(offsetof(VaRestJsonObject_SetNumberFieldDouble, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetNumberFieldDouble::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetNumberFieldDouble, Number) == 0x000010, "Member 'VaRestJsonObject_SetNumberFieldDouble::Number' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonObject*>              ObjectArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetObjectArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetObjectArrayField");
static_assert(sizeof(VaRestJsonObject_SetObjectArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetObjectArrayField");
static_assert(offsetof(VaRestJsonObject_SetObjectArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetObjectArrayField, ObjectArray) == 0x000010, "Member 'VaRestJsonObject_SetObjectArrayField::ObjectArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetObjectField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_SetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetObjectField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetObjectField");
static_assert(sizeof(VaRestJsonObject_SetObjectField) == 0x000018, "Wrong size on VaRestJsonObject_SetObjectField");
static_assert(offsetof(VaRestJsonObject_SetObjectField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetObjectField, JsonObject) == 0x000010, "Member 'VaRestJsonObject_SetObjectField::JsonObject' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetStringArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetStringArrayField");
static_assert(sizeof(VaRestJsonObject_SetStringArrayField) == 0x000020, "Wrong size on VaRestJsonObject_SetStringArrayField");
static_assert(offsetof(VaRestJsonObject_SetStringArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetStringArrayField, StringArray) == 0x000010, "Member 'VaRestJsonObject_SetStringArrayField::StringArray' has a wrong offset!");

// Function VaRest.VaRestJsonObject.SetStringField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_SetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StringValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_SetStringField) == 0x000008, "Wrong alignment on VaRestJsonObject_SetStringField");
static_assert(sizeof(VaRestJsonObject_SetStringField) == 0x000020, "Wrong size on VaRestJsonObject_SetStringField");
static_assert(offsetof(VaRestJsonObject_SetStringField, FieldName) == 0x000000, "Member 'VaRestJsonObject_SetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_SetStringField, StringValue) == 0x000010, "Member 'VaRestJsonObject_SetStringField::StringValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.WriteToFilePath
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_WriteToFilePath final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRelativeToProjectDir;                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_WriteToFilePath) == 0x000008, "Wrong alignment on VaRestJsonObject_WriteToFilePath");
static_assert(sizeof(VaRestJsonObject_WriteToFilePath) == 0x000018, "Wrong size on VaRestJsonObject_WriteToFilePath");
static_assert(offsetof(VaRestJsonObject_WriteToFilePath, Path) == 0x000000, "Member 'VaRestJsonObject_WriteToFilePath::Path' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_WriteToFilePath, bIsRelativeToProjectDir) == 0x000010, "Member 'VaRestJsonObject_WriteToFilePath::bIsRelativeToProjectDir' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_WriteToFilePath, ReturnValue) == 0x000011, "Member 'VaRestJsonObject_WriteToFilePath::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.EncodeJson
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_EncodeJson final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_EncodeJson) == 0x000008, "Wrong alignment on VaRestJsonObject_EncodeJson");
static_assert(sizeof(VaRestJsonObject_EncodeJson) == 0x000010, "Wrong size on VaRestJsonObject_EncodeJson");
static_assert(offsetof(VaRestJsonObject_EncodeJson, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_EncodeJson::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.EncodeJsonToSingleString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_EncodeJsonToSingleString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_EncodeJsonToSingleString) == 0x000008, "Wrong alignment on VaRestJsonObject_EncodeJsonToSingleString");
static_assert(sizeof(VaRestJsonObject_EncodeJsonToSingleString) == 0x000010, "Wrong size on VaRestJsonObject_EncodeJsonToSingleString");
static_assert(offsetof(VaRestJsonObject_EncodeJsonToSingleString, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_EncodeJsonToSingleString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonValue*>               ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetArrayField");
static_assert(sizeof(VaRestJsonObject_GetArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetArrayField");
static_assert(offsetof(VaRestJsonObject_GetArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetBoolArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetBoolArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetBoolArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetBoolArrayField");
static_assert(sizeof(VaRestJsonObject_GetBoolArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetBoolArrayField");
static_assert(offsetof(VaRestJsonObject_GetBoolArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetBoolArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetBoolArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetBoolArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetBoolField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetBoolField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_GetBoolField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetBoolField");
static_assert(sizeof(VaRestJsonObject_GetBoolField) == 0x000018, "Wrong size on VaRestJsonObject_GetBoolField");
static_assert(offsetof(VaRestJsonObject_GetBoolField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetBoolField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetBoolField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetBoolField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetField");
static_assert(sizeof(VaRestJsonObject_GetField) == 0x000018, "Wrong size on VaRestJsonObject_GetField");
static_assert(offsetof(VaRestJsonObject_GetField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetFieldNames
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonObject_GetFieldNames final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetFieldNames) == 0x000008, "Wrong alignment on VaRestJsonObject_GetFieldNames");
static_assert(sizeof(VaRestJsonObject_GetFieldNames) == 0x000010, "Wrong size on VaRestJsonObject_GetFieldNames");
static_assert(offsetof(VaRestJsonObject_GetFieldNames, ReturnValue) == 0x000000, "Member 'VaRestJsonObject_GetFieldNames::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetFieldTypeString
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetFieldTypeString final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetFieldTypeString) == 0x000008, "Wrong alignment on VaRestJsonObject_GetFieldTypeString");
static_assert(sizeof(VaRestJsonObject_GetFieldTypeString) == 0x000020, "Wrong size on VaRestJsonObject_GetFieldTypeString");
static_assert(offsetof(VaRestJsonObject_GetFieldTypeString, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetFieldTypeString::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetFieldTypeString, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetFieldTypeString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetInt64Field
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetInt64Field final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetInt64Field) == 0x000008, "Wrong alignment on VaRestJsonObject_GetInt64Field");
static_assert(sizeof(VaRestJsonObject_GetInt64Field) == 0x000018, "Wrong size on VaRestJsonObject_GetInt64Field");
static_assert(offsetof(VaRestJsonObject_GetInt64Field, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetInt64Field::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetInt64Field, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetInt64Field::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetIntegerArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetIntegerArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetIntegerArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetIntegerArrayField");
static_assert(sizeof(VaRestJsonObject_GetIntegerArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetIntegerArrayField");
static_assert(offsetof(VaRestJsonObject_GetIntegerArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetIntegerArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetIntegerArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetIntegerArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetIntegerField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetIntegerField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_GetIntegerField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetIntegerField");
static_assert(sizeof(VaRestJsonObject_GetIntegerField) == 0x000018, "Wrong size on VaRestJsonObject_GetIntegerField");
static_assert(offsetof(VaRestJsonObject_GetIntegerField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetIntegerField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetIntegerField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetIntegerField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetNumberArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetNumberArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetNumberArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetNumberArrayField");
static_assert(sizeof(VaRestJsonObject_GetNumberArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetNumberArrayField");
static_assert(offsetof(VaRestJsonObject_GetNumberArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetNumberArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetNumberArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetNumberArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetNumberField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetNumberField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_GetNumberField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetNumberField");
static_assert(sizeof(VaRestJsonObject_GetNumberField) == 0x000018, "Wrong size on VaRestJsonObject_GetNumberField");
static_assert(offsetof(VaRestJsonObject_GetNumberField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetNumberField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetNumberField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetNumberField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetObjectArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetObjectArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVaRestJsonObject*>              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetObjectArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetObjectArrayField");
static_assert(sizeof(VaRestJsonObject_GetObjectArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetObjectArrayField");
static_assert(offsetof(VaRestJsonObject_GetObjectArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetObjectArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetObjectArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetObjectArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetObjectField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_GetObjectField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetObjectField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetObjectField");
static_assert(sizeof(VaRestJsonObject_GetObjectField) == 0x000018, "Wrong size on VaRestJsonObject_GetObjectField");
static_assert(offsetof(VaRestJsonObject_GetObjectField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetObjectField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetObjectField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetObjectField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetStringArrayField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetStringArrayField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetStringArrayField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetStringArrayField");
static_assert(sizeof(VaRestJsonObject_GetStringArrayField) == 0x000020, "Wrong size on VaRestJsonObject_GetStringArrayField");
static_assert(offsetof(VaRestJsonObject_GetStringArrayField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetStringArrayField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetStringArrayField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetStringArrayField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.GetStringField
// 0x0020 (0x0020 - 0x0000)
struct VaRestJsonObject_GetStringField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonObject_GetStringField) == 0x000008, "Wrong alignment on VaRestJsonObject_GetStringField");
static_assert(sizeof(VaRestJsonObject_GetStringField) == 0x000020, "Wrong size on VaRestJsonObject_GetStringField");
static_assert(offsetof(VaRestJsonObject_GetStringField, FieldName) == 0x000000, "Member 'VaRestJsonObject_GetStringField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_GetStringField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_GetStringField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonObject.HasField
// 0x0018 (0x0018 - 0x0000)
struct VaRestJsonObject_HasField final
{
public:
	class FString                                 FieldName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestJsonObject_HasField) == 0x000008, "Wrong alignment on VaRestJsonObject_HasField");
static_assert(sizeof(VaRestJsonObject_HasField) == 0x000018, "Wrong size on VaRestJsonObject_HasField");
static_assert(offsetof(VaRestJsonObject_HasField, FieldName) == 0x000000, "Member 'VaRestJsonObject_HasField::FieldName' has a wrong offset!");
static_assert(offsetof(VaRestJsonObject_HasField, ReturnValue) == 0x000010, "Member 'VaRestJsonObject_HasField::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestJsonValue_AsObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsObject) == 0x000008, "Wrong alignment on VaRestJsonValue_AsObject");
static_assert(sizeof(VaRestJsonValue_AsObject) == 0x000008, "Wrong size on VaRestJsonValue_AsObject");
static_assert(offsetof(VaRestJsonValue_AsObject, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsArray
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_AsArray final
{
public:
	TArray<class UVaRestJsonValue*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsArray) == 0x000008, "Wrong alignment on VaRestJsonValue_AsArray");
static_assert(sizeof(VaRestJsonValue_AsArray) == 0x000010, "Wrong size on VaRestJsonValue_AsArray");
static_assert(offsetof(VaRestJsonValue_AsArray, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsArray::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsBool
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_AsBool final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsBool) == 0x000001, "Wrong alignment on VaRestJsonValue_AsBool");
static_assert(sizeof(VaRestJsonValue_AsBool) == 0x000001, "Wrong size on VaRestJsonValue_AsBool");
static_assert(offsetof(VaRestJsonValue_AsBool, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsBool::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsInt32
// 0x0004 (0x0004 - 0x0000)
struct VaRestJsonValue_AsInt32 final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsInt32) == 0x000004, "Wrong alignment on VaRestJsonValue_AsInt32");
static_assert(sizeof(VaRestJsonValue_AsInt32) == 0x000004, "Wrong size on VaRestJsonValue_AsInt32");
static_assert(offsetof(VaRestJsonValue_AsInt32, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsInt32::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsInt64
// 0x0008 (0x0008 - 0x0000)
struct VaRestJsonValue_AsInt64 final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsInt64) == 0x000008, "Wrong alignment on VaRestJsonValue_AsInt64");
static_assert(sizeof(VaRestJsonValue_AsInt64) == 0x000008, "Wrong size on VaRestJsonValue_AsInt64");
static_assert(offsetof(VaRestJsonValue_AsInt64, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsInt64::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsNumber
// 0x0004 (0x0004 - 0x0000)
struct VaRestJsonValue_AsNumber final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsNumber) == 0x000004, "Wrong alignment on VaRestJsonValue_AsNumber");
static_assert(sizeof(VaRestJsonValue_AsNumber) == 0x000004, "Wrong size on VaRestJsonValue_AsNumber");
static_assert(offsetof(VaRestJsonValue_AsNumber, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsNumber::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.AsString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_AsString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_AsString) == 0x000008, "Wrong alignment on VaRestJsonValue_AsString");
static_assert(sizeof(VaRestJsonValue_AsString) == 0x000010, "Wrong size on VaRestJsonValue_AsString");
static_assert(offsetof(VaRestJsonValue_AsString, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_AsString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.GetType
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_GetType final
{
public:
	EVaJson                                       ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_GetType) == 0x000001, "Wrong alignment on VaRestJsonValue_GetType");
static_assert(sizeof(VaRestJsonValue_GetType) == 0x000001, "Wrong size on VaRestJsonValue_GetType");
static_assert(offsetof(VaRestJsonValue_GetType, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_GetType::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.GetTypeString
// 0x0010 (0x0010 - 0x0000)
struct VaRestJsonValue_GetTypeString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_GetTypeString) == 0x000008, "Wrong alignment on VaRestJsonValue_GetTypeString");
static_assert(sizeof(VaRestJsonValue_GetTypeString) == 0x000010, "Wrong size on VaRestJsonValue_GetTypeString");
static_assert(offsetof(VaRestJsonValue_GetTypeString, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_GetTypeString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestJsonValue.IsNull
// 0x0001 (0x0001 - 0x0000)
struct VaRestJsonValue_IsNull final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestJsonValue_IsNull) == 0x000001, "Wrong alignment on VaRestJsonValue_IsNull");
static_assert(sizeof(VaRestJsonValue_IsNull) == 0x000001, "Wrong size on VaRestJsonValue_IsNull");
static_assert(offsetof(VaRestJsonValue_IsNull, ReturnValue) == 0x000000, "Member 'VaRestJsonValue_IsNull::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.Base64Decode
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64Decode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64Decode) == 0x000008, "Wrong alignment on VaRestLibrary_Base64Decode");
static_assert(sizeof(VaRestLibrary_Base64Decode) == 0x000028, "Wrong size on VaRestLibrary_Base64Decode");
static_assert(offsetof(VaRestLibrary_Base64Decode, Source) == 0x000000, "Member 'VaRestLibrary_Base64Decode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Decode, Dest) == 0x000010, "Member 'VaRestLibrary_Base64Decode::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Decode, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64Decode::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.Base64DecodeData
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64DecodeData final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64DecodeData) == 0x000008, "Wrong alignment on VaRestLibrary_Base64DecodeData");
static_assert(sizeof(VaRestLibrary_Base64DecodeData) == 0x000028, "Wrong size on VaRestLibrary_Base64DecodeData");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, Source) == 0x000000, "Member 'VaRestLibrary_Base64DecodeData::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, Dest) == 0x000010, "Member 'VaRestLibrary_Base64DecodeData::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64DecodeData, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64DecodeData::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.Base64Encode
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_Base64Encode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_Base64Encode) == 0x000008, "Wrong alignment on VaRestLibrary_Base64Encode");
static_assert(sizeof(VaRestLibrary_Base64Encode) == 0x000020, "Wrong size on VaRestLibrary_Base64Encode");
static_assert(offsetof(VaRestLibrary_Base64Encode, Source) == 0x000000, "Member 'VaRestLibrary_Base64Encode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64Encode, ReturnValue) == 0x000010, "Member 'VaRestLibrary_Base64Encode::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.Base64EncodeData
// 0x0028 (0x0028 - 0x0000)
struct VaRestLibrary_Base64EncodeData final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Dest;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_Base64EncodeData) == 0x000008, "Wrong alignment on VaRestLibrary_Base64EncodeData");
static_assert(sizeof(VaRestLibrary_Base64EncodeData) == 0x000028, "Wrong size on VaRestLibrary_Base64EncodeData");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, Data) == 0x000000, "Member 'VaRestLibrary_Base64EncodeData::Data' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, Dest) == 0x000010, "Member 'VaRestLibrary_Base64EncodeData::Dest' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_Base64EncodeData, ReturnValue) == 0x000020, "Member 'VaRestLibrary_Base64EncodeData::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.GetVaRestSettings
// 0x0008 (0x0008 - 0x0000)
struct VaRestLibrary_GetVaRestSettings final
{
public:
	class UVaRestSettings*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_GetVaRestSettings) == 0x000008, "Wrong alignment on VaRestLibrary_GetVaRestSettings");
static_assert(sizeof(VaRestLibrary_GetVaRestSettings) == 0x000008, "Wrong size on VaRestLibrary_GetVaRestSettings");
static_assert(offsetof(VaRestLibrary_GetVaRestSettings, ReturnValue) == 0x000000, "Member 'VaRestLibrary_GetVaRestSettings::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.GetVaRestVersion
// 0x0010 (0x0010 - 0x0000)
struct VaRestLibrary_GetVaRestVersion final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_GetVaRestVersion) == 0x000008, "Wrong alignment on VaRestLibrary_GetVaRestVersion");
static_assert(sizeof(VaRestLibrary_GetVaRestVersion) == 0x000010, "Wrong size on VaRestLibrary_GetVaRestVersion");
static_assert(offsetof(VaRestLibrary_GetVaRestVersion, ReturnValue) == 0x000000, "Member 'VaRestLibrary_GetVaRestVersion::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.GetWorldURL
// 0x0070 (0x0070 - 0x0000)
struct VaRestLibrary_GetWorldURL final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVaRestURL                             ReturnValue;                                       // 0x0008(0x0068)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_GetWorldURL) == 0x000008, "Wrong alignment on VaRestLibrary_GetWorldURL");
static_assert(sizeof(VaRestLibrary_GetWorldURL) == 0x000070, "Wrong size on VaRestLibrary_GetWorldURL");
static_assert(offsetof(VaRestLibrary_GetWorldURL, WorldContextObject) == 0x000000, "Member 'VaRestLibrary_GetWorldURL::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_GetWorldURL, ReturnValue) == 0x000008, "Member 'VaRestLibrary_GetWorldURL::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.HTTPStatusIntToEnum
// 0x0008 (0x0008 - 0x0000)
struct VaRestLibrary_HTTPStatusIntToEnum final
{
public:
	int32                                         StatusCode;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestHttpStatusCode                         ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestLibrary_HTTPStatusIntToEnum) == 0x000004, "Wrong alignment on VaRestLibrary_HTTPStatusIntToEnum");
static_assert(sizeof(VaRestLibrary_HTTPStatusIntToEnum) == 0x000008, "Wrong size on VaRestLibrary_HTTPStatusIntToEnum");
static_assert(offsetof(VaRestLibrary_HTTPStatusIntToEnum, StatusCode) == 0x000000, "Member 'VaRestLibrary_HTTPStatusIntToEnum::StatusCode' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_HTTPStatusIntToEnum, ReturnValue) == 0x000004, "Member 'VaRestLibrary_HTTPStatusIntToEnum::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.PercentEncode
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_PercentEncode final
{
public:
	class FString                                 Source;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_PercentEncode) == 0x000008, "Wrong alignment on VaRestLibrary_PercentEncode");
static_assert(sizeof(VaRestLibrary_PercentEncode) == 0x000020, "Wrong size on VaRestLibrary_PercentEncode");
static_assert(offsetof(VaRestLibrary_PercentEncode, Source) == 0x000000, "Member 'VaRestLibrary_PercentEncode::Source' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_PercentEncode, ReturnValue) == 0x000010, "Member 'VaRestLibrary_PercentEncode::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.StringToMd5
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_StringToMd5 final
{
public:
	class FString                                 StringToHash;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_StringToMd5) == 0x000008, "Wrong alignment on VaRestLibrary_StringToMd5");
static_assert(sizeof(VaRestLibrary_StringToMd5) == 0x000020, "Wrong size on VaRestLibrary_StringToMd5");
static_assert(offsetof(VaRestLibrary_StringToMd5, StringToHash) == 0x000000, "Member 'VaRestLibrary_StringToMd5::StringToHash' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_StringToMd5, ReturnValue) == 0x000010, "Member 'VaRestLibrary_StringToMd5::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestLibrary.StringToSha1
// 0x0020 (0x0020 - 0x0000)
struct VaRestLibrary_StringToSha1 final
{
public:
	class FString                                 StringToHash;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestLibrary_StringToSha1) == 0x000008, "Wrong alignment on VaRestLibrary_StringToSha1");
static_assert(sizeof(VaRestLibrary_StringToSha1) == 0x000020, "Wrong size on VaRestLibrary_StringToSha1");
static_assert(offsetof(VaRestLibrary_StringToSha1, StringToHash) == 0x000000, "Member 'VaRestLibrary_StringToSha1::StringToHash' has a wrong offset!");
static_assert(offsetof(VaRestLibrary_StringToSha1, ReturnValue) == 0x000010, "Member 'VaRestLibrary_StringToSha1::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.AddTag
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_AddTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_AddTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_AddTag");
static_assert(sizeof(VaRestRequestJSON_AddTag) == 0x000008, "Wrong size on VaRestRequestJSON_AddTag");
static_assert(offsetof(VaRestRequestJSON_AddTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_AddTag::Tag' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.ApplyURL
// 0x0038 (0x0038 - 0x0000)
struct VaRestRequestJSON_ApplyURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                WorldContextObject;                                // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLatentActionInfo                      LatentInfo;                                        // 0x0020(0x0018)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ApplyURL) == 0x000008, "Wrong alignment on VaRestRequestJSON_ApplyURL");
static_assert(sizeof(VaRestRequestJSON_ApplyURL) == 0x000038, "Wrong size on VaRestRequestJSON_ApplyURL");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, URL) == 0x000000, "Member 'VaRestRequestJSON_ApplyURL::URL' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, Result) == 0x000010, "Member 'VaRestRequestJSON_ApplyURL::Result' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, WorldContextObject) == 0x000018, "Member 'VaRestRequestJSON_ApplyURL::WorldContextObject' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_ApplyURL, LatentInfo) == 0x000020, "Member 'VaRestRequestJSON_ApplyURL::LatentInfo' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseContentAsString
// 0x0018 (0x0018 - 0x0000)
struct VaRestRequestJSON_GetResponseContentAsString final
{
public:
	bool                                          bCacheResponseContent;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseContentAsString) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseContentAsString");
static_assert(sizeof(VaRestRequestJSON_GetResponseContentAsString) == 0x000018, "Wrong size on VaRestRequestJSON_GetResponseContentAsString");
static_assert(offsetof(VaRestRequestJSON_GetResponseContentAsString, bCacheResponseContent) == 0x000000, "Member 'VaRestRequestJSON_GetResponseContentAsString::bCacheResponseContent' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_GetResponseContentAsString, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_GetResponseContentAsString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseHeader
// 0x0020 (0x0020 - 0x0000)
struct VaRestRequestJSON_GetResponseHeader final
{
public:
	class FString                                 HeaderName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseHeader) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseHeader");
static_assert(sizeof(VaRestRequestJSON_GetResponseHeader) == 0x000020, "Wrong size on VaRestRequestJSON_GetResponseHeader");
static_assert(offsetof(VaRestRequestJSON_GetResponseHeader, HeaderName) == 0x000000, "Member 'VaRestRequestJSON_GetResponseHeader::HeaderName' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_GetResponseHeader, ReturnValue) == 0x000010, "Member 'VaRestRequestJSON_GetResponseHeader::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.ProcessURL
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_ProcessURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_ProcessURL) == 0x000008, "Wrong alignment on VaRestRequestJSON_ProcessURL");
static_assert(sizeof(VaRestRequestJSON_ProcessURL) == 0x000010, "Wrong size on VaRestRequestJSON_ProcessURL");
static_assert(offsetof(VaRestRequestJSON_ProcessURL, URL) == 0x000000, "Member 'VaRestRequestJSON_ProcessURL::URL' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.RemoveTag
// 0x000C (0x000C - 0x0000)
struct VaRestRequestJSON_RemoveTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_RemoveTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_RemoveTag");
static_assert(sizeof(VaRestRequestJSON_RemoveTag) == 0x00000C, "Wrong size on VaRestRequestJSON_RemoveTag");
static_assert(offsetof(VaRestRequestJSON_RemoveTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_RemoveTag::Tag' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_RemoveTag, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_RemoveTag::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetBinaryContentType
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetBinaryContentType final
{
public:
	class FString                                 ContentType;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetBinaryContentType) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetBinaryContentType");
static_assert(sizeof(VaRestRequestJSON_SetBinaryContentType) == 0x000010, "Wrong size on VaRestRequestJSON_SetBinaryContentType");
static_assert(offsetof(VaRestRequestJSON_SetBinaryContentType, ContentType) == 0x000000, "Member 'VaRestRequestJSON_SetBinaryContentType::ContentType' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetBinaryRequestContent
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetBinaryRequestContent final
{
public:
	TArray<uint8>                                 Content;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetBinaryRequestContent) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetBinaryRequestContent");
static_assert(sizeof(VaRestRequestJSON_SetBinaryRequestContent) == 0x000010, "Wrong size on VaRestRequestJSON_SetBinaryRequestContent");
static_assert(offsetof(VaRestRequestJSON_SetBinaryRequestContent, Content) == 0x000000, "Member 'VaRestRequestJSON_SetBinaryRequestContent::Content' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetContentType
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_SetContentType final
{
public:
	EVaRestRequestContentType                     ContentType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetContentType) == 0x000001, "Wrong alignment on VaRestRequestJSON_SetContentType");
static_assert(sizeof(VaRestRequestJSON_SetContentType) == 0x000001, "Wrong size on VaRestRequestJSON_SetContentType");
static_assert(offsetof(VaRestRequestJSON_SetContentType, ContentType) == 0x000000, "Member 'VaRestRequestJSON_SetContentType::ContentType' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetCustomVerb
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetCustomVerb final
{
public:
	class FString                                 Verb;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetCustomVerb) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetCustomVerb");
static_assert(sizeof(VaRestRequestJSON_SetCustomVerb) == 0x000010, "Wrong size on VaRestRequestJSON_SetCustomVerb");
static_assert(offsetof(VaRestRequestJSON_SetCustomVerb, Verb) == 0x000000, "Member 'VaRestRequestJSON_SetCustomVerb::Verb' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetHeader
// 0x0020 (0x0020 - 0x0000)
struct VaRestRequestJSON_SetHeader final
{
public:
	class FString                                 HeaderName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HeaderValue;                                       // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetHeader) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetHeader");
static_assert(sizeof(VaRestRequestJSON_SetHeader) == 0x000020, "Wrong size on VaRestRequestJSON_SetHeader");
static_assert(offsetof(VaRestRequestJSON_SetHeader, HeaderName) == 0x000000, "Member 'VaRestRequestJSON_SetHeader::HeaderName' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_SetHeader, HeaderValue) == 0x000010, "Member 'VaRestRequestJSON_SetHeader::HeaderValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetRequestObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_SetRequestObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetRequestObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetRequestObject");
static_assert(sizeof(VaRestRequestJSON_SetRequestObject) == 0x000008, "Wrong size on VaRestRequestJSON_SetRequestObject");
static_assert(offsetof(VaRestRequestJSON_SetRequestObject, JsonObject) == 0x000000, "Member 'VaRestRequestJSON_SetRequestObject::JsonObject' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetResponseObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_SetResponseObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetResponseObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetResponseObject");
static_assert(sizeof(VaRestRequestJSON_SetResponseObject) == 0x000008, "Wrong size on VaRestRequestJSON_SetResponseObject");
static_assert(offsetof(VaRestRequestJSON_SetResponseObject, JsonObject) == 0x000000, "Member 'VaRestRequestJSON_SetResponseObject::JsonObject' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetStringRequestContent
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetStringRequestContent final
{
public:
	class FString                                 Content;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetStringRequestContent) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetStringRequestContent");
static_assert(sizeof(VaRestRequestJSON_SetStringRequestContent) == 0x000010, "Wrong size on VaRestRequestJSON_SetStringRequestContent");
static_assert(offsetof(VaRestRequestJSON_SetStringRequestContent, Content) == 0x000000, "Member 'VaRestRequestJSON_SetStringRequestContent::Content' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetURL
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_SetURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetURL) == 0x000008, "Wrong alignment on VaRestRequestJSON_SetURL");
static_assert(sizeof(VaRestRequestJSON_SetURL) == 0x000010, "Wrong size on VaRestRequestJSON_SetURL");
static_assert(offsetof(VaRestRequestJSON_SetURL, URL) == 0x000000, "Member 'VaRestRequestJSON_SetURL::URL' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.SetVerb
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_SetVerb final
{
public:
	EVaRestRequestVerb                            Verb;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_SetVerb) == 0x000001, "Wrong alignment on VaRestRequestJSON_SetVerb");
static_assert(sizeof(VaRestRequestJSON_SetVerb) == 0x000001, "Wrong size on VaRestRequestJSON_SetVerb");
static_assert(offsetof(VaRestRequestJSON_SetVerb, Verb) == 0x000000, "Member 'VaRestRequestJSON_SetVerb::Verb' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetAllResponseHeaders
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_GetAllResponseHeaders final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetAllResponseHeaders) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetAllResponseHeaders");
static_assert(sizeof(VaRestRequestJSON_GetAllResponseHeaders) == 0x000010, "Wrong size on VaRestRequestJSON_GetAllResponseHeaders");
static_assert(offsetof(VaRestRequestJSON_GetAllResponseHeaders, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetAllResponseHeaders::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetRequestObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_GetRequestObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetRequestObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetRequestObject");
static_assert(sizeof(VaRestRequestJSON_GetRequestObject) == 0x000008, "Wrong size on VaRestRequestJSON_GetRequestObject");
static_assert(offsetof(VaRestRequestJSON_GetRequestObject, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetRequestObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseCode
// 0x0004 (0x0004 - 0x0000)
struct VaRestRequestJSON_GetResponseCode final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseCode) == 0x000004, "Wrong alignment on VaRestRequestJSON_GetResponseCode");
static_assert(sizeof(VaRestRequestJSON_GetResponseCode) == 0x000004, "Wrong size on VaRestRequestJSON_GetResponseCode");
static_assert(offsetof(VaRestRequestJSON_GetResponseCode, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseCode::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseContent
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_GetResponseContent final
{
public:
	TArray<uint8>                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseContent) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseContent");
static_assert(sizeof(VaRestRequestJSON_GetResponseContent) == 0x000010, "Wrong size on VaRestRequestJSON_GetResponseContent");
static_assert(offsetof(VaRestRequestJSON_GetResponseContent, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseContent::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseContentLength
// 0x0004 (0x0004 - 0x0000)
struct VaRestRequestJSON_GetResponseContentLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseContentLength) == 0x000004, "Wrong alignment on VaRestRequestJSON_GetResponseContentLength");
static_assert(sizeof(VaRestRequestJSON_GetResponseContentLength) == 0x000004, "Wrong size on VaRestRequestJSON_GetResponseContentLength");
static_assert(offsetof(VaRestRequestJSON_GetResponseContentLength, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseContentLength::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_GetResponseObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseObject) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseObject");
static_assert(sizeof(VaRestRequestJSON_GetResponseObject) == 0x000008, "Wrong size on VaRestRequestJSON_GetResponseObject");
static_assert(offsetof(VaRestRequestJSON_GetResponseObject, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetResponseValue
// 0x0008 (0x0008 - 0x0000)
struct VaRestRequestJSON_GetResponseValue final
{
public:
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetResponseValue) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetResponseValue");
static_assert(sizeof(VaRestRequestJSON_GetResponseValue) == 0x000008, "Wrong size on VaRestRequestJSON_GetResponseValue");
static_assert(offsetof(VaRestRequestJSON_GetResponseValue, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetResponseValue::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetStatus
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_GetStatus final
{
public:
	EVaRestRequestStatus                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetStatus) == 0x000001, "Wrong alignment on VaRestRequestJSON_GetStatus");
static_assert(sizeof(VaRestRequestJSON_GetStatus) == 0x000001, "Wrong size on VaRestRequestJSON_GetStatus");
static_assert(offsetof(VaRestRequestJSON_GetStatus, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetStatus::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetUrl
// 0x0010 (0x0010 - 0x0000)
struct VaRestRequestJSON_GetUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetUrl) == 0x000008, "Wrong alignment on VaRestRequestJSON_GetUrl");
static_assert(sizeof(VaRestRequestJSON_GetUrl) == 0x000010, "Wrong size on VaRestRequestJSON_GetUrl");
static_assert(offsetof(VaRestRequestJSON_GetUrl, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetUrl::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.GetVerb
// 0x0001 (0x0001 - 0x0000)
struct VaRestRequestJSON_GetVerb final
{
public:
	EVaRestRequestVerb                            ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestRequestJSON_GetVerb) == 0x000001, "Wrong alignment on VaRestRequestJSON_GetVerb");
static_assert(sizeof(VaRestRequestJSON_GetVerb) == 0x000001, "Wrong size on VaRestRequestJSON_GetVerb");
static_assert(offsetof(VaRestRequestJSON_GetVerb, ReturnValue) == 0x000000, "Member 'VaRestRequestJSON_GetVerb::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestRequestJSON.HasTag
// 0x000C (0x000C - 0x0000)
struct VaRestRequestJSON_HasTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(VaRestRequestJSON_HasTag) == 0x000004, "Wrong alignment on VaRestRequestJSON_HasTag");
static_assert(sizeof(VaRestRequestJSON_HasTag) == 0x00000C, "Wrong size on VaRestRequestJSON_HasTag");
static_assert(offsetof(VaRestRequestJSON_HasTag, Tag) == 0x000000, "Member 'VaRestRequestJSON_HasTag::Tag' has a wrong offset!");
static_assert(offsetof(VaRestRequestJSON_HasTag, ReturnValue) == 0x000008, "Member 'VaRestRequestJSON_HasTag::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.StaticConstructVaRestJsonObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestSubsystem_StaticConstructVaRestJsonObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_StaticConstructVaRestJsonObject) == 0x000008, "Wrong alignment on VaRestSubsystem_StaticConstructVaRestJsonObject");
static_assert(sizeof(VaRestSubsystem_StaticConstructVaRestJsonObject) == 0x000008, "Wrong size on VaRestSubsystem_StaticConstructVaRestJsonObject");
static_assert(offsetof(VaRestSubsystem_StaticConstructVaRestJsonObject, ReturnValue) == 0x000000, "Member 'VaRestSubsystem_StaticConstructVaRestJsonObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.CallURL
// 0x0030 (0x0030 - 0x0000)
struct VaRestSubsystem_CallURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestRequestVerb                            Verb;                                              // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestRequestContentType                     ContentType;                                       // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      VaRestJson;                                        // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVaRestRequestJSON* Request)> Callback;                                          // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_CallURL) == 0x000008, "Wrong alignment on VaRestSubsystem_CallURL");
static_assert(sizeof(VaRestSubsystem_CallURL) == 0x000030, "Wrong size on VaRestSubsystem_CallURL");
static_assert(offsetof(VaRestSubsystem_CallURL, URL) == 0x000000, "Member 'VaRestSubsystem_CallURL::URL' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURL, Verb) == 0x000010, "Member 'VaRestSubsystem_CallURL::Verb' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURL, ContentType) == 0x000011, "Member 'VaRestSubsystem_CallURL::ContentType' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURL, VaRestJson) == 0x000018, "Member 'VaRestSubsystem_CallURL::VaRestJson' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURL, Callback) == 0x000020, "Member 'VaRestSubsystem_CallURL::Callback' has a wrong offset!");

// Function VaRest.VaRestSubsystem.CallURLCustomVerb
// 0x0068 (0x0068 - 0x0000)
struct VaRestSubsystem_CallURLCustomVerb final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestRequestVerb                            Verb;                                              // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomVerb;                                        // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdditionalHeader;                                  // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AdditionalHeaderValue;                             // 0x0038(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestRequestContentType                     ContentType;                                       // 0x0048(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      VaRestJson;                                        // 0x0050(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UVaRestRequestJSON* Request)> Callback;                                          // 0x0058(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_CallURLCustomVerb) == 0x000008, "Wrong alignment on VaRestSubsystem_CallURLCustomVerb");
static_assert(sizeof(VaRestSubsystem_CallURLCustomVerb) == 0x000068, "Wrong size on VaRestSubsystem_CallURLCustomVerb");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, URL) == 0x000000, "Member 'VaRestSubsystem_CallURLCustomVerb::URL' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, Verb) == 0x000010, "Member 'VaRestSubsystem_CallURLCustomVerb::Verb' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, CustomVerb) == 0x000018, "Member 'VaRestSubsystem_CallURLCustomVerb::CustomVerb' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, AdditionalHeader) == 0x000028, "Member 'VaRestSubsystem_CallURLCustomVerb::AdditionalHeader' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, AdditionalHeaderValue) == 0x000038, "Member 'VaRestSubsystem_CallURLCustomVerb::AdditionalHeaderValue' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, ContentType) == 0x000048, "Member 'VaRestSubsystem_CallURLCustomVerb::ContentType' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, VaRestJson) == 0x000050, "Member 'VaRestSubsystem_CallURLCustomVerb::VaRestJson' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_CallURLCustomVerb, Callback) == 0x000058, "Member 'VaRestSubsystem_CallURLCustomVerb::Callback' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructJsonValueArray
// 0x0018 (0x0018 - 0x0000)
struct VaRestSubsystem_ConstructJsonValueArray final
{
public:
	TArray<class UVaRestJsonValue*>               InArray;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructJsonValueArray) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructJsonValueArray");
static_assert(sizeof(VaRestSubsystem_ConstructJsonValueArray) == 0x000018, "Wrong size on VaRestSubsystem_ConstructJsonValueArray");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueArray, InArray) == 0x000000, "Member 'VaRestSubsystem_ConstructJsonValueArray::InArray' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueArray, ReturnValue) == 0x000010, "Member 'VaRestSubsystem_ConstructJsonValueArray::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructJsonValueBool
// 0x0010 (0x0010 - 0x0000)
struct VaRestSubsystem_ConstructJsonValueBool final
{
public:
	bool                                          InValue;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructJsonValueBool) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructJsonValueBool");
static_assert(sizeof(VaRestSubsystem_ConstructJsonValueBool) == 0x000010, "Wrong size on VaRestSubsystem_ConstructJsonValueBool");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueBool, InValue) == 0x000000, "Member 'VaRestSubsystem_ConstructJsonValueBool::InValue' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueBool, ReturnValue) == 0x000008, "Member 'VaRestSubsystem_ConstructJsonValueBool::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructJsonValueNumber
// 0x0010 (0x0010 - 0x0000)
struct VaRestSubsystem_ConstructJsonValueNumber final
{
public:
	float                                         Number;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructJsonValueNumber) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructJsonValueNumber");
static_assert(sizeof(VaRestSubsystem_ConstructJsonValueNumber) == 0x000010, "Wrong size on VaRestSubsystem_ConstructJsonValueNumber");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueNumber, Number) == 0x000000, "Member 'VaRestSubsystem_ConstructJsonValueNumber::Number' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueNumber, ReturnValue) == 0x000008, "Member 'VaRestSubsystem_ConstructJsonValueNumber::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructJsonValueObject
// 0x0010 (0x0010 - 0x0000)
struct VaRestSubsystem_ConstructJsonValueObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructJsonValueObject) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructJsonValueObject");
static_assert(sizeof(VaRestSubsystem_ConstructJsonValueObject) == 0x000010, "Wrong size on VaRestSubsystem_ConstructJsonValueObject");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueObject, JsonObject) == 0x000000, "Member 'VaRestSubsystem_ConstructJsonValueObject::JsonObject' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueObject, ReturnValue) == 0x000008, "Member 'VaRestSubsystem_ConstructJsonValueObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructJsonValueString
// 0x0018 (0x0018 - 0x0000)
struct VaRestSubsystem_ConstructJsonValueString final
{
public:
	class FString                                 StringValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructJsonValueString) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructJsonValueString");
static_assert(sizeof(VaRestSubsystem_ConstructJsonValueString) == 0x000018, "Wrong size on VaRestSubsystem_ConstructJsonValueString");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueString, StringValue) == 0x000000, "Member 'VaRestSubsystem_ConstructJsonValueString::StringValue' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructJsonValueString, ReturnValue) == 0x000010, "Member 'VaRestSubsystem_ConstructJsonValueString::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructVaRestJsonObject
// 0x0008 (0x0008 - 0x0000)
struct VaRestSubsystem_ConstructVaRestJsonObject final
{
public:
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructVaRestJsonObject) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructVaRestJsonObject");
static_assert(sizeof(VaRestSubsystem_ConstructVaRestJsonObject) == 0x000008, "Wrong size on VaRestSubsystem_ConstructVaRestJsonObject");
static_assert(offsetof(VaRestSubsystem_ConstructVaRestJsonObject, ReturnValue) == 0x000000, "Member 'VaRestSubsystem_ConstructVaRestJsonObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructVaRestRequest
// 0x0008 (0x0008 - 0x0000)
struct VaRestSubsystem_ConstructVaRestRequest final
{
public:
	class UVaRestRequestJSON*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructVaRestRequest) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructVaRestRequest");
static_assert(sizeof(VaRestSubsystem_ConstructVaRestRequest) == 0x000008, "Wrong size on VaRestSubsystem_ConstructVaRestRequest");
static_assert(offsetof(VaRestSubsystem_ConstructVaRestRequest, ReturnValue) == 0x000000, "Member 'VaRestSubsystem_ConstructVaRestRequest::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.ConstructVaRestRequestExt
// 0x0010 (0x0010 - 0x0000)
struct VaRestSubsystem_ConstructVaRestRequestExt final
{
public:
	EVaRestRequestVerb                            Verb;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVaRestRequestContentType                     ContentType;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_ConstructVaRestRequestExt) == 0x000008, "Wrong alignment on VaRestSubsystem_ConstructVaRestRequestExt");
static_assert(sizeof(VaRestSubsystem_ConstructVaRestRequestExt) == 0x000010, "Wrong size on VaRestSubsystem_ConstructVaRestRequestExt");
static_assert(offsetof(VaRestSubsystem_ConstructVaRestRequestExt, Verb) == 0x000000, "Member 'VaRestSubsystem_ConstructVaRestRequestExt::Verb' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructVaRestRequestExt, ContentType) == 0x000001, "Member 'VaRestSubsystem_ConstructVaRestRequestExt::ContentType' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_ConstructVaRestRequestExt, ReturnValue) == 0x000008, "Member 'VaRestSubsystem_ConstructVaRestRequestExt::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.DecodeJsonObject
// 0x0018 (0x0018 - 0x0000)
struct VaRestSubsystem_DecodeJsonObject final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_DecodeJsonObject) == 0x000008, "Wrong alignment on VaRestSubsystem_DecodeJsonObject");
static_assert(sizeof(VaRestSubsystem_DecodeJsonObject) == 0x000018, "Wrong size on VaRestSubsystem_DecodeJsonObject");
static_assert(offsetof(VaRestSubsystem_DecodeJsonObject, JsonString) == 0x000000, "Member 'VaRestSubsystem_DecodeJsonObject::JsonString' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_DecodeJsonObject, ReturnValue) == 0x000010, "Member 'VaRestSubsystem_DecodeJsonObject::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.DecodeJsonValue
// 0x0018 (0x0018 - 0x0000)
struct VaRestSubsystem_DecodeJsonValue final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVaRestJsonValue*                       ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_DecodeJsonValue) == 0x000008, "Wrong alignment on VaRestSubsystem_DecodeJsonValue");
static_assert(sizeof(VaRestSubsystem_DecodeJsonValue) == 0x000018, "Wrong size on VaRestSubsystem_DecodeJsonValue");
static_assert(offsetof(VaRestSubsystem_DecodeJsonValue, JsonString) == 0x000000, "Member 'VaRestSubsystem_DecodeJsonValue::JsonString' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_DecodeJsonValue, ReturnValue) == 0x000010, "Member 'VaRestSubsystem_DecodeJsonValue::ReturnValue' has a wrong offset!");

// Function VaRest.VaRestSubsystem.LoadJsonFromFile
// 0x0020 (0x0020 - 0x0000)
struct VaRestSubsystem_LoadJsonFromFile final
{
public:
	class FString                                 Path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsRelativeToContentDir;                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestJsonObject*                      ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(VaRestSubsystem_LoadJsonFromFile) == 0x000008, "Wrong alignment on VaRestSubsystem_LoadJsonFromFile");
static_assert(sizeof(VaRestSubsystem_LoadJsonFromFile) == 0x000020, "Wrong size on VaRestSubsystem_LoadJsonFromFile");
static_assert(offsetof(VaRestSubsystem_LoadJsonFromFile, Path) == 0x000000, "Member 'VaRestSubsystem_LoadJsonFromFile::Path' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_LoadJsonFromFile, bIsRelativeToContentDir) == 0x000010, "Member 'VaRestSubsystem_LoadJsonFromFile::bIsRelativeToContentDir' has a wrong offset!");
static_assert(offsetof(VaRestSubsystem_LoadJsonFromFile, ReturnValue) == 0x000018, "Member 'VaRestSubsystem_LoadJsonFromFile::ReturnValue' has a wrong offset!");

}

