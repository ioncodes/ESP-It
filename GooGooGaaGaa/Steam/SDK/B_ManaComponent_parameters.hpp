#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ManaComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_ManaComponent.B_ManaComponent_C.InitializeRules
// 0x0018 (0x0018 - 0x0000)
struct B_ManaComponent_C_InitializeRules final
{
public:
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_InitializeRules) == 0x000008, "Wrong alignment on B_ManaComponent_C_InitializeRules");
static_assert(sizeof(B_ManaComponent_C_InitializeRules) == 0x000018, "Wrong size on B_ManaComponent_C_InitializeRules");
static_assert(offsetof(B_ManaComponent_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_ManaComponent_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_InitializeRules, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_InitializeRules::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_InitializeRules, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'B_ManaComponent_C_InitializeRules::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.ConsumeMana
// 0x0010 (0x0010 - 0x0000)
struct B_ManaComponent_C_ConsumeMana final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_ConsumeMana) == 0x000008, "Wrong alignment on B_ManaComponent_C_ConsumeMana");
static_assert(sizeof(B_ManaComponent_C_ConsumeMana) == 0x000010, "Wrong size on B_ManaComponent_C_ConsumeMana");
static_assert(offsetof(B_ManaComponent_C_ConsumeMana, Amount) == 0x000000, "Member 'B_ManaComponent_C_ConsumeMana::Amount' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ConsumeMana, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_ConsumeMana::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.TickManaRegen
// 0x0020 (0x0020 - 0x0000)
struct B_ManaComponent_C_TickManaRegen final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_TickManaRegen) == 0x000008, "Wrong alignment on B_ManaComponent_C_TickManaRegen");
static_assert(sizeof(B_ManaComponent_C_TickManaRegen) == 0x000020, "Wrong size on B_ManaComponent_C_TickManaRegen");
static_assert(offsetof(B_ManaComponent_C_TickManaRegen, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'B_ManaComponent_C_TickManaRegen::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_TickManaRegen, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_TickManaRegen::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_TickManaRegen, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_ManaComponent_C_TickManaRegen::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_TickManaRegen, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'B_ManaComponent_C_TickManaRegen::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.SetCurrentManaRegenPerSecond
// 0x0008 (0x0008 - 0x0000)
struct B_ManaComponent_C_SetCurrentManaRegenPerSecond final
{
public:
	double                                        NewManaRegenPerSecond;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_SetCurrentManaRegenPerSecond) == 0x000008, "Wrong alignment on B_ManaComponent_C_SetCurrentManaRegenPerSecond");
static_assert(sizeof(B_ManaComponent_C_SetCurrentManaRegenPerSecond) == 0x000008, "Wrong size on B_ManaComponent_C_SetCurrentManaRegenPerSecond");
static_assert(offsetof(B_ManaComponent_C_SetCurrentManaRegenPerSecond, NewManaRegenPerSecond) == 0x000000, "Member 'B_ManaComponent_C_SetCurrentManaRegenPerSecond::NewManaRegenPerSecond' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.SetCurrentMana
// 0x0010 (0x0010 - 0x0000)
struct B_ManaComponent_C_SetCurrentMana final
{
public:
	double                                        CurrentMana_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_SetCurrentMana) == 0x000008, "Wrong alignment on B_ManaComponent_C_SetCurrentMana");
static_assert(sizeof(B_ManaComponent_C_SetCurrentMana) == 0x000010, "Wrong size on B_ManaComponent_C_SetCurrentMana");
static_assert(offsetof(B_ManaComponent_C_SetCurrentMana, CurrentMana_0) == 0x000000, "Member 'B_ManaComponent_C_SetCurrentMana::CurrentMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_SetCurrentMana, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_SetCurrentMana::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.SetMaximumMana
// 0x0010 (0x0010 - 0x0000)
struct B_ManaComponent_C_SetMaximumMana final
{
public:
	double                                        MaximumMana_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_SetMaximumMana) == 0x000008, "Wrong alignment on B_ManaComponent_C_SetMaximumMana");
static_assert(sizeof(B_ManaComponent_C_SetMaximumMana) == 0x000010, "Wrong size on B_ManaComponent_C_SetMaximumMana");
static_assert(offsetof(B_ManaComponent_C_SetMaximumMana, MaximumMana_0) == 0x000000, "Member 'B_ManaComponent_C_SetMaximumMana::MaximumMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_SetMaximumMana, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_SetMaximumMana::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.GetValues
// 0x0018 (0x0018 - 0x0000)
struct B_ManaComponent_C_GetValues final
{
public:
	double                                        MaximumMana_0;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMana_0;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentManaRegenPerSecond_0;                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_GetValues) == 0x000008, "Wrong alignment on B_ManaComponent_C_GetValues");
static_assert(sizeof(B_ManaComponent_C_GetValues) == 0x000018, "Wrong size on B_ManaComponent_C_GetValues");
static_assert(offsetof(B_ManaComponent_C_GetValues, MaximumMana_0) == 0x000000, "Member 'B_ManaComponent_C_GetValues::MaximumMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_GetValues, CurrentMana_0) == 0x000008, "Member 'B_ManaComponent_C_GetValues::CurrentMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_GetValues, CurrentManaRegenPerSecond_0) == 0x000010, "Member 'B_ManaComponent_C_GetValues::CurrentManaRegenPerSecond_0' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.SetValues
// 0x0018 (0x0018 - 0x0000)
struct B_ManaComponent_C_SetValues final
{
public:
	double                                        MaximumMana_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMana_0;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentManaRegenPerSecond_0;                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_SetValues) == 0x000008, "Wrong alignment on B_ManaComponent_C_SetValues");
static_assert(sizeof(B_ManaComponent_C_SetValues) == 0x000018, "Wrong size on B_ManaComponent_C_SetValues");
static_assert(offsetof(B_ManaComponent_C_SetValues, MaximumMana_0) == 0x000000, "Member 'B_ManaComponent_C_SetValues::MaximumMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_SetValues, CurrentMana_0) == 0x000008, "Member 'B_ManaComponent_C_SetValues::CurrentMana_0' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_SetValues, CurrentManaRegenPerSecond_0) == 0x000010, "Member 'B_ManaComponent_C_SetValues::CurrentManaRegenPerSecond_0' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.ApplyCurrentBuffs
// 0x0068 (0x0068 - 0x0000)
struct B_ManaComponent_C_ApplyCurrentBuffs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Buff_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_BuffWitchManaBoost_C*                K2Node_DynamicCast_AsB_Buff_Witch_Mana_Boost;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_ApplyCurrentBuffs) == 0x000008, "Wrong alignment on B_ManaComponent_C_ApplyCurrentBuffs");
static_assert(sizeof(B_ManaComponent_C_ApplyCurrentBuffs) == 0x000068, "Wrong size on B_ManaComponent_C_ApplyCurrentBuffs");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_AsPawn) == 0x000020, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_AsB_Player_State) == 0x000038, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_AsB_Buff_Witch_Mana_Boost) == 0x000058, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_AsB_Buff_Witch_Mana_Boost' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ApplyCurrentBuffs, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'B_ManaComponent_C_ApplyCurrentBuffs::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ManaComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ManaComponent_C_ReceiveTick");
static_assert(sizeof(B_ManaComponent_C_ReceiveTick) == 0x000004, "Wrong size on B_ManaComponent_C_ReceiveTick");
static_assert(offsetof(B_ManaComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ManaComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ManaComponent.B_ManaComponent_C.ExecuteUbergraph_B_ManaComponent
// 0x0020 (0x0020 - 0x0000)
struct B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent) == 0x000008, "Wrong alignment on B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent");
static_assert(sizeof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent) == 0x000020, "Wrong size on B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent");
static_assert(offsetof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent, EntryPoint) == 0x000000, "Member 'B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'B_ManaComponent_C_ExecuteUbergraph_B_ManaComponent::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

}

