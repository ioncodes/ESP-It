#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Events

#include "Basic.hpp"

#include "MasterServerPlugin_structs.hpp"
#include "SNeededIngredient_structs.hpp"


namespace SDK::Params
{

// Function BFL_Events.BFL_Events_C.AreAllIngredientsFound
// 0x0050 (0x0050 - 0x0000)
struct BFL_Events_C_AreAllIngredientsFound final
{
public:
	TArray<struct FSNeededIngredient>             NeededIngredients;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 IngredientCounters;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundIngredients;                                 // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSNeededIngredient                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Events_C_AreAllIngredientsFound) == 0x000008, "Wrong alignment on BFL_Events_C_AreAllIngredientsFound");
static_assert(sizeof(BFL_Events_C_AreAllIngredientsFound) == 0x000050, "Wrong size on BFL_Events_C_AreAllIngredientsFound");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, NeededIngredients) == 0x000000, "Member 'BFL_Events_C_AreAllIngredientsFound::NeededIngredients' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, IngredientCounters) == 0x000010, "Member 'BFL_Events_C_AreAllIngredientsFound::IngredientCounters' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, __WorldContext) == 0x000020, "Member 'BFL_Events_C_AreAllIngredientsFound::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, ReturnValue) == 0x000028, "Member 'BFL_Events_C_AreAllIngredientsFound::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, bFoundIngredients) == 0x000029, "Member 'BFL_Events_C_AreAllIngredientsFound::bFoundIngredients' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BFL_Events_C_AreAllIngredientsFound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BFL_Events_C_AreAllIngredientsFound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Array_Get_Item) == 0x000038, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_AreAllIngredientsFound, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BFL_Events_C_AreAllIngredientsFound::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BFL_Events.BFL_Events_C.FillIngredientsArray
// 0x00D8 (0x00D8 - 0x0000)
struct BFL_Events_C_FillIngredientsArray final
{
public:
	TArray<struct FBlueprintOnlineItem>           AllItems;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSNeededIngredient>             NeededIngredients;                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBlueprintOnlineItem>           IngredientsArrayRef;                               // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlacklistedIndex;                                 // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 BlacklistedIndices;                                // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentIngredientIndex;                            // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 IngredientCounters;                                // 0x0058(0x0010)(Edit, BlueprintVisible)
	struct FBlueprintOnlineItem                   CurrentItem;                                       // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CurrentIndex;                                      // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemDefinitionId_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSNeededIngredient                     CallFunc_Array_Get_Item_1;                         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintOnlineItem                   CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAllIngredientsFound_ReturnValue;       // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Events_C_FillIngredientsArray) == 0x000008, "Wrong alignment on BFL_Events_C_FillIngredientsArray");
static_assert(sizeof(BFL_Events_C_FillIngredientsArray) == 0x0000D8, "Wrong size on BFL_Events_C_FillIngredientsArray");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, AllItems) == 0x000000, "Member 'BFL_Events_C_FillIngredientsArray::AllItems' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, NeededIngredients) == 0x000010, "Member 'BFL_Events_C_FillIngredientsArray::NeededIngredients' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, IngredientsArrayRef) == 0x000020, "Member 'BFL_Events_C_FillIngredientsArray::IngredientsArrayRef' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, __WorldContext) == 0x000030, "Member 'BFL_Events_C_FillIngredientsArray::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, bBlacklistedIndex) == 0x000038, "Member 'BFL_Events_C_FillIngredientsArray::bBlacklistedIndex' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, BlacklistedIndices) == 0x000040, "Member 'BFL_Events_C_FillIngredientsArray::BlacklistedIndices' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CurrentIngredientIndex) == 0x000050, "Member 'BFL_Events_C_FillIngredientsArray::CurrentIngredientIndex' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, IngredientCounters) == 0x000058, "Member 'BFL_Events_C_FillIngredientsArray::IngredientCounters' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CurrentItem) == 0x000068, "Member 'BFL_Events_C_FillIngredientsArray::CurrentItem' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CurrentIndex) == 0x000078, "Member 'BFL_Events_C_FillIngredientsArray::CurrentIndex' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, Temp_int_Variable) == 0x00007C, "Member 'BFL_Events_C_FillIngredientsArray::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BFL_Events_C_FillIngredientsArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BFL_Events_C_FillIngredientsArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BFL_Events_C_FillIngredientsArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Get_Item) == 0x000090, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_GetItemDefinitionId_ReturnValue) == 0x000094, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_GetItemDefinitionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Get_Item_1) == 0x00009C, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_BooleanAND_ReturnValue) == 0x0000AA, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BFL_Events_C_FillIngredientsArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D4, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_FillIngredientsArray, CallFunc_AreAllIngredientsFound_ReturnValue) == 0x0000D5, "Member 'BFL_Events_C_FillIngredientsArray::CallFunc_AreAllIngredientsFound_ReturnValue' has a wrong offset!");

// Function BFL_Events.BFL_Events_C.InitIngredientCounters
// 0x0048 (0x0048 - 0x0000)
struct BFL_Events_C_InitIngredientCounters final
{
public:
	TArray<int32>                                 IngredientCountersRef;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSNeededIngredient>             NeededIngredients;                                 // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Events_C_InitIngredientCounters) == 0x000008, "Wrong alignment on BFL_Events_C_InitIngredientCounters");
static_assert(sizeof(BFL_Events_C_InitIngredientCounters) == 0x000048, "Wrong size on BFL_Events_C_InitIngredientCounters");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, IngredientCountersRef) == 0x000000, "Member 'BFL_Events_C_InitIngredientCounters::IngredientCountersRef' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, NeededIngredients) == 0x000010, "Member 'BFL_Events_C_InitIngredientCounters::NeededIngredients' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, __WorldContext) == 0x000020, "Member 'BFL_Events_C_InitIngredientCounters::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, Temp_int_Variable) == 0x000028, "Member 'BFL_Events_C_InitIngredientCounters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BFL_Events_C_InitIngredientCounters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BFL_Events_C_InitIngredientCounters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BFL_Events_C_InitIngredientCounters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BFL_Events_C_InitIngredientCounters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, Temp_int_Variable_1) == 0x00003C, "Member 'BFL_Events_C_InitIngredientCounters::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_InitIngredientCounters, CallFunc_Array_Add_ReturnValue) == 0x000040, "Member 'BFL_Events_C_InitIngredientCounters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BFL_Events.BFL_Events_C.WasUsedAsIngredient
// 0x0060 (0x0060 - 0x0000)
struct BFL_Events_C_WasUsedAsIngredient final
{
public:
	TArray<struct FBlueprintOnlineItem>           Ingredients;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FBlueprintOnlineItem                   Item;                                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIngredient;                                       // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemDefinitionId_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintOnlineItem                   CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetItemDefinitionId_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Events_C_WasUsedAsIngredient) == 0x000008, "Wrong alignment on BFL_Events_C_WasUsedAsIngredient");
static_assert(sizeof(BFL_Events_C_WasUsedAsIngredient) == 0x000060, "Wrong size on BFL_Events_C_WasUsedAsIngredient");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, Ingredients) == 0x000000, "Member 'BFL_Events_C_WasUsedAsIngredient::Ingredients' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, Item) == 0x000010, "Member 'BFL_Events_C_WasUsedAsIngredient::Item' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, __WorldContext) == 0x000020, "Member 'BFL_Events_C_WasUsedAsIngredient::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, ReturnValue) == 0x000028, "Member 'BFL_Events_C_WasUsedAsIngredient::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, bIngredient) == 0x000029, "Member 'BFL_Events_C_WasUsedAsIngredient::bIngredient' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_GetItemDefinitionId_ReturnValue) == 0x00002C, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_GetItemDefinitionId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BFL_Events_C_WasUsedAsIngredient::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BFL_Events_C_WasUsedAsIngredient::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_Array_Get_Item) == 0x000040, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_GetItemDefinitionId_ReturnValue_1) == 0x000050, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_GetItemDefinitionId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000055, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Events_C_WasUsedAsIngredient, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BFL_Events_C_WasUsedAsIngredient::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

