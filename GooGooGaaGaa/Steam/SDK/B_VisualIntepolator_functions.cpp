#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_VisualIntepolator

#include "Basic.hpp"

#include "B_VisualIntepolator_classes.hpp"
#include "B_VisualIntepolator_parameters.hpp"


namespace SDK
{

// Function B_VisualIntepolator.B_VisualIntepolator_C.ExecuteUbergraph_B_VisualIntepolator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_VisualIntepolator_C::ExecuteUbergraph_B_VisualIntepolator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "ExecuteUbergraph_B_VisualIntepolator");

	Params::B_VisualIntepolator_C_ExecuteUbergraph_B_VisualIntepolator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_VisualIntepolator.B_VisualIntepolator_C.GetTargetTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_VisualIntepolator_C::GetTargetTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "GetTargetTransform");

	Params::B_VisualIntepolator_C_GetTargetTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_VisualIntepolator.B_VisualIntepolator_C.Interpolate
// (Public, BlueprintCallable, BlueprintEvent)

void AB_VisualIntepolator_C::Interpolate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "Interpolate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_VisualIntepolator.B_VisualIntepolator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_VisualIntepolator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_VisualIntepolator.B_VisualIntepolator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_VisualIntepolator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "ReceiveTick");

	Params::B_VisualIntepolator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_VisualIntepolator.B_VisualIntepolator_C.UpdateInterpolation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_VisualIntepolator_C::UpdateInterpolation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_VisualIntepolator_C", "UpdateInterpolation");

	UObject::ProcessEvent(Func, nullptr);
}

}

