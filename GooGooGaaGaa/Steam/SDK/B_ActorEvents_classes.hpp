#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ActorEvents

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ActorEvents.B_ActorEvents_C
// 0x00B0 (0x0150 - 0x00A0)
class UB_ActorEvents_C final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnTakeDamage;                                      // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnKilled;                                          // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTakePointDamage;                                 // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnTakeAnyDamage;                                   // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGotCup;                                          // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDispelDebuffStart;                               // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnDispelDebuffEnd;                                 // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnApplySlow;                                       // 0x0110(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnExpireSlow;                                      // 0x0120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnManaDrainDebuffStart;                            // 0x0130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnManaDrainDebuffEnd;                              // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnApplySlow__DelegateSignature();
	void OnDispelDebuffEnd__DelegateSignature();
	void OnDispelDebuffStart__DelegateSignature();
	void OnExpireSlow__DelegateSignature();
	void OnGotCup__DelegateSignature();
	void OnKilled__DelegateSignature(class AController* Killer);
	void OnManaDrainDebuffEnd__DelegateSignature();
	void OnManaDrainDebuffStart__DelegateSignature();
	void OnTakeAnyDamage__DelegateSignature(class AController* Causer);
	void OnTakeDamage__DelegateSignature(class AController* Causer);
	void OnTakePointDamage__DelegateSignature(const struct FVector& HitLocation, const struct FVector& HitDirection, class AController* Causer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ActorEvents_C">();
	}
	static class UB_ActorEvents_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ActorEvents_C>();
	}
};
static_assert(alignof(UB_ActorEvents_C) == 0x000008, "Wrong alignment on UB_ActorEvents_C");
static_assert(sizeof(UB_ActorEvents_C) == 0x000150, "Wrong size on UB_ActorEvents_C");
static_assert(offsetof(UB_ActorEvents_C, OnTakeDamage) == 0x0000A0, "Member 'UB_ActorEvents_C::OnTakeDamage' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnKilled) == 0x0000B0, "Member 'UB_ActorEvents_C::OnKilled' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnTakePointDamage) == 0x0000C0, "Member 'UB_ActorEvents_C::OnTakePointDamage' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnTakeAnyDamage) == 0x0000D0, "Member 'UB_ActorEvents_C::OnTakeAnyDamage' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnGotCup) == 0x0000E0, "Member 'UB_ActorEvents_C::OnGotCup' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnDispelDebuffStart) == 0x0000F0, "Member 'UB_ActorEvents_C::OnDispelDebuffStart' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnDispelDebuffEnd) == 0x000100, "Member 'UB_ActorEvents_C::OnDispelDebuffEnd' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnApplySlow) == 0x000110, "Member 'UB_ActorEvents_C::OnApplySlow' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnExpireSlow) == 0x000120, "Member 'UB_ActorEvents_C::OnExpireSlow' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnManaDrainDebuffStart) == 0x000130, "Member 'UB_ActorEvents_C::OnManaDrainDebuffStart' has a wrong offset!");
static_assert(offsetof(UB_ActorEvents_C, OnManaDrainDebuffEnd) == 0x000140, "Member 'UB_ActorEvents_C::OnManaDrainDebuffEnd' has a wrong offset!");

}

