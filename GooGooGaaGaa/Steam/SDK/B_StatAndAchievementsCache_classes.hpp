#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_StatAndAchievementsCache

#include "Basic.hpp"

#include "S_Stat_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "E_StatSetBy_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_StatAndAchievementsCache.B_StatAndAchievementsCache_C
// 0x0010 (0x0038 - 0x0028)
class UB_StatAndAchievementsCache_C final : public UObject
{
public:
	TArray<struct FS_Stat>                        Cache;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GetAllStats(TArray<struct FS_Stat>* ResultData);
	void GetStatsBySetByType(E_StatSetBy SetByFilter, TArray<struct FS_Stat>* ResultData);
	void HasStat(const class FString& StatName, bool* Result, int32* IndexInListIfFound);
	void SetStat(const class FString& StatName, int64 Value, E_StatSetBy SetBy, const struct FDateTime& AchievementGrantDateTime, bool bIsHidden);

	void GetCount(int32* Result) const;
	void GetStat(const class FString& StatName, int64* Value, bool* WasFound, int32* IndexInList, struct FDateTime* AchievementDateTime, bool* bIsHidden) const;
	void PrintCache() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_StatAndAchievementsCache_C">();
	}
	static class UB_StatAndAchievementsCache_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_StatAndAchievementsCache_C>();
	}
};
static_assert(alignof(UB_StatAndAchievementsCache_C) == 0x000008, "Wrong alignment on UB_StatAndAchievementsCache_C");
static_assert(sizeof(UB_StatAndAchievementsCache_C) == 0x000038, "Wrong size on UB_StatAndAchievementsCache_C");
static_assert(offsetof(UB_StatAndAchievementsCache_C, Cache) == 0x000028, "Member 'UB_StatAndAchievementsCache_C::Cache' has a wrong offset!");

}

