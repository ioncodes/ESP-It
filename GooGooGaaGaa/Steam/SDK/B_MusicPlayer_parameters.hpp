#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MusicPlayer

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_MusicPlayer.B_MusicPlayer_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_MusicPlayer_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MusicPlayer_C_ReceiveTick) == 0x000004, "Wrong alignment on B_MusicPlayer_C_ReceiveTick");
static_assert(sizeof(B_MusicPlayer_C_ReceiveTick) == 0x000004, "Wrong size on B_MusicPlayer_C_ReceiveTick");
static_assert(offsetof(B_MusicPlayer_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_MusicPlayer_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_MusicPlayer.B_MusicPlayer_C.ExecuteUbergraph_B_MusicPlayer
// 0x0050 (0x0050 - 0x0000)
struct B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer) == 0x000008, "Wrong alignment on B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer");
static_assert(sizeof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer) == 0x000050, "Wrong size on B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, EntryPoint) == 0x000000, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x000019, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_HasRoundStarted_RoundHasStarted) == 0x00001A, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001B, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00001C, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_IsDedicatedServer_ReturnValue) == 0x000039, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003B, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00003C, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00003D, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00003F, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_BooleanOR_ReturnValue_1) == 0x000040, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_BooleanOR_ReturnValue_2) == 0x000041, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x000044, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1) == 0x000048, "Member 'B_MusicPlayer_C_ExecuteUbergraph_B_MusicPlayer::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast_1' has a wrong offset!");

}

