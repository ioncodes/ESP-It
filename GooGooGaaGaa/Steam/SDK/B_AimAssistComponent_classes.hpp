#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AimAssistComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_AimAssistComponent.B_AimAssistComponent_C
// 0x0110 (0x01B0 - 0x00A0)
class UB_AimAssistComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AB_PlayerController_C*                  PlayerController;                                  // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastControllRotation;                              // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        FindTargetDistance;                                // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_AimAssistActor_C*                    CurrentAimAssistActor;                             // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CurrentAimAssistComponent;                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypesToTrace;                                // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          DisconnectedFromTarget;                            // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DisconnectedFromTargetTime;                        // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SecondsUntilAimLoose;                              // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpolationSpeed;                                // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastAimTargetLocation;                             // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentAimTargetLocation;                          // 0x0130(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ExceededAimDistanceThreshold;                      // 0x0148(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputWhileAssisting;                               // 0x0149(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AimAssistActorInterpolationSpeed;                  // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAimAssistActorInterpolationSpeed;           // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentAssistInfluence;                            // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalSpaceControlRotation;                         // 0x0168(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        KeepInfluenceTime;                                 // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DisconnectedFromTargetDecreaseInfluenceSpeed;      // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NoStickInputDecreaseInfluenceSpeed;                // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StickInputIncreaseInfluenceSpeed;                  // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentKeepInfluenceTime;                          // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SettingsSave_C*                      SettingsSave;                                      // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DevModeValueChanged(class FName SettingName, float Value);
	void InitializeDevModeDefaultValues();
	bool IsCurrentAimTargetVisible();
	struct FRotator GetCurrentRayRotation();
	void AddControllerInput(class APawn* Pawn, double AxisValue, bool IsYawInput);
	bool IsWitchActorMoving(class AActor* Actor);
	void DestroyAssistsActor();
	void TickFunction();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_B_AimAssistComponent(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_AimAssistComponent_C">();
	}
	static class UB_AimAssistComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_AimAssistComponent_C>();
	}
};
static_assert(alignof(UB_AimAssistComponent_C) == 0x000008, "Wrong alignment on UB_AimAssistComponent_C");
static_assert(sizeof(UB_AimAssistComponent_C) == 0x0001B0, "Wrong size on UB_AimAssistComponent_C");
static_assert(offsetof(UB_AimAssistComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UB_AimAssistComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, PlayerController) == 0x0000A8, "Member 'UB_AimAssistComponent_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, PlayerState) == 0x0000B0, "Member 'UB_AimAssistComponent_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, LastControllRotation) == 0x0000B8, "Member 'UB_AimAssistComponent_C::LastControllRotation' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, FindTargetDistance) == 0x0000D0, "Member 'UB_AimAssistComponent_C::FindTargetDistance' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentAimAssistActor) == 0x0000D8, "Member 'UB_AimAssistComponent_C::CurrentAimAssistActor' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentAimAssistComponent) == 0x0000E0, "Member 'UB_AimAssistComponent_C::CurrentAimAssistComponent' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, ObjectTypesToTrace) == 0x0000E8, "Member 'UB_AimAssistComponent_C::ObjectTypesToTrace' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, DisconnectedFromTarget) == 0x0000F8, "Member 'UB_AimAssistComponent_C::DisconnectedFromTarget' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, DisconnectedFromTargetTime) == 0x000100, "Member 'UB_AimAssistComponent_C::DisconnectedFromTargetTime' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, SecondsUntilAimLoose) == 0x000108, "Member 'UB_AimAssistComponent_C::SecondsUntilAimLoose' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, InterpolationSpeed) == 0x000110, "Member 'UB_AimAssistComponent_C::InterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, LastAimTargetLocation) == 0x000118, "Member 'UB_AimAssistComponent_C::LastAimTargetLocation' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentAimTargetLocation) == 0x000130, "Member 'UB_AimAssistComponent_C::CurrentAimTargetLocation' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, ExceededAimDistanceThreshold) == 0x000148, "Member 'UB_AimAssistComponent_C::ExceededAimDistanceThreshold' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, InputWhileAssisting) == 0x000149, "Member 'UB_AimAssistComponent_C::InputWhileAssisting' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, AimAssistActorInterpolationSpeed) == 0x000150, "Member 'UB_AimAssistComponent_C::AimAssistActorInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentAimAssistActorInterpolationSpeed) == 0x000158, "Member 'UB_AimAssistComponent_C::CurrentAimAssistActorInterpolationSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentAssistInfluence) == 0x000160, "Member 'UB_AimAssistComponent_C::CurrentAssistInfluence' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, LocalSpaceControlRotation) == 0x000168, "Member 'UB_AimAssistComponent_C::LocalSpaceControlRotation' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, KeepInfluenceTime) == 0x000180, "Member 'UB_AimAssistComponent_C::KeepInfluenceTime' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, DisconnectedFromTargetDecreaseInfluenceSpeed) == 0x000188, "Member 'UB_AimAssistComponent_C::DisconnectedFromTargetDecreaseInfluenceSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, NoStickInputDecreaseInfluenceSpeed) == 0x000190, "Member 'UB_AimAssistComponent_C::NoStickInputDecreaseInfluenceSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, StickInputIncreaseInfluenceSpeed) == 0x000198, "Member 'UB_AimAssistComponent_C::StickInputIncreaseInfluenceSpeed' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, CurrentKeepInfluenceTime) == 0x0001A0, "Member 'UB_AimAssistComponent_C::CurrentKeepInfluenceTime' has a wrong offset!");
static_assert(offsetof(UB_AimAssistComponent_C, SettingsSave) == 0x0001A8, "Member 'UB_AimAssistComponent_C::SettingsSave' has a wrong offset!");

}

