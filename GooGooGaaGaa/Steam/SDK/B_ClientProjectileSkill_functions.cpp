#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ClientProjectileSkill

#include "Basic.hpp"

#include "B_ClientProjectileSkill_classes.hpp"
#include "B_ClientProjectileSkill_parameters.hpp"


namespace SDK
{

// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.ExecuteUbergraph_B_ClientProjectileSkill
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_ClientProjectileSkill_C::ExecuteUbergraph_B_ClientProjectileSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "ExecuteUbergraph_B_ClientProjectileSkill");

	Params::B_ClientProjectileSkill_C_ExecuteUbergraph_B_ClientProjectileSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.OnActivateSkillClient
// (Event, Public, BlueprintEvent)

void UB_ClientProjectileSkill_C::OnActivateSkillClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "OnActivateSkillClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.OnActivateSkillMulti
// (Event, Public, BlueprintEvent)

void UB_ClientProjectileSkill_C::OnActivateSkillMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "OnActivateSkillMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.OnActivateSkillServer
// (Event, Public, BlueprintEvent)

void UB_ClientProjectileSkill_C::OnActivateSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "OnActivateSkillServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.OnProjectileSpawned__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SpawnedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_ClientProjectileSkill_C::OnProjectileSpawned__DelegateSignature(class AActor* SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "OnProjectileSpawned__DelegateSignature");

	Params::B_ClientProjectileSkill_C_OnProjectileSpawned__DelegateSignature Parms{};

	Parms.SpawnedActor = SpawnedActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.SpawnProjectile
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_ClientProjectileSkill_C::SpawnProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "SpawnProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.SpawnProjectileMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UB_ClientProjectileSkill_C::SpawnProjectileMulti(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "SpawnProjectileMulti");

	Params::B_ClientProjectileSkill_C_SpawnProjectileMulti Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ClientProjectileSkill.B_ClientProjectileSkill_C.SpawnProjectileServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UB_ClientProjectileSkill_C::SpawnProjectileServer(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClientProjectileSkill_C", "SpawnProjectileServer");

	Params::B_ClientProjectileSkill_C_SpawnProjectileServer Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}

}

