#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PressurePlateSwitch

#include "Basic.hpp"

#include "BP_PressurePlateSwitch_classes.hpp"
#include "BP_PressurePlateSwitch_parameters.hpp"


namespace SDK
{

// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.Action
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::Action()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "Action");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.BndEvt__BP_PressurePlateSwitch_CollisionBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PressurePlateSwitch_C::BndEvt__BP_PressurePlateSwitch_CollisionBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "BndEvt__BP_PressurePlateSwitch_CollisionBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_PressurePlateSwitch_C_BndEvt__BP_PressurePlateSwitch_CollisionBox_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.Break
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::Break()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "Break");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.ExecuteUbergraph_BP_PressurePlateSwitch
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PressurePlateSwitch_C::ExecuteUbergraph_BP_PressurePlateSwitch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "ExecuteUbergraph_BP_PressurePlateSwitch");

	Params::BP_PressurePlateSwitch_C_ExecuteUbergraph_BP_PressurePlateSwitch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.PushButton
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::PushButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "PushButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.PushButtonMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::PushButtonMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "PushButtonMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.ResetButton
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::ResetButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "ResetButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.ResetButtonMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::ResetButtonMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "ResetButtonMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.ResetSelfDelayedMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::ResetSelfDelayedMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "ResetSelfDelayedMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.TestSwitchActivationCondition
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           OverlappingActor                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Activate                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PressurePlateSwitch_C::TestSwitchActivationCondition(class AActor* OverlappingActor, bool* Activate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "TestSwitchActivationCondition");

	Params::BP_PressurePlateSwitch_C_TestSwitchActivationCondition Parms{};

	Parms.OverlappingActor = OverlappingActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Activate != nullptr)
		*Activate = Parms.Activate;
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.TryToReset
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::TryToReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "TryToReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.Unbreak
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::Unbreak()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "Unbreak");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PressurePlateSwitch.BP_PressurePlateSwitch_C.UpdateActionPlacable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PressurePlateSwitch_C::UpdateActionPlacable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PressurePlateSwitch_C", "UpdateActionPlacable");

	UObject::ProcessEvent(Func, nullptr);
}

}

