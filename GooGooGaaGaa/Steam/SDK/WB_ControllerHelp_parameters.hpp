#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ControllerHelp

#include "Basic.hpp"

#include "ETeamID_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_ControllerHelp.WB_ControllerHelp_C.SetControllerImage
// 0x0004 (0x0004 - 0x0000)
struct WB_ControllerHelp_C_SetControllerImage final
{
public:
	bool                                          CallFunc_SwitchPlatform_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DesktopPlatform_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_XboxOnePlatform_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Ps4Platform_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerHelp_C_SetControllerImage) == 0x000001, "Wrong alignment on WB_ControllerHelp_C_SetControllerImage");
static_assert(sizeof(WB_ControllerHelp_C_SetControllerImage) == 0x000004, "Wrong size on WB_ControllerHelp_C_SetControllerImage");
static_assert(offsetof(WB_ControllerHelp_C_SetControllerImage, CallFunc_SwitchPlatform_ReturnValue) == 0x000000, "Member 'WB_ControllerHelp_C_SetControllerImage::CallFunc_SwitchPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_SetControllerImage, CallFunc_DesktopPlatform_ReturnValue) == 0x000001, "Member 'WB_ControllerHelp_C_SetControllerImage::CallFunc_DesktopPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_SetControllerImage, CallFunc_XboxOnePlatform_ReturnValue) == 0x000002, "Member 'WB_ControllerHelp_C_SetControllerImage::CallFunc_XboxOnePlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_SetControllerImage, CallFunc_Ps4Platform_ReturnValue) == 0x000003, "Member 'WB_ControllerHelp_C_SetControllerImage::CallFunc_Ps4Platform_ReturnValue' has a wrong offset!");

// Function WB_ControllerHelp.WB_ControllerHelp_C.UpdateScreen
// 0x00D0 (0x00D0 - 0x0000)
struct WB_ControllerHelp_C_UpdateScreen final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        K2Node_LowEntry_LocalVariable_Value__Object;       // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ControllerHelpElement_C*            K2Node_DynamicCast_AsWB_Controller_Help_Element;   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPanelWidget*>                   K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UPanelWidget*>                   K2Node_LowEntry_LocalVariable_Value__1_Object;     // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class FName>                           K2Node_Select_Default;                             // 0x0088(0x0010)(ReferenceParm)
	class UPanelWidget*                           CallFunc_Array_Get_Item_1;                         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_DynamicCast_AsPanel_Widget;                 // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerHelp_C_UpdateScreen) == 0x000008, "Wrong alignment on WB_ControllerHelp_C_UpdateScreen");
static_assert(sizeof(WB_ControllerHelp_C_UpdateScreen) == 0x0000D0, "Wrong size on WB_ControllerHelp_C_UpdateScreen");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_byte_Variable) == 0x000004, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_MakeArray_Array) == 0x000020, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_LowEntry_LocalVariable_Value__Object) == 0x000030, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_LowEntry_LocalVariable_Value__Object' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_DynamicCast_AsWB_Controller_Help_Element) == 0x000050, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_DynamicCast_AsWB_Controller_Help_Element' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, Temp_int_Variable) == 0x00005C, "Member 'WB_ControllerHelp_C_UpdateScreen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Add_IntInt_ReturnValue_2) == 0x000060, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_MakeArray_Array_1) == 0x000068, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_LowEntry_LocalVariable_Value__1_Object) == 0x000078, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_LowEntry_LocalVariable_Value__1_Object' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_Select_Default) == 0x000088, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_GetChildAt_ReturnValue) == 0x0000A0, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_GetChildrenCount_ReturnValue) == 0x0000A8, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Add_ReturnValue) == 0x0000AC, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B0, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_DynamicCast_AsPanel_Widget) == 0x0000B8, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_DynamicCast_AsPanel_Widget' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'WB_ControllerHelp_C_UpdateScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C1, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Add_ReturnValue_1) == 0x0000C4, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_UpdateScreen, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'WB_ControllerHelp_C_UpdateScreen::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_ControllerHelp.WB_ControllerHelp_C.GetInputActions
// 0x0120 (0x0120 - 0x0000)
struct WB_ControllerHelp_C_GetInputActions final
{
public:
	TArray<class FName>                           Actions;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeyBindingsForAxis_Bindings;           // 0x0050(0x0010)(ReferenceParm)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeyBindingsForAxis_Bindings_1;         // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_3;                         // 0x00F0(0x0028)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_2;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerHelp_C_GetInputActions) == 0x000008, "Wrong alignment on WB_ControllerHelp_C_GetInputActions");
static_assert(sizeof(WB_ControllerHelp_C_GetInputActions) == 0x000120, "Wrong size on WB_ControllerHelp_C_GetInputActions");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Actions) == 0x000000, "Member 'WB_ControllerHelp_C_GetInputActions::Actions' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Add_IntInt_ReturnValue_2) == 0x000034, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Loop_Counter_Variable_3) == 0x00003C, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Get_Item) == 0x000040, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_GetKeyBindingsForAxis_Bindings) == 0x000050, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_GetKeyBindingsForAxis_Bindings' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x00008D, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_GetKeyBindingsForAxis_Bindings_1) == 0x000090, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_GetKeyBindingsForAxis_Bindings_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_GetKeyBindingsForAction_Bindings) == 0x0000A0, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E0, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x0000E1, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Length_ReturnValue_3) == 0x0000E4, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E8, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, Temp_int_Array_Index_Variable_3) == 0x0000EC, "Member 'WB_ControllerHelp_C_GetInputActions::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Array_Get_Item_3) == 0x0000F0, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_GetInputActions, CallFunc_Key_IsGamepadKey_ReturnValue_2) == 0x000118, "Member 'WB_ControllerHelp_C_GetInputActions::CallFunc_Key_IsGamepadKey_ReturnValue_2' has a wrong offset!");

// Function WB_ControllerHelp.WB_ControllerHelp_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_ControllerHelp_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerHelp_C_PreConstruct) == 0x000001, "Wrong alignment on WB_ControllerHelp_C_PreConstruct");
static_assert(sizeof(WB_ControllerHelp_C_PreConstruct) == 0x000001, "Wrong size on WB_ControllerHelp_C_PreConstruct");
static_assert(offsetof(WB_ControllerHelp_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_ControllerHelp_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_ControllerHelp.WB_ControllerHelp_C.ExecuteUbergraph_WB_ControllerHelp
// 0x0008 (0x0008 - 0x0000)
struct WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp) == 0x000004, "Wrong alignment on WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp");
static_assert(sizeof(WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp) == 0x000008, "Wrong size on WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp");
static_assert(offsetof(WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp, EntryPoint) == 0x000000, "Member 'WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_ControllerHelp_C_ExecuteUbergraph_WB_ControllerHelp::K2Node_Event_IsDesignTime' has a wrong offset!");

}

