#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_UserBehaviorTrackingManager

#include "Basic.hpp"

#include "B_UserBehaviorTrackingManager_classes.hpp"
#include "B_UserBehaviorTrackingManager_parameters.hpp"


namespace SDK
{

// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.AddEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENativeUserBehaviorEventType            EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    DirectUpload                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::AddEvent(ENativeUserBehaviorEventType EventType, const class FString& EventData, bool DirectUpload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "AddEvent");

	Params::B_UserBehaviorTrackingManager_C_AddEvent Parms{};

	Parms.EventType = EventType;
	Parms.EventData = std::move(EventData);
	Parms.DirectUpload = DirectUpload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.BPTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::BPTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "BPTick");

	Params::B_UserBehaviorTrackingManager_C_BPTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.CreateJsonEventArray
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FUserBehaviorEvent>       Events                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ULowEntryJsonArray*               JsonObject                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::CreateJsonEventArray(TArray<struct FUserBehaviorEvent>& Events, class ULowEntryJsonArray** JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "CreateJsonEventArray");

	Params::B_UserBehaviorTrackingManager_C_CreateJsonEventArray Parms{};

	Parms.Events = std::move(Events);

	UObject::ProcessEvent(Func, &Parms);

	Events = std::move(Parms.Events);

	if (JsonObject != nullptr)
		*JsonObject = Parms.JsonObject;
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.CreateJsonObject
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENativeUserBehaviorEventType            EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// class ULowEntryJsonObject*              JsonObject                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::CreateJsonObject(ENativeUserBehaviorEventType& EventType, class FString& EventData, class ULowEntryJsonObject** JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "CreateJsonObject");

	Params::B_UserBehaviorTrackingManager_C_CreateJsonObject Parms{};

	Parms.EventType = EventType;
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);

	EventType = Parms.EventType;
	EventData = std::move(Parms.EventData);

	if (JsonObject != nullptr)
		*JsonObject = Parms.JsonObject;
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.CreateJsonObjectExt
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENativeUserBehaviorEventType            EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// struct FDateTime                        Timestamp                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class ULowEntryJsonObject*              JsonObject                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::CreateJsonObjectExt(ENativeUserBehaviorEventType& EventType, class FString& EventData, struct FDateTime& Timestamp, class ULowEntryJsonObject** JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "CreateJsonObjectExt");

	Params::B_UserBehaviorTrackingManager_C_CreateJsonObjectExt Parms{};

	Parms.EventType = EventType;
	Parms.EventData = std::move(EventData);
	Parms.Timestamp = std::move(Timestamp);

	UObject::ProcessEvent(Func, &Parms);

	EventType = Parms.EventType;
	EventData = std::move(Parms.EventData);
	Timestamp = std::move(Parms.Timestamp);

	if (JsonObject != nullptr)
		*JsonObject = Parms.JsonObject;
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.ExecuteUbergraph_B_UserBehaviorTrackingManager
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::ExecuteUbergraph_B_UserBehaviorTrackingManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "ExecuteUbergraph_B_UserBehaviorTrackingManager");

	Params::B_UserBehaviorTrackingManager_C_ExecuteUbergraph_B_UserBehaviorTrackingManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.HandleDidReceiveAccessToken
// (BlueprintCallable, BlueprintEvent)

void UB_UserBehaviorTrackingManager_C::HandleDidReceiveAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "HandleDidReceiveAccessToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.Init
// (BlueprintCallable, BlueprintEvent)

void UB_UserBehaviorTrackingManager_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.OnMultipleRequestComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::OnMultipleRequestComplete(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "OnMultipleRequestComplete");

	Params::B_UserBehaviorTrackingManager_C_OnMultipleRequestComplete Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.OnMultipleRequestFail
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::OnMultipleRequestFail(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "OnMultipleRequestFail");

	Params::B_UserBehaviorTrackingManager_C_OnMultipleRequestFail Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.OnRequestComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::OnRequestComplete(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "OnRequestComplete");

	Params::B_UserBehaviorTrackingManager_C_OnRequestComplete Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.OnRequestFail
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::OnRequestFail(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "OnRequestFail");

	Params::B_UserBehaviorTrackingManager_C_OnRequestFail Parms{};

	Parms.Request = Request;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.SetEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::SetEnabled(bool IsEnabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "SetEnabled");

	Params::B_UserBehaviorTrackingManager_C_SetEnabled Parms{};

	Parms.IsEnabled_0 = IsEnabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.UploadCachedEvents
// (BlueprintCallable, BlueprintEvent)

void UB_UserBehaviorTrackingManager_C::UploadCachedEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "UploadCachedEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_UserBehaviorTrackingManager.B_UserBehaviorTrackingManager_C.UploadSingleData
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_NewMasterServerManager_C*      NewMasterServerManager                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ENativeUserBehaviorEventType            EventType                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)

void UB_UserBehaviorTrackingManager_C::UploadSingleData(const class UB_NewMasterServerManager_C*& NewMasterServerManager, const ENativeUserBehaviorEventType& EventType, const class FString& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_UserBehaviorTrackingManager_C", "UploadSingleData");

	Params::B_UserBehaviorTrackingManager_C_UploadSingleData Parms{};

	Parms.NewMasterServerManager = NewMasterServerManager;
	Parms.EventType = EventType;
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}

}

