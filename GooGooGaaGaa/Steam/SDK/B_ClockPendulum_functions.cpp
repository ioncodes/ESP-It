#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ClockPendulum

#include "Basic.hpp"

#include "B_ClockPendulum_classes.hpp"
#include "B_ClockPendulum_parameters.hpp"


namespace SDK
{

// Function B_ClockPendulum.B_ClockPendulum_C.ApplyTemplateData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ForcedBoolean                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ClockPendulum_C::ApplyTemplateData(class AActor* Template, bool* ForcedBoolean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "ApplyTemplateData");

	Params::B_ClockPendulum_C_ApplyTemplateData Parms{};

	Parms.Template = Template;

	UObject::ProcessEvent(Func, &Parms);

	if (ForcedBoolean != nullptr)
		*ForcedBoolean = Parms.ForcedBoolean;
}


// Function B_ClockPendulum.B_ClockPendulum_C.ExecuteUbergraph_B_ClockPendulum
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ClockPendulum_C::ExecuteUbergraph_B_ClockPendulum(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "ExecuteUbergraph_B_ClockPendulum");

	Params::B_ClockPendulum_C_ExecuteUbergraph_B_ClockPendulum Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ClockPendulum.B_ClockPendulum_C.GetVisualInterpolators
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AB_VisualIntepolator_C*>   VisualInterpolators                                    (Parm, OutParm)

void AB_ClockPendulum_C::GetVisualInterpolators(TArray<class AB_VisualIntepolator_C*>* VisualInterpolators)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "GetVisualInterpolators");

	Params::B_ClockPendulum_C_GetVisualInterpolators Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VisualInterpolators != nullptr)
		*VisualInterpolators = std::move(Parms.VisualInterpolators);
}


// Function B_ClockPendulum.B_ClockPendulum_C.MovePendulum
// (BlueprintCallable, BlueprintEvent)

void AB_ClockPendulum_C::MovePendulum()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "MovePendulum");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClockPendulum.B_ClockPendulum_C.MovePendulumTimeline__FinishedFunc
// (BlueprintEvent)

void AB_ClockPendulum_C::MovePendulumTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "MovePendulumTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClockPendulum.B_ClockPendulum_C.MovePendulumTimeline__UpdateFunc
// (BlueprintEvent)

void AB_ClockPendulum_C::MovePendulumTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "MovePendulumTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClockPendulum.B_ClockPendulum_C.StartClock
// (BlueprintCallable, BlueprintEvent)

void AB_ClockPendulum_C::StartClock()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "StartClock");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ClockPendulum.B_ClockPendulum_C.UpdatePendulumRotation
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Roll                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ClockPendulum_C::UpdatePendulumRotation(double Roll)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ClockPendulum_C", "UpdatePendulumRotation");

	Params::B_ClockPendulum_C_UpdatePendulumRotation Parms{};

	Parms.Roll = Roll;

	UObject::ProcessEvent(Func, &Parms);
}

}

