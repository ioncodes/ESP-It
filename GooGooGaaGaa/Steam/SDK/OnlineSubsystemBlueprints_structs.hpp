#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemBlueprints

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum OnlineSubsystemBlueprints.EOnlineDataAdvertisementType_
// NumValues: 0x0005
enum class EOnlineDataAdvertisementType_ : uint8
{
	DontAdvertise                            = 0,
	ViaPingOnly                              = 1,
	ViaOnlineService                         = 2,
	ViaOnlineServiceAndPing                  = 3,
	EOnlineDataAdvertisementType_MAX         = 4,
};

// Enum OnlineSubsystemBlueprints.EOnlineKeyValuePairDataType_
// NumValues: 0x000C
enum class EOnlineKeyValuePairDataType_ : uint8
{
	Empty                                    = 0,
	Int32                                    = 1,
	UInt32_NotSupported                      = 2,
	Int64                                    = 3,
	UInt64_NotSupported                      = 4,
	Double_NotSupported                      = 5,
	String                                   = 6,
	Float                                    = 7,
	Blob_NotSupported                        = 8,
	Bool                                     = 9,
	Json_NotSupported                        = 10,
	EOnlineKeyValuePairDataType_MAX          = 11,
};

// Enum OnlineSubsystemBlueprints.EOnlineLoginStatus
// NumValues: 0x0004
enum class EOnlineLoginStatus : uint8
{
	NotLoggedIn                              = 0,
	UsingLocalProfile                        = 1,
	LoggedIn                                 = 2,
	EOnlineLoginStatus_MAX                   = 3,
};

// Enum OnlineSubsystemBlueprints.EOnlineActivityOutcome_
// NumValues: 0x0004
enum class EOnlineActivityOutcome_ : uint8
{
	Completed                                = 0,
	Failed                                   = 1,
	Cancelled                                = 2,
	EOnlineActivityOutcome_MAX               = 3,
};

// Enum OnlineSubsystemBlueprints.EOnlineUserPrivilege
// NumValues: 0x0006
enum class EOnlineUserPrivilege : uint8
{
	CanPlay                                  = 0,
	CanPlayOnline                            = 1,
	CanCommunicateOnline                     = 2,
	CanUseUserGeneratedContent               = 3,
	CanUserCrossPlay                         = 4,
	EOnlineUserPrivilege_MAX                 = 5,
};

// Enum OnlineSubsystemBlueprints.ECreatePartyCompletionResult_
// NumValues: 0x000B
enum class ECreatePartyCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	AlreadyInPartyOfSpecifiedType            = 157,
	AlreadyCreatingParty                     = 158,
	AlreadyInParty                           = 159,
	FailedToCreateMucRoom                    = 160,
	NoResponse                               = 161,
	LoggedOut                                = 162,
	NotPrimaryUser                           = 163,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	ECreatePartyCompletionResult_MAX         = 164,
};

// Enum OnlineSubsystemBlueprints.EJoinPartyCompletionResult_
// NumValues: 0x0016
enum class EJoinPartyCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	BadBuild                                 = 157,
	InvalidAccessKey                         = 158,
	AlreadyInLeadersJoiningList              = 159,
	AlreadyInLeadersPartyRoster              = 160,
	NoSpace                                  = 161,
	NotApproved                              = 162,
	RequesteeNotMember                       = 163,
	RequesteeNotLeader                       = 164,
	NoResponse                               = 165,
	LoggedOut                                = 166,
	UnableToRejoin                           = 167,
	IncompatiblePlatform                     = 168,
	AlreadyJoiningParty                      = 169,
	AlreadyInParty                           = 170,
	JoinInfoInvalid                          = 171,
	AlreadyInPartyOfSpecifiedType            = 172,
	MessagingFailure                         = 173,
	GameSpecificReason                       = 174,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	EJoinPartyCompletionResult_MAX           = 175,
};

// Enum OnlineSubsystemBlueprints.EKickMemberCompletionResult_
// NumValues: 0x000B
enum class EKickMemberCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	UnknownParty                             = 157,
	LocalMemberNotMember                     = 158,
	LocalMemberNotLeader                     = 159,
	RemoteMemberNotMember                    = 160,
	MessagingFailure                         = 161,
	NoResponse                               = 162,
	LoggedOut                                = 163,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	EKickMemberCompletionResult_MAX          = 164,
};

// Enum OnlineSubsystemBlueprints.ELeavePartyCompletionResult_
// NumValues: 0x000C
enum class ELeavePartyCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	NoResponse                               = 157,
	LoggedOut                                = 158,
	UnknownParty                             = 159,
	LeavePending                             = 160,
	UnknownLocalUser                         = 161,
	NotMember                                = 162,
	MessagingFailure                         = 163,
	UnknownTransportFailure                  = 164,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	ELeavePartyCompletionResult_MAX          = 165,
};

// Enum OnlineSubsystemBlueprints.EPromoteMemberCompletionResult_
// NumValues: 0x000E
enum class EPromoteMemberCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	UnknownServiceFailure                    = 157,
	UnknownParty                             = 158,
	LocalMemberNotMember                     = 159,
	LocalMemberNotLeader                     = 160,
	PromotionAlreadyPending                  = 161,
	TargetIsSelf                             = 162,
	TargetNotMember                          = 163,
	MessagingFailure                         = 164,
	NoResponse                               = 165,
	LoggedOut                                = 166,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	EPromoteMemberCompletionResult_MAX       = 167,
};

// Enum OnlineSubsystemBlueprints.ESendPartyInvitationCompletionResult_
// NumValues: 0x0009
enum class ESendPartyInvitationCompletionResult_ : uint8
{
	NotLoggedIn                              = 156,
	InvitePending                            = 157,
	AlreadyInParty                           = 158,
	PartyFull                                = 159,
	NoPermission                             = 160,
	RateLimited                              = 161,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	ESendPartyInvitationCompletionResult_MAX = 162,
};

// Enum OnlineSubsystemBlueprints.EUpdateConfigCompletionResult_
// NumValues: 0x000A
enum class EUpdateConfigCompletionResult_ : uint8
{
	UnknownClientFailure                     = 156,
	UnknownParty                             = 157,
	LocalMemberNotMember                     = 158,
	LocalMemberNotLeader                     = 159,
	RemoteMemberNotMember                    = 160,
	MessagingFailure                         = 161,
	NoResponse                               = 162,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	EUpdateConfigCompletionResult_MAX        = 163,
};

// Enum OnlineSubsystemBlueprints.EOnJoinSessionCompleteResult_
// NumValues: 0x0007
enum class EOnJoinSessionCompleteResult_ : uint8
{
	Success                                  = 0,
	SessionIsFull                            = 1,
	SessionDoesNotExist                      = 2,
	CouldNotRetrieveAddress                  = 3,
	AlreadyInSession                         = 4,
	UnknownError                             = 5,
	EOnJoinSessionCompleteResult_MAX         = 6,
};

// Enum OnlineSubsystemBlueprints.EVoiceChatResult_
// NumValues: 0x0010
enum class EVoiceChatResult_ : uint8
{
	Success                                  = 0,
	InvalidState                             = 1,
	NotInitialized                           = 2,
	NotConnected                             = 3,
	NotLoggedIn                              = 4,
	NotPermitted                             = 5,
	Throttled                                = 6,
	InvalidArgument                          = 7,
	CredentialsInvalid                       = 8,
	CredentialsExpired                       = 9,
	ClientTimeout                            = 10,
	ServerTimeout                            = 11,
	DnsFailure                               = 12,
	ConnectionFailure                        = 13,
	ImplementationError                      = 14,
	EVoiceChatResult_MAX                     = 15,
};

// Enum OnlineSubsystemBlueprints.EPartySystemPermissions
// NumValues: 0x0005
enum class EPartySystemPermissions : uint8
{
	Noone                                    = 0,
	Leader                                   = 1,
	Friends                                  = 2,
	Anyone                                   = 3,
	EPartySystemPermissions_MAX              = 4,
};

// Enum OnlineSubsystemBlueprints.EJoinRequestAction_
// NumValues: 0x0004
enum class EJoinRequestAction_ : uint8
{
	Manual                                   = 0,
	AutoApprove                              = 1,
	AutoReject                               = 2,
	EJoinRequestAction_MAX                   = 3,
};

// Enum OnlineSubsystemBlueprints.EMemberExitedReason_
// NumValues: 0x0005
enum class EMemberExitedReason_ : uint8
{
	Unknown                                  = 0,
	Left                                     = 1,
	Removed                                  = 2,
	Kicked                                   = 3,
	EMemberExitedReason_MAX                  = 4,
};

// Enum OnlineSubsystemBlueprints.EPartyState_
// NumValues: 0x0009
enum class EPartyState_ : uint8
{
	None                                     = 0,
	CreatePending                            = 1,
	JoinPending                              = 2,
	RejoinPending                            = 3,
	LeavePending                             = 4,
	Active                                   = 5,
	Disconnected                             = 6,
	CleanUp                                  = 7,
	EPartyState_MAX                          = 8,
};

// Enum OnlineSubsystemBlueprints.EMemberConnectionStatus_
// NumValues: 0x0005
enum class EMemberConnectionStatus_ : uint8
{
	Uninitialized                            = 0,
	Disconnected                             = 1,
	Initializing                             = 2,
	Connected                                = 3,
	EMemberConnectionStatus_MAX              = 4,
};

// Enum OnlineSubsystemBlueprints.FOnlineUserPresenceStatusState
// NumValues: 0x0007
enum class EFOnlineUserPresenceStatusState : uint8
{
	Online                                   = 0,
	Offline                                  = 1,
	Away                                     = 2,
	ExtendedAway                             = 3,
	DoNotDisturb                             = 4,
	Chat                                     = 5,
	FOnlineUserPresenceStatusState_MAX       = 6,
};

// Enum OnlineSubsystemBlueprints.ESessionFailure_
// NumValues: 0x0002
enum class ESessionFailure_ : uint8
{
	ServiceConnectionLost                    = 0,
	ESessionFailure_MAX                      = 1,
};

// Enum OnlineSubsystemBlueprints.EOnSessionParticipantLeftReason_
// NumValues: 0x0005
enum class EOnSessionParticipantLeftReason_ : uint8
{
	Left                                     = 0,
	Disconnected                             = 1,
	Kicked                                   = 2,
	Closed                                   = 3,
	EOnSessionParticipantLeftReason_MAX      = 4,
};

// Enum OnlineSubsystemBlueprints.EPlatformMessageType_
// NumValues: 0x0004
enum class EPlatformMessageType_ : uint8
{
	EmptyStore                               = 0,
	ChatRestricted                           = 1,
	UGCRestricted                            = 2,
	EPlatformMessageType_MAX                 = 3,
};

// Enum OnlineSubsystemBlueprints.EInviteStatus_
// NumValues: 0x0007
enum class EInviteStatus_ : uint8
{
	Unknown                                  = 0,
	Accepted                                 = 1,
	PendingInbound                           = 2,
	PendingOutbound                          = 3,
	Blocked                                  = 4,
	Suggested                                = 5,
	EInviteStatus_MAX                        = 6,
};

// Enum OnlineSubsystemBlueprints.EShowPrivilegeResolveUI_
// NumValues: 0x0004
enum class EShowPrivilegeResolveUI_ : uint8
{
	Default                                  = 0,
	Show                                     = 1,
	NotShow                                  = 2,
	EShowPrivilegeResolveUI_MAX              = 3,
};

// Enum OnlineSubsystemBlueprints.EOnlineLobbySearchQueryFilterComparator_
// NumValues: 0x0007
enum class EOnlineLobbySearchQueryFilterComparator_ : uint8
{
	Equal                                    = 0,
	NotEqual                                 = 1,
	LessThan                                 = 2,
	LessThanOrEqual                          = 3,
	GreaterThan                              = 4,
	GreaterThanOrEqual                       = 5,
	EOnlineLobbySearchQueryFilterComparator_MAX = 6,
};

// Enum OnlineSubsystemBlueprints.EOnlineCachedResult_
// NumValues: 0x0003
enum class EOnlineCachedResult_ : uint8
{
	Success                                  = 0,
	NotFound                                 = 1,
	EOnlineCachedResult_MAX                  = 2,
};

// Enum OnlineSubsystemBlueprints.ERequestPartyInvitationCompletionResult_
// NumValues: 0x0008
enum class ERequestPartyInvitationCompletionResult_ : uint8
{
	NotLoggedIn                              = 156,
	InvitePending                            = 157,
	AlreadyInParty                           = 158,
	PartyFull                                = 159,
	NoPermission                             = 160,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	ERequestPartyInvitationCompletionResult_MAX = 161,
};

// Enum OnlineSubsystemBlueprints.EAcceptPartyInvitationCompletionResult_
// NumValues: 0x0008
enum class EAcceptPartyInvitationCompletionResult_ : uint8
{
	NotLoggedIn                              = 156,
	InvitePending                            = 157,
	AlreadyInParty                           = 158,
	PartyFull                                = 159,
	NoPermission                             = 160,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	EAcceptPartyInvitationCompletionResult_MAX = 161,
};

// Enum OnlineSubsystemBlueprints.ERejectPartyInvitationCompletionResult_
// NumValues: 0x0008
enum class ERejectPartyInvitationCompletionResult_ : uint8
{
	NotLoggedIn                              = 156,
	InvitePending                            = 157,
	AlreadyInParty                           = 158,
	PartyFull                                = 159,
	NoPermission                             = 160,
	UnknownInternalFailure                   = 0,
	Succeeded                                = 1,
	ERejectPartyInvitationCompletionResult_MAX = 161,
};

// Enum OnlineSubsystemBlueprints.EInvitationResponse_
// NumValues: 0x0005
enum class EInvitationResponse_ : uint8
{
	UnknownFailure                           = 0,
	BadBuild                                 = 1,
	Rejected                                 = 2,
	Accepted                                 = 3,
	EInvitationResponse_MAX                  = 4,
};

// Enum OnlineSubsystemBlueprints.EPurchaseTransactionState_
// NumValues: 0x000A
enum class EPurchaseTransactionState_ : uint8
{
	NotStarted                               = 0,
	Processing                               = 1,
	Purchased                                = 2,
	Failed                                   = 3,
	Deferred                                 = 4,
	Canceled                                 = 5,
	Restored                                 = 6,
	NotAllowed                               = 7,
	Invalid                                  = 8,
	EPurchaseTransactionState_MAX            = 9,
};

// Enum OnlineSubsystemBlueprints.EOnlineSessionState_
// NumValues: 0x0009
enum class EOnlineSessionState_ : uint8
{
	NoSession                                = 0,
	Creating                                 = 1,
	Pending                                  = 2,
	Starting                                 = 3,
	InProgress                               = 4,
	Ending                                   = 5,
	Ended                                    = 6,
	Destroying                               = 7,
	EOnlineSessionState_MAX                  = 8,
};

// Enum OnlineSubsystemBlueprints.EOnlineAsyncTaskState_
// NumValues: 0x0005
enum class EOnlineAsyncTaskState_ : uint8
{
	NotStarted                               = 0,
	InProgress                               = 1,
	Done                                     = 2,
	Failed                                   = 3,
	EOnlineAsyncTaskState_MAX                = 4,
};

// Enum OnlineSubsystemBlueprints.EOnlineComparisonOp_
// NumValues: 0x000A
enum class EOnlineComparisonOp_ : uint8
{
	Equals                                   = 0,
	NotEquals                                = 1,
	GreaterThan                              = 2,
	GreaterThanEquals                        = 3,
	LessThan                                 = 4,
	LessThanEquals                           = 5,
	Near                                     = 6,
	In                                       = 7,
	NotIn                                    = 8,
	EOnlineComparisonOp_MAX                  = 9,
};

// Enum OnlineSubsystemBlueprints.EOnlineStatModificationType_
// NumValues: 0x0006
enum class EOnlineStatModificationType_ : uint8
{
	Unknown                                  = 0,
	Sum                                      = 1,
	Set                                      = 2,
	Largest                                  = 3,
	Smallest                                 = 4,
	EOnlineStatModificationType_MAX          = 5,
};

// Enum OnlineSubsystemBlueprints.EVoiceChatChannelType_
// NumValues: 0x0004
enum class EVoiceChatChannelType_ : uint8
{
	NonPositional                            = 0,
	Positional                               = 1,
	Echo                                     = 2,
	EVoiceChatChannelType_MAX                = 3,
};

// Enum OnlineSubsystemBlueprints.EVoiceChatTransmitMode_
// NumValues: 0x0004
enum class EVoiceChatTransmitMode_ : uint8
{
	None                                     = 0,
	All                                      = 1,
	Channel                                  = 2,
	EVoiceChatTransmitMode_MAX               = 3,
};

// Enum OnlineSubsystemBlueprints.EVoiceChatAttenuationModel_
// NumValues: 0x0005
enum class EVoiceChatAttenuationModel_ : uint8
{
	None                                     = 0,
	InverseByDistance                        = 1,
	LinearByDistance                         = 2,
	ExponentialByDistance                    = 3,
	EVoiceChatAttenuationModel_MAX           = 4,
};

// ScriptStruct OnlineSubsystemBlueprints.LineItemInfoBP
// 0x0030 (0x0030 - 0x0000)
struct FLineItemInfoBP final
{
public:
	class FString                                 ItemName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UniqueID;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ValidationInfo;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLineItemInfoBP) == 0x000008, "Wrong alignment on FLineItemInfoBP");
static_assert(sizeof(FLineItemInfoBP) == 0x000030, "Wrong size on FLineItemInfoBP");
static_assert(offsetof(FLineItemInfoBP, ItemName) == 0x000000, "Member 'FLineItemInfoBP::ItemName' has a wrong offset!");
static_assert(offsetof(FLineItemInfoBP, UniqueID) == 0x000010, "Member 'FLineItemInfoBP::UniqueID' has a wrong offset!");
static_assert(offsetof(FLineItemInfoBP, ValidationInfo) == 0x000020, "Member 'FLineItemInfoBP::ValidationInfo' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.VariantDataBP
// 0x0028 (0x0028 - 0x0000)
struct FVariantDataBP final
{
public:
	EOnlineKeyValuePairDataType_                  Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AsBool;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AsInt;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         AsFloat;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         AsInt64;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AsString;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVariantDataBP) == 0x000008, "Wrong alignment on FVariantDataBP");
static_assert(sizeof(FVariantDataBP) == 0x000028, "Wrong size on FVariantDataBP");
static_assert(offsetof(FVariantDataBP, Type) == 0x000000, "Member 'FVariantDataBP::Type' has a wrong offset!");
static_assert(offsetof(FVariantDataBP, AsBool) == 0x000001, "Member 'FVariantDataBP::AsBool' has a wrong offset!");
static_assert(offsetof(FVariantDataBP, AsInt) == 0x000004, "Member 'FVariantDataBP::AsInt' has a wrong offset!");
static_assert(offsetof(FVariantDataBP, AsFloat) == 0x000008, "Member 'FVariantDataBP::AsFloat' has a wrong offset!");
static_assert(offsetof(FVariantDataBP, AsInt64) == 0x000010, "Member 'FVariantDataBP::AsInt64' has a wrong offset!");
static_assert(offsetof(FVariantDataBP, AsString) == 0x000018, "Member 'FVariantDataBP::AsString' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineSessionSettingBP
// 0x0030 (0x0030 - 0x0000)
struct FOnlineSessionSettingBP final
{
public:
	struct FVariantDataBP                         Data;                                              // 0x0000(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOnlineDataAdvertisementType_                 AdvertisementType;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineSessionSettingBP) == 0x000008, "Wrong alignment on FOnlineSessionSettingBP");
static_assert(sizeof(FOnlineSessionSettingBP) == 0x000030, "Wrong size on FOnlineSessionSettingBP");
static_assert(offsetof(FOnlineSessionSettingBP, Data) == 0x000000, "Member 'FOnlineSessionSettingBP::Data' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingBP, AdvertisementType) == 0x000028, "Member 'FOnlineSessionSettingBP::AdvertisementType' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingBP, ID) == 0x00002C, "Member 'FOnlineSessionSettingBP::ID' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineSessionMemberSettingsBP
// 0x0080 (0x0080 - 0x0000)
struct FOnlineSessionMemberSettingsBP final
{
public:
	struct FUniqueNetIdRepl                       MemberUserId;                                      // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FOnlineSessionSettingBP> MemberSettings;                                    // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineSessionMemberSettingsBP) == 0x000008, "Wrong alignment on FOnlineSessionMemberSettingsBP");
static_assert(sizeof(FOnlineSessionMemberSettingsBP) == 0x000080, "Wrong size on FOnlineSessionMemberSettingsBP");
static_assert(offsetof(FOnlineSessionMemberSettingsBP, MemberUserId) == 0x000000, "Member 'FOnlineSessionMemberSettingsBP::MemberUserId' has a wrong offset!");
static_assert(offsetof(FOnlineSessionMemberSettingsBP, MemberSettings) == 0x000030, "Member 'FOnlineSessionMemberSettingsBP::MemberSettings' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineSessionSettingsBP
// 0x0150 (0x0150 - 0x0000)
struct FOnlineSessionSettingsBP final
{
public:
	uint8                                         Pad_0[0xD8];                                       // 0x0000(0x00D8)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumPublicConnections;                              // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumPrivateConnections;                             // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShouldAdvertise;                                  // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinInProgress;                              // 0x00E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLANMatch;                                       // 0x00E2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsDedicated;                                      // 0x00E3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesStats;                                        // 0x00E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowInvites;                                     // 0x00E5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsesPresence;                                     // 0x00E6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinViaPresence;                             // 0x00E7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinViaPresenceFriendsOnly;                  // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAntiCheatProtected;                               // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbiesIfAvailable;                            // 0x00EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLobbiesVoiceChatIfAvailable;                   // 0x00EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BuildUniqueId;                                     // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FOnlineSessionSettingBP> Settings;                                          // 0x00F0(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FOnlineSessionMemberSettingsBP> MemberSettings;                                    // 0x0140(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineSessionSettingsBP) == 0x000008, "Wrong alignment on FOnlineSessionSettingsBP");
static_assert(sizeof(FOnlineSessionSettingsBP) == 0x000150, "Wrong size on FOnlineSessionSettingsBP");
static_assert(offsetof(FOnlineSessionSettingsBP, NumPublicConnections) == 0x0000D8, "Member 'FOnlineSessionSettingsBP::NumPublicConnections' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, NumPrivateConnections) == 0x0000DC, "Member 'FOnlineSessionSettingsBP::NumPrivateConnections' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bShouldAdvertise) == 0x0000E0, "Member 'FOnlineSessionSettingsBP::bShouldAdvertise' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bAllowJoinInProgress) == 0x0000E1, "Member 'FOnlineSessionSettingsBP::bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bIsLANMatch) == 0x0000E2, "Member 'FOnlineSessionSettingsBP::bIsLANMatch' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bIsDedicated) == 0x0000E3, "Member 'FOnlineSessionSettingsBP::bIsDedicated' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bUsesStats) == 0x0000E4, "Member 'FOnlineSessionSettingsBP::bUsesStats' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bAllowInvites) == 0x0000E5, "Member 'FOnlineSessionSettingsBP::bAllowInvites' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bUsesPresence) == 0x0000E6, "Member 'FOnlineSessionSettingsBP::bUsesPresence' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bAllowJoinViaPresence) == 0x0000E7, "Member 'FOnlineSessionSettingsBP::bAllowJoinViaPresence' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bAllowJoinViaPresenceFriendsOnly) == 0x0000E8, "Member 'FOnlineSessionSettingsBP::bAllowJoinViaPresenceFriendsOnly' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bAntiCheatProtected) == 0x0000E9, "Member 'FOnlineSessionSettingsBP::bAntiCheatProtected' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bUseLobbiesIfAvailable) == 0x0000EA, "Member 'FOnlineSessionSettingsBP::bUseLobbiesIfAvailable' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, bUseLobbiesVoiceChatIfAvailable) == 0x0000EB, "Member 'FOnlineSessionSettingsBP::bUseLobbiesVoiceChatIfAvailable' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, BuildUniqueId) == 0x0000EC, "Member 'FOnlineSessionSettingsBP::BuildUniqueId' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, Settings) == 0x0000F0, "Member 'FOnlineSessionSettingsBP::Settings' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSettingsBP, MemberSettings) == 0x000140, "Member 'FOnlineSessionSettingsBP::MemberSettings' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineSessionBP
// 0x01B0 (0x01B0 - 0x0000)
struct FOnlineSessionBP
{
public:
	struct FUniqueNetIdRepl                       OwningUserId;                                      // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OwningUserName;                                    // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOnlineSessionSettingsBP               SessionSettings;                                   // 0x0040(0x0150)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UOnlineSessionInfo*                     SessionInfo;                                       // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOpenPrivateConnections;                         // 0x0198(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOpenPublicConnections;                          // 0x019C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionId;                                         // 0x01A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineSessionBP) == 0x000008, "Wrong alignment on FOnlineSessionBP");
static_assert(sizeof(FOnlineSessionBP) == 0x0001B0, "Wrong size on FOnlineSessionBP");
static_assert(offsetof(FOnlineSessionBP, OwningUserId) == 0x000000, "Member 'FOnlineSessionBP::OwningUserId' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, OwningUserName) == 0x000030, "Member 'FOnlineSessionBP::OwningUserName' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, SessionSettings) == 0x000040, "Member 'FOnlineSessionBP::SessionSettings' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, SessionInfo) == 0x000190, "Member 'FOnlineSessionBP::SessionInfo' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, NumOpenPrivateConnections) == 0x000198, "Member 'FOnlineSessionBP::NumOpenPrivateConnections' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, NumOpenPublicConnections) == 0x00019C, "Member 'FOnlineSessionBP::NumOpenPublicConnections' has a wrong offset!");
static_assert(offsetof(FOnlineSessionBP, SessionId) == 0x0001A0, "Member 'FOnlineSessionBP::SessionId' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ShowWebUrlParameters
// 0x0038 (0x0038 - 0x0000)
struct FShowWebUrlParameters final
{
public:
	bool                                          Embedded;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowCloseButton;                                   // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShowBackground;                                    // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HideCursor;                                        // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ResetCookies;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OffsetX;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OffsetY;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeX;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SizeY;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AllowedDomains;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 CallbackPath;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FShowWebUrlParameters) == 0x000008, "Wrong alignment on FShowWebUrlParameters");
static_assert(sizeof(FShowWebUrlParameters) == 0x000038, "Wrong size on FShowWebUrlParameters");
static_assert(offsetof(FShowWebUrlParameters, Embedded) == 0x000000, "Member 'FShowWebUrlParameters::Embedded' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, ShowCloseButton) == 0x000001, "Member 'FShowWebUrlParameters::ShowCloseButton' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, ShowBackground) == 0x000002, "Member 'FShowWebUrlParameters::ShowBackground' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, HideCursor) == 0x000003, "Member 'FShowWebUrlParameters::HideCursor' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, ResetCookies) == 0x000004, "Member 'FShowWebUrlParameters::ResetCookies' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, OffsetX) == 0x000008, "Member 'FShowWebUrlParameters::OffsetX' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, OffsetY) == 0x00000C, "Member 'FShowWebUrlParameters::OffsetY' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, SizeX) == 0x000010, "Member 'FShowWebUrlParameters::SizeX' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, SizeY) == 0x000014, "Member 'FShowWebUrlParameters::SizeY' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, AllowedDomains) == 0x000018, "Member 'FShowWebUrlParameters::AllowedDomains' has a wrong offset!");
static_assert(offsetof(FShowWebUrlParameters, CallbackPath) == 0x000028, "Member 'FShowWebUrlParameters::CallbackPath' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ChatMessageBP
// 0x0058 (0x0058 - 0x0000)
struct FChatMessageBP final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Body;                                              // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              Timestamp;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FChatMessageBP) == 0x000008, "Wrong alignment on FChatMessageBP");
static_assert(sizeof(FChatMessageBP) == 0x000058, "Wrong size on FChatMessageBP");
static_assert(offsetof(FChatMessageBP, UserId) == 0x000000, "Member 'FChatMessageBP::UserId' has a wrong offset!");
static_assert(offsetof(FChatMessageBP, Nickname) == 0x000030, "Member 'FChatMessageBP::Nickname' has a wrong offset!");
static_assert(offsetof(FChatMessageBP, Body) == 0x000040, "Member 'FChatMessageBP::Body' has a wrong offset!");
static_assert(offsetof(FChatMessageBP, Timestamp) == 0x000050, "Member 'FChatMessageBP::Timestamp' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineLobbySearchQueryFilterBP
// 0x0040 (0x0040 - 0x0000)
struct FOnlineLobbySearchQueryFilterBP final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVariantDataBP                         Value;                                             // 0x0010(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOnlineLobbySearchQueryFilterComparator_      Comparison;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineLobbySearchQueryFilterBP) == 0x000008, "Wrong alignment on FOnlineLobbySearchQueryFilterBP");
static_assert(sizeof(FOnlineLobbySearchQueryFilterBP) == 0x000040, "Wrong size on FOnlineLobbySearchQueryFilterBP");
static_assert(offsetof(FOnlineLobbySearchQueryFilterBP, Key) == 0x000000, "Member 'FOnlineLobbySearchQueryFilterBP::Key' has a wrong offset!");
static_assert(offsetof(FOnlineLobbySearchQueryFilterBP, Value) == 0x000010, "Member 'FOnlineLobbySearchQueryFilterBP::Value' has a wrong offset!");
static_assert(offsetof(FOnlineLobbySearchQueryFilterBP, Comparison) == 0x000038, "Member 'FOnlineLobbySearchQueryFilterBP::Comparison' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineLobbySearchQueryBP
// 0x0020 (0x0020 - 0x0000)
struct FOnlineLobbySearchQueryBP final
{
public:
	TArray<struct FOnlineLobbySearchQueryFilterBP> Filters;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int64                                         Limit;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasLimit;                                          // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineLobbySearchQueryBP) == 0x000008, "Wrong alignment on FOnlineLobbySearchQueryBP");
static_assert(sizeof(FOnlineLobbySearchQueryBP) == 0x000020, "Wrong size on FOnlineLobbySearchQueryBP");
static_assert(offsetof(FOnlineLobbySearchQueryBP, Filters) == 0x000000, "Member 'FOnlineLobbySearchQueryBP::Filters' has a wrong offset!");
static_assert(offsetof(FOnlineLobbySearchQueryBP, Limit) == 0x000010, "Member 'FOnlineLobbySearchQueryBP::Limit' has a wrong offset!");
static_assert(offsetof(FOnlineLobbySearchQueryBP, HasLimit) == 0x000018, "Member 'FOnlineLobbySearchQueryBP::HasLimit' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineMessagePayloadData
// 0x0001 (0x0001 - 0x0000)
struct FOnlineMessagePayloadData final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineMessagePayloadData) == 0x000001, "Wrong alignment on FOnlineMessagePayloadData");
static_assert(sizeof(FOnlineMessagePayloadData) == 0x000001, "Wrong size on FOnlineMessagePayloadData");

// ScriptStruct OnlineSubsystemBlueprints.ShowSendMessageParameters
// 0x00D8 (0x00D8 - 0x0000)
struct FShowSendMessageParameters final
{
public:
	class FText                                   DisplayTitle;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            DisplayTitle_Loc;                                  // 0x0010(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   DisplayMessage;                                    // 0x0060(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                   DisplayDetails;                                    // 0x0070(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>            DisplayDetails_Loc;                                // 0x0080(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FOnlineMessagePayloadData              DataPayload;                                       // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxRecipients;                                     // 0x00D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FShowSendMessageParameters) == 0x000008, "Wrong alignment on FShowSendMessageParameters");
static_assert(sizeof(FShowSendMessageParameters) == 0x0000D8, "Wrong size on FShowSendMessageParameters");
static_assert(offsetof(FShowSendMessageParameters, DisplayTitle) == 0x000000, "Member 'FShowSendMessageParameters::DisplayTitle' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, DisplayTitle_Loc) == 0x000010, "Member 'FShowSendMessageParameters::DisplayTitle_Loc' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, DisplayMessage) == 0x000060, "Member 'FShowSendMessageParameters::DisplayMessage' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, DisplayDetails) == 0x000070, "Member 'FShowSendMessageParameters::DisplayDetails' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, DisplayDetails_Loc) == 0x000080, "Member 'FShowSendMessageParameters::DisplayDetails_Loc' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, DataPayload) == 0x0000D0, "Member 'FShowSendMessageParameters::DataPayload' has a wrong offset!");
static_assert(offsetof(FShowSendMessageParameters, MaxRecipients) == 0x0000D4, "Member 'FShowSendMessageParameters::MaxRecipients' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.FriendSettingsData
// 0x0050 (0x0050 - 0x0000)
struct FFriendSettingsData final
{
public:
	TMap<class FString, class FString>            Data;                                              // 0x0000(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FFriendSettingsData) == 0x000008, "Wrong alignment on FFriendSettingsData");
static_assert(sizeof(FFriendSettingsData) == 0x000050, "Wrong size on FFriendSettingsData");
static_assert(offsetof(FFriendSettingsData, Data) == 0x000000, "Member 'FFriendSettingsData::Data' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ReportPlayedWithUserInfo
// 0x0040 (0x0040 - 0x0000)
struct FReportPlayedWithUserInfo final
{
public:
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PresenceStr;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FReportPlayedWithUserInfo) == 0x000008, "Wrong alignment on FReportPlayedWithUserInfo");
static_assert(sizeof(FReportPlayedWithUserInfo) == 0x000040, "Wrong size on FReportPlayedWithUserInfo");
static_assert(offsetof(FReportPlayedWithUserInfo, UserId) == 0x000000, "Member 'FReportPlayedWithUserInfo::UserId' has a wrong offset!");
static_assert(offsetof(FReportPlayedWithUserInfo, PresenceStr) == 0x000030, "Member 'FReportPlayedWithUserInfo::PresenceStr' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineSessionSearchResultBP
// 0x01B8 (0x01B8 - 0x0000)
struct FOnlineSessionSearchResultBP final
{
public:
	struct FOnlineSessionBP                       Session;                                           // 0x0000(0x01B0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         PingInMs;                                          // 0x01B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineSessionSearchResultBP) == 0x000008, "Wrong alignment on FOnlineSessionSearchResultBP");
static_assert(sizeof(FOnlineSessionSearchResultBP) == 0x0001B8, "Wrong size on FOnlineSessionSearchResultBP");
static_assert(offsetof(FOnlineSessionSearchResultBP, Session) == 0x000000, "Member 'FOnlineSessionSearchResultBP::Session' has a wrong offset!");
static_assert(offsetof(FOnlineSessionSearchResultBP, PingInMs) == 0x0001B0, "Member 'FOnlineSessionSearchResultBP::PingInMs' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OptionalOnlineSessionSearchResultBP
// 0x01C0 (0x01C0 - 0x0000)
struct FOptionalOnlineSessionSearchResultBP final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineSessionSearchResultBP           SearchResult;                                      // 0x0008(0x01B8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOptionalOnlineSessionSearchResultBP) == 0x000008, "Wrong alignment on FOptionalOnlineSessionSearchResultBP");
static_assert(sizeof(FOptionalOnlineSessionSearchResultBP) == 0x0001C0, "Wrong size on FOptionalOnlineSessionSearchResultBP");
static_assert(offsetof(FOptionalOnlineSessionSearchResultBP, bSet) == 0x000000, "Member 'FOptionalOnlineSessionSearchResultBP::bSet' has a wrong offset!");
static_assert(offsetof(FOptionalOnlineSessionSearchResultBP, SearchResult) == 0x000008, "Member 'FOptionalOnlineSessionSearchResultBP::SearchResult' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStoreCategoryBP
// 0x0020 (0x0020 - 0x0000)
struct FOnlineStoreCategoryBP final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Description;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStoreCategoryBP) == 0x000008, "Wrong alignment on FOnlineStoreCategoryBP");
static_assert(sizeof(FOnlineStoreCategoryBP) == 0x000020, "Wrong size on FOnlineStoreCategoryBP");
static_assert(offsetof(FOnlineStoreCategoryBP, ID) == 0x000000, "Member 'FOnlineStoreCategoryBP::ID' has a wrong offset!");
static_assert(offsetof(FOnlineStoreCategoryBP, Description) == 0x000010, "Member 'FOnlineStoreCategoryBP::Description' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStoreFilterBP
// 0x0030 (0x0030 - 0x0000)
struct FOnlineStoreFilterBP final
{
public:
	TArray<class FString>                         Keywords;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOnlineStoreCategoryBP>         IncludeCategories;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FOnlineStoreCategoryBP>         ExcludeCategories;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStoreFilterBP) == 0x000008, "Wrong alignment on FOnlineStoreFilterBP");
static_assert(sizeof(FOnlineStoreFilterBP) == 0x000030, "Wrong size on FOnlineStoreFilterBP");
static_assert(offsetof(FOnlineStoreFilterBP, Keywords) == 0x000000, "Member 'FOnlineStoreFilterBP::Keywords' has a wrong offset!");
static_assert(offsetof(FOnlineStoreFilterBP, IncludeCategories) == 0x000010, "Member 'FOnlineStoreFilterBP::IncludeCategories' has a wrong offset!");
static_assert(offsetof(FOnlineStoreFilterBP, ExcludeCategories) == 0x000020, "Member 'FOnlineStoreFilterBP::ExcludeCategories' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStatUpdateBP
// 0x0030 (0x0030 - 0x0000)
struct FOnlineStatUpdateBP final
{
public:
	EOnlineStatModificationType_                  Type;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVariantDataBP                         Value;                                             // 0x0008(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStatUpdateBP) == 0x000008, "Wrong alignment on FOnlineStatUpdateBP");
static_assert(sizeof(FOnlineStatUpdateBP) == 0x000030, "Wrong size on FOnlineStatUpdateBP");
static_assert(offsetof(FOnlineStatUpdateBP, Type) == 0x000000, "Member 'FOnlineStatUpdateBP::Type' has a wrong offset!");
static_assert(offsetof(FOnlineStatUpdateBP, Value) == 0x000008, "Member 'FOnlineStatUpdateBP::Value' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStatsUserUpdatedStatsBP
// 0x0080 (0x0080 - 0x0000)
struct FOnlineStatsUserUpdatedStatsBP final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FOnlineStatUpdateBP> Stats;                                             // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStatsUserUpdatedStatsBP) == 0x000008, "Wrong alignment on FOnlineStatsUserUpdatedStatsBP");
static_assert(sizeof(FOnlineStatsUserUpdatedStatsBP) == 0x000080, "Wrong size on FOnlineStatsUserUpdatedStatsBP");
static_assert(offsetof(FOnlineStatsUserUpdatedStatsBP, PlayerId) == 0x000000, "Member 'FOnlineStatsUserUpdatedStatsBP::PlayerId' has a wrong offset!");
static_assert(offsetof(FOnlineStatsUserUpdatedStatsBP, Stats) == 0x000030, "Member 'FOnlineStatsUserUpdatedStatsBP::Stats' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStatsUserStatsBP
// 0x0080 (0x0080 - 0x0000)
struct FOnlineStatsUserStatsBP final
{
public:
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FVariantDataBP>    Stats;                                             // 0x0030(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStatsUserStatsBP) == 0x000008, "Wrong alignment on FOnlineStatsUserStatsBP");
static_assert(sizeof(FOnlineStatsUserStatsBP) == 0x000080, "Wrong size on FOnlineStatsUserStatsBP");
static_assert(offsetof(FOnlineStatsUserStatsBP, PlayerId) == 0x000000, "Member 'FOnlineStatsUserStatsBP::PlayerId' has a wrong offset!");
static_assert(offsetof(FOnlineStatsUserStatsBP, Stats) == 0x000030, "Member 'FOnlineStatsUserStatsBP::Stats' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ReceiptOfferEntryBP
// 0x0038 (0x0038 - 0x0000)
struct FReceiptOfferEntryBP final
{
public:
	class FString                                 NameSpace;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OfferId;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FLineItemInfoBP>                LineItems;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FReceiptOfferEntryBP) == 0x000008, "Wrong alignment on FReceiptOfferEntryBP");
static_assert(sizeof(FReceiptOfferEntryBP) == 0x000038, "Wrong size on FReceiptOfferEntryBP");
static_assert(offsetof(FReceiptOfferEntryBP, NameSpace) == 0x000000, "Member 'FReceiptOfferEntryBP::NameSpace' has a wrong offset!");
static_assert(offsetof(FReceiptOfferEntryBP, OfferId) == 0x000010, "Member 'FReceiptOfferEntryBP::OfferId' has a wrong offset!");
static_assert(offsetof(FReceiptOfferEntryBP, Quantity) == 0x000020, "Member 'FReceiptOfferEntryBP::Quantity' has a wrong offset!");
static_assert(offsetof(FReceiptOfferEntryBP, LineItems) == 0x000028, "Member 'FReceiptOfferEntryBP::LineItems' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.LoginFlowResultBP
// 0x0038 (0x0038 - 0x0000)
struct FLoginFlowResultBP final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ErrorMessage;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 ErrorRaw;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumericErrorCode;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLoginFlowResultBP) == 0x000008, "Wrong alignment on FLoginFlowResultBP");
static_assert(sizeof(FLoginFlowResultBP) == 0x000038, "Wrong size on FLoginFlowResultBP");
static_assert(offsetof(FLoginFlowResultBP, Token) == 0x000000, "Member 'FLoginFlowResultBP::Token' has a wrong offset!");
static_assert(offsetof(FLoginFlowResultBP, ErrorMessage) == 0x000010, "Member 'FLoginFlowResultBP::ErrorMessage' has a wrong offset!");
static_assert(offsetof(FLoginFlowResultBP, ErrorRaw) == 0x000020, "Member 'FLoginFlowResultBP::ErrorRaw' has a wrong offset!");
static_assert(offsetof(FLoginFlowResultBP, NumericErrorCode) == 0x000030, "Member 'FLoginFlowResultBP::NumericErrorCode' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineErrorInfo
// 0x0038 (0x0038 - 0x0000)
struct FOnlineErrorInfo final
{
public:
	bool                                          Successful;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorRaw;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ErrorCode;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ErrorMessage;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineErrorInfo) == 0x000008, "Wrong alignment on FOnlineErrorInfo");
static_assert(sizeof(FOnlineErrorInfo) == 0x000038, "Wrong size on FOnlineErrorInfo");
static_assert(offsetof(FOnlineErrorInfo, Successful) == 0x000000, "Member 'FOnlineErrorInfo::Successful' has a wrong offset!");
static_assert(offsetof(FOnlineErrorInfo, ErrorRaw) == 0x000008, "Member 'FOnlineErrorInfo::ErrorRaw' has a wrong offset!");
static_assert(offsetof(FOnlineErrorInfo, ErrorCode) == 0x000018, "Member 'FOnlineErrorInfo::ErrorCode' has a wrong offset!");
static_assert(offsetof(FOnlineErrorInfo, ErrorMessage) == 0x000028, "Member 'FOnlineErrorInfo::ErrorMessage' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlinePartyConfiguration
// 0x0040 (0x0040 - 0x0000)
struct FOnlinePartyConfiguration final
{
public:
	EJoinRequestAction_                           JoinRequestAction;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPartySystemPermissions                       PresencePermissions;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPartySystemPermissions                       InvitePermissions;                                 // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ChatEnabled;                                       // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ShouldRemoveOnDisconnection;                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsAcceptingMembers;                                // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NotAcceptingMembersReason;                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxMembers;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Password;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlinePartyConfiguration) == 0x000008, "Wrong alignment on FOnlinePartyConfiguration");
static_assert(sizeof(FOnlinePartyConfiguration) == 0x000040, "Wrong size on FOnlinePartyConfiguration");
static_assert(offsetof(FOnlinePartyConfiguration, JoinRequestAction) == 0x000000, "Member 'FOnlinePartyConfiguration::JoinRequestAction' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, PresencePermissions) == 0x000001, "Member 'FOnlinePartyConfiguration::PresencePermissions' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, InvitePermissions) == 0x000002, "Member 'FOnlinePartyConfiguration::InvitePermissions' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, ChatEnabled) == 0x000003, "Member 'FOnlinePartyConfiguration::ChatEnabled' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, ShouldRemoveOnDisconnection) == 0x000004, "Member 'FOnlinePartyConfiguration::ShouldRemoveOnDisconnection' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, IsAcceptingMembers) == 0x000005, "Member 'FOnlinePartyConfiguration::IsAcceptingMembers' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, NotAcceptingMembersReason) == 0x000008, "Member 'FOnlinePartyConfiguration::NotAcceptingMembersReason' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, MaxMembers) == 0x00000C, "Member 'FOnlinePartyConfiguration::MaxMembers' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, Nickname) == 0x000010, "Member 'FOnlinePartyConfiguration::Nickname' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, Description) == 0x000020, "Member 'FOnlinePartyConfiguration::Description' has a wrong offset!");
static_assert(offsetof(FOnlinePartyConfiguration, Password) == 0x000030, "Member 'FOnlinePartyConfiguration::Password' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineAccountCredential
// 0x0030 (0x0030 - 0x0000)
struct FOnlineAccountCredential final
{
public:
	class FString                                 Type;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineAccountCredential) == 0x000008, "Wrong alignment on FOnlineAccountCredential");
static_assert(sizeof(FOnlineAccountCredential) == 0x000030, "Wrong size on FOnlineAccountCredential");
static_assert(offsetof(FOnlineAccountCredential, Type) == 0x000000, "Member 'FOnlineAccountCredential::Type' has a wrong offset!");
static_assert(offsetof(FOnlineAccountCredential, ID) == 0x000010, "Member 'FOnlineAccountCredential::ID' has a wrong offset!");
static_assert(offsetof(FOnlineAccountCredential, Token) == 0x000020, "Member 'FOnlineAccountCredential::Token' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.BlockedQueryResultInfo
// 0x0018 (0x0018 - 0x0000)
struct FBlockedQueryResultInfo final
{
public:
	bool                                          Blocked;                                           // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          BlockedNonFriends;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBlockedQueryResultInfo) == 0x000008, "Wrong alignment on FBlockedQueryResultInfo");
static_assert(sizeof(FBlockedQueryResultInfo) == 0x000018, "Wrong size on FBlockedQueryResultInfo");
static_assert(offsetof(FBlockedQueryResultInfo, Blocked) == 0x000000, "Member 'FBlockedQueryResultInfo::Blocked' has a wrong offset!");
static_assert(offsetof(FBlockedQueryResultInfo, BlockedNonFriends) == 0x000001, "Member 'FBlockedQueryResultInfo::BlockedNonFriends' has a wrong offset!");
static_assert(offsetof(FBlockedQueryResultInfo, UserId) == 0x000008, "Member 'FBlockedQueryResultInfo::UserId' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ExternalIdQueryOptionsBP
// 0x0018 (0x0018 - 0x0000)
struct FExternalIdQueryOptionsBP final
{
public:
	bool                                          bLookupByDisplayName;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AuthType;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FExternalIdQueryOptionsBP) == 0x000008, "Wrong alignment on FExternalIdQueryOptionsBP");
static_assert(sizeof(FExternalIdQueryOptionsBP) == 0x000018, "Wrong size on FExternalIdQueryOptionsBP");
static_assert(offsetof(FExternalIdQueryOptionsBP, bLookupByDisplayName) == 0x000000, "Member 'FExternalIdQueryOptionsBP::bLookupByDisplayName' has a wrong offset!");
static_assert(offsetof(FExternalIdQueryOptionsBP, AuthType) == 0x000008, "Member 'FExternalIdQueryOptionsBP::AuthType' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.VoiceAdminChannelCredentialsBP
// 0x0050 (0x0050 - 0x0000)
struct FVoiceAdminChannelCredentialsBP final
{
public:
	struct FUniqueNetIdRepl                       TargetUserId;                                      // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PlayerName;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ChannelCredentials;                                // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVoiceAdminChannelCredentialsBP) == 0x000008, "Wrong alignment on FVoiceAdminChannelCredentialsBP");
static_assert(sizeof(FVoiceAdminChannelCredentialsBP) == 0x000050, "Wrong size on FVoiceAdminChannelCredentialsBP");
static_assert(offsetof(FVoiceAdminChannelCredentialsBP, TargetUserId) == 0x000000, "Member 'FVoiceAdminChannelCredentialsBP::TargetUserId' has a wrong offset!");
static_assert(offsetof(FVoiceAdminChannelCredentialsBP, PlayerName) == 0x000030, "Member 'FVoiceAdminChannelCredentialsBP::PlayerName' has a wrong offset!");
static_assert(offsetof(FVoiceAdminChannelCredentialsBP, ChannelCredentials) == 0x000040, "Member 'FVoiceAdminChannelCredentialsBP::ChannelCredentials' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ChatRoomMemberBP
// 0x0048 (0x0048 - 0x0000)
struct FChatRoomMemberBP final
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       UserId;                                            // 0x0008(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FChatRoomMemberBP) == 0x000008, "Wrong alignment on FChatRoomMemberBP");
static_assert(sizeof(FChatRoomMemberBP) == 0x000048, "Wrong size on FChatRoomMemberBP");
static_assert(offsetof(FChatRoomMemberBP, bIsValid) == 0x000000, "Member 'FChatRoomMemberBP::bIsValid' has a wrong offset!");
static_assert(offsetof(FChatRoomMemberBP, UserId) == 0x000008, "Member 'FChatRoomMemberBP::UserId' has a wrong offset!");
static_assert(offsetof(FChatRoomMemberBP, Nickname) == 0x000038, "Member 'FChatRoomMemberBP::Nickname' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.VoiceChatResultBP
// 0x0030 (0x0030 - 0x0000)
struct FVoiceChatResultBP final
{
public:
	bool                                          Successful;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVoiceChatResult_                             ResultCode;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorCode;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ErrorNum;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorDesc;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVoiceChatResultBP) == 0x000008, "Wrong alignment on FVoiceChatResultBP");
static_assert(sizeof(FVoiceChatResultBP) == 0x000030, "Wrong size on FVoiceChatResultBP");
static_assert(offsetof(FVoiceChatResultBP, Successful) == 0x000000, "Member 'FVoiceChatResultBP::Successful' has a wrong offset!");
static_assert(offsetof(FVoiceChatResultBP, ResultCode) == 0x000001, "Member 'FVoiceChatResultBP::ResultCode' has a wrong offset!");
static_assert(offsetof(FVoiceChatResultBP, ErrorCode) == 0x000008, "Member 'FVoiceChatResultBP::ErrorCode' has a wrong offset!");
static_assert(offsetof(FVoiceChatResultBP, ErrorNum) == 0x000018, "Member 'FVoiceChatResultBP::ErrorNum' has a wrong offset!");
static_assert(offsetof(FVoiceChatResultBP, ErrorDesc) == 0x000020, "Member 'FVoiceChatResultBP::ErrorDesc' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineUserPresenceStatusData
// 0x0068 (0x0068 - 0x0000)
struct FOnlineUserPresenceStatusData final
{
public:
	class FString                                 Status;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFOnlineUserPresenceStatusState               State;                                             // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class FString>            Properties;                                        // 0x0018(0x0050)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineUserPresenceStatusData) == 0x000008, "Wrong alignment on FOnlineUserPresenceStatusData");
static_assert(sizeof(FOnlineUserPresenceStatusData) == 0x000068, "Wrong size on FOnlineUserPresenceStatusData");
static_assert(offsetof(FOnlineUserPresenceStatusData, Status) == 0x000000, "Member 'FOnlineUserPresenceStatusData::Status' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceStatusData, State) == 0x000010, "Member 'FOnlineUserPresenceStatusData::State' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceStatusData, Properties) == 0x000018, "Member 'FOnlineUserPresenceStatusData::Properties' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineUserPresenceData
// 0x00A8 (0x00A8 - 0x0000)
struct FOnlineUserPresenceData final
{
public:
	struct FUniqueNetIdRepl                       SessionId;                                         // 0x0000(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsOnline;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPlaying;                                         // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsPlayingThisGame;                                 // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          IsJoinable;                                        // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HasVoiceSupport;                                   // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              LastOnline;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOnlineUserPresenceStatusData          Status;                                            // 0x0040(0x0068)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineUserPresenceData) == 0x000008, "Wrong alignment on FOnlineUserPresenceData");
static_assert(sizeof(FOnlineUserPresenceData) == 0x0000A8, "Wrong size on FOnlineUserPresenceData");
static_assert(offsetof(FOnlineUserPresenceData, SessionId) == 0x000000, "Member 'FOnlineUserPresenceData::SessionId' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, IsOnline) == 0x000030, "Member 'FOnlineUserPresenceData::IsOnline' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, IsPlaying) == 0x000031, "Member 'FOnlineUserPresenceData::IsPlaying' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, IsPlayingThisGame) == 0x000032, "Member 'FOnlineUserPresenceData::IsPlayingThisGame' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, IsJoinable) == 0x000033, "Member 'FOnlineUserPresenceData::IsJoinable' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, HasVoiceSupport) == 0x000034, "Member 'FOnlineUserPresenceData::HasVoiceSupport' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, LastOnline) == 0x000038, "Member 'FOnlineUserPresenceData::LastOnline' has a wrong offset!");
static_assert(offsetof(FOnlineUserPresenceData, Status) == 0x000040, "Member 'FOnlineUserPresenceData::Status' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineActivityTasksToResetBP
// 0x0028 (0x0028 - 0x0000)
struct FOnlineActivityTasksToResetBP final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         InProgressTasks;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         CompletedTasks;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineActivityTasksToResetBP) == 0x000008, "Wrong alignment on FOnlineActivityTasksToResetBP");
static_assert(sizeof(FOnlineActivityTasksToResetBP) == 0x000028, "Wrong size on FOnlineActivityTasksToResetBP");
static_assert(offsetof(FOnlineActivityTasksToResetBP, bSet) == 0x000000, "Member 'FOnlineActivityTasksToResetBP::bSet' has a wrong offset!");
static_assert(offsetof(FOnlineActivityTasksToResetBP, InProgressTasks) == 0x000008, "Member 'FOnlineActivityTasksToResetBP::InProgressTasks' has a wrong offset!");
static_assert(offsetof(FOnlineActivityTasksToResetBP, CompletedTasks) == 0x000018, "Member 'FOnlineActivityTasksToResetBP::CompletedTasks' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineAchievementBP
// 0x0018 (0x0018 - 0x0000)
struct FOnlineAchievementBP final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Progress;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOnlineAchievementBP) == 0x000008, "Wrong alignment on FOnlineAchievementBP");
static_assert(sizeof(FOnlineAchievementBP) == 0x000018, "Wrong size on FOnlineAchievementBP");
static_assert(offsetof(FOnlineAchievementBP, ID) == 0x000000, "Member 'FOnlineAchievementBP::ID' has a wrong offset!");
static_assert(offsetof(FOnlineAchievementBP, Progress) == 0x000010, "Member 'FOnlineAchievementBP::Progress' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineAchievementDescBP
// 0x0040 (0x0040 - 0x0000)
struct FOnlineAchievementDescBP final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                   LockedDesc;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class FText                                   UnlockedDesc;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	bool                                          bIsHidden;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              UnlockTime;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineAchievementDescBP) == 0x000008, "Wrong alignment on FOnlineAchievementDescBP");
static_assert(sizeof(FOnlineAchievementDescBP) == 0x000040, "Wrong size on FOnlineAchievementDescBP");
static_assert(offsetof(FOnlineAchievementDescBP, Title) == 0x000000, "Member 'FOnlineAchievementDescBP::Title' has a wrong offset!");
static_assert(offsetof(FOnlineAchievementDescBP, LockedDesc) == 0x000010, "Member 'FOnlineAchievementDescBP::LockedDesc' has a wrong offset!");
static_assert(offsetof(FOnlineAchievementDescBP, UnlockedDesc) == 0x000020, "Member 'FOnlineAchievementDescBP::UnlockedDesc' has a wrong offset!");
static_assert(offsetof(FOnlineAchievementDescBP, bIsHidden) == 0x000030, "Member 'FOnlineAchievementDescBP::bIsHidden' has a wrong offset!");
static_assert(offsetof(FOnlineAchievementDescBP, UnlockTime) == 0x000038, "Member 'FOnlineAchievementDescBP::UnlockTime' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ChatRoomConfigBP
// 0x0020 (0x0020 - 0x0000)
struct FChatRoomConfigBP final
{
public:
	bool                                          bRejoinOnDisconnect;                               // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPasswordRequired;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Password;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAnnounceMembers;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FChatRoomConfigBP) == 0x000008, "Wrong alignment on FChatRoomConfigBP");
static_assert(sizeof(FChatRoomConfigBP) == 0x000020, "Wrong size on FChatRoomConfigBP");
static_assert(offsetof(FChatRoomConfigBP, bRejoinOnDisconnect) == 0x000000, "Member 'FChatRoomConfigBP::bRejoinOnDisconnect' has a wrong offset!");
static_assert(offsetof(FChatRoomConfigBP, bPasswordRequired) == 0x000001, "Member 'FChatRoomConfigBP::bPasswordRequired' has a wrong offset!");
static_assert(offsetof(FChatRoomConfigBP, Password) == 0x000008, "Member 'FChatRoomConfigBP::Password' has a wrong offset!");
static_assert(offsetof(FChatRoomConfigBP, bAnnounceMembers) == 0x000018, "Member 'FChatRoomConfigBP::bAnnounceMembers' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ChatRoomInfoBP
// 0x0080 (0x0080 - 0x0000)
struct FChatRoomInfoBP final
{
public:
	bool                                          bIsValid;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       OwnerId;                                           // 0x0018(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Subject;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrivate;                                          // 0x0058(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bJoined;                                           // 0x0059(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FChatRoomConfigBP                      RoomConfig;                                        // 0x0060(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FChatRoomInfoBP) == 0x000008, "Wrong alignment on FChatRoomInfoBP");
static_assert(sizeof(FChatRoomInfoBP) == 0x000080, "Wrong size on FChatRoomInfoBP");
static_assert(offsetof(FChatRoomInfoBP, bIsValid) == 0x000000, "Member 'FChatRoomInfoBP::bIsValid' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, RoomId) == 0x000008, "Member 'FChatRoomInfoBP::RoomId' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, OwnerId) == 0x000018, "Member 'FChatRoomInfoBP::OwnerId' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, Subject) == 0x000048, "Member 'FChatRoomInfoBP::Subject' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, bPrivate) == 0x000058, "Member 'FChatRoomInfoBP::bPrivate' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, bJoined) == 0x000059, "Member 'FChatRoomInfoBP::bJoined' has a wrong offset!");
static_assert(offsetof(FChatRoomInfoBP, RoomConfig) == 0x000060, "Member 'FChatRoomInfoBP::RoomConfig' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.PurchaseOfferEntryBP
// 0x0028 (0x0028 - 0x0000)
struct FPurchaseOfferEntryBP final
{
public:
	class FString                                 OfferNamespace;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OfferId;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Quantity;                                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FPurchaseOfferEntryBP) == 0x000008, "Wrong alignment on FPurchaseOfferEntryBP");
static_assert(sizeof(FPurchaseOfferEntryBP) == 0x000028, "Wrong size on FPurchaseOfferEntryBP");
static_assert(offsetof(FPurchaseOfferEntryBP, OfferNamespace) == 0x000000, "Member 'FPurchaseOfferEntryBP::OfferNamespace' has a wrong offset!");
static_assert(offsetof(FPurchaseOfferEntryBP, OfferId) == 0x000010, "Member 'FPurchaseOfferEntryBP::OfferId' has a wrong offset!");
static_assert(offsetof(FPurchaseOfferEntryBP, Quantity) == 0x000020, "Member 'FPurchaseOfferEntryBP::Quantity' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.PurchaseCheckoutRequestBP
// 0x0020 (0x0020 - 0x0000)
struct FPurchaseCheckoutRequestBP final
{
public:
	class FString                                 AccountId;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPurchaseOfferEntryBP>          PurchaseOffers;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPurchaseCheckoutRequestBP) == 0x000008, "Wrong alignment on FPurchaseCheckoutRequestBP");
static_assert(sizeof(FPurchaseCheckoutRequestBP) == 0x000020, "Wrong size on FPurchaseCheckoutRequestBP");
static_assert(offsetof(FPurchaseCheckoutRequestBP, AccountId) == 0x000000, "Member 'FPurchaseCheckoutRequestBP::AccountId' has a wrong offset!");
static_assert(offsetof(FPurchaseCheckoutRequestBP, PurchaseOffers) == 0x000010, "Member 'FPurchaseCheckoutRequestBP::PurchaseOffers' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ExternalUIFlowHandlerRegistration
// 0x0018 (0x0018 - 0x0000)
struct FExternalUIFlowHandlerRegistration final
{
public:
	class UObject*                                Interface;                                         // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FExternalUIFlowHandlerRegistration) == 0x000008, "Wrong alignment on FExternalUIFlowHandlerRegistration");
static_assert(sizeof(FExternalUIFlowHandlerRegistration) == 0x000018, "Wrong size on FExternalUIFlowHandlerRegistration");
static_assert(offsetof(FExternalUIFlowHandlerRegistration, Interface) == 0x000000, "Member 'FExternalUIFlowHandlerRegistration::Interface' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ShowStoreParameters
// 0x0028 (0x0028 - 0x0000)
struct FShowStoreParameters final
{
public:
	class FString                                 Category;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductId;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AddToCart;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FShowStoreParameters) == 0x000008, "Wrong alignment on FShowStoreParameters");
static_assert(sizeof(FShowStoreParameters) == 0x000028, "Wrong size on FShowStoreParameters");
static_assert(offsetof(FShowStoreParameters, Category) == 0x000000, "Member 'FShowStoreParameters::Category' has a wrong offset!");
static_assert(offsetof(FShowStoreParameters, ProductId) == 0x000010, "Member 'FShowStoreParameters::ProductId' has a wrong offset!");
static_assert(offsetof(FShowStoreParameters, AddToCart) == 0x000020, "Member 'FShowStoreParameters::AddToCart' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.CloudFileHeaderBP
// 0x0058 (0x0058 - 0x0000)
struct FCloudFileHeaderBP final
{
public:
	class FString                                 Hash;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   HashType;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DLName;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         FileSize;                                          // 0x0038(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0040(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ChunkId;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCloudFileHeaderBP) == 0x000008, "Wrong alignment on FCloudFileHeaderBP");
static_assert(sizeof(FCloudFileHeaderBP) == 0x000058, "Wrong size on FCloudFileHeaderBP");
static_assert(offsetof(FCloudFileHeaderBP, Hash) == 0x000000, "Member 'FCloudFileHeaderBP::Hash' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, HashType) == 0x000010, "Member 'FCloudFileHeaderBP::HashType' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, DLName) == 0x000018, "Member 'FCloudFileHeaderBP::DLName' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, Filename) == 0x000028, "Member 'FCloudFileHeaderBP::Filename' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, FileSize) == 0x000038, "Member 'FCloudFileHeaderBP::FileSize' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, URL) == 0x000040, "Member 'FCloudFileHeaderBP::URL' has a wrong offset!");
static_assert(offsetof(FCloudFileHeaderBP, ChunkId) == 0x000050, "Member 'FCloudFileHeaderBP::ChunkId' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.PagedQueryBP
// 0x0008 (0x0008 - 0x0000)
struct FPagedQueryBP final
{
public:
	int32                                         Start;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPagedQueryBP) == 0x000004, "Wrong alignment on FPagedQueryBP");
static_assert(sizeof(FPagedQueryBP) == 0x000008, "Wrong size on FPagedQueryBP");
static_assert(offsetof(FPagedQueryBP, Start) == 0x000000, "Member 'FPagedQueryBP::Start' has a wrong offset!");
static_assert(offsetof(FPagedQueryBP, Count) == 0x000004, "Member 'FPagedQueryBP::Count' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineFriendSettingsSourceDataConfig
// 0x0001 (0x0001 - 0x0000)
struct FOnlineFriendSettingsSourceDataConfig final
{
public:
	bool                                          NeverShowAgain;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineFriendSettingsSourceDataConfig) == 0x000001, "Wrong alignment on FOnlineFriendSettingsSourceDataConfig");
static_assert(sizeof(FOnlineFriendSettingsSourceDataConfig) == 0x000001, "Wrong size on FOnlineFriendSettingsSourceDataConfig");
static_assert(offsetof(FOnlineFriendSettingsSourceDataConfig, NeverShowAgain) == 0x000000, "Member 'FOnlineFriendSettingsSourceDataConfig::NeverShowAgain' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineActivityPlayerLocationBP
// 0x0030 (0x0030 - 0x0000)
struct FOnlineActivityPlayerLocationBP final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ZoneId;                                            // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Coordinates;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineActivityPlayerLocationBP) == 0x000008, "Wrong alignment on FOnlineActivityPlayerLocationBP");
static_assert(sizeof(FOnlineActivityPlayerLocationBP) == 0x000030, "Wrong size on FOnlineActivityPlayerLocationBP");
static_assert(offsetof(FOnlineActivityPlayerLocationBP, bSet) == 0x000000, "Member 'FOnlineActivityPlayerLocationBP::bSet' has a wrong offset!");
static_assert(offsetof(FOnlineActivityPlayerLocationBP, ZoneId) == 0x000008, "Member 'FOnlineActivityPlayerLocationBP::ZoneId' has a wrong offset!");
static_assert(offsetof(FOnlineActivityPlayerLocationBP, Coordinates) == 0x000018, "Member 'FOnlineActivityPlayerLocationBP::Coordinates' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.OnlineStatsRowBP
// 0x0098 (0x0098 - 0x0000)
struct FOnlineStatsRowBP final
{
public:
	class FString                                 PlayerNickname;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       PlayerId;                                          // 0x0010(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Rank;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FVariantDataBP>      Columns;                                           // 0x0048(0x0050)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOnlineStatsRowBP) == 0x000008, "Wrong alignment on FOnlineStatsRowBP");
static_assert(sizeof(FOnlineStatsRowBP) == 0x000098, "Wrong size on FOnlineStatsRowBP");
static_assert(offsetof(FOnlineStatsRowBP, PlayerNickname) == 0x000000, "Member 'FOnlineStatsRowBP::PlayerNickname' has a wrong offset!");
static_assert(offsetof(FOnlineStatsRowBP, PlayerId) == 0x000010, "Member 'FOnlineStatsRowBP::PlayerId' has a wrong offset!");
static_assert(offsetof(FOnlineStatsRowBP, Rank) == 0x000040, "Member 'FOnlineStatsRowBP::Rank' has a wrong offset!");
static_assert(offsetof(FOnlineStatsRowBP, Columns) == 0x000048, "Member 'FOnlineStatsRowBP::Columns' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.ColumnMetaDataBP
// 0x000C (0x000C - 0x0000)
struct FColumnMetaDataBP final
{
public:
	class FName                                   ColumnName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOnlineKeyValuePairDataType_                  DataType;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FColumnMetaDataBP) == 0x000004, "Wrong alignment on FColumnMetaDataBP");
static_assert(sizeof(FColumnMetaDataBP) == 0x00000C, "Wrong size on FColumnMetaDataBP");
static_assert(offsetof(FColumnMetaDataBP, ColumnName) == 0x000000, "Member 'FColumnMetaDataBP::ColumnName' has a wrong offset!");
static_assert(offsetof(FColumnMetaDataBP, DataType) == 0x000008, "Member 'FColumnMetaDataBP::DataType' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.RedeemCodeRequestBP
// 0x0030 (0x0030 - 0x0000)
struct FRedeemCodeRequestBP final
{
public:
	class FString                                 Code;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CodeUseId;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FulfillmentSource;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRedeemCodeRequestBP) == 0x000008, "Wrong alignment on FRedeemCodeRequestBP");
static_assert(sizeof(FRedeemCodeRequestBP) == 0x000030, "Wrong size on FRedeemCodeRequestBP");
static_assert(offsetof(FRedeemCodeRequestBP, Code) == 0x000000, "Member 'FRedeemCodeRequestBP::Code' has a wrong offset!");
static_assert(offsetof(FRedeemCodeRequestBP, CodeUseId) == 0x000010, "Member 'FRedeemCodeRequestBP::CodeUseId' has a wrong offset!");
static_assert(offsetof(FRedeemCodeRequestBP, FulfillmentSource) == 0x000020, "Member 'FRedeemCodeRequestBP::FulfillmentSource' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.NamedOnlineSessionBP
// 0x0058 (0x0208 - 0x01B0)
struct FNamedOnlineSessionBP final : public FOnlineSessionBP
{
public:
	class FName                                   SessionName;                                       // 0x01B0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHosting;                                          // 0x01B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       LocalOwnerId;                                      // 0x01C0(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUniqueNetIdRepl>               RegisteredPlayers;                                 // 0x01F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	EOnlineSessionState_                          SessionState;                                      // 0x0200(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FNamedOnlineSessionBP) == 0x000008, "Wrong alignment on FNamedOnlineSessionBP");
static_assert(sizeof(FNamedOnlineSessionBP) == 0x000208, "Wrong size on FNamedOnlineSessionBP");
static_assert(offsetof(FNamedOnlineSessionBP, SessionName) == 0x0001B0, "Member 'FNamedOnlineSessionBP::SessionName' has a wrong offset!");
static_assert(offsetof(FNamedOnlineSessionBP, bHosting) == 0x0001B8, "Member 'FNamedOnlineSessionBP::bHosting' has a wrong offset!");
static_assert(offsetof(FNamedOnlineSessionBP, LocalOwnerId) == 0x0001C0, "Member 'FNamedOnlineSessionBP::LocalOwnerId' has a wrong offset!");
static_assert(offsetof(FNamedOnlineSessionBP, RegisteredPlayers) == 0x0001F0, "Member 'FNamedOnlineSessionBP::RegisteredPlayers' has a wrong offset!");
static_assert(offsetof(FNamedOnlineSessionBP, SessionState) == 0x000200, "Member 'FNamedOnlineSessionBP::SessionState' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.SessionSearchParamBP
// 0x0030 (0x0030 - 0x0000)
struct FSessionSearchParamBP final
{
public:
	struct FVariantDataBP                         Data;                                              // 0x0000(0x0028)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EOnlineComparisonOp_                          Op;                                                // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ID;                                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSessionSearchParamBP) == 0x000008, "Wrong alignment on FSessionSearchParamBP");
static_assert(sizeof(FSessionSearchParamBP) == 0x000030, "Wrong size on FSessionSearchParamBP");
static_assert(offsetof(FSessionSearchParamBP, Data) == 0x000000, "Member 'FSessionSearchParamBP::Data' has a wrong offset!");
static_assert(offsetof(FSessionSearchParamBP, Op) == 0x000028, "Member 'FSessionSearchParamBP::Op' has a wrong offset!");
static_assert(offsetof(FSessionSearchParamBP, ID) == 0x00002C, "Member 'FSessionSearchParamBP::ID' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.VoiceChatDeviceInfoBP
// 0x0020 (0x0020 - 0x0000)
struct FVoiceChatDeviceInfoBP final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVoiceChatDeviceInfoBP) == 0x000008, "Wrong alignment on FVoiceChatDeviceInfoBP");
static_assert(sizeof(FVoiceChatDeviceInfoBP) == 0x000020, "Wrong size on FVoiceChatDeviceInfoBP");
static_assert(offsetof(FVoiceChatDeviceInfoBP, DisplayName) == 0x000000, "Member 'FVoiceChatDeviceInfoBP::DisplayName' has a wrong offset!");
static_assert(offsetof(FVoiceChatDeviceInfoBP, ID) == 0x000010, "Member 'FVoiceChatDeviceInfoBP::ID' has a wrong offset!");

// ScriptStruct OnlineSubsystemBlueprints.VoiceChatChannel3dPropertiesBP
// 0x0010 (0x0010 - 0x0000)
struct FVoiceChatChannel3dPropertiesBP final
{
public:
	bool                                          bSet;                                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVoiceChatAttenuationModel_                   AttenuationModel;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinDistance;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaxDistance;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rolloff;                                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FVoiceChatChannel3dPropertiesBP) == 0x000004, "Wrong alignment on FVoiceChatChannel3dPropertiesBP");
static_assert(sizeof(FVoiceChatChannel3dPropertiesBP) == 0x000010, "Wrong size on FVoiceChatChannel3dPropertiesBP");
static_assert(offsetof(FVoiceChatChannel3dPropertiesBP, bSet) == 0x000000, "Member 'FVoiceChatChannel3dPropertiesBP::bSet' has a wrong offset!");
static_assert(offsetof(FVoiceChatChannel3dPropertiesBP, AttenuationModel) == 0x000001, "Member 'FVoiceChatChannel3dPropertiesBP::AttenuationModel' has a wrong offset!");
static_assert(offsetof(FVoiceChatChannel3dPropertiesBP, MinDistance) == 0x000004, "Member 'FVoiceChatChannel3dPropertiesBP::MinDistance' has a wrong offset!");
static_assert(offsetof(FVoiceChatChannel3dPropertiesBP, MaxDistance) == 0x000008, "Member 'FVoiceChatChannel3dPropertiesBP::MaxDistance' has a wrong offset!");
static_assert(offsetof(FVoiceChatChannel3dPropertiesBP, Rolloff) == 0x00000C, "Member 'FVoiceChatChannel3dPropertiesBP::Rolloff' has a wrong offset!");

}

