#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FlySkill

#include "Basic.hpp"

#include "B_FlySkill_classes.hpp"
#include "B_FlySkill_parameters.hpp"


namespace SDK
{

// Function B_FlySkill.B_FlySkill_C.DecreaseFlySoundVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlySkill_C::DecreaseFlySoundVolume(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "DecreaseFlySoundVolume");

	Params::B_FlySkill_C_DecreaseFlySoundVolume Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FlySkill.B_FlySkill_C.DisableEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::DisableEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "DisableEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.EnableEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::EnableEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "EnableEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.ExecuteUbergraph_B_FlySkill
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlySkill_C::ExecuteUbergraph_B_FlySkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "ExecuteUbergraph_B_FlySkill");

	Params::B_FlySkill_C_ExecuteUbergraph_B_FlySkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FlySkill.B_FlySkill_C.IncreaseFlySoundVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlySkill_C::IncreaseFlySoundVolume(double DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "IncreaseFlySoundVolume");

	Params::B_FlySkill_C_IncreaseFlySoundVolume Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FlySkill.B_FlySkill_C.InitializeRules
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::InitializeRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "InitializeRules");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.Kill
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "Kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.OnSkillDownMulti
// (Event, Public, BlueprintEvent)

void UB_FlySkill_C::OnSkillDownMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "OnSkillDownMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.OnSkillUpMulti
// (Event, Public, BlueprintEvent)

void UB_FlySkill_C::OnSkillUpMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "OnSkillUpMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.Press
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::Press()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "Press");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.PropFlying
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::PropFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "PropFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UB_FlySkill_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlySkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "ReceiveTick");

	Params::B_FlySkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FlySkill.B_FlySkill_C.Release
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.ReleaseFlying
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::ReleaseFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "ReleaseFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.SetFlying
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::SetFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "SetFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.UpdateFlying
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlySkill_C::UpdateFlying()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "UpdateFlying");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlySkill.B_FlySkill_C.WitchFlying
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterMovementComponent*      MovementComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSlowed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlySkill_C::WitchFlying(class UCharacterMovementComponent* MovementComponent, bool IsSlowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlySkill_C", "WitchFlying");

	Params::B_FlySkill_C_WitchFlying Parms{};

	Parms.MovementComponent = MovementComponent;
	Parms.IsSlowed = IsSlowed;

	UObject::ProcessEvent(Func, &Parms);
}

}

