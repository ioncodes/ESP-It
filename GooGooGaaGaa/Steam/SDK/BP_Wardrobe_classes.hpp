#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Wardrobe

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_BaseUtilityPlaceable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Wardrobe.BP_Wardrobe_C
// 0x0048 (0x03D0 - 0x0388)
class ABP_Wardrobe_C final : public ABP_BaseUtilityPlaceable_C
{
public:
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Wardrobe_C;                      // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Collision;                                         // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Suitcase;                                          // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractionArea;                                   // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       UI;                                                // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Open;                                              // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VaraintMinTime;                                    // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VaraintMaxTime;                                    // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFadingOut;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BeginOverlap(class UObject* Object);
	void BndEvt__BP_Wardrobe_InteractionZone1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_Wardrobe_InteractionZone1_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CloseCaseMulti();
	void CountPawnsInArea();
	void ExecuteUbergraph_BP_Wardrobe(int32 EntryPoint);
	void Finished_07F471BE4A62609A90EAC5A9748C16DA();
	void IdleVariant();
	void IdleVariantMulti();
	void InitializeRules();
	void InpActEvt_Action_K2Node_InputActionEvent_0(const struct FKey& Key);
	bool IsOffScreen(class UWidget* Widget);
	void OpenCaseMulti();
	void PlayRefreshEffectMulti(class APawn* Pawn);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Wardrobe_C">();
	}
	static class ABP_Wardrobe_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Wardrobe_C>();
	}
};
static_assert(alignof(ABP_Wardrobe_C) == 0x000008, "Wrong alignment on ABP_Wardrobe_C");
static_assert(sizeof(ABP_Wardrobe_C) == 0x0003D0, "Wrong size on ABP_Wardrobe_C");
static_assert(offsetof(ABP_Wardrobe_C, UberGraphFrame_BP_Wardrobe_C) == 0x000388, "Member 'ABP_Wardrobe_C::UberGraphFrame_BP_Wardrobe_C' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, Collision) == 0x000390, "Member 'ABP_Wardrobe_C::Collision' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, Suitcase) == 0x000398, "Member 'ABP_Wardrobe_C::Suitcase' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, InteractionArea) == 0x0003A0, "Member 'ABP_Wardrobe_C::InteractionArea' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, UI) == 0x0003A8, "Member 'ABP_Wardrobe_C::UI' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, Open) == 0x0003B0, "Member 'ABP_Wardrobe_C::Open' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, VaraintMinTime) == 0x0003B8, "Member 'ABP_Wardrobe_C::VaraintMinTime' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, VaraintMaxTime) == 0x0003C0, "Member 'ABP_Wardrobe_C::VaraintMaxTime' has a wrong offset!");
static_assert(offsetof(ABP_Wardrobe_C, IsFadingOut) == 0x0003C8, "Member 'ABP_Wardrobe_C::IsFadingOut' has a wrong offset!");

}

