#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativeGameMode

#include "Basic.hpp"

#include "B_CreativeGameMode_classes.hpp"
#include "B_CreativeGameMode_parameters.hpp"


namespace SDK
{

// Function B_CreativeGameMode.B_CreativeGameMode_C.AddPrefab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPrefabToSave                    PrefabToAdd                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::AddPrefab(const struct FPrefabToSave& PrefabToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "AddPrefab");

	Params::B_CreativeGameMode_C_AddPrefab Parms{};

	Parms.PrefabToAdd = std::move(PrefabToAdd);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.BeginPlayTest
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::BeginPlayTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "BeginPlayTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.CheckIfAllPlayersAreReady
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::CheckIfAllPlayersAreReady(bool* IsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "CheckIfAllPlayersAreReady");

	Params::B_CreativeGameMode_C_CheckIfAllPlayersAreReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReady != nullptr)
		*IsReady = Parms.IsReady;
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.CleanupWorkshopSubmit
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::CleanupWorkshopSubmit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "CleanupWorkshopSubmit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.CreateAutoSave
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlayTestSave                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::CreateAutoSave(bool IsPlayTestSave, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "CreateAutoSave");

	Params::B_CreativeGameMode_C_CreateAutoSave Parms{};

	Parms.IsPlayTestSave = IsPlayTestSave;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.DeleteLayout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PropLayoutData                LayoutData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::DeleteLayout(const struct FS_PropLayoutData& LayoutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "DeleteLayout");

	Params::B_CreativeGameMode_C_DeleteLayout Parms{};

	Parms.LayoutData = std::move(LayoutData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.DeletePrefab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPrefabToSave                    PrefabToAdd                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::DeletePrefab(const struct FPrefabToSave& PrefabToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "DeletePrefab");

	Params::B_CreativeGameMode_C_DeletePrefab Parms{};

	Parms.PrefabToAdd = std::move(PrefabToAdd);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.EndPlayTest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::EndPlayTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "EndPlayTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.ExecuteUbergraph_B_CreativeGameMode
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::ExecuteUbergraph_B_CreativeGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "ExecuteUbergraph_B_CreativeGameMode");

	Params::B_CreativeGameMode_C_ExecuteUbergraph_B_CreativeGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.HandleStartMatch
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::HandleStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "HandleStartMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.LoadLayout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PropLayoutData                LayoutData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    UseCompression                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLoadAfterPlayTest                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::LoadLayout(const struct FS_PropLayoutData& LayoutData, bool UseCompression, bool IsLoadAfterPlayTest)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "LoadLayout");

	Params::B_CreativeGameMode_C_LoadLayout Parms{};

	Parms.LayoutData = std::move(LayoutData);
	Parms.UseCompression = UseCompression;
	Parms.IsLoadAfterPlayTest = IsLoadAfterPlayTest;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.LoadPropLayoutFromSaveGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FPropToSave>              PropsToLoad                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableStaticToSave>   PlaceableStaticsToLoad                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableLightToSave>    PlaceableLightsToLoad                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FSwitchToSave>            SwitchesToLoad                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPrefabToSave>            PrefabsToLoad                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   LoadedPropsCount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LoadedPlaceableStaticsCount                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::LoadPropLayoutFromSaveGame(TArray<struct FPropToSave>& PropsToLoad, TArray<struct FPlaceableStaticToSave>& PlaceableStaticsToLoad, TArray<struct FPlaceableLightToSave>& PlaceableLightsToLoad, TArray<struct FSwitchToSave>& SwitchesToLoad, TArray<struct FPrefabToSave>& PrefabsToLoad, int32* LoadedPropsCount, int32* LoadedPlaceableStaticsCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "LoadPropLayoutFromSaveGame");

	Params::B_CreativeGameMode_C_LoadPropLayoutFromSaveGame Parms{};

	Parms.PropsToLoad = std::move(PropsToLoad);
	Parms.PlaceableStaticsToLoad = std::move(PlaceableStaticsToLoad);
	Parms.PlaceableLightsToLoad = std::move(PlaceableLightsToLoad);
	Parms.SwitchesToLoad = std::move(SwitchesToLoad);
	Parms.PrefabsToLoad = std::move(PrefabsToLoad);

	UObject::ProcessEvent(Func, &Parms);

	PropsToLoad = std::move(Parms.PropsToLoad);
	PlaceableStaticsToLoad = std::move(Parms.PlaceableStaticsToLoad);
	PlaceableLightsToLoad = std::move(Parms.PlaceableLightsToLoad);
	SwitchesToLoad = std::move(Parms.SwitchesToLoad);
	PrefabsToLoad = std::move(Parms.PrefabsToLoad);

	if (LoadedPropsCount != nullptr)
		*LoadedPropsCount = Parms.LoadedPropsCount;

	if (LoadedPlaceableStaticsCount != nullptr)
		*LoadedPlaceableStaticsCount = Parms.LoadedPlaceableStaticsCount;
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.LoadWorlshopItemDetails
// (BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::LoadWorlshopItemDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "LoadWorlshopItemDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.NewLayout
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::NewLayout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "NewLayout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnAutoSaveTimerFinished
// (BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::OnAutoSaveTimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnAutoSaveTimerFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnFailure_0211EB7D4BDCC66DDC38C997ED68826C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCreateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnFailure_0211EB7D4BDCC66DDC38C997ED68826C(const struct FCreateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnFailure_0211EB7D4BDCC66DDC38C997ED68826C");

	Params::B_CreativeGameMode_C_OnFailure_0211EB7D4BDCC66DDC38C997ED68826C Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnFailure_0FC6411D4107371AAF78E1BD2B8DA680
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQueryWorkshopForItemDetailsResultBRGResult                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnFailure_0FC6411D4107371AAF78E1BD2B8DA680(const struct FQueryWorkshopForItemDetailsResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnFailure_0FC6411D4107371AAF78E1BD2B8DA680");

	Params::B_CreativeGameMode_C_OnFailure_0FC6411D4107371AAF78E1BD2B8DA680 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnFailure_C76441BD47264402DAE1D2AADC8706E9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUpdateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AB_CreativeGameMode_C::OnFailure_C76441BD47264402DAE1D2AADC8706E9(const struct FUpdateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnFailure_C76441BD47264402DAE1D2AADC8706E9");

	Params::B_CreativeGameMode_C_OnFailure_C76441BD47264402DAE1D2AADC8706E9 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnSteamInitFailure_0211EB7D4BDCC66DDC38C997ED68826C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCreateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnSteamInitFailure_0211EB7D4BDCC66DDC38C997ED68826C(const struct FCreateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnSteamInitFailure_0211EB7D4BDCC66DDC38C997ED68826C");

	Params::B_CreativeGameMode_C_OnSteamInitFailure_0211EB7D4BDCC66DDC38C997ED68826C Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnSteamInitFailure_0FC6411D4107371AAF78E1BD2B8DA680
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQueryWorkshopForItemDetailsResultBRGResult                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnSteamInitFailure_0FC6411D4107371AAF78E1BD2B8DA680(const struct FQueryWorkshopForItemDetailsResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnSteamInitFailure_0FC6411D4107371AAF78E1BD2B8DA680");

	Params::B_CreativeGameMode_C_OnSteamInitFailure_0FC6411D4107371AAF78E1BD2B8DA680 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnSteamInitFailure_C76441BD47264402DAE1D2AADC8706E9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUpdateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AB_CreativeGameMode_C::OnSteamInitFailure_C76441BD47264402DAE1D2AADC8706E9(const struct FUpdateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnSteamInitFailure_C76441BD47264402DAE1D2AADC8706E9");

	Params::B_CreativeGameMode_C_OnSteamInitFailure_C76441BD47264402DAE1D2AADC8706E9 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnSuccess_0211EB7D4BDCC66DDC38C997ED68826C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FCreateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnSuccess_0211EB7D4BDCC66DDC38C997ED68826C(const struct FCreateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnSuccess_0211EB7D4BDCC66DDC38C997ED68826C");

	Params::B_CreativeGameMode_C_OnSuccess_0211EB7D4BDCC66DDC38C997ED68826C Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnSuccess_0FC6411D4107371AAF78E1BD2B8DA680
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FQueryWorkshopForItemDetailsResultBRGResult                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::OnSuccess_0FC6411D4107371AAF78E1BD2B8DA680(const struct FQueryWorkshopForItemDetailsResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnSuccess_0FC6411D4107371AAF78E1BD2B8DA680");

	Params::B_CreativeGameMode_C_OnSuccess_0FC6411D4107371AAF78E1BD2B8DA680 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.OnUpdateComplete_C76441BD47264402DAE1D2AADC8706E9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUpdateWorkshopItemResultBRG     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AB_CreativeGameMode_C::OnUpdateComplete_C76441BD47264402DAE1D2AADC8706E9(const struct FUpdateWorkshopItemResultBRG& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "OnUpdateComplete_C76441BD47264402DAE1D2AADC8706E9");

	Params::B_CreativeGameMode_C_OnUpdateComplete_C76441BD47264402DAE1D2AADC8706E9 Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.ProceedUploadToSteamWorkshop
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FWorkshopUpdateDetails           ItemDetails                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void AB_CreativeGameMode_C::ProceedUploadToSteamWorkshop(const struct FWorkshopUpdateDetails& ItemDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "ProceedUploadToSteamWorkshop");

	Params::B_CreativeGameMode_C_ProceedUploadToSteamWorkshop Parms{};

	Parms.ItemDetails = std::move(ItemDetails);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_CreativeGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.RegisterPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::RegisterPlayer(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "RegisterPlayer");

	Params::B_CreativeGameMode_C_RegisterPlayer Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.RegisterPlayerOverride
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ClassToSpawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::RegisterPlayerOverride(class AController* PlayerController, class UClass* ClassToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "RegisterPlayerOverride");

	Params::B_CreativeGameMode_C_RegisterPlayerOverride Parms{};

	Parms.PlayerController = PlayerController;
	Parms.ClassToSpawn = ClassToSpawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.SaveLayout
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LayoutName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    UseCompression                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAutoSave                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::SaveLayout(const class FString& LayoutName, bool UseCompression, bool IsAutoSave, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "SaveLayout");

	Params::B_CreativeGameMode_C_SaveLayout Parms{};

	Parms.LayoutName = std::move(LayoutName);
	Parms.UseCompression = UseCompression;
	Parms.IsAutoSave = IsAutoSave;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.SetCreativeDefaultPlayerSkillsIfNecessary
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::SetCreativeDefaultPlayerSkillsIfNecessary(class AController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "SetCreativeDefaultPlayerSkillsIfNecessary");

	Params::B_CreativeGameMode_C_SetCreativeDefaultPlayerSkillsIfNecessary Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.SetKilledWitchToSpectator
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           WitchActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpawnAtPlayerStart                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::SetKilledWitchToSpectator(class AActor* WitchActor, class APlayerState* Killer, bool SpawnAtPlayerStart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "SetKilledWitchToSpectator");

	Params::B_CreativeGameMode_C_SetKilledWitchToSpectator Parms{};

	Parms.WitchActor = WitchActor;
	Parms.Killer = Killer;
	Parms.SpawnAtPlayerStart = SpawnAtPlayerStart;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.SpawnDefaultPawnFor
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           StartSpot                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class APawn* AB_CreativeGameMode_C::SpawnDefaultPawnFor(class AController* NewPlayer, class AActor* StartSpot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "SpawnDefaultPawnFor");

	Params::B_CreativeGameMode_C_SpawnDefaultPawnFor Parms{};

	Parms.NewPlayer = NewPlayer;
	Parms.StartSpot = StartSpot;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.StartNewAutoSaveTimer
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_CreativeGameMode_C::StartNewAutoSaveTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "StartNewAutoSaveTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.UpdateStarted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUGCUpdateHandle                 UpdateHandle                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AB_CreativeGameMode_C::UpdateStarted(const struct FUGCUpdateHandle& UpdateHandle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "UpdateStarted");

	Params::B_CreativeGameMode_C_UpdateStarted Parms{};

	Parms.UpdateHandle = std::move(UpdateHandle);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeGameMode.B_CreativeGameMode_C.UploadLayoutToSteamWorkshop
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LayoutName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Description                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ChangeNotes                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EItemVisibility                         Visibility                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeGameMode_C::UploadLayoutToSteamWorkshop(const class FString& LayoutName, const class FString& Description, const class FString& ChangeNotes, EItemVisibility Visibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeGameMode_C", "UploadLayoutToSteamWorkshop");

	Params::B_CreativeGameMode_C_UploadLayoutToSteamWorkshop Parms{};

	Parms.LayoutName = std::move(LayoutName);
	Parms.Description = std::move(Description);
	Parms.ChangeNotes = std::move(ChangeNotes);
	Parms.Visibility = Visibility;

	UObject::ProcessEvent(Func, &Parms);
}

}

