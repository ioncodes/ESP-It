#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CheckBoxWithEditableLabel

#include "Basic.hpp"

#include "PropWitchHuntModule_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.OnCheckStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature final
{
public:
	class UWB_CheckBoxWithEditableLabel_C*        Sender;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsChecked;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature) == 0x000010, "Wrong size on WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature, Sender) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature::Sender' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature, IsChecked) == 0x000008, "Member 'WB_CheckBoxWithEditableLabel_C_OnCheckStateChanged__DelegateSignature::IsChecked' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_BndEvt__CheckBox_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.CheckDefaultToUpdateUI
// 0x0006 (0x0006 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI) == 0x000006, "Wrong size on WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, Temp_bool_Variable) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, Temp_byte_Variable) == 0x000001, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, Temp_byte_Variable_1) == 0x000002, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, CallFunc_IsChecked_ReturnValue) == 0x000003, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000004, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI, K2Node_Select_Default) == 0x000005, "Member 'WB_CheckBoxWithEditableLabel_C_CheckDefaultToUpdateUI::K2Node_Select_Default' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.CreateTooltip
// 0x0030 (0x0030 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_CreateTooltip final
{
public:
	class UWB_ToolTip_C*                          ToolTip;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_TooltipTextContent_C*               ToolTipContent;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_ToolTip_C*                          CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_TooltipTextContent_C*               CallFunc_Create_ReturnValue_1;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_CreateTooltip) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_CreateTooltip");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_CreateTooltip) == 0x000030, "Wrong size on WB_CheckBoxWithEditableLabel_C_CreateTooltip");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, ToolTip) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::ToolTip' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, ToolTipContent) == 0x000008, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::ToolTipContent' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000018, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_CreateTooltip, CallFunc_Create_ReturnValue_1) == 0x000028, "Member 'WB_CheckBoxWithEditableLabel_C_CreateTooltip::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.ExecuteUbergraph_WB_CheckBoxWithEditableLabel
// 0x0130 (0x0130 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry_1;                         // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTextBlock*>                     K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_InIsChecked_1;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InIsChecked;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0060(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0098(0x0078)(ConstParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x011C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel) == 0x000130, "Wrong size on WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, EntryPoint) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_Event_MyGeometry_1) == 0x000008, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_Event_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_MakeArray_Array) == 0x000048, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_CustomEvent_InIsChecked_1) == 0x000058, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_CustomEvent_InIsChecked_1' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_Event_IsDesignTime) == 0x000059, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_IsChecked_ReturnValue) == 0x00005A, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_Not_PreBool_ReturnValue) == 0x00005B, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_ComponentBoundEvent_bIsChecked) == 0x00005C, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_CustomEvent_InIsChecked) == 0x00005D, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_CustomEvent_InIsChecked' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_Event_MyGeometry) == 0x000060, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_Event_MouseEvent) == 0x000098, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_PlayAnimation_ReturnValue) == 0x000110, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_IsHovered_ReturnValue) == 0x000118, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, K2Node_CreateDelegate_OutputDelegate) == 0x00011C, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_HasAnyUserFocus_ReturnValue) == 0x00012C, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_BooleanAND_ReturnValue) == 0x00012D, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel, CallFunc_BooleanOR_ReturnValue) == 0x00012E, "Member 'WB_CheckBoxWithEditableLabel_C_ExecuteUbergraph_WB_CheckBoxWithEditableLabel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.GetIsChecked
// 0x0002 (0x0002 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_GetIsChecked final
{
public:
	bool                                          IsChecked;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_GetIsChecked) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_GetIsChecked");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_GetIsChecked) == 0x000002, "Wrong size on WB_CheckBoxWithEditableLabel_C_GetIsChecked");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_GetIsChecked, IsChecked) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_GetIsChecked::IsChecked' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_GetIsChecked, CallFunc_IsChecked_ReturnValue) == 0x000001, "Member 'WB_CheckBoxWithEditableLabel_C_GetIsChecked::CallFunc_IsChecked_ReturnValue' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.InitializeBoolParam
// 0x0078 (0x0078 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_InitializeBoolParam final
{
public:
	struct FUIParameterData                       BoolParam;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FUIParam                               DefaultValue;                                      // 0x0060(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_InitializeBoolParam");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam) == 0x000078, "Wrong size on WB_CheckBoxWithEditableLabel_C_InitializeBoolParam");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam, BoolParam) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_InitializeBoolParam::BoolParam' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam, DefaultValue) == 0x000060, "Member 'WB_CheckBoxWithEditableLabel_C_InitializeBoolParam::DefaultValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam, CallFunc_TextIsEmpty_ReturnValue) == 0x000074, "Member 'WB_CheckBoxWithEditableLabel_C_InitializeBoolParam::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_InitializeBoolParam, CallFunc_Not_PreBool_ReturnValue) == 0x000075, "Member 'WB_CheckBoxWithEditableLabel_C_InitializeBoolParam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_OnFocusReceived");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived) == 0x0001B8, "Wrong size on WB_CheckBoxWithEditableLabel_C_OnFocusReceived");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_CheckBoxWithEditableLabel_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_CheckBoxWithEditableLabel_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WB_CheckBoxWithEditableLabel_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnFocusReceived, CallFunc_PlayAnimation_ReturnValue) == 0x0001B0, "Member 'WB_CheckBoxWithEditableLabel_C_OnFocusReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_OnMouseEnter) == 0x000008, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_OnMouseEnter");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_OnMouseEnter) == 0x0000B0, "Wrong size on WB_CheckBoxWithEditableLabel_C_OnMouseEnter");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WB_CheckBoxWithEditableLabel_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_PreConstruct) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_PreConstruct");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_PreConstruct) == 0x000001, "Wrong size on WB_CheckBoxWithEditableLabel_C_PreConstruct");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.SetIsChecked
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_SetIsChecked final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_SetIsChecked) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_SetIsChecked");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_SetIsChecked) == 0x000001, "Wrong size on WB_CheckBoxWithEditableLabel_C_SetIsChecked");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_SetIsChecked, InIsChecked) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_SetIsChecked::InIsChecked' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.SetIsCheckedWithoutEvent
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent final
{
public:
	bool                                          InIsChecked;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent) == 0x000001, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent) == 0x000001, "Wrong size on WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent, InIsChecked) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_SetIsCheckedWithoutEvent::InIsChecked' has a wrong offset!");

// Function WB_CheckBoxWithEditableLabel.WB_CheckBoxWithEditableLabel_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CheckBoxWithEditableLabel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithEditableLabel_C_Tick) == 0x000004, "Wrong alignment on WB_CheckBoxWithEditableLabel_C_Tick");
static_assert(sizeof(WB_CheckBoxWithEditableLabel_C_Tick) == 0x00003C, "Wrong size on WB_CheckBoxWithEditableLabel_C_Tick");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CheckBoxWithEditableLabel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithEditableLabel_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CheckBoxWithEditableLabel_C_Tick::InDeltaTime' has a wrong offset!");

}

