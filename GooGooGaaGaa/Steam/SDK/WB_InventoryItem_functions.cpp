#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_InventoryItem

#include "Basic.hpp"

#include "WB_InventoryItem_classes.hpp"
#include "WB_InventoryItem_parameters.hpp"


namespace SDK
{

// Function WB_InventoryItem.WB_InventoryItem_C.Clicked
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_InventoryItem_C::Clicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "Clicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_InventoryItem.WB_InventoryItem_C.GetIsButtonEnabled
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsEnabled                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_InventoryItem_C::GetIsButtonEnabled(bool* IsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "GetIsButtonEnabled");

	Params::WB_InventoryItem_C_GetIsButtonEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsEnabled != nullptr)
		*IsEnabled = Parms.IsEnabled;
}


// Function WB_InventoryItem.WB_InventoryItem_C.GetNotifyButtonVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsVisible_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_InventoryItem_C::GetNotifyButtonVisibility(bool* IsVisible_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "GetNotifyButtonVisibility");

	Params::WB_InventoryItem_C_GetNotifyButtonVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsVisible_0 != nullptr)
		*IsVisible_0 = Parms.IsVisible_0;
}


// Function WB_InventoryItem.WB_InventoryItem_C.GetQuantity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Quantity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_InventoryItem_C::GetQuantity(int32* Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "GetQuantity");

	Params::WB_InventoryItem_C_GetQuantity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quantity != nullptr)
		*Quantity = Parms.Quantity;
}


// Function WB_InventoryItem.WB_InventoryItem_C.GetQuantityText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Quantity                                               (Parm, OutParm)

void UWB_InventoryItem_C::GetQuantityText(class FText* Quantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "GetQuantityText");

	Params::WB_InventoryItem_C_GetQuantityText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Quantity != nullptr)
		*Quantity = std::move(Parms.Quantity);
}


// Function WB_InventoryItem.WB_InventoryItem_C.GetQuantityVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ShowQuantity                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_InventoryItem_C::GetQuantityVisibility(bool* ShowQuantity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "GetQuantityVisibility");

	Params::WB_InventoryItem_C_GetQuantityVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShowQuantity != nullptr)
		*ShowQuantity = Parms.ShowQuantity;
}


// Function WB_InventoryItem.WB_InventoryItem_C.SetIndividualParameters
// (Protected, BlueprintCallable, BlueprintEvent)

void UWB_InventoryItem_C::SetIndividualParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_InventoryItem_C", "SetIndividualParameters");

	UObject::ProcessEvent(Func, nullptr);
}

}

