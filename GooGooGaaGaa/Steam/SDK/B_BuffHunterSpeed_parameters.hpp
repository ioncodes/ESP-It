#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BuffHunterSpeed

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.ApplySpeedMultiplier
// 0x0088 (0x0088 - 0x0000)
struct B_BuffHunterSpeed_C_ApplySpeedMultiplier final
{
public:
	class AB_Hunter_C*                            Hunter;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PowerBall_C*                         K2Node_DynamicCast_AsB_Power_Ball;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_ApplySpeedMultiplier) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_ApplySpeedMultiplier");
static_assert(sizeof(B_BuffHunterSpeed_C_ApplySpeedMultiplier) == 0x000088, "Wrong size on B_BuffHunterSpeed_C_ApplySpeedMultiplier");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, Hunter) == 0x000000, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::Hunter' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_DynamicCast_AsB_Power_Ball) == 0x000018, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_DynamicCast_AsB_Power_Ball' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_DynamicCast_AsB_Hunter) == 0x000030, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000040, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000060, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast) == 0x000068, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast) == 0x000070, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000078, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ApplySpeedMultiplier, K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast) == 0x000080, "Member 'B_BuffHunterSpeed_C_ApplySpeedMultiplier::K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast' has a wrong offset!");

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.BuffStart
// 0x0008 (0x0008 - 0x0000)
struct B_BuffHunterSpeed_C_BuffStart final
{
public:
	class AB_PlayerState_C*                       PlayerState_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_BuffStart) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_BuffStart");
static_assert(sizeof(B_BuffHunterSpeed_C_BuffStart) == 0x000008, "Wrong size on B_BuffHunterSpeed_C_BuffStart");
static_assert(offsetof(B_BuffHunterSpeed_C_BuffStart, PlayerState_0) == 0x000000, "Member 'B_BuffHunterSpeed_C_BuffStart::PlayerState_0' has a wrong offset!");

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.ExecuteUbergraph_B_BuffHunterSpeed
// 0x0150 (0x0150 - 0x0000)
struct B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_Event_PlayerState;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_CustomEvent_CharacterMovementComp;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_MoveSpeed;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_CrouchSpeed;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            K2Node_CustomEvent_Hunter;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0038(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed");
static_assert(sizeof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed) == 0x000150, "Wrong size on B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, EntryPoint) == 0x000000, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_Event_PlayerState) == 0x000008, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_Event_PlayerState' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_CustomEvent_CharacterMovementComp) == 0x000010, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_CustomEvent_CharacterMovementComp' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_CustomEvent_MoveSpeed) == 0x000018, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_CustomEvent_MoveSpeed' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_CustomEvent_CrouchSpeed) == 0x000020, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_CustomEvent_CrouchSpeed' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_CustomEvent_Hunter) == 0x000028, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_CustomEvent_Hunter' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000030, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000038, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000130, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000138, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000144, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed, K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast) == 0x000148, "Member 'B_BuffHunterSpeed_C_ExecuteUbergraph_B_BuffHunterSpeed::K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast' has a wrong offset!");

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.RemoveSpeedMultiplier
// 0x0078 (0x0078 - 0x0000)
struct B_BuffHunterSpeed_C_RemoveSpeedMultiplier final
{
public:
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_PowerupParametersSubsystem_C*        CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PowerBall_C*                         K2Node_DynamicCast_AsB_Power_Ball;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_RemoveSpeedMultiplier");
static_assert(sizeof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier) == 0x000078, "Wrong size on B_BuffHunterSpeed_C_RemoveSpeedMultiplier");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000008, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, K2Node_DynamicCast_AsB_Power_Ball) == 0x000020, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::K2Node_DynamicCast_AsB_Power_Ball' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000050, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast) == 0x000058, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_SetMovementMulti_CrouchSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast) == 0x000060, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_SetMovementMulti_MoveSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000068, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_RemoveSpeedMultiplier, K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast) == 0x000070, "Member 'B_BuffHunterSpeed_C_RemoveSpeedMultiplier::K2Node_VariableSet_MaxWalkSpeedCrouched_ImplicitCast' has a wrong offset!");

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.SetMovementMulti
// 0x0018 (0x0018 - 0x0000)
struct B_BuffHunterSpeed_C_SetMovementMulti final
{
public:
	class UCharacterMovementComponent*            CharacterMovementComp_0;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MoveSpeed;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CrouchSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_SetMovementMulti) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_SetMovementMulti");
static_assert(sizeof(B_BuffHunterSpeed_C_SetMovementMulti) == 0x000018, "Wrong size on B_BuffHunterSpeed_C_SetMovementMulti");
static_assert(offsetof(B_BuffHunterSpeed_C_SetMovementMulti, CharacterMovementComp_0) == 0x000000, "Member 'B_BuffHunterSpeed_C_SetMovementMulti::CharacterMovementComp_0' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_SetMovementMulti, MoveSpeed) == 0x000008, "Member 'B_BuffHunterSpeed_C_SetMovementMulti::MoveSpeed' has a wrong offset!");
static_assert(offsetof(B_BuffHunterSpeed_C_SetMovementMulti, CrouchSpeed) == 0x000010, "Member 'B_BuffHunterSpeed_C_SetMovementMulti::CrouchSpeed' has a wrong offset!");

// Function B_BuffHunterSpeed.B_BuffHunterSpeed_C.SpawnTrailMulti
// 0x0008 (0x0008 - 0x0000)
struct B_BuffHunterSpeed_C_SpawnTrailMulti final
{
public:
	class AB_Hunter_C*                            Hunter;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BuffHunterSpeed_C_SpawnTrailMulti) == 0x000008, "Wrong alignment on B_BuffHunterSpeed_C_SpawnTrailMulti");
static_assert(sizeof(B_BuffHunterSpeed_C_SpawnTrailMulti) == 0x000008, "Wrong size on B_BuffHunterSpeed_C_SpawnTrailMulti");
static_assert(offsetof(B_BuffHunterSpeed_C_SpawnTrailMulti, Hunter) == 0x000000, "Member 'B_BuffHunterSpeed_C_SpawnTrailMulti::Hunter' has a wrong offset!");

}

