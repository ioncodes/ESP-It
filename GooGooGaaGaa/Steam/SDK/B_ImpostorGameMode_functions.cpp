#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorGameMode

#include "Basic.hpp"

#include "B_ImpostorGameMode_classes.hpp"
#include "B_ImpostorGameMode_parameters.hpp"


namespace SDK
{

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.OnMatchStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::OnMatchStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "OnMatchStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.AreEnoughPlayersReady
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AreReady                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::AreEnoughPlayersReady(bool* AreReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "AreEnoughPlayersReady");

	Params::B_ImpostorGameMode_C_AreEnoughPlayersReady Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AreReady != nullptr)
		*AreReady = Parms.AreReady;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.CheckEndMatchWitchesDead
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::CheckEndMatchWitchesDead()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "CheckEndMatchWitchesDead");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.CheckMeetingVotes
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::CheckMeetingVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "CheckMeetingVotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.CheckTeamWin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::CheckTeamWin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "CheckTeamWin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.ExecuteUbergraph_B_ImpostorGameMode
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::ExecuteUbergraph_B_ImpostorGameMode(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "ExecuteUbergraph_B_ImpostorGameMode");

	Params::B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetTaskCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AB_ImpostorGameMode_C::GetTaskCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "GetTaskCount");

	Params::B_ImpostorGameMode_C_GetTaskCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetWitchCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 AB_ImpostorGameMode_C::GetWitchCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "GetWitchCount");

	Params::B_ImpostorGameMode_C_GetWitchCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleEndMatch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETeamID                                 WinnerTeam                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceRegardlessOfEnd                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::HandleEndMatch(ETeamID WinnerTeam, bool ForceRegardlessOfEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "HandleEndMatch");

	Params::B_ImpostorGameMode_C_HandleEndMatch Parms{};

	Parms.WinnerTeam = WinnerTeam;
	Parms.ForceRegardlessOfEnd = ForceRegardlessOfEnd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleGrantExp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PlayerState_C*                 CurrentPlayerState                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalGrantedXp                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::HandleGrantExp(class AB_PlayerState_C* CurrentPlayerState, int32* TotalGrantedXp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "HandleGrantExp");

	Params::B_ImpostorGameMode_C_HandleGrantExp Parms{};

	Parms.CurrentPlayerState = CurrentPlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (TotalGrantedXp != nullptr)
		*TotalGrantedXp = Parms.TotalGrantedXp;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleShouldGameStart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::HandleShouldGameStart(bool* IsReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "HandleShouldGameStart");

	Params::B_ImpostorGameMode_C_HandleShouldGameStart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReady != nullptr)
		*IsReady = Parms.IsReady;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleStartMatch
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::HandleStartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "HandleStartMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.IsPlayerInWinnerTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    InWinnerTeam                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::IsPlayerInWinnerTeam(class AB_PlayerState_C* PlayerState, bool* InWinnerTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "IsPlayerInWinnerTeam");

	Params::B_ImpostorGameMode_C_IsPlayerInWinnerTeam Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (InWinnerTeam != nullptr)
		*InWinnerTeam = Parms.InWinnerTeam;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomImpostorSelection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::RandomImpostorSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "RandomImpostorSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomPlayerColors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::RandomPlayerColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "RandomPlayerColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomTasksForPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::RandomTasksForPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "RandomTasksForPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ImpostorGameMode_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RemoveAllCorpses
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::RemoveAllCorpses()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "RemoveAllCorpses");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RespawnAllPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::RespawnAllPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "RespawnAllPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.SetupMatchStartDetails
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::SetupMatchStartDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "SetupMatchStartDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.SpawnPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::SpawnPlayer(const struct FTransform& Transform, class UClass* Class_0, class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "SpawnPlayer");

	Params::B_ImpostorGameMode_C_SpawnPlayer Parms{};

	Parms.Transform = std::move(Transform);
	Parms.Class_0 = Class_0;
	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.StartMeeting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorPlayerState_C*         FoundPlayerState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_ImpostorPlayerState_C*         ReporterPlayerState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::StartMeeting(class AB_ImpostorPlayerState_C* FoundPlayerState, class AB_ImpostorPlayerState_C* ReporterPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "StartMeeting");

	Params::B_ImpostorGameMode_C_StartMeeting Parms{};

	Parms.FoundPlayerState = FoundPlayerState;
	Parms.ReporterPlayerState = ReporterPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.TimerFinished
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::TimerFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "TimerFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.UnoccupyAllPlayerStarts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameMode_C::UnoccupyAllPlayerStarts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "UnoccupyAllPlayerStarts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetPlayObjectiveId
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int64                                   ObjectiveId                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::GetPlayObjectiveId(int64* ObjectiveId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "GetPlayObjectiveId");

	Params::B_ImpostorGameMode_C_GetPlayObjectiveId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectiveId != nullptr)
		*ObjectiveId = Parms.ObjectiveId;
}


// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetWinObjectiveId
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int64                                   ObjectiveId                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameMode_C::GetWinObjectiveId(int64* ObjectiveId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameMode_C", "GetWinObjectiveId");

	Params::B_ImpostorGameMode_C_GetWinObjectiveId Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectiveId != nullptr)
		*ObjectiveId = Parms.ObjectiveId;
}

}

