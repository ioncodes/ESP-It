#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SkillSelectionBlock

#include "Basic.hpp"

#include "ETeamID_structs.hpp"
#include "ESkillCategory_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.UpdateSkillsByGameRulesMidgameJoin
// 0x00B8 (0x00B8 - 0x0000)
struct WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin final
{
public:
	ETeamID                                       HunterTeam;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 HunterUtilitySkill;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HunterMovementSkill;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetSelectedSkillForTeam_Skill;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetSelectedSkillForTeam_Skill_1;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetAllowedSkillsByGameRules_AllowedSkills; // 0x0040(0x0010)(ReferenceParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_PickRandomSkillByCategory_NewSkill;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_2;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_PickRandomSkillByCategory_NewSkill_1;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin");
static_assert(sizeof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin) == 0x0000B8, "Wrong size on WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, HunterTeam) == 0x000000, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::HunterTeam' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, HunterUtilitySkill) == 0x000008, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::HunterUtilitySkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, HunterMovementSkill) == 0x000010, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::HunterMovementSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, AllowedSkills) == 0x000018, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Array_RemoveItem_ReturnValue) == 0x000028, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetSelectedSkillForTeam_Skill) == 0x000030, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetSelectedSkillForTeam_Skill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetSelectedSkillForTeam_Skill_1) == 0x000038, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetSelectedSkillForTeam_Skill_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetAllowedSkillsByGameRules_AllowedSkills) == 0x000040, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetAllowedSkillsByGameRules_AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_AsB_Game_State) == 0x000058, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_PickRandomSkillByCategory_NewSkill) == 0x000068, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_PickRandomSkillByCategory_NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetGameState_ReturnValue_1) == 0x000070, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_AsB_Game_State_1) == 0x000078, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_GetGameState_ReturnValue_2) == 0x000088, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_AsB_Game_State_2) == 0x000090, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_AsB_Game_State_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_IsValidClass_ReturnValue) == 0x000099, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Array_Contains_ReturnValue) == 0x00009B, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_BooleanOR_ReturnValue) == 0x00009C, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_IsValidClass_ReturnValue_1) == 0x00009D, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009E, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Array_Contains_ReturnValue_1) == 0x00009F, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A0, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_PickRandomSkillByCategory_NewSkill_1) == 0x0000A8, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_PickRandomSkillByCategory_NewSkill_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000B0, "Member 'WB_SkillSelectionBlock_C_UpdateSkillsByGameRulesMidgameJoin::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.SaveSkill
// 0x0020 (0x0020 - 0x0000)
struct WB_SkillSelectionBlock_C_SaveSkill final
{
public:
	ETeamID                                       Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Skill;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                SkillCategory;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_SaveSkill) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_SaveSkill");
static_assert(sizeof(WB_SkillSelectionBlock_C_SaveSkill) == 0x000020, "Wrong size on WB_SkillSelectionBlock_C_SaveSkill");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, Team_0) == 0x000000, "Member 'WB_SkillSelectionBlock_C_SaveSkill::Team_0' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, PlayerState) == 0x000008, "Member 'WB_SkillSelectionBlock_C_SaveSkill::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, Skill) == 0x000010, "Member 'WB_SkillSelectionBlock_C_SaveSkill::Skill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, SkillCategory) == 0x000018, "Member 'WB_SkillSelectionBlock_C_SaveSkill::SkillCategory' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, CallFunc_IsValidClass_ReturnValue) == 0x000019, "Member 'WB_SkillSelectionBlock_C_SaveSkill::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_SaveSkill, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WB_SkillSelectionBlock_C_SaveSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.GetAllowedSkillsByGameRules
// 0x0080 (0x0080 - 0x0000)
struct WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules final
{
public:
	ETeamID                                       PlayerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         Skills;                                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules");
static_assert(sizeof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules) == 0x000080, "Wrong size on WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, PlayerTeam) == 0x000000, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::PlayerTeam' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, AllowedSkills) == 0x000008, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, Skills) == 0x000018, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::Skills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, K2Node_DynamicCast_AsB_Game_State) == 0x000038, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, K2Node_DynamicCast_AsB_Game_State_1) == 0x000050, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_Array_Get_Item) == 0x000060, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_Array_RemoveItem_ReturnValue) == 0x00006C, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, K2Node_SwitchEnum_CmpSuccess) == 0x000074, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_Less_IntInt_ReturnValue) == 0x000075, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WB_SkillSelectionBlock_C_GetAllowedSkillsByGameRules::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.PickRandomSkills
// 0x0040 (0x0040 - 0x0000)
struct WB_SkillSelectionBlock_C_PickRandomSkills final
{
public:
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	class UClass*                                 NewSkill;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_PickRandomSkillByCategory_NewSkill;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_PickRandomSkillByCategory_NewSkill_1;     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         CallFunc_GetAllowedSkillsByGameRules_AllowedSkills; // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_PickRandomSkills) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_PickRandomSkills");
static_assert(sizeof(WB_SkillSelectionBlock_C_PickRandomSkills) == 0x000040, "Wrong size on WB_SkillSelectionBlock_C_PickRandomSkills");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, AllowedSkills) == 0x000000, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, NewSkill) == 0x000010, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, CallFunc_PickRandomSkillByCategory_NewSkill) == 0x000018, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::CallFunc_PickRandomSkillByCategory_NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, CallFunc_PickRandomSkillByCategory_NewSkill_1) == 0x000020, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::CallFunc_PickRandomSkillByCategory_NewSkill_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, CallFunc_GetAllowedSkillsByGameRules_AllowedSkills) == 0x000028, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::CallFunc_GetAllowedSkillsByGameRules_AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkills, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'WB_SkillSelectionBlock_C_PickRandomSkills::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.TryPickRandomSkills
// 0x0018 (0x0018 - 0x0000)
struct WB_SkillSelectionBlock_C_TryPickRandomSkills final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_TryPickRandomSkills) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_TryPickRandomSkills");
static_assert(sizeof(WB_SkillSelectionBlock_C_TryPickRandomSkills) == 0x000018, "Wrong size on WB_SkillSelectionBlock_C_TryPickRandomSkills");
static_assert(offsetof(WB_SkillSelectionBlock_C_TryPickRandomSkills, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_SkillSelectionBlock_C_TryPickRandomSkills::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_TryPickRandomSkills, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_SkillSelectionBlock_C_TryPickRandomSkills::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_TryPickRandomSkills, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_SkillSelectionBlock_C_TryPickRandomSkills::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_TryPickRandomSkills, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WB_SkillSelectionBlock_C_TryPickRandomSkills::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.PickRandomSkillByCategory
// 0x0040 (0x0040 - 0x0000)
struct WB_SkillSelectionBlock_C_PickRandomSkillByCategory final
{
public:
	ESkillCategory                                SkillCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETeamID                                       PlayerTeam;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NewSkill;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RandomSkill;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_PickRandomSkillByCategory");
static_assert(sizeof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory) == 0x000040, "Wrong size on WB_SkillSelectionBlock_C_PickRandomSkillByCategory");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, SkillCategory) == 0x000000, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::SkillCategory' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, AllowedSkills) == 0x000008, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, PlayerTeam) == 0x000018, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::PlayerTeam' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, NewSkill) == 0x000020, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, RandomSkill) == 0x000028, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::RandomSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, CallFunc_RandomInteger_ReturnValue) == 0x000034, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickRandomSkillByCategory, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_SkillSelectionBlock_C_PickRandomSkillByCategory::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.PickNewSkillIfAvailable
// 0x0068 (0x0068 - 0x0000)
struct WB_SkillSelectionBlock_C_PickNewSkillIfAvailable final
{
public:
	class UClass*                                 SkillClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                SkillCategory;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PickedSkill;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 NewSkill;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_GetAllowedSkillsByGameRules_AllowedSkills; // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_PickRandomSkillByCategory_NewSkill;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_PickNewSkillIfAvailable");
static_assert(sizeof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable) == 0x000068, "Wrong size on WB_SkillSelectionBlock_C_PickNewSkillIfAvailable");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, SkillClass) == 0x000000, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::SkillClass' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, SkillCategory) == 0x000008, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::SkillCategory' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, PickedSkill) == 0x000010, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::PickedSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, Success) == 0x000018, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::Success' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, IsValid) == 0x000019, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::IsValid' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, NewSkill) == 0x000020, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, AllowedSkills) == 0x000028, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_IsValidClass_ReturnValue) == 0x000038, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_GetAllowedSkillsByGameRules_AllowedSkills) == 0x000040, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_GetAllowedSkillsByGameRules_AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_Array_RemoveItem_ReturnValue) == 0x000050, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_PickRandomSkillByCategory_NewSkill) == 0x000058, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_PickRandomSkillByCategory_NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000060, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x000061, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_PickNewSkillIfAvailable, K2Node_SwitchEnum_CmpSuccess) == 0x000062, "Member 'WB_SkillSelectionBlock_C_PickNewSkillIfAvailable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.AddSkillButton
// 0x00C8 (0x00C8 - 0x0000)
struct WB_SkillSelectionBlock_C_AddSkillButton final
{
public:
	class UClass*                                 SkillClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                SkillCategory;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SelectionSkill_C*                   NewButton;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         AllowedSkills;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	class UClass*                                 NewSkill;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_SelectionSkill_C*                   SkillButton;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_PickNewSkillIfAvailable_PickedSkill;      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickNewSkillIfAvailable_Success;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWB_SelectionSkill_C* SelectionSkill)> K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SelectionSkill_C*                   CallFunc_Create_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_AddSkillButton) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_AddSkillButton");
static_assert(sizeof(WB_SkillSelectionBlock_C_AddSkillButton) == 0x0000C8, "Wrong size on WB_SkillSelectionBlock_C_AddSkillButton");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, SkillClass) == 0x000000, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::SkillClass' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, SkillCategory) == 0x000008, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::SkillCategory' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, NewButton) == 0x000010, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::NewButton' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, AllowedSkills) == 0x000018, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::AllowedSkills' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, NewSkill) == 0x000028, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::NewSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, SkillButton) == 0x000030, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::SkillButton' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_AsB_Game_State) == 0x000048, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_AsB_Game_Instance) == 0x000058, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000068, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_IsValidClass_ReturnValue) == 0x000070, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_GetGameState_ReturnValue_1) == 0x000078, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_AsB_Game_State_1) == 0x000080, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_PickNewSkillIfAvailable_PickedSkill) == 0x000090, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_PickNewSkillIfAvailable_PickedSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_PickNewSkillIfAvailable_Success) == 0x000098, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_PickNewSkillIfAvailable_Success' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_Array_Contains_ReturnValue) == 0x000099, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_BooleanAND_ReturnValue) == 0x00009B, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000B0, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_AddChild_ReturnValue) == 0x0000B8, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_AddSkillButton, CallFunc_Create_ReturnValue) == 0x0000C0, "Member 'WB_SkillSelectionBlock_C_AddSkillButton::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.OnFocusReceived
// 0x0210 (0x0210 - 0x0000)
struct WB_SkillSelectionBlock_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_SelectionSkill_C*>           CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0148(0x00B8)()
	class UWB_SelectionSkill_C*                   CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_OnFocusReceived");
static_assert(sizeof(WB_SkillSelectionBlock_C_OnFocusReceived) == 0x000210, "Wrong size on WB_SkillSelectionBlock_C_OnFocusReceived");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, Temp_int_Loop_Counter_Variable) == 0x0000FC, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_GetGameInstance_ReturnValue) == 0x000108, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_IsGamepadMode_ReturnValue) == 0x000110, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, K2Node_DynamicCast_AsB_Game_Instance) == 0x000118, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000128, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000130, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000138, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_Handled_ReturnValue) == 0x000148, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_Array_Get_Item) == 0x000200, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_Array_Length_ReturnValue) == 0x000208, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_OnFocusReceived, CallFunc_Less_IntInt_ReturnValue) == 0x00020C, "Member 'WB_SkillSelectionBlock_C_OnFocusReceived::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.SetTeam
// 0x0001 (0x0001 - 0x0000)
struct WB_SkillSelectionBlock_C_SetTeam final
{
public:
	ETeamID                                       Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_SetTeam) == 0x000001, "Wrong alignment on WB_SkillSelectionBlock_C_SetTeam");
static_assert(sizeof(WB_SkillSelectionBlock_C_SetTeam) == 0x000001, "Wrong size on WB_SkillSelectionBlock_C_SetTeam");
static_assert(offsetof(WB_SkillSelectionBlock_C_SetTeam, Team_0) == 0x000000, "Member 'WB_SkillSelectionBlock_C_SetTeam::Team_0' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.RefreshSkillList
// 0x0050 (0x0050 - 0x0000)
struct WB_SkillSelectionBlock_C_RefreshSkillList final
{
public:
	class UWB_SelectionSkill_C*                   MovementSkill;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SelectionSkill_C*                   UtilitySkill;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_PickNewSkillIfAvailable_PickedSkill;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PickNewSkillIfAvailable_Success;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SelectionSkill_C*                   CallFunc_AddSkillButton_NewButton;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SelectionSkill_C*                   CallFunc_AddSkillButton_NewButton_1;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetSelectedSkillForTeam_Skill;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetSelectedSkillForTeam_Skill_1;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_RefreshSkillList) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_RefreshSkillList");
static_assert(sizeof(WB_SkillSelectionBlock_C_RefreshSkillList) == 0x000050, "Wrong size on WB_SkillSelectionBlock_C_RefreshSkillList");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, MovementSkill) == 0x000000, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::MovementSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, UtilitySkill) == 0x000008, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::UtilitySkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, PlayerState) == 0x000010, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_PickNewSkillIfAvailable_PickedSkill) == 0x000018, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_PickNewSkillIfAvailable_PickedSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_PickNewSkillIfAvailable_Success) == 0x000020, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_PickNewSkillIfAvailable_Success' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000021, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_AddSkillButton_NewButton) == 0x000028, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_AddSkillButton_NewButton' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_AddSkillButton_NewButton_1) == 0x000030, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_AddSkillButton_NewButton_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_GetSelectedSkillForTeam_Skill) == 0x000040, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_GetSelectedSkillForTeam_Skill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_RefreshSkillList, CallFunc_GetSelectedSkillForTeam_Skill_1) == 0x000048, "Member 'WB_SkillSelectionBlock_C_RefreshSkillList::CallFunc_GetSelectedSkillForTeam_Skill_1' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.Get_CanvasPanel_0_Visibility_0
// 0x0030 (0x0030 - 0x0000)
struct WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Game_Mode;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0");
static_assert(sizeof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0) == 0x000030, "Wrong size on WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, Temp_bool_Variable) == 0x000003, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, K2Node_ClassDynamicCast_AsB_Game_Mode) == 0x000020, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::K2Node_ClassDynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0, K2Node_Select_Default) == 0x000029, "Member 'WB_SkillSelectionBlock_C_Get_CanvasPanel_0_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.SkillClicked
// 0x0008 (0x0008 - 0x0000)
struct WB_SkillSelectionBlock_C_SkillClicked final
{
public:
	class UWB_SelectionSkill_C*                   SelectionSkill;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_SkillClicked) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_SkillClicked");
static_assert(sizeof(WB_SkillSelectionBlock_C_SkillClicked) == 0x000008, "Wrong size on WB_SkillSelectionBlock_C_SkillClicked");
static_assert(offsetof(WB_SkillSelectionBlock_C_SkillClicked, SelectionSkill) == 0x000000, "Member 'WB_SkillSelectionBlock_C_SkillClicked::SelectionSkill' has a wrong offset!");

// Function WB_SkillSelectionBlock.WB_SkillSelectionBlock_C.ExecuteUbergraph_WB_SkillSelectionBlock
// 0x0058 (0x0058 - 0x0000)
struct WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SelectionSkill_C*                   K2Node_CustomEvent_SelectionSkill;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchStarted_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock) == 0x000008, "Wrong alignment on WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock");
static_assert(sizeof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock) == 0x000058, "Wrong size on WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, EntryPoint) == 0x000000, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_CustomEvent_SelectionSkill) == 0x000008, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_CustomEvent_SelectionSkill' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, CallFunc_HasMatchStarted_ReturnValue) == 0x000022, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::CallFunc_HasMatchStarted_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_AsB_Player_State) == 0x000030, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_AsB_Game_Instance) == 0x000048, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'WB_SkillSelectionBlock_C_ExecuteUbergraph_WB_SkillSelectionBlock::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

