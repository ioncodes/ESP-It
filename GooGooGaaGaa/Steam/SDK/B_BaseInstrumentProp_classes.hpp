#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseInstrumentProp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_InstrumentTypes_structs.hpp"
#include "B_StaticMeshActionProp_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_BaseInstrumentProp.B_BaseInstrumentProp_C
// 0x0010 (0x05F0 - 0x05E0)
#pragma pack(push, 0x1)
class alignas(0x10) AB_BaseInstrumentProp_C : public AB_StaticMeshActionProp_C
{
public:
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_B_BaseInstrumentProp_C;             // 0x05D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	E_InstrumentTypes                             InstrumentType;                                    // 0x05E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeActionProp();
	void ApplyTemplateData(class AActor* Template, bool* ForcedBoolean);
	void StartPlayingOrJoinMusic(bool Join);
	void DeactivateActionProp();
	void ActivateActionProp(bool Override);
	void ReceiveBeginPlay();
	void TurnMusicOn();
	void ReceiveDestroyed();
	void ExecuteUbergraph_B_BaseInstrumentProp(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_BaseInstrumentProp_C">();
	}
	static class AB_BaseInstrumentProp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_BaseInstrumentProp_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(AB_BaseInstrumentProp_C) == 0x000010, "Wrong alignment on AB_BaseInstrumentProp_C");
static_assert(sizeof(AB_BaseInstrumentProp_C) == 0x0005F0, "Wrong size on AB_BaseInstrumentProp_C");
static_assert(offsetof(AB_BaseInstrumentProp_C, UberGraphFrame_B_BaseInstrumentProp_C) == 0x0005D8, "Member 'AB_BaseInstrumentProp_C::UberGraphFrame_B_BaseInstrumentProp_C' has a wrong offset!");
static_assert(offsetof(AB_BaseInstrumentProp_C, InstrumentType) == 0x0005E0, "Member 'AB_BaseInstrumentProp_C::InstrumentType' has a wrong offset!");

}

