#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ShootingRangeField

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_ShootingRangeField.B_ShootingRangeField_C.ActOnSpawnTransform
// 0x0070 (0x0070 - 0x0000)
struct B_ShootingRangeField_C_ActOnSpawnTransform final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPossibleTargetIndex;                             // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ShootingRangeField_C_ActOnSpawnTransform) == 0x000010, "Wrong alignment on B_ShootingRangeField_C_ActOnSpawnTransform");
static_assert(sizeof(B_ShootingRangeField_C_ActOnSpawnTransform) == 0x000070, "Wrong size on B_ShootingRangeField_C_ActOnSpawnTransform");
static_assert(offsetof(B_ShootingRangeField_C_ActOnSpawnTransform, Spawn_Transform) == 0x000000, "Member 'B_ShootingRangeField_C_ActOnSpawnTransform::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_ActOnSpawnTransform, IsPossibleTargetIndex) == 0x000060, "Member 'B_ShootingRangeField_C_ActOnSpawnTransform::IsPossibleTargetIndex' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_ActOnSpawnTransform, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'B_ShootingRangeField_C_ActOnSpawnTransform::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_ShootingRangeField.B_ShootingRangeField_C.GetHeight
// 0x0040 (0x0040 - 0x0000)
struct B_ShootingRangeField_C_GetHeight final
{
public:
	int32                                         Width_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spawn_Height;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentHeight;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHeight_Spawn_Height;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ShootingRangeField_C_GetHeight) == 0x000008, "Wrong alignment on B_ShootingRangeField_C_GetHeight");
static_assert(sizeof(B_ShootingRangeField_C_GetHeight) == 0x000040, "Wrong size on B_ShootingRangeField_C_GetHeight");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, Width_Index) == 0x000000, "Member 'B_ShootingRangeField_C_GetHeight::Width_Index' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, Spawn_Height) == 0x000008, "Member 'B_ShootingRangeField_C_GetHeight::Spawn_Height' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CurrentHeight) == 0x000010, "Member 'B_ShootingRangeField_C_GetHeight::CurrentHeight' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CallFunc_GetHeight_Spawn_Height) == 0x000018, "Member 'B_ShootingRangeField_C_GetHeight::CallFunc_GetHeight_Spawn_Height' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'B_ShootingRangeField_C_GetHeight::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_ShootingRangeField_C_GetHeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'B_ShootingRangeField_C_GetHeight::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ShootingRangeField_C_GetHeight, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'B_ShootingRangeField_C_GetHeight::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

}

