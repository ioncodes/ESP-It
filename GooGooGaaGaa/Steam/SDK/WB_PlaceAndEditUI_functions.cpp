#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlaceAndEditUI

#include "Basic.hpp"

#include "WB_PlaceAndEditUI_classes.hpp"
#include "WB_PlaceAndEditUI_parameters.hpp"


namespace SDK
{

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_PlaceAndEditUI_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.ExecuteUbergraph_WB_PlaceAndEditUI
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PlaceAndEditUI_C::ExecuteUbergraph_WB_PlaceAndEditUI(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "ExecuteUbergraph_WB_PlaceAndEditUI");

	Params::WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.GetIndividualItemDataAndFocus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      CategoryButton                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ESalvageCategory                        SalvageCategory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UB_TileViewData_C*>        Data                                                   (Parm, OutParm)
// TArray<bool>                            FocusNeeded                                            (Parm, OutParm)

void UWB_PlaceAndEditUI_C::GetIndividualItemDataAndFocus(class UUserWidget* CategoryButton, ESalvageCategory SalvageCategory, TArray<class UB_TileViewData_C*>* Data, TArray<bool>* FocusNeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "GetIndividualItemDataAndFocus");

	Params::WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus Parms{};

	Parms.CategoryButton = CategoryButton;
	Parms.SalvageCategory = SalvageCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (FocusNeeded != nullptr)
		*FocusNeeded = std::move(Parms.FocusNeeded);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.GetTileView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTileView*                        TileView                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_PlaceAndEditUI_C::GetTileView(class UTileView** TileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "GetTileView");

	Params::WB_PlaceAndEditUI_C_GetTileView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TileView != nullptr)
		*TileView = Parms.TileView;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Maximize
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::Maximize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "Maximize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Minimize
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::Minimize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "Minimize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.On_InnerBorder_MouseButtonDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_PlaceAndEditUI_C::On_InnerBorder_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "On_InnerBorder_MouseButtonDown");

	Params::WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.On_OuterBorder_MouseButtonDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_PlaceAndEditUI_C::On_OuterBorder_MouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "On_OuterBorder_MouseButtonDown");

	Params::WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnBack
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_PlaceAndEditUI_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "OnFocusReceived");

	Params::WB_PlaceAndEditUI_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_PlaceAndEditUI_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "OnMouseWheel");

	Params::WB_PlaceAndEditUI_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_PlaceAndEditUI_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "OnPreviewKeyDown");

	Params::WB_PlaceAndEditUI_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.ToggleMaximizedItemCollection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PlaceAndEditUI_C::ToggleMaximizedItemCollection(bool Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "ToggleMaximizedItemCollection");

	Params::WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.TogglePawnCameraUsage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Use_Pawn_Control_Rotation                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_PlaceAndEditUI_C::TogglePawnCameraUsage(bool Use_Pawn_Control_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "TogglePawnCameraUsage");

	Params::WB_PlaceAndEditUI_C_TogglePawnCameraUsage Parms{};

	Parms.Use_Pawn_Control_Rotation = Use_Pawn_Control_Rotation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.UpdateByPlayMode
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::UpdateByPlayMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "UpdateByPlayMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.UpdateNonCollapsedUI
// (Protected, BlueprintCallable, BlueprintEvent)

void UWB_PlaceAndEditUI_C::UpdateNonCollapsedUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_PlaceAndEditUI_C", "UpdateNonCollapsedUI");

	UObject::ProcessEvent(Func, nullptr);
}

}

