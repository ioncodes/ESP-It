#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TournamentManager

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_TournamentManager.B_TournamentManager_C
// 0x0070 (0x0098 - 0x0028)
class UB_TournamentManager_C final : public UObject
{
public:
	TMap<class FString, class UB_TournamentPlayer_C*> TournamentPlayersByNetId;                          // 0x0028(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         InvolvedPlayersInThisRound;                        // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             ScoreUpdated;                                      // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AddScorePoints(class APlayerState* PlayerState, int32 Score);
	void AllocatePlayersForThisRound(TArray<class APlayerState*>& PlayerStates);
	TArray<class APlayerState*> GetHuntersToSpawn(int32 Amount, TArray<class FString>* EllectedTests);
	TArray<class UB_TournamentPlayer_C*> GetTournamentPlayers();
	void GetTournamentPlayersStruct(TArray<class FString>* PlayerIds, TArray<struct FS_TournamentPlayer>* TournamentPlayers);
	void ScoreUpdated__DelegateSignature(const class FString& PlayerId, int32 NewScore);
	void StartTestTournament(int32 Amount);
	void StartTournament();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_TournamentManager_C">();
	}
	static class UB_TournamentManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_TournamentManager_C>();
	}
};
static_assert(alignof(UB_TournamentManager_C) == 0x000008, "Wrong alignment on UB_TournamentManager_C");
static_assert(sizeof(UB_TournamentManager_C) == 0x000098, "Wrong size on UB_TournamentManager_C");
static_assert(offsetof(UB_TournamentManager_C, TournamentPlayersByNetId) == 0x000028, "Member 'UB_TournamentManager_C::TournamentPlayersByNetId' has a wrong offset!");
static_assert(offsetof(UB_TournamentManager_C, InvolvedPlayersInThisRound) == 0x000078, "Member 'UB_TournamentManager_C::InvolvedPlayersInThisRound' has a wrong offset!");
static_assert(offsetof(UB_TournamentManager_C, ScoreUpdated) == 0x000088, "Member 'UB_TournamentManager_C::ScoreUpdated' has a wrong offset!");

}

