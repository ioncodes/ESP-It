#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorHunter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function B_ImpostorHunter.B_ImpostorHunter_C.ExecuteUbergraph_B_ImpostorHunter
// 0x0440 (0x0440 - 0x0000)
struct B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0148(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0260(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_HeadSkinClass;                        // 0x0310(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_UpperBodySkinClass;                   // 0x0320(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_LowerBodySkinClass;                   // 0x0330(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_HatSkinClass;                         // 0x0340(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_RangedWeaponSkinClass;                // 0x0350(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_MeleeWeaponSkinClass;                 // 0x0360(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_Event_SkinColorSkinClass;                   // 0x0370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x3];                                      // 0x0391(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen;        // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x03D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ImpostorWitchPortal_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x03F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorWitchPortal_C*               CallFunc_Array_Get_Item;                           // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter) == 0x000010, "Wrong alignment on B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter");
static_assert(sizeof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter) == 0x000440, "Wrong size on B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, EntryPoint) == 0x000000, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_InputActionEvent_Key) == 0x000008, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_struct_Variable) == 0x000020, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_9) == 0x000048, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_8) == 0x000050, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_7) == 0x000068, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000070, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_6) == 0x000080, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000088, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_5) == 0x000098, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000A0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_name_Variable) == 0x0000B0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000B8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_4) == 0x0000C8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_3) == 0x0000D0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000D8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_2) == 0x0000E8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName_1) == 0x000100, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_8) == 0x000108, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_NotifyName) == 0x000118, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CreateDelegate_OutputDelegate_9) == 0x000120, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_name_Variable_1) == 0x000130, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_int_Array_Index_Variable) == 0x000140, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_InputActionEvent_Key_1) == 0x000148, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_DeltaSeconds) == 0x000160, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_NewController) == 0x000168, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000170, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_CustomEvent_Rotation) == 0x000188, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_GetController_ReturnValue) == 0x0001A0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_GetTransform_ReturnValue) == 0x0001B0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Location) == 0x000210, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Rotation) == 0x000228, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Scale) == 0x000240, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_MakeTransform_ReturnValue) == 0x000260, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsLocallyControlled_ReturnValue) == 0x0002C0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Location_1) == 0x0002C8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Rotation_1) == 0x0002E0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_BreakTransform_Scale_1) == 0x0002F8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_HeadSkinClass) == 0x000310, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_HeadSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_UpperBodySkinClass) == 0x000320, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_UpperBodySkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_LowerBodySkinClass) == 0x000330, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_LowerBodySkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_HatSkinClass) == 0x000340, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_HatSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_RangedWeaponSkinClass) == 0x000350, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_RangedWeaponSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_MeleeWeaponSkinClass) == 0x000360, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_MeleeWeaponSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_SkinColorSkinClass) == 0x000370, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_SkinColorSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_Event_OldController) == 0x000380, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000388, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_bSuccess) == 0x000390, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Array_Length_ReturnValue) == 0x000394, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsValid_ReturnValue) == 0x000398, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsValid_ReturnValue_1) == 0x000399, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_GetGameInstance_ReturnValue) == 0x0003A0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_AsB_Game_Instance) == 0x0003A8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen) == 0x0003B1, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Not_PreBool_ReturnValue) == 0x0003B2, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003B3, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_GetGameState_ReturnValue) == 0x0003B8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x0003C0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_bSuccess_2) == 0x0003C8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0003D0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsValid_ReturnValue_2) == 0x0003D9, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x0003E0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_IsValid_ReturnValue_3) == 0x0003E8, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, Temp_int_Variable) == 0x0003EC, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_GetAllActorsOfClass_OutActors) == 0x0003F0, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000400, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Array_Get_Item) == 0x000408, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Array_Length_ReturnValue_1) == 0x000410, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Less_IntInt_ReturnValue) == 0x000414, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Array_Get_Item_1) == 0x000418, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, CallFunc_Less_IntInt_ReturnValue_1) == 0x000420, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x000428, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter, K2Node_DynamicCast_bSuccess_3) == 0x000430, "Member 'B_ImpostorHunter_C_ExecuteUbergraph_B_ImpostorHunter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.InpActEvt_Fire_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(sizeof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0");
static_assert(offsetof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.InpActEvt_Fire_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(sizeof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1");
static_assert(offsetof(B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'B_ImpostorHunter_C_InpActEvt_Fire_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.LoadSkills
// 0x0060 (0x0060 - 0x0000)
struct B_ImpostorHunter_C_LoadSkills final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill;                 // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill_1;               // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue_2;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill_2;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_LoadSkills) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_LoadSkills");
static_assert(sizeof(B_ImpostorHunter_C_LoadSkills) == 0x000060, "Wrong size on B_ImpostorHunter_C_LoadSkills");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, Controller_0) == 0x000000, "Member 'B_ImpostorHunter_C_LoadSkills::Controller_0' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, CallFunc_AddActorComponent_ReturnValue) == 0x000008, "Member 'B_ImpostorHunter_C_LoadSkills::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_AsB_Base_Skill) == 0x000010, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_AsB_Base_Skill' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000020, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, CallFunc_AddActorComponent_ReturnValue_1) == 0x000030, "Member 'B_ImpostorHunter_C_LoadSkills::CallFunc_AddActorComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_AsB_Base_Skill_1) == 0x000038, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_AsB_Base_Skill_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, CallFunc_AddActorComponent_ReturnValue_2) == 0x000048, "Member 'B_ImpostorHunter_C_LoadSkills::CallFunc_AddActorComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_AsB_Base_Skill_2) == 0x000050, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_AsB_Base_Skill_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkills, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'B_ImpostorHunter_C_LoadSkills::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.LoadSkinsServer
// 0x0070 (0x0070 - 0x0000)
struct B_ImpostorHunter_C_LoadSkinsServer final
{
public:
	struct FPrimaryAssetId                        HeadSkinClass;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        UpperBodySkinClass;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        LowerBodySkinClass;                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        HatSkinClass;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        RangedWeaponSkinClass;                             // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        MeleeWeaponSkinClass;                              // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        SkinColorSkinClass;                                // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_LoadSkinsServer) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_LoadSkinsServer");
static_assert(sizeof(B_ImpostorHunter_C_LoadSkinsServer) == 0x000070, "Wrong size on B_ImpostorHunter_C_LoadSkinsServer");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, HeadSkinClass) == 0x000000, "Member 'B_ImpostorHunter_C_LoadSkinsServer::HeadSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, UpperBodySkinClass) == 0x000010, "Member 'B_ImpostorHunter_C_LoadSkinsServer::UpperBodySkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, LowerBodySkinClass) == 0x000020, "Member 'B_ImpostorHunter_C_LoadSkinsServer::LowerBodySkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, HatSkinClass) == 0x000030, "Member 'B_ImpostorHunter_C_LoadSkinsServer::HatSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, RangedWeaponSkinClass) == 0x000040, "Member 'B_ImpostorHunter_C_LoadSkinsServer::RangedWeaponSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, MeleeWeaponSkinClass) == 0x000050, "Member 'B_ImpostorHunter_C_LoadSkinsServer::MeleeWeaponSkinClass' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_LoadSkinsServer, SkinColorSkinClass) == 0x000060, "Member 'B_ImpostorHunter_C_LoadSkinsServer::SkinColorSkinClass' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(sizeof(B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(offsetof(B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnBlendOut_0F49F8E54A1C01D08D27A3B6F539057F::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(sizeof(B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(offsetof(B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnBlendOut_EF630AE44486DF9984CFA1AC53D5774B::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(sizeof(B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(offsetof(B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnCompleted_0F49F8E54A1C01D08D27A3B6F539057F::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnCompleted_EF630AE44486DF9984CFA1AC53D5774B
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(sizeof(B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(offsetof(B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnCompleted_EF630AE44486DF9984CFA1AC53D5774B::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(sizeof(B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(offsetof(B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnInterrupted_0F49F8E54A1C01D08D27A3B6F539057F::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(sizeof(B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(offsetof(B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnInterrupted_EF630AE44486DF9984CFA1AC53D5774B::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(sizeof(B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(offsetof(B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnNotifyBegin_0F49F8E54A1C01D08D27A3B6F539057F::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(sizeof(B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(offsetof(B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnNotifyBegin_EF630AE44486DF9984CFA1AC53D5774B::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(sizeof(B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F");
static_assert(offsetof(B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnNotifyEnd_0F49F8E54A1C01D08D27A3B6F539057F::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(sizeof(B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B) == 0x000008, "Wrong size on B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B");
static_assert(offsetof(B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B, NotifyName) == 0x000000, "Member 'B_ImpostorHunter_C_OnNotifyEnd_EF630AE44486DF9984CFA1AC53D5774B::NotifyName' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_ReceivePossessed) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_ReceivePossessed");
static_assert(sizeof(B_ImpostorHunter_C_ReceivePossessed) == 0x000008, "Wrong size on B_ImpostorHunter_C_ReceivePossessed");
static_assert(offsetof(B_ImpostorHunter_C_ReceivePossessed, NewController) == 0x000000, "Member 'B_ImpostorHunter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ImpostorHunter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ImpostorHunter_C_ReceiveTick");
static_assert(sizeof(B_ImpostorHunter_C_ReceiveTick) == 0x000004, "Wrong size on B_ImpostorHunter_C_ReceiveTick");
static_assert(offsetof(B_ImpostorHunter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ImpostorHunter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorHunter_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_ReceiveUnpossessed");
static_assert(sizeof(B_ImpostorHunter_C_ReceiveUnpossessed) == 0x000008, "Wrong size on B_ImpostorHunter_C_ReceiveUnpossessed");
static_assert(offsetof(B_ImpostorHunter_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'B_ImpostorHunter_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.ReplicateSkinData
// 0x0088 (0x0088 - 0x0000)
struct B_ImpostorHunter_C_ReplicateSkinData final
{
public:
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_1; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_2; // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_3; // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_4; // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_5; // 0x0064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_6; // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_ReplicateSkinData) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_ReplicateSkinData");
static_assert(sizeof(B_ImpostorHunter_C_ReplicateSkinData) == 0x000088, "Wrong size on B_ImpostorHunter_C_ReplicateSkinData");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x000000, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_1) == 0x000010, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_ImpostorHunter_C_ReplicateSkinData::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_ImpostorHunter_C_ReplicateSkinData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_2) == 0x000034, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_3) == 0x000044, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_4) == 0x000054, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_5) == 0x000064, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_ReplicateSkinData, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_6) == 0x000074, "Member 'B_ImpostorHunter_C_ReplicateSkinData::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue_6' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.SetCameraView
// 0x0030 (0x0030 - 0x0000)
struct B_ImpostorHunter_C_SetCameraView final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_SetCameraView) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_SetCameraView");
static_assert(sizeof(B_ImpostorHunter_C_SetCameraView) == 0x000030, "Wrong size on B_ImpostorHunter_C_SetCameraView");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, Temp_int_Variable) == 0x000000, "Member 'B_ImpostorHunter_C_SetCameraView::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, Temp_int_Variable_1) == 0x000004, "Member 'B_ImpostorHunter_C_SetCameraView::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_SetCameraView, CallFunc_Less_IntInt_ReturnValue_1) == 0x000029, "Member 'B_ImpostorHunter_C_SetCameraView::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.SetControlRotation
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorHunter_C_SetControlRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_ImpostorHunter_C_SetControlRotation) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_SetControlRotation");
static_assert(sizeof(B_ImpostorHunter_C_SetControlRotation) == 0x000018, "Wrong size on B_ImpostorHunter_C_SetControlRotation");
static_assert(offsetof(B_ImpostorHunter_C_SetControlRotation, Rotation) == 0x000000, "Member 'B_ImpostorHunter_C_SetControlRotation::Rotation' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.StartVoteMode
// 0x01C0 (0x01C0 - 0x0000)
struct B_ImpostorHunter_C_StartVoteMode final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0xF];                                       // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_VoteScreen_C*                       CallFunc_Create_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_VoteCamera_C*                        CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_StartVoteMode) == 0x000010, "Wrong alignment on B_ImpostorHunter_C_StartVoteMode");
static_assert(sizeof(B_ImpostorHunter_C_StartVoteMode) == 0x0001C0, "Wrong size on B_ImpostorHunter_C_StartVoteMode");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Location) == 0x000080, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_GetController_ReturnValue) == 0x0000C8, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_AsPlayer_Controller) == 0x0000D0, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_Create_ReturnValue) == 0x0000E0, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Location_1) == 0x0000F0, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Rotation_1) == 0x000108, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BreakTransform_Scale_1) == 0x000120, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_GetController_ReturnValue_1) == 0x000138, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0001A0, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, K2Node_DynamicCast_bSuccess_2) == 0x0001A8, "Member 'B_ImpostorHunter_C_StartVoteMode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001B0, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StartVoteMode, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B8, "Member 'B_ImpostorHunter_C_StartVoteMode::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.StopVoteMode
// 0x0038 (0x0038 - 0x0000)
struct B_ImpostorHunter_C_StopVoteMode final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_StopVoteMode) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_StopVoteMode");
static_assert(sizeof(B_ImpostorHunter_C_StopVoteMode) == 0x000038, "Wrong size on B_ImpostorHunter_C_StopVoteMode");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_ImpostorHunter_C_StopVoteMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, CallFunc_SetHighlight_ForcedBoolean) == 0x000008, "Member 'B_ImpostorHunter_C_StopVoteMode::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ImpostorHunter_C_StopVoteMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorHunter_C_StopVoteMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'B_ImpostorHunter_C_StopVoteMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'B_ImpostorHunter_C_StopVoteMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'B_ImpostorHunter_C_StopVoteMode::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, K2Node_DynamicCast_AsPlayer_Controller) == 0x000028, "Member 'B_ImpostorHunter_C_StopVoteMode::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_StopVoteMode, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ImpostorHunter_C_StopVoteMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.TickOverride
// 0x0300 (0x0300 - 0x0000)
struct B_ImpostorHunter_C_TickOverride final
{
public:
	class AB_ImpostorPlayerState_C*               ImpostorPlayerState;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12A[0x6];                                      // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_2;      // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_VoteStarterSpawnPoint_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0158(0x0010)(ReferenceParm)
	class AB_VoteStarterSpawnPoint_C*             CallFunc_Array_Get_Item_2;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerColor_ReturnValue;               // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_VoteStarter_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_TickOverride) == 0x000010, "Wrong alignment on B_ImpostorHunter_C_TickOverride");
static_assert(sizeof(B_ImpostorHunter_C_TickOverride) == 0x000300, "Wrong size on B_ImpostorHunter_C_TickOverride");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, ImpostorPlayerState) == 0x000000, "Member 'B_ImpostorHunter_C_TickOverride::ImpostorPlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ImpostorHunter_C_TickOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_ImpostorHunter_C_TickOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'B_ImpostorHunter_C_TickOverride::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000020, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetGameState_ReturnValue_1) == 0x000030, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000040, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Location) == 0x0000B8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Rotation) == 0x0000D0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BooleanOR_ReturnValue) == 0x000100, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'B_ImpostorHunter_C_TickOverride::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Get_Item) == 0x000110, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Length_ReturnValue_1) == 0x000124, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Less_IntInt_ReturnValue_1) == 0x000129, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetGameState_ReturnValue_2) == 0x000130, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_AsB_Impostor_Game_State_2) == 0x000138, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_AsB_Impostor_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000148, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_bSuccess_3) == 0x000150, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetAllActorsOfClass_OutActors) == 0x000158, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Get_Item_2) == 0x000168, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetPlayerColor_ReturnValue) == 0x000170, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetPlayerColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000188, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_X) == 0x0001A0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_Y) == 0x0001A8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_Z) == 0x0001B0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Array_Length_ReturnValue_2) == 0x0001B8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Greater_IntInt_ReturnValue) == 0x0001BC, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Location_1) == 0x0001C0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Rotation_1) == 0x0001D8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakTransform_Scale_1) == 0x0001F0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x000208, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, K2Node_DynamicCast_bSuccess_4) == 0x000210, "Member 'B_ImpostorHunter_C_TickOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_GetForwardVector_ReturnValue) == 0x000218, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000230, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_Add_VectorVector_ReturnValue) == 0x000248, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_X_1) == 0x000260, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_Y_1) == 0x000268, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BreakVector_Z_1) == 0x000270, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_MakeVector_ReturnValue) == 0x000278, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002F0, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickOverride, CallFunc_FinishSpawningActor_ReturnValue) == 0x0002F8, "Member 'B_ImpostorHunter_C_TickOverride::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.TickVisuals
// 0x0058 (0x0058 - 0x0000)
struct B_ImpostorHunter_C_TickVisuals final
{
public:
	class AB_ImpostorHunter_C*                    SelfRef;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_ImpostorHUD_C*                      K2Node_DynamicCast_AsWB_Impostor_HUD;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ImpostorPlayerName_C*               K2Node_DynamicCast_AsWB_Impostor_Player_Name;      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_TickVisuals) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_TickVisuals");
static_assert(sizeof(B_ImpostorHunter_C_TickVisuals) == 0x000058, "Wrong size on B_ImpostorHunter_C_TickVisuals");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, SelfRef) == 0x000000, "Member 'B_ImpostorHunter_C_TickVisuals::SelfRef' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ImpostorHunter_C_TickVisuals::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000020, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000030, "Member 'B_ImpostorHunter_C_TickVisuals::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_AsWB_Impostor_HUD) == 0x000038, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_AsWB_Impostor_HUD' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_AsWB_Impostor_Player_Name) == 0x000048, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_AsWB_Impostor_Player_Name' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'B_ImpostorHunter_C_TickVisuals::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, CallFunc_IsLocallyControlled_ReturnValue) == 0x000051, "Member 'B_ImpostorHunter_C_TickVisuals::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_TickVisuals, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'B_ImpostorHunter_C_TickVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.Toggle Lantern Visibility
// 0x0040 (0x0040 - 0x0000)
struct B_ImpostorHunter_C_Toggle_Lantern_Visibility final
{
public:
	bool                                          SetVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Cable_C*                             CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_SmallLantern_C*                      CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorHunter_C_Toggle_Lantern_Visibility) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_Toggle_Lantern_Visibility");
static_assert(sizeof(B_ImpostorHunter_C_Toggle_Lantern_Visibility) == 0x000040, "Wrong size on B_ImpostorHunter_C_Toggle_Lantern_Visibility");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, SetVisible) == 0x000000, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::SetVisible' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorHunter_C_Toggle_Lantern_Visibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'B_ImpostorHunter_C_Toggle_Lantern_Visibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_ImpostorHunter.B_ImpostorHunter_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct B_ImpostorHunter_C_UserConstructionScript final
{
public:
	TArray<class AB_Cable_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ImpostorHunter_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_ImpostorHunter_C_UserConstructionScript");
static_assert(sizeof(B_ImpostorHunter_C_UserConstructionScript) == 0x000010, "Wrong size on B_ImpostorHunter_C_UserConstructionScript");
static_assert(offsetof(B_ImpostorHunter_C_UserConstructionScript, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'B_ImpostorHunter_C_UserConstructionScript::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

}

