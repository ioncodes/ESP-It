#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Unlock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "B_Rarity_structs.hpp"
#include "Engine_structs.hpp"
#include "S_ItemInfo_structs.hpp"
#include "SClientItemUnlock_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_Unlock.WB_Unlock_C.RemoveTooltip
// 0x0002 (0x0002 - 0x0000)
struct WB_Unlock_C_RemoveTooltip final
{
public:
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_RemoveTooltip) == 0x000001, "Wrong alignment on WB_Unlock_C_RemoveTooltip");
static_assert(sizeof(WB_Unlock_C_RemoveTooltip) == 0x000002, "Wrong size on WB_Unlock_C_RemoveTooltip");
static_assert(offsetof(WB_Unlock_C_RemoveTooltip, CallFunc_IsInViewport_ReturnValue) == 0x000000, "Member 'WB_Unlock_C_RemoveTooltip::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_RemoveTooltip, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WB_Unlock_C_RemoveTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.GetTooltipSize
// 0x0058 (0x0058 - 0x0000)
struct WB_Unlock_C_GetTooltipSize final
{
public:
	struct FVector2D                              ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0010(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_GetTooltipSize) == 0x000008, "Wrong alignment on WB_Unlock_C_GetTooltipSize");
static_assert(sizeof(WB_Unlock_C_GetTooltipSize) == 0x000058, "Wrong size on WB_Unlock_C_GetTooltipSize");
static_assert(offsetof(WB_Unlock_C_GetTooltipSize, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_GetTooltipSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetTooltipSize, CallFunc_GetCachedGeometry_ReturnValue) == 0x000010, "Member 'WB_Unlock_C_GetTooltipSize::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetTooltipSize, CallFunc_GetAbsoluteSize_ReturnValue) == 0x000048, "Member 'WB_Unlock_C_GetTooltipSize::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.GetViewportPosition
// 0x0088 (0x0088 - 0x0000)
struct WB_Unlock_C_GetViewportPosition final
{
public:
	struct FVector2D                              ViewportPosition;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0014(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_GetViewportPosition) == 0x000008, "Wrong alignment on WB_Unlock_C_GetViewportPosition");
static_assert(sizeof(WB_Unlock_C_GetViewportPosition) == 0x000088, "Wrong size on WB_Unlock_C_GetViewportPosition");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, ViewportPosition) == 0x000000, "Member 'WB_Unlock_C_GetViewportPosition::ViewportPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_GetViewportScale_ReturnValue) == 0x000010, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x000014, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_LocalToViewport_PixelPosition) == 0x000050, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_LocalToViewport_ViewportPosition) == 0x000060, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000070, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetViewportPosition, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x000080, "Member 'WB_Unlock_C_GetViewportPosition::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.SetTooltipPosition
// 0x02B8 (0x02B8 - 0x0000)
struct WB_Unlock_C_SetTooltipPosition final
{
public:
	bool                                          bWouldExceedTopViewportBorderAfterFlip;            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VerticalTopTooltipBorderAfterFlip;                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesiredVerticalPositionAfterFlip;                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExceedsBottomViewportBorder;                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bExceedsRightViewportBorder;                       // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DesiredVerticalPosition;                           // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DesiredHorizontalPosition;                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ViewportSize;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              TooltipSize;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GridButtonSize;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              GridButtonPosition;                                // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetTooltipSize_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportPosition_ViewportPosition;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetAlignmentInViewport_ReturnValue;       // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_7;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_7;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_8;                        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_8;                        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_9;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_9;                        // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_10;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_10;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_11;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_11;                       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_12;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_12;                       // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_13;                       // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_13;                       // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_14;                       // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_14;                       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_15;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_15;                       // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_16;                       // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_16;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0270(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetAbsoluteSize_ReturnValue;              // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_SetTooltipPosition) == 0x000008, "Wrong alignment on WB_Unlock_C_SetTooltipPosition");
static_assert(sizeof(WB_Unlock_C_SetTooltipPosition) == 0x0002B8, "Wrong size on WB_Unlock_C_SetTooltipPosition");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, bWouldExceedTopViewportBorderAfterFlip) == 0x000000, "Member 'WB_Unlock_C_SetTooltipPosition::bWouldExceedTopViewportBorderAfterFlip' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, VerticalTopTooltipBorderAfterFlip) == 0x000008, "Member 'WB_Unlock_C_SetTooltipPosition::VerticalTopTooltipBorderAfterFlip' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, DesiredVerticalPositionAfterFlip) == 0x000010, "Member 'WB_Unlock_C_SetTooltipPosition::DesiredVerticalPositionAfterFlip' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, bExceedsBottomViewportBorder) == 0x000018, "Member 'WB_Unlock_C_SetTooltipPosition::bExceedsBottomViewportBorder' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, bExceedsRightViewportBorder) == 0x000019, "Member 'WB_Unlock_C_SetTooltipPosition::bExceedsRightViewportBorder' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, DesiredVerticalPosition) == 0x000020, "Member 'WB_Unlock_C_SetTooltipPosition::DesiredVerticalPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, DesiredHorizontalPosition) == 0x000028, "Member 'WB_Unlock_C_SetTooltipPosition::DesiredHorizontalPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, ViewportSize) == 0x000030, "Member 'WB_Unlock_C_SetTooltipPosition::ViewportSize' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, TooltipSize) == 0x000040, "Member 'WB_Unlock_C_SetTooltipPosition::TooltipSize' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, GridButtonSize) == 0x000050, "Member 'WB_Unlock_C_SetTooltipPosition::GridButtonSize' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, GridButtonPosition) == 0x000060, "Member 'WB_Unlock_C_SetTooltipPosition::GridButtonPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetTooltipSize_ReturnValue) == 0x000070, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetTooltipSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetViewportPosition_ViewportPosition) == 0x000080, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetViewportPosition_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X) == 0x000090, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_1) == 0x0000A0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_1) == 0x0000A8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_2) == 0x0000B8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_2) == 0x0000C0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_FClamp_ReturnValue) == 0x0000C8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_3) == 0x0000D0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_3) == 0x0000D8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_4) == 0x0000E0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_4) == 0x0000E8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, Temp_real_Variable) == 0x000108, "Member 'WB_Unlock_C_SetTooltipPosition::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetAlignmentInViewport_ReturnValue) == 0x000118, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetAlignmentInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_5) == 0x000128, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_5) == 0x000130, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BooleanAND_ReturnValue) == 0x000138, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x000139, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, Temp_real_Variable_1) == 0x000140, "Member 'WB_Unlock_C_SetTooltipPosition::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000148, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_6) == 0x000150, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_6) == 0x000158, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000160, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_7) == 0x000168, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_7' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_7) == 0x000170, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_7' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_8) == 0x000178, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_8' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_8) == 0x000180, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_8' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000188, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_FClamp_ReturnValue_1) == 0x000190, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, Temp_bool_Variable) == 0x000198, "Member 'WB_Unlock_C_SetTooltipPosition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_9) == 0x0001A0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_9' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_9) == 0x0001A8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_9' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, K2Node_Select_Default) == 0x0001B0, "Member 'WB_Unlock_C_SetTooltipPosition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001B8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_10) == 0x0001C8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_10' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_10) == 0x0001D0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_10' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_11) == 0x0001D8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_11' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_11) == 0x0001E0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_11' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001E8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_12) == 0x0001F8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_12' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_12) == 0x000200, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_12' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_13) == 0x000208, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_13' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_13) == 0x000210, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_13' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000218, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_14) == 0x000228, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_14' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_14) == 0x000230, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_14' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_15) == 0x000238, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_15' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_15) == 0x000240, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_15' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_X_16) == 0x000248, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_X_16' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_BreakVector2D_Y_16) == 0x000250, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_BreakVector2D_Y_16' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000258, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetViewportSize_ReturnValue) == 0x000260, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetCachedGeometry_ReturnValue) == 0x000270, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetTooltipPosition, CallFunc_GetAbsoluteSize_ReturnValue) == 0x0002A8, "Member 'WB_Unlock_C_SetTooltipPosition::CallFunc_GetAbsoluteSize_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.IsGamepadMode
// 0x0002 (0x0002 - 0x0000)
struct WB_Unlock_C_IsGamepadMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_IsGamepadMode) == 0x000001, "Wrong alignment on WB_Unlock_C_IsGamepadMode");
static_assert(sizeof(WB_Unlock_C_IsGamepadMode) == 0x000002, "Wrong size on WB_Unlock_C_IsGamepadMode");
static_assert(offsetof(WB_Unlock_C_IsGamepadMode, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_IsGamepadMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_IsGamepadMode, CallFunc_IsGamepadMode_ReturnValue) == 0x000001, "Member 'WB_Unlock_C_IsGamepadMode::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.HasUserFocusOrIsHovered
// 0x0004 (0x0004 - 0x0000)
struct WB_Unlock_C_HasUserFocusOrIsHovered final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_HasUserFocusOrIsHovered) == 0x000001, "Wrong alignment on WB_Unlock_C_HasUserFocusOrIsHovered");
static_assert(sizeof(WB_Unlock_C_HasUserFocusOrIsHovered) == 0x000004, "Wrong size on WB_Unlock_C_HasUserFocusOrIsHovered");
static_assert(offsetof(WB_Unlock_C_HasUserFocusOrIsHovered, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_HasUserFocusOrIsHovered::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_HasUserFocusOrIsHovered, CallFunc_IsHovered_ReturnValue) == 0x000001, "Member 'WB_Unlock_C_HasUserFocusOrIsHovered::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_HasUserFocusOrIsHovered, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000002, "Member 'WB_Unlock_C_HasUserFocusOrIsHovered::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_HasUserFocusOrIsHovered, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'WB_Unlock_C_HasUserFocusOrIsHovered::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Get_CustomRecipe_Brush_0
// 0x01C0 (0x01C0 - 0x0000)
struct WB_Unlock_C_Get_CustomRecipe_Brush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0xF];                                       // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00F0(0x00D0)()
};
static_assert(alignof(WB_Unlock_C_Get_CustomRecipe_Brush_0) == 0x000010, "Wrong alignment on WB_Unlock_C_Get_CustomRecipe_Brush_0");
static_assert(sizeof(WB_Unlock_C_Get_CustomRecipe_Brush_0) == 0x0001C0, "Wrong size on WB_Unlock_C_Get_CustomRecipe_Brush_0");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Brush_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_Get_CustomRecipe_Brush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Brush_0, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000D0, "Member 'WB_Unlock_C_Get_CustomRecipe_Brush_0::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Brush_0, K2Node_DynamicCast_AsTexture_2D) == 0x0000D8, "Member 'WB_Unlock_C_Get_CustomRecipe_Brush_0::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Brush_0, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'WB_Unlock_C_Get_CustomRecipe_Brush_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Brush_0, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000F0, "Member 'WB_Unlock_C_Get_CustomRecipe_Brush_0::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.UpdateUnlockName
// 0x00B8 (0x00B8 - 0x0000)
struct WB_Unlock_C_UpdateUnlockName final
{
public:
	class FText                                   ItemName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0070(0x0010)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
	class FText                                   CallFunc_GetSteamItemNameFromID_Name;              // 0x0090(0x0010)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00A8(0x0010)()
};
static_assert(alignof(WB_Unlock_C_UpdateUnlockName) == 0x000008, "Wrong alignment on WB_Unlock_C_UpdateUnlockName");
static_assert(sizeof(WB_Unlock_C_UpdateUnlockName) == 0x0000B8, "Wrong size on WB_Unlock_C_UpdateUnlockName");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, ItemName) == 0x000000, "Member 'WB_Unlock_C_UpdateUnlockName::ItemName' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, Temp_bool_Variable) == 0x000010, "Member 'WB_Unlock_C_UpdateUnlockName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'WB_Unlock_C_UpdateUnlockName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, K2Node_MakeArray_Array) == 0x000060, "Member 'WB_Unlock_C_UpdateUnlockName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, CallFunc_Conv_NameToText_ReturnValue) == 0x000070, "Member 'WB_Unlock_C_UpdateUnlockName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WB_Unlock_C_UpdateUnlockName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, CallFunc_GetSteamItemNameFromID_Name) == 0x000090, "Member 'WB_Unlock_C_UpdateUnlockName::CallFunc_GetSteamItemNameFromID_Name' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, CallFunc_TextIsEmpty_ReturnValue) == 0x0000A0, "Member 'WB_Unlock_C_UpdateUnlockName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_UpdateUnlockName, K2Node_Select_Default) == 0x0000A8, "Member 'WB_Unlock_C_UpdateUnlockName::K2Node_Select_Default' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.SetItemInfo
// 0x0078 (0x0078 - 0x0000)
struct WB_Unlock_C_SetItemInfo final
{
public:
	struct FS_ItemInfo                            SetItemInfo_0;                                     // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_SetItemInfo) == 0x000008, "Wrong alignment on WB_Unlock_C_SetItemInfo");
static_assert(sizeof(WB_Unlock_C_SetItemInfo) == 0x000078, "Wrong size on WB_Unlock_C_SetItemInfo");
static_assert(offsetof(WB_Unlock_C_SetItemInfo, SetItemInfo_0) == 0x000000, "Member 'WB_Unlock_C_SetItemInfo::SetItemInfo_0' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.SetUnlock
// 0x00D8 (0x00D8 - 0x0000)
struct WB_Unlock_C_SetUnlock final
{
public:
	struct FSClientItemUnlock                     ClientItemUnlock_0;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintOnlineItem                   TempItem;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_GetDefaultObject_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemInfo                            CallFunc_GetSkinItem_ReturnValue;                  // 0x0058(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetSkinItem_Found;                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_SetUnlock) == 0x000008, "Wrong alignment on WB_Unlock_C_SetUnlock");
static_assert(sizeof(WB_Unlock_C_SetUnlock) == 0x0000D8, "Wrong size on WB_Unlock_C_SetUnlock");
static_assert(offsetof(WB_Unlock_C_SetUnlock, ClientItemUnlock_0) == 0x000000, "Member 'WB_Unlock_C_SetUnlock::ClientItemUnlock_0' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, TempItem) == 0x000018, "Member 'WB_Unlock_C_SetUnlock::TempItem' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, CallFunc_GetDefaultObject_ReturnValue) == 0x000028, "Member 'WB_Unlock_C_SetUnlock::CallFunc_GetDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WB_Unlock_C_SetUnlock::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, K2Node_DynamicCast_AsB_Base_Skill) == 0x000038, "Member 'WB_Unlock_C_SetUnlock::K2Node_DynamicCast_AsB_Base_Skill' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WB_Unlock_C_SetUnlock::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, K2Node_DynamicCast_AsB_Game_Instance) == 0x000048, "Member 'WB_Unlock_C_SetUnlock::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WB_Unlock_C_SetUnlock::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, CallFunc_GetSkinItem_ReturnValue) == 0x000058, "Member 'WB_Unlock_C_SetUnlock::CallFunc_GetSkinItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, CallFunc_GetSkinItem_Found) == 0x0000D0, "Member 'WB_Unlock_C_SetUnlock::CallFunc_GetSkinItem_Found' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_SetUnlock, K2Node_SwitchEnum_CmpSuccess) == 0x0000D1, "Member 'WB_Unlock_C_SetUnlock::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Get_CustomRecipe_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_Unlock_C_Get_CustomRecipe_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_Get_CustomRecipe_Visibility_0) == 0x000001, "Wrong alignment on WB_Unlock_C_Get_CustomRecipe_Visibility_0");
static_assert(sizeof(WB_Unlock_C_Get_CustomRecipe_Visibility_0) == 0x000005, "Wrong size on WB_Unlock_C_Get_CustomRecipe_Visibility_0");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_Get_CustomRecipe_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_Unlock_C_Get_CustomRecipe_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_Unlock_C_Get_CustomRecipe_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_Unlock_C_Get_CustomRecipe_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_CustomRecipe_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_Unlock_C_Get_CustomRecipe_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.GetText_0
// 0x0028 (0x0028 - 0x0000)
struct WB_Unlock_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
};
static_assert(alignof(WB_Unlock_C_GetText_0) == 0x000008, "Wrong alignment on WB_Unlock_C_GetText_0");
static_assert(sizeof(WB_Unlock_C_GetText_0) == 0x000028, "Wrong size on WB_Unlock_C_GetText_0");
static_assert(offsetof(WB_Unlock_C_GetText_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetText_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'WB_Unlock_C_GetText_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_GetText_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_Unlock_C_GetText_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Get_Slotname_Text_0
// 0x0038 (0x0038 - 0x0000)
struct WB_Unlock_C_Get_Slotname_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0010)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_Get_Slotname_Text_0) == 0x000008, "Wrong alignment on WB_Unlock_C_Get_Slotname_Text_0");
static_assert(sizeof(WB_Unlock_C_Get_Slotname_Text_0) == 0x000038, "Wrong size on WB_Unlock_C_Get_Slotname_Text_0");
static_assert(offsetof(WB_Unlock_C_Get_Slotname_Text_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_Get_Slotname_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_Slotname_Text_0, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'WB_Unlock_C_Get_Slotname_Text_0::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_Slotname_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'WB_Unlock_C_Get_Slotname_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_Slotname_Text_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'WB_Unlock_C_Get_Slotname_Text_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Get_RaretyColor_BrushColor_0
// 0x0058 (0x0058 - 0x0000)
struct WB_Unlock_C_Get_RaretyColor_BrushColor_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRarityInfo_Name;                       // 0x0010(0x0010)()
	struct FLinearColor                           CallFunc_GetRarityInfo_Color;                      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetRarityInfo_Name_1;                     // 0x0030(0x0010)()
	struct FLinearColor                           CallFunc_GetRarityInfo_Color_1;                    // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_Get_RaretyColor_BrushColor_0) == 0x000008, "Wrong alignment on WB_Unlock_C_Get_RaretyColor_BrushColor_0");
static_assert(sizeof(WB_Unlock_C_Get_RaretyColor_BrushColor_0) == 0x000058, "Wrong size on WB_Unlock_C_Get_RaretyColor_BrushColor_0");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, CallFunc_GetRarityInfo_Name) == 0x000010, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::CallFunc_GetRarityInfo_Name' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, CallFunc_GetRarityInfo_Color) == 0x000020, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::CallFunc_GetRarityInfo_Color' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, CallFunc_GetRarityInfo_Name_1) == 0x000030, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::CallFunc_GetRarityInfo_Name_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, CallFunc_GetRarityInfo_Color_1) == 0x000040, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::CallFunc_GetRarityInfo_Color_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RaretyColor_BrushColor_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000050, "Member 'WB_Unlock_C_Get_RaretyColor_BrushColor_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Get_RewardImage_Background_0
// 0x0FB0 (0x0FB0 - 0x0000)
struct WB_Unlock_C_Get_RewardImage_Background_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            Temp_struct_Variable;                              // 0x00D0(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_1;                            // 0x01A0(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_2;                            // 0x0270(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_3;                            // 0x0340(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_4;                            // 0x0410(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_5;                            // 0x04E0(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_6;                            // 0x05B0(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_7;                            // 0x0680(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x0750(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x0820(0x00D0)()
	struct FSlateBrush                            Temp_struct_Variable_8;                            // 0x08F0(0x00D0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0xF];                                      // 0x09C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_2;       // 0x09D0(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_3;       // 0x0AA0(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_4;       // 0x0B70(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_5;       // 0x0C40(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_6;       // 0x0D10(0x00D0)()
	EB_Rarity                                     Temp_byte_Variable;                                // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0DE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0DF0(0x00D0)()
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0EC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC9[0x7];                                      // 0x0EC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_7;       // 0x0ED0(0x00D0)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_Get_RewardImage_Background_0) == 0x000010, "Wrong alignment on WB_Unlock_C_Get_RewardImage_Background_0");
static_assert(sizeof(WB_Unlock_C_Get_RewardImage_Background_0) == 0x000FB0, "Wrong size on WB_Unlock_C_Get_RewardImage_Background_0");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, ReturnValue) == 0x000000, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable) == 0x0000D0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_1) == 0x0001A0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_2) == 0x000270, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_3) == 0x000340, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_4) == 0x000410, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_5) == 0x0004E0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_6) == 0x0005B0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_7) == 0x000680, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x000750, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x000820, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_struct_Variable_8) == 0x0008F0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_IsValid_ReturnValue) == 0x0009C0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_2) == 0x0009D0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_3) == 0x000AA0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_4) == 0x000B70, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_5) == 0x000C40, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_6) == 0x000D10, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, Temp_byte_Variable) == 0x000DE0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000DE8, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, K2Node_Select_Default) == 0x000DF0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, K2Node_DynamicCast_AsTexture_2D) == 0x000EC0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, K2Node_DynamicCast_bSuccess) == 0x000EC8, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_MakeBrushFromTexture_ReturnValue_7) == 0x000ED0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_MakeBrushFromTexture_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Get_RewardImage_Background_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000FA0, "Member 'WB_Unlock_C_Get_RewardImage_Background_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Unlock_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_Tick) == 0x000004, "Wrong alignment on WB_Unlock_C_Tick");
static_assert(sizeof(WB_Unlock_C_Tick) == 0x00003C, "Wrong size on WB_Unlock_C_Tick");
static_assert(offsetof(WB_Unlock_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Unlock_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Unlock_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Unlock.WB_Unlock_C.ExecuteUbergraph_WB_Unlock
// 0x0040 (0x0040 - 0x0000)
struct WB_Unlock_C_ExecuteUbergraph_WB_Unlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Unlock_C_ExecuteUbergraph_WB_Unlock) == 0x000004, "Wrong alignment on WB_Unlock_C_ExecuteUbergraph_WB_Unlock");
static_assert(sizeof(WB_Unlock_C_ExecuteUbergraph_WB_Unlock) == 0x000040, "Wrong size on WB_Unlock_C_ExecuteUbergraph_WB_Unlock");
static_assert(offsetof(WB_Unlock_C_ExecuteUbergraph_WB_Unlock, EntryPoint) == 0x000000, "Member 'WB_Unlock_C_ExecuteUbergraph_WB_Unlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_ExecuteUbergraph_WB_Unlock, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_Unlock_C_ExecuteUbergraph_WB_Unlock::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Unlock_C_ExecuteUbergraph_WB_Unlock, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_Unlock_C_ExecuteUbergraph_WB_Unlock::K2Node_Event_InDeltaTime' has a wrong offset!");

}

