#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MeshModelingTools

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MeshModelingTools_structs.hpp"
#include "ModelingOperators_structs.hpp"
#include "InteractiveToolsFramework_classes.hpp"
#include "ModelingComponents_structs.hpp"
#include "ModelingComponents_classes.hpp"


namespace SDK
{

// Class MeshModelingTools.DrawAndRevolveTool
// 0x00C8 (0x0160 - 0x0098)
class alignas(0x10) UDrawAndRevolveTool final : public UInteractiveTool
{
public:
	uint8                                         Pad_98[0x90];                                      // 0x0098(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveControlPointsMechanic*            ControlPointsMechanic;                             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConstructionPlaneMechanic*             PlaneMechanic;                                     // 0x0130(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCreateMeshObjectTypeProperties*        OutputTypeProperties;                              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URevolveToolProperties*                 Settings;                                          // 0x0140(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x0148(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawAndRevolveTool">();
	}
	static class UDrawAndRevolveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawAndRevolveTool>();
	}
};
static_assert(alignof(UDrawAndRevolveTool) == 0x000010, "Wrong alignment on UDrawAndRevolveTool");
static_assert(sizeof(UDrawAndRevolveTool) == 0x000160, "Wrong size on UDrawAndRevolveTool");
static_assert(offsetof(UDrawAndRevolveTool, ControlPointsMechanic) == 0x000128, "Member 'UDrawAndRevolveTool::ControlPointsMechanic' has a wrong offset!");
static_assert(offsetof(UDrawAndRevolveTool, PlaneMechanic) == 0x000130, "Member 'UDrawAndRevolveTool::PlaneMechanic' has a wrong offset!");
static_assert(offsetof(UDrawAndRevolveTool, OutputTypeProperties) == 0x000138, "Member 'UDrawAndRevolveTool::OutputTypeProperties' has a wrong offset!");
static_assert(offsetof(UDrawAndRevolveTool, Settings) == 0x000140, "Member 'UDrawAndRevolveTool::Settings' has a wrong offset!");
static_assert(offsetof(UDrawAndRevolveTool, MaterialProperties) == 0x000148, "Member 'UDrawAndRevolveTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UDrawAndRevolveTool, Preview) == 0x000150, "Member 'UDrawAndRevolveTool::Preview' has a wrong offset!");

// Class MeshModelingTools.PolyEditActivityContext
// 0x00F8 (0x0120 - 0x0028)
class alignas(0x10) UPolyEditActivityContext final : public UObject
{
public:
	class UPolyEditCommonProperties*              CommonProperties;                                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x28];                                      // 0x0048(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolygonSelectionMechanic*              SelectionMechanic;                                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0xA8];                                      // 0x0078(0x00A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditActivityContext">();
	}
	static class UPolyEditActivityContext* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditActivityContext>();
	}
};
static_assert(alignof(UPolyEditActivityContext) == 0x000010, "Wrong alignment on UPolyEditActivityContext");
static_assert(sizeof(UPolyEditActivityContext) == 0x000120, "Wrong size on UPolyEditActivityContext");
static_assert(offsetof(UPolyEditActivityContext, CommonProperties) == 0x000028, "Member 'UPolyEditActivityContext::CommonProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditActivityContext, Preview) == 0x000040, "Member 'UPolyEditActivityContext::Preview' has a wrong offset!");
static_assert(offsetof(UPolyEditActivityContext, SelectionMechanic) == 0x000070, "Member 'UPolyEditActivityContext::SelectionMechanic' has a wrong offset!");

// Class MeshModelingTools.PolyEditExtrudeEdgeActivityProperties
// 0x0018 (0x00C0 - 0x00A8)
class UPolyEditExtrudeEdgeActivityProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditExtrudeEdgeDirectionMode             DirectionMode;                                     // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditExtrudeEdgeDistanceMode              DistanceMode;                                      // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Distance;                                          // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseUnselectedForFrames;                           // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAdjustToExtrudeEvenly;                            // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditExtrudeEdgeActivityProperties">();
	}
	static class UPolyEditExtrudeEdgeActivityProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditExtrudeEdgeActivityProperties>();
	}
};
static_assert(alignof(UPolyEditExtrudeEdgeActivityProperties) == 0x000008, "Wrong alignment on UPolyEditExtrudeEdgeActivityProperties");
static_assert(sizeof(UPolyEditExtrudeEdgeActivityProperties) == 0x0000C0, "Wrong size on UPolyEditExtrudeEdgeActivityProperties");
static_assert(offsetof(UPolyEditExtrudeEdgeActivityProperties, DirectionMode) == 0x0000A8, "Member 'UPolyEditExtrudeEdgeActivityProperties::DirectionMode' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivityProperties, DistanceMode) == 0x0000AC, "Member 'UPolyEditExtrudeEdgeActivityProperties::DistanceMode' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivityProperties, Distance) == 0x0000B0, "Member 'UPolyEditExtrudeEdgeActivityProperties::Distance' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivityProperties, bUseUnselectedForFrames) == 0x0000B8, "Member 'UPolyEditExtrudeEdgeActivityProperties::bUseUnselectedForFrames' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivityProperties, bAdjustToExtrudeEvenly) == 0x0000B9, "Member 'UPolyEditExtrudeEdgeActivityProperties::bAdjustToExtrudeEvenly' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UEditMeshPolygonsToolBuilder : public USingleTargetWithSelectionToolBuilder
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolBuilder">();
	}
	static class UEditMeshPolygonsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolBuilder>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolBuilder) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolBuilder");
static_assert(sizeof(UEditMeshPolygonsToolBuilder) == 0x000030, "Wrong size on UEditMeshPolygonsToolBuilder");

// Class MeshModelingTools.EditMeshPolygonsActionModeToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UEditMeshPolygonsActionModeToolBuilder final : public UEditMeshPolygonsToolBuilder
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsActionModeToolBuilder">();
	}
	static class UEditMeshPolygonsActionModeToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsActionModeToolBuilder>();
	}
};
static_assert(alignof(UEditMeshPolygonsActionModeToolBuilder) == 0x000008, "Wrong alignment on UEditMeshPolygonsActionModeToolBuilder");
static_assert(sizeof(UEditMeshPolygonsActionModeToolBuilder) == 0x000038, "Wrong size on UEditMeshPolygonsActionModeToolBuilder");

// Class MeshModelingTools.PolyEditExtrudeEdgeActivity
// 0x02A0 (0x02D0 - 0x0030)
class alignas(0x10) UPolyEditExtrudeEdgeActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditExtrudeEdgeActivityProperties* Settings;                                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        ExtrudeFrameProxy;                                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombinedTransformGizmo*                ExtrudeFrameGizmo;                                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        SingleDirectionProxy;                              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombinedTransformGizmo*                SingleDirectionGizmo;                              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewGeometry*                       PreviewGeometry;                                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_70[0x260];                                     // 0x0070(0x0260)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditExtrudeEdgeActivity">();
	}
	static class UPolyEditExtrudeEdgeActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditExtrudeEdgeActivity>();
	}
};
static_assert(alignof(UPolyEditExtrudeEdgeActivity) == 0x000010, "Wrong alignment on UPolyEditExtrudeEdgeActivity");
static_assert(sizeof(UPolyEditExtrudeEdgeActivity) == 0x0002D0, "Wrong size on UPolyEditExtrudeEdgeActivity");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, Settings) == 0x000038, "Member 'UPolyEditExtrudeEdgeActivity::Settings' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, ActivityContext) == 0x000040, "Member 'UPolyEditExtrudeEdgeActivity::ActivityContext' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, ExtrudeFrameProxy) == 0x000048, "Member 'UPolyEditExtrudeEdgeActivity::ExtrudeFrameProxy' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, ExtrudeFrameGizmo) == 0x000050, "Member 'UPolyEditExtrudeEdgeActivity::ExtrudeFrameGizmo' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, SingleDirectionProxy) == 0x000058, "Member 'UPolyEditExtrudeEdgeActivity::SingleDirectionProxy' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, SingleDirectionGizmo) == 0x000060, "Member 'UPolyEditExtrudeEdgeActivity::SingleDirectionGizmo' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeEdgeActivity, PreviewGeometry) == 0x000068, "Member 'UPolyEditExtrudeEdgeActivity::PreviewGeometry' has a wrong offset!");

// Class MeshModelingTools.AddPrimitiveToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UAddPrimitiveToolBuilder final : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPrimitiveToolBuilder">();
	}
	static class UAddPrimitiveToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPrimitiveToolBuilder>();
	}
};
static_assert(alignof(UAddPrimitiveToolBuilder) == 0x000008, "Wrong alignment on UAddPrimitiveToolBuilder");
static_assert(sizeof(UAddPrimitiveToolBuilder) == 0x000030, "Wrong size on UAddPrimitiveToolBuilder");

// Class MeshModelingTools.RevolveProperties
// 0x0070 (0x0118 - 0x00A8)
class URevolveProperties : public UInteractiveToolPropertySet
{
public:
	double                                        RevolveDegreesClamped;                             // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RevolveDegrees;                                    // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        RevolveDegreesOffset;                              // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        StepsMaxDegrees;                                   // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bExplicitSteps;                                    // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumExplicitSteps;                                  // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        HeightOffsetPerDegree;                             // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReverseRevolutionDirection;                       // 0x00D8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlipMesh;                                         // 0x00D9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSharpNormals;                                     // 0x00DA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SharpNormalsDegreeThreshold;                       // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPathAtMidpointOfStep;                             // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERevolvePropertiesPolygroupMode               PolygroupMode;                                     // 0x00E9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERevolvePropertiesQuadSplit                   QuadSplitMode;                                     // 0x00EA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_EB[0x2D];                                      // 0x00EB(0x002D)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RevolveProperties">();
	}
	static class URevolveProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URevolveProperties>();
	}
};
static_assert(alignof(URevolveProperties) == 0x000008, "Wrong alignment on URevolveProperties");
static_assert(sizeof(URevolveProperties) == 0x000118, "Wrong size on URevolveProperties");
static_assert(offsetof(URevolveProperties, RevolveDegreesClamped) == 0x0000A8, "Member 'URevolveProperties::RevolveDegreesClamped' has a wrong offset!");
static_assert(offsetof(URevolveProperties, RevolveDegrees) == 0x0000B0, "Member 'URevolveProperties::RevolveDegrees' has a wrong offset!");
static_assert(offsetof(URevolveProperties, RevolveDegreesOffset) == 0x0000B8, "Member 'URevolveProperties::RevolveDegreesOffset' has a wrong offset!");
static_assert(offsetof(URevolveProperties, StepsMaxDegrees) == 0x0000C0, "Member 'URevolveProperties::StepsMaxDegrees' has a wrong offset!");
static_assert(offsetof(URevolveProperties, bExplicitSteps) == 0x0000C8, "Member 'URevolveProperties::bExplicitSteps' has a wrong offset!");
static_assert(offsetof(URevolveProperties, NumExplicitSteps) == 0x0000CC, "Member 'URevolveProperties::NumExplicitSteps' has a wrong offset!");
static_assert(offsetof(URevolveProperties, HeightOffsetPerDegree) == 0x0000D0, "Member 'URevolveProperties::HeightOffsetPerDegree' has a wrong offset!");
static_assert(offsetof(URevolveProperties, bReverseRevolutionDirection) == 0x0000D8, "Member 'URevolveProperties::bReverseRevolutionDirection' has a wrong offset!");
static_assert(offsetof(URevolveProperties, bFlipMesh) == 0x0000D9, "Member 'URevolveProperties::bFlipMesh' has a wrong offset!");
static_assert(offsetof(URevolveProperties, bSharpNormals) == 0x0000DA, "Member 'URevolveProperties::bSharpNormals' has a wrong offset!");
static_assert(offsetof(URevolveProperties, SharpNormalsDegreeThreshold) == 0x0000E0, "Member 'URevolveProperties::SharpNormalsDegreeThreshold' has a wrong offset!");
static_assert(offsetof(URevolveProperties, bPathAtMidpointOfStep) == 0x0000E8, "Member 'URevolveProperties::bPathAtMidpointOfStep' has a wrong offset!");
static_assert(offsetof(URevolveProperties, PolygroupMode) == 0x0000E9, "Member 'URevolveProperties::PolygroupMode' has a wrong offset!");
static_assert(offsetof(URevolveProperties, QuadSplitMode) == 0x0000EA, "Member 'URevolveProperties::QuadSplitMode' has a wrong offset!");

// Class MeshModelingTools.ProceduralShapeToolProperties
// 0x0010 (0x00B8 - 0x00A8)
class UProceduralShapeToolProperties : public UInteractiveToolPropertySet
{
public:
	EMakeMeshPolygroupMode                        PolygroupMode;                                     // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMakeMeshPlacementType                        TargetSurface;                                     // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMakeMeshPivotLocation                        PivotLocation;                                     // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rotation;                                          // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAlignToNormal;                                    // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGizmo;                                        // 0x00B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGizmoOptions;                                 // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralShapeToolProperties">();
	}
	static class UProceduralShapeToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralShapeToolProperties>();
	}
};
static_assert(alignof(UProceduralShapeToolProperties) == 0x000008, "Wrong alignment on UProceduralShapeToolProperties");
static_assert(sizeof(UProceduralShapeToolProperties) == 0x0000B8, "Wrong size on UProceduralShapeToolProperties");
static_assert(offsetof(UProceduralShapeToolProperties, PolygroupMode) == 0x0000A8, "Member 'UProceduralShapeToolProperties::PolygroupMode' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, TargetSurface) == 0x0000A9, "Member 'UProceduralShapeToolProperties::TargetSurface' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, PivotLocation) == 0x0000AA, "Member 'UProceduralShapeToolProperties::PivotLocation' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, Rotation) == 0x0000AC, "Member 'UProceduralShapeToolProperties::Rotation' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, bAlignToNormal) == 0x0000B0, "Member 'UProceduralShapeToolProperties::bAlignToNormal' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, bShowGizmo) == 0x0000B1, "Member 'UProceduralShapeToolProperties::bShowGizmo' has a wrong offset!");
static_assert(offsetof(UProceduralShapeToolProperties, bShowGizmoOptions) == 0x0000B2, "Member 'UProceduralShapeToolProperties::bShowGizmoOptions' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonToolSnapProperties
// 0x0010 (0x00B8 - 0x00A8)
class UDrawPolygonToolSnapProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bEnableSnapping;                                   // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToVertices;                                   // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToEdges;                                      // 0x00AB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToAxes;                                       // 0x00AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToLengths;                                    // 0x00AD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToSurfaces;                                   // 0x00AE(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AF[0x1];                                       // 0x00AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SnapToSurfacesOffset;                              // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolSnapProperties">();
	}
	static class UDrawPolygonToolSnapProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolSnapProperties>();
	}
};
static_assert(alignof(UDrawPolygonToolSnapProperties) == 0x000008, "Wrong alignment on UDrawPolygonToolSnapProperties");
static_assert(sizeof(UDrawPolygonToolSnapProperties) == 0x0000B8, "Wrong size on UDrawPolygonToolSnapProperties");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bEnableSnapping) == 0x0000A8, "Member 'UDrawPolygonToolSnapProperties::bEnableSnapping' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToWorldGrid) == 0x0000A9, "Member 'UDrawPolygonToolSnapProperties::bSnapToWorldGrid' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToVertices) == 0x0000AA, "Member 'UDrawPolygonToolSnapProperties::bSnapToVertices' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToEdges) == 0x0000AB, "Member 'UDrawPolygonToolSnapProperties::bSnapToEdges' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToAxes) == 0x0000AC, "Member 'UDrawPolygonToolSnapProperties::bSnapToAxes' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToLengths) == 0x0000AD, "Member 'UDrawPolygonToolSnapProperties::bSnapToLengths' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, bSnapToSurfaces) == 0x0000AE, "Member 'UDrawPolygonToolSnapProperties::bSnapToSurfaces' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolSnapProperties, SnapToSurfacesOffset) == 0x0000B0, "Member 'UDrawPolygonToolSnapProperties::SnapToSurfacesOffset' has a wrong offset!");

// Class MeshModelingTools.ProceduralBoxToolProperties
// 0x0018 (0x00D0 - 0x00B8)
class UProceduralBoxToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         Width;                                             // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WidthSubdivisions;                                 // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DepthSubdivisions;                                 // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeightSubdivisions;                                // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralBoxToolProperties">();
	}
	static class UProceduralBoxToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralBoxToolProperties>();
	}
};
static_assert(alignof(UProceduralBoxToolProperties) == 0x000008, "Wrong alignment on UProceduralBoxToolProperties");
static_assert(sizeof(UProceduralBoxToolProperties) == 0x0000D0, "Wrong size on UProceduralBoxToolProperties");
static_assert(offsetof(UProceduralBoxToolProperties, Width) == 0x0000B8, "Member 'UProceduralBoxToolProperties::Width' has a wrong offset!");
static_assert(offsetof(UProceduralBoxToolProperties, Depth) == 0x0000BC, "Member 'UProceduralBoxToolProperties::Depth' has a wrong offset!");
static_assert(offsetof(UProceduralBoxToolProperties, Height) == 0x0000C0, "Member 'UProceduralBoxToolProperties::Height' has a wrong offset!");
static_assert(offsetof(UProceduralBoxToolProperties, WidthSubdivisions) == 0x0000C4, "Member 'UProceduralBoxToolProperties::WidthSubdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralBoxToolProperties, DepthSubdivisions) == 0x0000C8, "Member 'UProceduralBoxToolProperties::DepthSubdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralBoxToolProperties, HeightSubdivisions) == 0x0000CC, "Member 'UProceduralBoxToolProperties::HeightSubdivisions' has a wrong offset!");

// Class MeshModelingTools.ProceduralRectangleToolProperties
// 0x0020 (0x00D8 - 0x00B8)
class UProceduralRectangleToolProperties final : public UProceduralShapeToolProperties
{
public:
	EProceduralRectType                           RectangleType;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Width;                                             // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Depth;                                             // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         WidthSubdivisions;                                 // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DepthSubdivisions;                                 // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMaintainDimension;                                // 0x00CC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CornerRadius;                                      // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CornerSlices;                                      // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralRectangleToolProperties">();
	}
	static class UProceduralRectangleToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralRectangleToolProperties>();
	}
};
static_assert(alignof(UProceduralRectangleToolProperties) == 0x000008, "Wrong alignment on UProceduralRectangleToolProperties");
static_assert(sizeof(UProceduralRectangleToolProperties) == 0x0000D8, "Wrong size on UProceduralRectangleToolProperties");
static_assert(offsetof(UProceduralRectangleToolProperties, RectangleType) == 0x0000B8, "Member 'UProceduralRectangleToolProperties::RectangleType' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, Width) == 0x0000BC, "Member 'UProceduralRectangleToolProperties::Width' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, Depth) == 0x0000C0, "Member 'UProceduralRectangleToolProperties::Depth' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, WidthSubdivisions) == 0x0000C4, "Member 'UProceduralRectangleToolProperties::WidthSubdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, DepthSubdivisions) == 0x0000C8, "Member 'UProceduralRectangleToolProperties::DepthSubdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, bMaintainDimension) == 0x0000CC, "Member 'UProceduralRectangleToolProperties::bMaintainDimension' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, CornerRadius) == 0x0000D0, "Member 'UProceduralRectangleToolProperties::CornerRadius' has a wrong offset!");
static_assert(offsetof(UProceduralRectangleToolProperties, CornerSlices) == 0x0000D4, "Member 'UProceduralRectangleToolProperties::CornerSlices' has a wrong offset!");

// Class MeshModelingTools.ProceduralDiscToolProperties
// 0x0018 (0x00D0 - 0x00B8)
class UProceduralDiscToolProperties final : public UProceduralShapeToolProperties
{
public:
	EProceduralDiscType                           DiscType;                                          // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSlices;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSubdivisions;                                // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HoleRadius;                                        // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralDiscToolProperties">();
	}
	static class UProceduralDiscToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralDiscToolProperties>();
	}
};
static_assert(alignof(UProceduralDiscToolProperties) == 0x000008, "Wrong alignment on UProceduralDiscToolProperties");
static_assert(sizeof(UProceduralDiscToolProperties) == 0x0000D0, "Wrong size on UProceduralDiscToolProperties");
static_assert(offsetof(UProceduralDiscToolProperties, DiscType) == 0x0000B8, "Member 'UProceduralDiscToolProperties::DiscType' has a wrong offset!");
static_assert(offsetof(UProceduralDiscToolProperties, Radius) == 0x0000BC, "Member 'UProceduralDiscToolProperties::Radius' has a wrong offset!");
static_assert(offsetof(UProceduralDiscToolProperties, RadialSlices) == 0x0000C0, "Member 'UProceduralDiscToolProperties::RadialSlices' has a wrong offset!");
static_assert(offsetof(UProceduralDiscToolProperties, RadialSubdivisions) == 0x0000C4, "Member 'UProceduralDiscToolProperties::RadialSubdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralDiscToolProperties, HoleRadius) == 0x0000C8, "Member 'UProceduralDiscToolProperties::HoleRadius' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsSelectionModeToolBuilder
// 0x0008 (0x0038 - 0x0030)
class UEditMeshPolygonsSelectionModeToolBuilder final : public UEditMeshPolygonsToolBuilder
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsSelectionModeToolBuilder">();
	}
	static class UEditMeshPolygonsSelectionModeToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsSelectionModeToolBuilder>();
	}
};
static_assert(alignof(UEditMeshPolygonsSelectionModeToolBuilder) == 0x000008, "Wrong alignment on UEditMeshPolygonsSelectionModeToolBuilder");
static_assert(sizeof(UEditMeshPolygonsSelectionModeToolBuilder) == 0x000038, "Wrong size on UEditMeshPolygonsSelectionModeToolBuilder");

// Class MeshModelingTools.ProceduralTorusToolProperties
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralTorusToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         MajorRadius;                                       // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinorRadius;                                       // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MajorSlices;                                       // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MinorSlices;                                       // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralTorusToolProperties">();
	}
	static class UProceduralTorusToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralTorusToolProperties>();
	}
};
static_assert(alignof(UProceduralTorusToolProperties) == 0x000008, "Wrong alignment on UProceduralTorusToolProperties");
static_assert(sizeof(UProceduralTorusToolProperties) == 0x0000C8, "Wrong size on UProceduralTorusToolProperties");
static_assert(offsetof(UProceduralTorusToolProperties, MajorRadius) == 0x0000B8, "Member 'UProceduralTorusToolProperties::MajorRadius' has a wrong offset!");
static_assert(offsetof(UProceduralTorusToolProperties, MinorRadius) == 0x0000BC, "Member 'UProceduralTorusToolProperties::MinorRadius' has a wrong offset!");
static_assert(offsetof(UProceduralTorusToolProperties, MajorSlices) == 0x0000C0, "Member 'UProceduralTorusToolProperties::MajorSlices' has a wrong offset!");
static_assert(offsetof(UProceduralTorusToolProperties, MinorSlices) == 0x0000C4, "Member 'UProceduralTorusToolProperties::MinorSlices' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolActionPropertySet
// 0x0008 (0x00B0 - 0x00A8)
class UEditMeshPolygonsToolActionPropertySet : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActionPropertySet">();
	}
	static class UEditMeshPolygonsToolActionPropertySet* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActionPropertySet>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActionPropertySet) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActionPropertySet");
static_assert(sizeof(UEditMeshPolygonsToolActionPropertySet) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolActionPropertySet");

// Class MeshModelingTools.EditMeshPolygonsToolEdgeActions_Triangles
// 0x0000 (0x00B0 - 0x00B0)
class UEditMeshPolygonsToolEdgeActions_Triangles final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void Bridge();
	void Collapse();
	void Extrude();
	void FillHole();
	void Flip();
	void Split();
	void Weld();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolEdgeActions_Triangles">();
	}
	static class UEditMeshPolygonsToolEdgeActions_Triangles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolEdgeActions_Triangles>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolEdgeActions_Triangles) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolEdgeActions_Triangles");
static_assert(sizeof(UEditMeshPolygonsToolEdgeActions_Triangles) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolEdgeActions_Triangles");

// Class MeshModelingTools.ProceduralCylinderToolProperties
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralCylinderToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         Radius;                                            // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSlices;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeightSubdivisions;                                // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralCylinderToolProperties">();
	}
	static class UProceduralCylinderToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralCylinderToolProperties>();
	}
};
static_assert(alignof(UProceduralCylinderToolProperties) == 0x000008, "Wrong alignment on UProceduralCylinderToolProperties");
static_assert(sizeof(UProceduralCylinderToolProperties) == 0x0000C8, "Wrong size on UProceduralCylinderToolProperties");
static_assert(offsetof(UProceduralCylinderToolProperties, Radius) == 0x0000B8, "Member 'UProceduralCylinderToolProperties::Radius' has a wrong offset!");
static_assert(offsetof(UProceduralCylinderToolProperties, Height) == 0x0000BC, "Member 'UProceduralCylinderToolProperties::Height' has a wrong offset!");
static_assert(offsetof(UProceduralCylinderToolProperties, RadialSlices) == 0x0000C0, "Member 'UProceduralCylinderToolProperties::RadialSlices' has a wrong offset!");
static_assert(offsetof(UProceduralCylinderToolProperties, HeightSubdivisions) == 0x0000C4, "Member 'UProceduralCylinderToolProperties::HeightSubdivisions' has a wrong offset!");

// Class MeshModelingTools.ModifyGeometrySelectionCommand
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand : public UGeometrySelectionEditCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand">();
	}
	static class UModifyGeometrySelectionCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand");
static_assert(sizeof(UModifyGeometrySelectionCommand) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand");

// Class MeshModelingTools.ProceduralConeToolProperties
// 0x0010 (0x00C8 - 0x00B8)
class UProceduralConeToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         Radius;                                            // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Height;                                            // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSlices;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeightSubdivisions;                                // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralConeToolProperties">();
	}
	static class UProceduralConeToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralConeToolProperties>();
	}
};
static_assert(alignof(UProceduralConeToolProperties) == 0x000008, "Wrong alignment on UProceduralConeToolProperties");
static_assert(sizeof(UProceduralConeToolProperties) == 0x0000C8, "Wrong size on UProceduralConeToolProperties");
static_assert(offsetof(UProceduralConeToolProperties, Radius) == 0x0000B8, "Member 'UProceduralConeToolProperties::Radius' has a wrong offset!");
static_assert(offsetof(UProceduralConeToolProperties, Height) == 0x0000BC, "Member 'UProceduralConeToolProperties::Height' has a wrong offset!");
static_assert(offsetof(UProceduralConeToolProperties, RadialSlices) == 0x0000C0, "Member 'UProceduralConeToolProperties::RadialSlices' has a wrong offset!");
static_assert(offsetof(UProceduralConeToolProperties, HeightSubdivisions) == 0x0000C4, "Member 'UProceduralConeToolProperties::HeightSubdivisions' has a wrong offset!");

// Class MeshModelingTools.ProceduralArrowToolProperties
// 0x0018 (0x00D0 - 0x00B8)
class UProceduralArrowToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         ShaftRadius;                                       // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ShaftHeight;                                       // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadRadius;                                        // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HeadHeight;                                        // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSlices;                                      // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HeightSubdivisions;                                // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralArrowToolProperties">();
	}
	static class UProceduralArrowToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralArrowToolProperties>();
	}
};
static_assert(alignof(UProceduralArrowToolProperties) == 0x000008, "Wrong alignment on UProceduralArrowToolProperties");
static_assert(sizeof(UProceduralArrowToolProperties) == 0x0000D0, "Wrong size on UProceduralArrowToolProperties");
static_assert(offsetof(UProceduralArrowToolProperties, ShaftRadius) == 0x0000B8, "Member 'UProceduralArrowToolProperties::ShaftRadius' has a wrong offset!");
static_assert(offsetof(UProceduralArrowToolProperties, ShaftHeight) == 0x0000BC, "Member 'UProceduralArrowToolProperties::ShaftHeight' has a wrong offset!");
static_assert(offsetof(UProceduralArrowToolProperties, HeadRadius) == 0x0000C0, "Member 'UProceduralArrowToolProperties::HeadRadius' has a wrong offset!");
static_assert(offsetof(UProceduralArrowToolProperties, HeadHeight) == 0x0000C4, "Member 'UProceduralArrowToolProperties::HeadHeight' has a wrong offset!");
static_assert(offsetof(UProceduralArrowToolProperties, RadialSlices) == 0x0000C8, "Member 'UProceduralArrowToolProperties::RadialSlices' has a wrong offset!");
static_assert(offsetof(UProceduralArrowToolProperties, HeightSubdivisions) == 0x0000CC, "Member 'UProceduralArrowToolProperties::HeightSubdivisions' has a wrong offset!");

// Class MeshModelingTools.RetriangulateGeometrySelectionCommand
// 0x0000 (0x0028 - 0x0028)
class URetriangulateGeometrySelectionCommand final : public UGeometrySelectionEditCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RetriangulateGeometrySelectionCommand">();
	}
	static class URetriangulateGeometrySelectionCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<URetriangulateGeometrySelectionCommand>();
	}
};
static_assert(alignof(URetriangulateGeometrySelectionCommand) == 0x000008, "Wrong alignment on URetriangulateGeometrySelectionCommand");
static_assert(sizeof(URetriangulateGeometrySelectionCommand) == 0x000028, "Wrong size on URetriangulateGeometrySelectionCommand");

// Class MeshModelingTools.ProceduralSphereToolProperties
// 0x0018 (0x00D0 - 0x00B8)
class UProceduralSphereToolProperties final : public UProceduralShapeToolProperties
{
public:
	float                                         Radius;                                            // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EProceduralSphereType                         SubdivisionType;                                   // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subdivisions;                                      // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         HorizontalSlices;                                  // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VerticalSlices;                                    // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralSphereToolProperties">();
	}
	static class UProceduralSphereToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralSphereToolProperties>();
	}
};
static_assert(alignof(UProceduralSphereToolProperties) == 0x000008, "Wrong alignment on UProceduralSphereToolProperties");
static_assert(sizeof(UProceduralSphereToolProperties) == 0x0000D0, "Wrong size on UProceduralSphereToolProperties");
static_assert(offsetof(UProceduralSphereToolProperties, Radius) == 0x0000B8, "Member 'UProceduralSphereToolProperties::Radius' has a wrong offset!");
static_assert(offsetof(UProceduralSphereToolProperties, SubdivisionType) == 0x0000BC, "Member 'UProceduralSphereToolProperties::SubdivisionType' has a wrong offset!");
static_assert(offsetof(UProceduralSphereToolProperties, Subdivisions) == 0x0000C0, "Member 'UProceduralSphereToolProperties::Subdivisions' has a wrong offset!");
static_assert(offsetof(UProceduralSphereToolProperties, HorizontalSlices) == 0x0000C4, "Member 'UProceduralSphereToolProperties::HorizontalSlices' has a wrong offset!");
static_assert(offsetof(UProceduralSphereToolProperties, VerticalSlices) == 0x0000C8, "Member 'UProceduralSphereToolProperties::VerticalSlices' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolActions
// 0x0000 (0x00B0 - 0x00B0)
class UEditMeshPolygonsToolActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void Bevel();
	void CutFaces();
	void Decompose();
	void Delete();
	void Disconnect();
	void Duplicate();
	void Extrude();
	void Flip();
	void InsertEdge();
	void InsertEdgeLoop();
	void Inset();
	void Merge();
	void Offset();
	void Outset();
	void PushPull();
	void RecalcNormals();
	void Retriangulate();
	void SimplifyByGroups();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActions">();
	}
	static class UEditMeshPolygonsToolActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActions");
static_assert(sizeof(UEditMeshPolygonsToolActions) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolActions");

// Class MeshModelingTools.ProceduralStairsToolProperties
// 0x0020 (0x00D8 - 0x00B8)
class UProceduralStairsToolProperties final : public UProceduralShapeToolProperties
{
public:
	EProceduralStairsType                         StairsType;                                        // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumSteps;                                          // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepWidth;                                         // 0x00C0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepHeight;                                        // 0x00C4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         StepDepth;                                         // 0x00C8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurveAngle;                                        // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SpiralAngle;                                       // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         InnerRadius;                                       // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ProceduralStairsToolProperties">();
	}
	static class UProceduralStairsToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UProceduralStairsToolProperties>();
	}
};
static_assert(alignof(UProceduralStairsToolProperties) == 0x000008, "Wrong alignment on UProceduralStairsToolProperties");
static_assert(sizeof(UProceduralStairsToolProperties) == 0x0000D8, "Wrong size on UProceduralStairsToolProperties");
static_assert(offsetof(UProceduralStairsToolProperties, StairsType) == 0x0000B8, "Member 'UProceduralStairsToolProperties::StairsType' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, NumSteps) == 0x0000BC, "Member 'UProceduralStairsToolProperties::NumSteps' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, StepWidth) == 0x0000C0, "Member 'UProceduralStairsToolProperties::StepWidth' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, StepHeight) == 0x0000C4, "Member 'UProceduralStairsToolProperties::StepHeight' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, StepDepth) == 0x0000C8, "Member 'UProceduralStairsToolProperties::StepDepth' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, CurveAngle) == 0x0000CC, "Member 'UProceduralStairsToolProperties::CurveAngle' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, SpiralAngle) == 0x0000D0, "Member 'UProceduralStairsToolProperties::SpiralAngle' has a wrong offset!");
static_assert(offsetof(UProceduralStairsToolProperties, InnerRadius) == 0x0000D4, "Member 'UProceduralStairsToolProperties::InnerRadius' has a wrong offset!");

// Class MeshModelingTools.AddPrimitiveTool
// 0x0098 (0x0138 - 0x00A0)
class UAddPrimitiveTool : public USingleClickTool
{
public:
	uint8                                         Pad_A0[0x18];                                      // 0x00A0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreateMeshObjectTypeProperties*        OutputTypeProperties;                              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProceduralShapeToolProperties*         ShapeSettings;                                     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewMesh*                           PreviewMesh;                                       // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombinedTransformGizmo*                Gizmo;                                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDragAlignmentMechanic*                 DragAlignmentMechanic;                             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 AssetName;                                         // 0x00E8(0x0010)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x40];                                      // 0x00F8(0x0040)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddPrimitiveTool">();
	}
	static class UAddPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddPrimitiveTool>();
	}
};
static_assert(alignof(UAddPrimitiveTool) == 0x000008, "Wrong alignment on UAddPrimitiveTool");
static_assert(sizeof(UAddPrimitiveTool) == 0x000138, "Wrong size on UAddPrimitiveTool");
static_assert(offsetof(UAddPrimitiveTool, OutputTypeProperties) == 0x0000B8, "Member 'UAddPrimitiveTool::OutputTypeProperties' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, ShapeSettings) == 0x0000C0, "Member 'UAddPrimitiveTool::ShapeSettings' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, MaterialProperties) == 0x0000C8, "Member 'UAddPrimitiveTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, PreviewMesh) == 0x0000D0, "Member 'UAddPrimitiveTool::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, Gizmo) == 0x0000D8, "Member 'UAddPrimitiveTool::Gizmo' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, DragAlignmentMechanic) == 0x0000E0, "Member 'UAddPrimitiveTool::DragAlignmentMechanic' has a wrong offset!");
static_assert(offsetof(UAddPrimitiveTool, AssetName) == 0x0000E8, "Member 'UAddPrimitiveTool::AssetName' has a wrong offset!");

// Class MeshModelingTools.ModifyGeometrySelectionCommand_InvertConnected
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand_InvertConnected final : public UModifyGeometrySelectionCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand_InvertConnected">();
	}
	static class UModifyGeometrySelectionCommand_InvertConnected* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand_InvertConnected>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand_InvertConnected) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand_InvertConnected");
static_assert(sizeof(UModifyGeometrySelectionCommand_InvertConnected) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand_InvertConnected");

// Class MeshModelingTools.AddBoxPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddBoxPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddBoxPrimitiveTool">();
	}
	static class UAddBoxPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddBoxPrimitiveTool>();
	}
};
static_assert(alignof(UAddBoxPrimitiveTool) == 0x000008, "Wrong alignment on UAddBoxPrimitiveTool");
static_assert(sizeof(UAddBoxPrimitiveTool) == 0x000138, "Wrong size on UAddBoxPrimitiveTool");

// Class MeshModelingTools.EditMeshPolygonsTool
// 0x07E0 (0x0900 - 0x0120)
class alignas(0x10) UEditMeshPolygonsTool final : public USingleTargetWithSelectionTool
{
public:
	uint8                                         Pad_120[0x20];                                     // 0x0120(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditCommonProperties*              CommonProps;                                       // 0x0148(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolActions*           EditActions;                                       // 0x0150(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolActions_Triangles* EditActions_Triangles;                             // 0x0158(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolEdgeActions*       EditEdgeActions;                                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolEdgeActions_Triangles* EditEdgeActions_Triangles;                         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditMeshPolygonsToolUVActions*         EditUVActions;                                     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditTopologyProperties*            TopologyProperties;                                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditExtrudeActivity*               ExtrudeActivity;                                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditInsetOutsetActivity*           InsetOutsetActivity;                               // 0x0188(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditCutFacesActivity*              CutFacesActivity;                                  // 0x0190(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditPlanarProjectionUVActivity*    PlanarProjectionUVActivity;                        // 0x0198(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditInsertEdgeActivity*            InsertEdgeActivity;                                // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditInsertEdgeLoopActivity*        InsertEdgeLoopActivity;                            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditBevelEdgeActivity*             BevelEdgeActivity;                                 // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditExtrudeEdgeActivity*           ExtrudeEdgeActivity;                               // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C0[0xD8];                                     // 0x01C0(0x00D8)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0298(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolygonSelectionMechanic*              SelectionMechanic;                                 // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDragAlignmentMechanic*                 DragAlignmentMechanic;                             // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombinedTransformGizmo*                TransformGizmo;                                    // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        TransformProxy;                                    // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_2C0[0x640];                                    // 0x02C0(0x0640)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsTool">();
	}
	static class UEditMeshPolygonsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsTool>();
	}
};
static_assert(alignof(UEditMeshPolygonsTool) == 0x000010, "Wrong alignment on UEditMeshPolygonsTool");
static_assert(sizeof(UEditMeshPolygonsTool) == 0x000900, "Wrong size on UEditMeshPolygonsTool");
static_assert(offsetof(UEditMeshPolygonsTool, Preview) == 0x000140, "Member 'UEditMeshPolygonsTool::Preview' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, CommonProps) == 0x000148, "Member 'UEditMeshPolygonsTool::CommonProps' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditActions) == 0x000150, "Member 'UEditMeshPolygonsTool::EditActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditActions_Triangles) == 0x000158, "Member 'UEditMeshPolygonsTool::EditActions_Triangles' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditEdgeActions) == 0x000160, "Member 'UEditMeshPolygonsTool::EditEdgeActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditEdgeActions_Triangles) == 0x000168, "Member 'UEditMeshPolygonsTool::EditEdgeActions_Triangles' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, EditUVActions) == 0x000170, "Member 'UEditMeshPolygonsTool::EditUVActions' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, TopologyProperties) == 0x000178, "Member 'UEditMeshPolygonsTool::TopologyProperties' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, ExtrudeActivity) == 0x000180, "Member 'UEditMeshPolygonsTool::ExtrudeActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, InsetOutsetActivity) == 0x000188, "Member 'UEditMeshPolygonsTool::InsetOutsetActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, CutFacesActivity) == 0x000190, "Member 'UEditMeshPolygonsTool::CutFacesActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, PlanarProjectionUVActivity) == 0x000198, "Member 'UEditMeshPolygonsTool::PlanarProjectionUVActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, InsertEdgeActivity) == 0x0001A0, "Member 'UEditMeshPolygonsTool::InsertEdgeActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, InsertEdgeLoopActivity) == 0x0001A8, "Member 'UEditMeshPolygonsTool::InsertEdgeLoopActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, BevelEdgeActivity) == 0x0001B0, "Member 'UEditMeshPolygonsTool::BevelEdgeActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, ExtrudeEdgeActivity) == 0x0001B8, "Member 'UEditMeshPolygonsTool::ExtrudeEdgeActivity' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, ActivityContext) == 0x000298, "Member 'UEditMeshPolygonsTool::ActivityContext' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, SelectionMechanic) == 0x0002A0, "Member 'UEditMeshPolygonsTool::SelectionMechanic' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, DragAlignmentMechanic) == 0x0002A8, "Member 'UEditMeshPolygonsTool::DragAlignmentMechanic' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, TransformGizmo) == 0x0002B0, "Member 'UEditMeshPolygonsTool::TransformGizmo' has a wrong offset!");
static_assert(offsetof(UEditMeshPolygonsTool, TransformProxy) == 0x0002B8, "Member 'UEditMeshPolygonsTool::TransformProxy' has a wrong offset!");

// Class MeshModelingTools.AddCylinderPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddCylinderPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddCylinderPrimitiveTool">();
	}
	static class UAddCylinderPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddCylinderPrimitiveTool>();
	}
};
static_assert(alignof(UAddCylinderPrimitiveTool) == 0x000008, "Wrong alignment on UAddCylinderPrimitiveTool");
static_assert(sizeof(UAddCylinderPrimitiveTool) == 0x000138, "Wrong size on UAddCylinderPrimitiveTool");

// Class MeshModelingTools.AddConePrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddConePrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddConePrimitiveTool">();
	}
	static class UAddConePrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddConePrimitiveTool>();
	}
};
static_assert(alignof(UAddConePrimitiveTool) == 0x000008, "Wrong alignment on UAddConePrimitiveTool");
static_assert(sizeof(UAddConePrimitiveTool) == 0x000138, "Wrong size on UAddConePrimitiveTool");

// Class MeshModelingTools.TrimMeshesToolProperties
// 0x0020 (0x00C8 - 0x00A8)
class UTrimMeshesToolProperties final : public UInteractiveToolPropertySet
{
public:
	ETrimOperation                                WhichMesh;                                         // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETrimSide                                     TrimSide;                                          // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindingThreshold;                                  // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowTrimmingMesh;                                 // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OpacityOfTrimmingMesh;                             // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           ColorOfTrimmingMesh;                               // 0x00B8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TrimMeshesToolProperties">();
	}
	static class UTrimMeshesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTrimMeshesToolProperties>();
	}
};
static_assert(alignof(UTrimMeshesToolProperties) == 0x000008, "Wrong alignment on UTrimMeshesToolProperties");
static_assert(sizeof(UTrimMeshesToolProperties) == 0x0000C8, "Wrong size on UTrimMeshesToolProperties");
static_assert(offsetof(UTrimMeshesToolProperties, WhichMesh) == 0x0000A8, "Member 'UTrimMeshesToolProperties::WhichMesh' has a wrong offset!");
static_assert(offsetof(UTrimMeshesToolProperties, TrimSide) == 0x0000A9, "Member 'UTrimMeshesToolProperties::TrimSide' has a wrong offset!");
static_assert(offsetof(UTrimMeshesToolProperties, WindingThreshold) == 0x0000AC, "Member 'UTrimMeshesToolProperties::WindingThreshold' has a wrong offset!");
static_assert(offsetof(UTrimMeshesToolProperties, bShowTrimmingMesh) == 0x0000B0, "Member 'UTrimMeshesToolProperties::bShowTrimmingMesh' has a wrong offset!");
static_assert(offsetof(UTrimMeshesToolProperties, OpacityOfTrimmingMesh) == 0x0000B4, "Member 'UTrimMeshesToolProperties::OpacityOfTrimmingMesh' has a wrong offset!");
static_assert(offsetof(UTrimMeshesToolProperties, ColorOfTrimmingMesh) == 0x0000B8, "Member 'UTrimMeshesToolProperties::ColorOfTrimmingMesh' has a wrong offset!");

// Class MeshModelingTools.AddRectanglePrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddRectanglePrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddRectanglePrimitiveTool">();
	}
	static class UAddRectanglePrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddRectanglePrimitiveTool>();
	}
};
static_assert(alignof(UAddRectanglePrimitiveTool) == 0x000008, "Wrong alignment on UAddRectanglePrimitiveTool");
static_assert(sizeof(UAddRectanglePrimitiveTool) == 0x000138, "Wrong size on UAddRectanglePrimitiveTool");

// Class MeshModelingTools.AddDiscPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddDiscPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddDiscPrimitiveTool">();
	}
	static class UAddDiscPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddDiscPrimitiveTool>();
	}
};
static_assert(alignof(UAddDiscPrimitiveTool) == 0x000008, "Wrong alignment on UAddDiscPrimitiveTool");
static_assert(sizeof(UAddDiscPrimitiveTool) == 0x000138, "Wrong size on UAddDiscPrimitiveTool");

// Class MeshModelingTools.EditMeshPolygonsToolUVActions
// 0x0000 (0x00B0 - 0x00B0)
class UEditMeshPolygonsToolUVActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void PlanarProjection();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolUVActions">();
	}
	static class UEditMeshPolygonsToolUVActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolUVActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolUVActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolUVActions");
static_assert(sizeof(UEditMeshPolygonsToolUVActions) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolUVActions");

// Class MeshModelingTools.DrawAndRevolveToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UDrawAndRevolveToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawAndRevolveToolBuilder">();
	}
	static class UDrawAndRevolveToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawAndRevolveToolBuilder>();
	}
};
static_assert(alignof(UDrawAndRevolveToolBuilder) == 0x000008, "Wrong alignment on UDrawAndRevolveToolBuilder");
static_assert(sizeof(UDrawAndRevolveToolBuilder) == 0x000028, "Wrong size on UDrawAndRevolveToolBuilder");

// Class MeshModelingTools.AddTorusPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddTorusPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddTorusPrimitiveTool">();
	}
	static class UAddTorusPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddTorusPrimitiveTool>();
	}
};
static_assert(alignof(UAddTorusPrimitiveTool) == 0x000008, "Wrong alignment on UAddTorusPrimitiveTool");
static_assert(sizeof(UAddTorusPrimitiveTool) == 0x000138, "Wrong size on UAddTorusPrimitiveTool");

// Class MeshModelingTools.AddArrowPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddArrowPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddArrowPrimitiveTool">();
	}
	static class UAddArrowPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddArrowPrimitiveTool>();
	}
};
static_assert(alignof(UAddArrowPrimitiveTool) == 0x000008, "Wrong alignment on UAddArrowPrimitiveTool");
static_assert(sizeof(UAddArrowPrimitiveTool) == 0x000138, "Wrong size on UAddArrowPrimitiveTool");

// Class MeshModelingTools.ModifyGeometrySelectionCommand_Expand
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand_Expand final : public UModifyGeometrySelectionCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand_Expand">();
	}
	static class UModifyGeometrySelectionCommand_Expand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand_Expand>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand_Expand) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand_Expand");
static_assert(sizeof(UModifyGeometrySelectionCommand_Expand) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand_Expand");

// Class MeshModelingTools.AddSpherePrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddSpherePrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddSpherePrimitiveTool">();
	}
	static class UAddSpherePrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddSpherePrimitiveTool>();
	}
};
static_assert(alignof(UAddSpherePrimitiveTool) == 0x000008, "Wrong alignment on UAddSpherePrimitiveTool");
static_assert(sizeof(UAddSpherePrimitiveTool) == 0x000138, "Wrong size on UAddSpherePrimitiveTool");

// Class MeshModelingTools.CutMeshWithMeshToolProperties
// 0x0010 (0x00B8 - 0x00A8)
class UCutMeshWithMeshToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bTryFixHoles;                                      // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryCollapseEdges;                                 // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindingThreshold;                                  // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowNewBoundaries;                                // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFirstMeshMaterials;                            // 0x00B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CutMeshWithMeshToolProperties">();
	}
	static class UCutMeshWithMeshToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCutMeshWithMeshToolProperties>();
	}
};
static_assert(alignof(UCutMeshWithMeshToolProperties) == 0x000008, "Wrong alignment on UCutMeshWithMeshToolProperties");
static_assert(sizeof(UCutMeshWithMeshToolProperties) == 0x0000B8, "Wrong size on UCutMeshWithMeshToolProperties");
static_assert(offsetof(UCutMeshWithMeshToolProperties, bTryFixHoles) == 0x0000A8, "Member 'UCutMeshWithMeshToolProperties::bTryFixHoles' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshToolProperties, bTryCollapseEdges) == 0x0000A9, "Member 'UCutMeshWithMeshToolProperties::bTryCollapseEdges' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshToolProperties, WindingThreshold) == 0x0000AC, "Member 'UCutMeshWithMeshToolProperties::WindingThreshold' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshToolProperties, bShowNewBoundaries) == 0x0000B0, "Member 'UCutMeshWithMeshToolProperties::bShowNewBoundaries' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshToolProperties, bUseFirstMeshMaterials) == 0x0000B1, "Member 'UCutMeshWithMeshToolProperties::bUseFirstMeshMaterials' has a wrong offset!");

// Class MeshModelingTools.AddStairsPrimitiveTool
// 0x0000 (0x0138 - 0x0138)
class UAddStairsPrimitiveTool final : public UAddPrimitiveTool
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AddStairsPrimitiveTool">();
	}
	static class UAddStairsPrimitiveTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAddStairsPrimitiveTool>();
	}
};
static_assert(alignof(UAddStairsPrimitiveTool) == 0x000008, "Wrong alignment on UAddStairsPrimitiveTool");
static_assert(sizeof(UAddStairsPrimitiveTool) == 0x000138, "Wrong size on UAddStairsPrimitiveTool");

// Class MeshModelingTools.CombineMeshesToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UCombineMeshesToolBuilder final : public UMultiSelectionMeshEditingToolBuilder
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesToolBuilder">();
	}
	static class UCombineMeshesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesToolBuilder>();
	}
};
static_assert(alignof(UCombineMeshesToolBuilder) == 0x000008, "Wrong alignment on UCombineMeshesToolBuilder");
static_assert(sizeof(UCombineMeshesToolBuilder) == 0x000030, "Wrong size on UCombineMeshesToolBuilder");

// Class MeshModelingTools.CombineMeshesToolProperties
// 0x0028 (0x00D0 - 0x00A8)
class UCombineMeshesToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bIsDuplicateMode;                                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EBaseCreateFromSelectedTargetType             OutputWriteTo;                                     // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutputNewName;                                     // 0x00B0(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutputExistingName;                                // 0x00C0(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesToolProperties">();
	}
	static class UCombineMeshesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesToolProperties>();
	}
};
static_assert(alignof(UCombineMeshesToolProperties) == 0x000008, "Wrong alignment on UCombineMeshesToolProperties");
static_assert(sizeof(UCombineMeshesToolProperties) == 0x0000D0, "Wrong size on UCombineMeshesToolProperties");
static_assert(offsetof(UCombineMeshesToolProperties, bIsDuplicateMode) == 0x0000A8, "Member 'UCombineMeshesToolProperties::bIsDuplicateMode' has a wrong offset!");
static_assert(offsetof(UCombineMeshesToolProperties, OutputWriteTo) == 0x0000AC, "Member 'UCombineMeshesToolProperties::OutputWriteTo' has a wrong offset!");
static_assert(offsetof(UCombineMeshesToolProperties, OutputNewName) == 0x0000B0, "Member 'UCombineMeshesToolProperties::OutputNewName' has a wrong offset!");
static_assert(offsetof(UCombineMeshesToolProperties, OutputExistingName) == 0x0000C0, "Member 'UCombineMeshesToolProperties::OutputExistingName' has a wrong offset!");

// Class MeshModelingTools.RevolveToolProperties
// 0x0040 (0x0158 - 0x0118)
class URevolveToolProperties final : public URevolveProperties
{
public:
	ERevolvePropertiesCapFillMode                 CapFillMode;                                       // 0x0118(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bClosePathToAxis;                                  // 0x0119(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DrawPlaneOrigin;                                   // 0x0120(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               DrawPlaneOrientation;                              // 0x0138(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bEnableSnapping;                                   // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowedToEditDrawPlane;                           // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RevolveToolProperties">();
	}
	static class URevolveToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<URevolveToolProperties>();
	}
};
static_assert(alignof(URevolveToolProperties) == 0x000008, "Wrong alignment on URevolveToolProperties");
static_assert(sizeof(URevolveToolProperties) == 0x000158, "Wrong size on URevolveToolProperties");
static_assert(offsetof(URevolveToolProperties, CapFillMode) == 0x000118, "Member 'URevolveToolProperties::CapFillMode' has a wrong offset!");
static_assert(offsetof(URevolveToolProperties, bClosePathToAxis) == 0x000119, "Member 'URevolveToolProperties::bClosePathToAxis' has a wrong offset!");
static_assert(offsetof(URevolveToolProperties, DrawPlaneOrigin) == 0x000120, "Member 'URevolveToolProperties::DrawPlaneOrigin' has a wrong offset!");
static_assert(offsetof(URevolveToolProperties, DrawPlaneOrientation) == 0x000138, "Member 'URevolveToolProperties::DrawPlaneOrientation' has a wrong offset!");
static_assert(offsetof(URevolveToolProperties, bEnableSnapping) == 0x000150, "Member 'URevolveToolProperties::bEnableSnapping' has a wrong offset!");
static_assert(offsetof(URevolveToolProperties, bAllowedToEditDrawPlane) == 0x000151, "Member 'URevolveToolProperties::bAllowedToEditDrawPlane' has a wrong offset!");

// Class MeshModelingTools.CombineMeshesTool
// 0x0028 (0x00E0 - 0x00B8)
class UCombineMeshesTool final : public UMultiSelectionMeshEditingTool
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCombineMeshesToolProperties*           BasicProperties;                                   // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCreateMeshObjectTypeProperties*        OutputTypeProperties;                              // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOnAcceptHandleSourcesPropertiesBase*   HandleSourceProperties;                            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CombineMeshesTool">();
	}
	static class UCombineMeshesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCombineMeshesTool>();
	}
};
static_assert(alignof(UCombineMeshesTool) == 0x000008, "Wrong alignment on UCombineMeshesTool");
static_assert(sizeof(UCombineMeshesTool) == 0x0000E0, "Wrong size on UCombineMeshesTool");
static_assert(offsetof(UCombineMeshesTool, BasicProperties) == 0x0000C0, "Member 'UCombineMeshesTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UCombineMeshesTool, OutputTypeProperties) == 0x0000C8, "Member 'UCombineMeshesTool::OutputTypeProperties' has a wrong offset!");
static_assert(offsetof(UCombineMeshesTool, HandleSourceProperties) == 0x0000D0, "Member 'UCombineMeshesTool::HandleSourceProperties' has a wrong offset!");

// Class MeshModelingTools.DeleteGeometrySelectionCommand
// 0x0000 (0x0028 - 0x0028)
class UDeleteGeometrySelectionCommand final : public UGeometrySelectionEditCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DeleteGeometrySelectionCommand">();
	}
	static class UDeleteGeometrySelectionCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDeleteGeometrySelectionCommand>();
	}
};
static_assert(alignof(UDeleteGeometrySelectionCommand) == 0x000008, "Wrong alignment on UDeleteGeometrySelectionCommand");
static_assert(sizeof(UDeleteGeometrySelectionCommand) == 0x000028, "Wrong size on UDeleteGeometrySelectionCommand");

// Class MeshModelingTools.DrawPolygonTool
// 0x04B8 (0x0550 - 0x0098)
class alignas(0x10) UDrawPolygonTool final : public UInteractiveTool
{
public:
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreateMeshObjectTypeProperties*        OutputTypeProperties;                              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDrawPolygonToolStandardProperties*     PolygonProperties;                                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDrawPolygonToolSnapProperties*         SnapProperties;                                    // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNewMeshMaterialProperties*             MaterialProperties;                                // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_C0[0x90];                                      // 0x00C0(0x0090)(Fixing Size After Last Property [ Dumper-7 ])
	class UPreviewMesh*                           PreviewMesh;                                       // 0x0150(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_158[0x3D0];                                    // 0x0158(0x03D0)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlaneDistanceFromHitMechanic*          HeightMechanic;                                    // 0x0528(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDragAlignmentMechanic*                 DragAlignmentMechanic;                             // 0x0530(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConstructionPlaneMechanic*             PlaneMechanic;                                     // 0x0538(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_540[0x10];                                     // 0x0540(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonTool">();
	}
	static class UDrawPolygonTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonTool>();
	}
};
static_assert(alignof(UDrawPolygonTool) == 0x000010, "Wrong alignment on UDrawPolygonTool");
static_assert(sizeof(UDrawPolygonTool) == 0x000550, "Wrong size on UDrawPolygonTool");
static_assert(offsetof(UDrawPolygonTool, OutputTypeProperties) == 0x0000A0, "Member 'UDrawPolygonTool::OutputTypeProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PolygonProperties) == 0x0000A8, "Member 'UDrawPolygonTool::PolygonProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, SnapProperties) == 0x0000B0, "Member 'UDrawPolygonTool::SnapProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, MaterialProperties) == 0x0000B8, "Member 'UDrawPolygonTool::MaterialProperties' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PreviewMesh) == 0x000150, "Member 'UDrawPolygonTool::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, HeightMechanic) == 0x000528, "Member 'UDrawPolygonTool::HeightMechanic' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, DragAlignmentMechanic) == 0x000530, "Member 'UDrawPolygonTool::DragAlignmentMechanic' has a wrong offset!");
static_assert(offsetof(UDrawPolygonTool, PlaneMechanic) == 0x000538, "Member 'UDrawPolygonTool::PlaneMechanic' has a wrong offset!");

// Class MeshModelingTools.DisconnectGeometrySelectionCommand
// 0x0000 (0x0028 - 0x0028)
class UDisconnectGeometrySelectionCommand final : public UGeometrySelectionEditCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DisconnectGeometrySelectionCommand">();
	}
	static class UDisconnectGeometrySelectionCommand* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDisconnectGeometrySelectionCommand>();
	}
};
static_assert(alignof(UDisconnectGeometrySelectionCommand) == 0x000008, "Wrong alignment on UDisconnectGeometrySelectionCommand");
static_assert(sizeof(UDisconnectGeometrySelectionCommand) == 0x000028, "Wrong size on UDisconnectGeometrySelectionCommand");

// Class MeshModelingTools.ModifyGeometrySelectionCommand_Invert
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand_Invert final : public UModifyGeometrySelectionCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand_Invert">();
	}
	static class UModifyGeometrySelectionCommand_Invert* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand_Invert>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand_Invert) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand_Invert");
static_assert(sizeof(UModifyGeometrySelectionCommand_Invert) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand_Invert");

// Class MeshModelingTools.ModifyGeometrySelectionCommand_ExpandToConnected
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand_ExpandToConnected final : public UModifyGeometrySelectionCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand_ExpandToConnected">();
	}
	static class UModifyGeometrySelectionCommand_ExpandToConnected* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand_ExpandToConnected>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand_ExpandToConnected) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand_ExpandToConnected");
static_assert(sizeof(UModifyGeometrySelectionCommand_ExpandToConnected) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand_ExpandToConnected");

// Class MeshModelingTools.ModifyGeometrySelectionCommand_Contract
// 0x0000 (0x0028 - 0x0028)
class UModifyGeometrySelectionCommand_Contract final : public UModifyGeometrySelectionCommand
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ModifyGeometrySelectionCommand_Contract">();
	}
	static class UModifyGeometrySelectionCommand_Contract* GetDefaultObj()
	{
		return GetDefaultObjImpl<UModifyGeometrySelectionCommand_Contract>();
	}
};
static_assert(alignof(UModifyGeometrySelectionCommand_Contract) == 0x000008, "Wrong alignment on UModifyGeometrySelectionCommand_Contract");
static_assert(sizeof(UModifyGeometrySelectionCommand_Contract) == 0x000028, "Wrong size on UModifyGeometrySelectionCommand_Contract");

// Class MeshModelingTools.CSGMeshesToolProperties
// 0x0028 (0x00D0 - 0x00A8)
class UCSGMeshesToolProperties final : public UInteractiveToolPropertySet
{
public:
	ECSGOperation                                 Operation;                                         // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryFixHoles;                                      // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTryCollapseEdges;                                 // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WindingThreshold;                                  // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowNewBoundaries;                                // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowSubtractedMesh;                               // 0x00B1(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SubtractedMeshOpacity;                             // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           SubtractedMeshColor;                               // 0x00B8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFirstMeshMaterials;                            // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CSGMeshesToolProperties">();
	}
	static class UCSGMeshesToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGMeshesToolProperties>();
	}
};
static_assert(alignof(UCSGMeshesToolProperties) == 0x000008, "Wrong alignment on UCSGMeshesToolProperties");
static_assert(sizeof(UCSGMeshesToolProperties) == 0x0000D0, "Wrong size on UCSGMeshesToolProperties");
static_assert(offsetof(UCSGMeshesToolProperties, Operation) == 0x0000A8, "Member 'UCSGMeshesToolProperties::Operation' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, bTryFixHoles) == 0x0000A9, "Member 'UCSGMeshesToolProperties::bTryFixHoles' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, bTryCollapseEdges) == 0x0000AA, "Member 'UCSGMeshesToolProperties::bTryCollapseEdges' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, WindingThreshold) == 0x0000AC, "Member 'UCSGMeshesToolProperties::WindingThreshold' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, bShowNewBoundaries) == 0x0000B0, "Member 'UCSGMeshesToolProperties::bShowNewBoundaries' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, bShowSubtractedMesh) == 0x0000B1, "Member 'UCSGMeshesToolProperties::bShowSubtractedMesh' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, SubtractedMeshOpacity) == 0x0000B4, "Member 'UCSGMeshesToolProperties::SubtractedMeshOpacity' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, SubtractedMeshColor) == 0x0000B8, "Member 'UCSGMeshesToolProperties::SubtractedMeshColor' has a wrong offset!");
static_assert(offsetof(UCSGMeshesToolProperties, bUseFirstMeshMaterials) == 0x0000C8, "Member 'UCSGMeshesToolProperties::bUseFirstMeshMaterials' has a wrong offset!");

// Class MeshModelingTools.CSGMeshesTool
// 0x0058 (0x0160 - 0x0108)
class UCSGMeshesTool final : public UBaseCreateFromSelectedTool
{
public:
	class UCSGMeshesToolProperties*               CSGProperties;                                     // 0x0108(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTrimMeshesToolProperties*              TrimProperties;                                    // 0x0110(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_118[0x10];                                     // 0x0118(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPreviewMesh*>                   OriginalMeshPreviews;                              // 0x0128(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               PreviewsGhostMaterial;                             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULineSetComponent*                      DrawnLineSet;                                      // 0x0140(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_148[0x18];                                     // 0x0148(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CSGMeshesTool">();
	}
	static class UCSGMeshesTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGMeshesTool>();
	}
};
static_assert(alignof(UCSGMeshesTool) == 0x000008, "Wrong alignment on UCSGMeshesTool");
static_assert(sizeof(UCSGMeshesTool) == 0x000160, "Wrong size on UCSGMeshesTool");
static_assert(offsetof(UCSGMeshesTool, CSGProperties) == 0x000108, "Member 'UCSGMeshesTool::CSGProperties' has a wrong offset!");
static_assert(offsetof(UCSGMeshesTool, TrimProperties) == 0x000110, "Member 'UCSGMeshesTool::TrimProperties' has a wrong offset!");
static_assert(offsetof(UCSGMeshesTool, OriginalMeshPreviews) == 0x000128, "Member 'UCSGMeshesTool::OriginalMeshPreviews' has a wrong offset!");
static_assert(offsetof(UCSGMeshesTool, PreviewsGhostMaterial) == 0x000138, "Member 'UCSGMeshesTool::PreviewsGhostMaterial' has a wrong offset!");
static_assert(offsetof(UCSGMeshesTool, DrawnLineSet) == 0x000140, "Member 'UCSGMeshesTool::DrawnLineSet' has a wrong offset!");

// Class MeshModelingTools.CSGMeshesToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UCSGMeshesToolBuilder final : public UBaseCreateFromSelectedToolBuilder
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CSGMeshesToolBuilder">();
	}
	static class UCSGMeshesToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCSGMeshesToolBuilder>();
	}
};
static_assert(alignof(UCSGMeshesToolBuilder) == 0x000008, "Wrong alignment on UCSGMeshesToolBuilder");
static_assert(sizeof(UCSGMeshesToolBuilder) == 0x000030, "Wrong size on UCSGMeshesToolBuilder");

// Class MeshModelingTools.CutMeshWithMeshTool
// 0x0278 (0x0380 - 0x0108)
class UCutMeshWithMeshTool final : public UBaseCreateFromSelectedTool
{
public:
	class UCutMeshWithMeshToolProperties*         CutProperties;                                     // 0x0108(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewMesh*                           IntersectPreviewMesh;                              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_118[0x20];                                     // 0x0118(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class ULineSetComponent*                      DrawnLineSet;                                      // 0x0138(0x0008)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_140[0x240];                                    // 0x0140(0x0240)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CutMeshWithMeshTool">();
	}
	static class UCutMeshWithMeshTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCutMeshWithMeshTool>();
	}
};
static_assert(alignof(UCutMeshWithMeshTool) == 0x000008, "Wrong alignment on UCutMeshWithMeshTool");
static_assert(sizeof(UCutMeshWithMeshTool) == 0x000380, "Wrong size on UCutMeshWithMeshTool");
static_assert(offsetof(UCutMeshWithMeshTool, CutProperties) == 0x000108, "Member 'UCutMeshWithMeshTool::CutProperties' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshTool, IntersectPreviewMesh) == 0x000110, "Member 'UCutMeshWithMeshTool::IntersectPreviewMesh' has a wrong offset!");
static_assert(offsetof(UCutMeshWithMeshTool, DrawnLineSet) == 0x000138, "Member 'UCutMeshWithMeshTool::DrawnLineSet' has a wrong offset!");

// Class MeshModelingTools.CutMeshWithMeshToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UCutMeshWithMeshToolBuilder final : public UBaseCreateFromSelectedToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CutMeshWithMeshToolBuilder">();
	}
	static class UCutMeshWithMeshToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCutMeshWithMeshToolBuilder>();
	}
};
static_assert(alignof(UCutMeshWithMeshToolBuilder) == 0x000008, "Wrong alignment on UCutMeshWithMeshToolBuilder");
static_assert(sizeof(UCutMeshWithMeshToolBuilder) == 0x000028, "Wrong size on UCutMeshWithMeshToolBuilder");

// Class MeshModelingTools.RevolveOperatorFactory
// 0x0010 (0x0038 - 0x0028)
class URevolveOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UDrawAndRevolveTool*                    RevolveTool;                                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RevolveOperatorFactory">();
	}
	static class URevolveOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<URevolveOperatorFactory>();
	}
};
static_assert(alignof(URevolveOperatorFactory) == 0x000008, "Wrong alignment on URevolveOperatorFactory");
static_assert(sizeof(URevolveOperatorFactory) == 0x000038, "Wrong size on URevolveOperatorFactory");
static_assert(offsetof(URevolveOperatorFactory, RevolveTool) == 0x000030, "Member 'URevolveOperatorFactory::RevolveTool' has a wrong offset!");

// Class MeshModelingTools.DrawPolygonToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UDrawPolygonToolBuilder final : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolBuilder">();
	}
	static class UDrawPolygonToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolBuilder>();
	}
};
static_assert(alignof(UDrawPolygonToolBuilder) == 0x000008, "Wrong alignment on UDrawPolygonToolBuilder");
static_assert(sizeof(UDrawPolygonToolBuilder) == 0x000028, "Wrong size on UDrawPolygonToolBuilder");

// Class MeshModelingTools.DrawPolygonToolStandardProperties
// 0x0018 (0x00C0 - 0x00A8)
class UDrawPolygonToolStandardProperties final : public UInteractiveToolPropertySet
{
public:
	EDrawPolygonDrawMode                          PolygonDrawMode;                                   // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSelfIntersections;                           // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FeatureSizeRatio;                                  // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RadialSlices;                                      // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Distance;                                          // 0x00B4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowGridGizmo;                                    // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrawPolygonExtrudeMode                       ExtrudeMode;                                       // 0x00B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExtrudeHeight;                                     // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DrawPolygonToolStandardProperties">();
	}
	static class UDrawPolygonToolStandardProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDrawPolygonToolStandardProperties>();
	}
};
static_assert(alignof(UDrawPolygonToolStandardProperties) == 0x000008, "Wrong alignment on UDrawPolygonToolStandardProperties");
static_assert(sizeof(UDrawPolygonToolStandardProperties) == 0x0000C0, "Wrong size on UDrawPolygonToolStandardProperties");
static_assert(offsetof(UDrawPolygonToolStandardProperties, PolygonDrawMode) == 0x0000A8, "Member 'UDrawPolygonToolStandardProperties::PolygonDrawMode' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, bAllowSelfIntersections) == 0x0000A9, "Member 'UDrawPolygonToolStandardProperties::bAllowSelfIntersections' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, FeatureSizeRatio) == 0x0000AC, "Member 'UDrawPolygonToolStandardProperties::FeatureSizeRatio' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, RadialSlices) == 0x0000B0, "Member 'UDrawPolygonToolStandardProperties::RadialSlices' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, Distance) == 0x0000B4, "Member 'UDrawPolygonToolStandardProperties::Distance' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, bShowGridGizmo) == 0x0000B8, "Member 'UDrawPolygonToolStandardProperties::bShowGridGizmo' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, ExtrudeMode) == 0x0000B9, "Member 'UDrawPolygonToolStandardProperties::ExtrudeMode' has a wrong offset!");
static_assert(offsetof(UDrawPolygonToolStandardProperties, ExtrudeHeight) == 0x0000BC, "Member 'UDrawPolygonToolStandardProperties::ExtrudeHeight' has a wrong offset!");

// Class MeshModelingTools.PolyEditCommonProperties
// 0x0010 (0x00B8 - 0x00A8)
class UPolyEditCommonProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowWireframe;                                    // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowSelectableCorners;                            // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGizmoVisible;                                     // 0x00AA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	ELocalFrameMode                               LocalFrameMode;                                    // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLockRotation;                                     // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalCoordSystem;                                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditCommonProperties">();
	}
	static class UPolyEditCommonProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditCommonProperties>();
	}
};
static_assert(alignof(UPolyEditCommonProperties) == 0x000008, "Wrong alignment on UPolyEditCommonProperties");
static_assert(sizeof(UPolyEditCommonProperties) == 0x0000B8, "Wrong size on UPolyEditCommonProperties");
static_assert(offsetof(UPolyEditCommonProperties, bShowWireframe) == 0x0000A8, "Member 'UPolyEditCommonProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UPolyEditCommonProperties, bShowSelectableCorners) == 0x0000A9, "Member 'UPolyEditCommonProperties::bShowSelectableCorners' has a wrong offset!");
static_assert(offsetof(UPolyEditCommonProperties, bGizmoVisible) == 0x0000AA, "Member 'UPolyEditCommonProperties::bGizmoVisible' has a wrong offset!");
static_assert(offsetof(UPolyEditCommonProperties, LocalFrameMode) == 0x0000AC, "Member 'UPolyEditCommonProperties::LocalFrameMode' has a wrong offset!");
static_assert(offsetof(UPolyEditCommonProperties, bLockRotation) == 0x0000B0, "Member 'UPolyEditCommonProperties::bLockRotation' has a wrong offset!");
static_assert(offsetof(UPolyEditCommonProperties, bLocalCoordSystem) == 0x0000B1, "Member 'UPolyEditCommonProperties::bLocalCoordSystem' has a wrong offset!");

// Class MeshModelingTools.PolyEditTopologyProperties
// 0x0010 (0x00C0 - 0x00B0)
class UPolyEditTopologyProperties final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	bool                                          bAddExtraCorners;                                  // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ExtraCornerAngleThresholdDegrees;                  // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	void RegenerateExtraCorners();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditTopologyProperties">();
	}
	static class UPolyEditTopologyProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditTopologyProperties>();
	}
};
static_assert(alignof(UPolyEditTopologyProperties) == 0x000008, "Wrong alignment on UPolyEditTopologyProperties");
static_assert(sizeof(UPolyEditTopologyProperties) == 0x0000C0, "Wrong size on UPolyEditTopologyProperties");
static_assert(offsetof(UPolyEditTopologyProperties, bAddExtraCorners) == 0x0000B0, "Member 'UPolyEditTopologyProperties::bAddExtraCorners' has a wrong offset!");
static_assert(offsetof(UPolyEditTopologyProperties, ExtraCornerAngleThresholdDegrees) == 0x0000B8, "Member 'UPolyEditTopologyProperties::ExtraCornerAngleThresholdDegrees' has a wrong offset!");

// Class MeshModelingTools.EditMeshPolygonsToolActions_Triangles
// 0x0000 (0x00B0 - 0x00B0)
class UEditMeshPolygonsToolActions_Triangles final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void CutFaces();
	void Delete();
	void Disconnect();
	void Duplicate();
	void Extrude();
	void Flip();
	void Inset();
	void Offset();
	void Outset();
	void Poke();
	void PushPull();
	void RecalcNormals();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolActions_Triangles">();
	}
	static class UEditMeshPolygonsToolActions_Triangles* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolActions_Triangles>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolActions_Triangles) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolActions_Triangles");
static_assert(sizeof(UEditMeshPolygonsToolActions_Triangles) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolActions_Triangles");

// Class MeshModelingTools.EditMeshPolygonsToolEdgeActions
// 0x0000 (0x00B0 - 0x00B0)
class UEditMeshPolygonsToolEdgeActions final : public UEditMeshPolygonsToolActionPropertySet
{
public:
	void Bevel();
	void Bridge();
	void DeleteEdge();
	void Extrude();
	void FillHole();
	void Simplify();
	void Straighten();
	void Weld();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EditMeshPolygonsToolEdgeActions">();
	}
	static class UEditMeshPolygonsToolEdgeActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEditMeshPolygonsToolEdgeActions>();
	}
};
static_assert(alignof(UEditMeshPolygonsToolEdgeActions) == 0x000008, "Wrong alignment on UEditMeshPolygonsToolEdgeActions");
static_assert(sizeof(UEditMeshPolygonsToolEdgeActions) == 0x0000B0, "Wrong size on UEditMeshPolygonsToolEdgeActions");

// Class MeshModelingTools.NewMeshMaterialProperties
// 0x0010 (0x00B8 - 0x00A8)
class UNewMeshMaterialProperties final : public UInteractiveToolPropertySet
{
public:
	TWeakObjectPtr<class UMaterialInterface>      Material;                                          // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UVScale;                                           // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWorldSpaceUVScale;                                // 0x00B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWireframe;                                    // 0x00B5(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowExtendedOptions;                              // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B7[0x1];                                       // 0x00B7(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"NewMeshMaterialProperties">();
	}
	static class UNewMeshMaterialProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNewMeshMaterialProperties>();
	}
};
static_assert(alignof(UNewMeshMaterialProperties) == 0x000008, "Wrong alignment on UNewMeshMaterialProperties");
static_assert(sizeof(UNewMeshMaterialProperties) == 0x0000B8, "Wrong size on UNewMeshMaterialProperties");
static_assert(offsetof(UNewMeshMaterialProperties, Material) == 0x0000A8, "Member 'UNewMeshMaterialProperties::Material' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, UVScale) == 0x0000B0, "Member 'UNewMeshMaterialProperties::UVScale' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bWorldSpaceUVScale) == 0x0000B4, "Member 'UNewMeshMaterialProperties::bWorldSpaceUVScale' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bShowWireframe) == 0x0000B5, "Member 'UNewMeshMaterialProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UNewMeshMaterialProperties, bShowExtendedOptions) == 0x0000B6, "Member 'UNewMeshMaterialProperties::bShowExtendedOptions' has a wrong offset!");

// Class MeshModelingTools.ExistingMeshMaterialProperties
// 0x0038 (0x00E0 - 0x00A8)
class UExistingMeshMaterialProperties final : public UInteractiveToolPropertySet
{
public:
	ESetMeshMaterialMode                          MaterialMode;                                      // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CheckerDensity;                                    // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x00B0(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UVChannel;                                         // 0x00B8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         UVChannelNamesList;                                // 0x00C8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*               CheckerMaterial;                                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	const TArray<class FString> GetUVChannelNamesFunc() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ExistingMeshMaterialProperties">();
	}
	static class UExistingMeshMaterialProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UExistingMeshMaterialProperties>();
	}
};
static_assert(alignof(UExistingMeshMaterialProperties) == 0x000008, "Wrong alignment on UExistingMeshMaterialProperties");
static_assert(sizeof(UExistingMeshMaterialProperties) == 0x0000E0, "Wrong size on UExistingMeshMaterialProperties");
static_assert(offsetof(UExistingMeshMaterialProperties, MaterialMode) == 0x0000A8, "Member 'UExistingMeshMaterialProperties::MaterialMode' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, CheckerDensity) == 0x0000AC, "Member 'UExistingMeshMaterialProperties::CheckerDensity' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, OverrideMaterial) == 0x0000B0, "Member 'UExistingMeshMaterialProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, UVChannel) == 0x0000B8, "Member 'UExistingMeshMaterialProperties::UVChannel' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, UVChannelNamesList) == 0x0000C8, "Member 'UExistingMeshMaterialProperties::UVChannelNamesList' has a wrong offset!");
static_assert(offsetof(UExistingMeshMaterialProperties, CheckerMaterial) == 0x0000D8, "Member 'UExistingMeshMaterialProperties::CheckerMaterial' has a wrong offset!");

// Class MeshModelingTools.MeshEditingViewProperties
// 0x0050 (0x00F8 - 0x00A8)
class UMeshEditingViewProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowWireframe;                                    // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EMeshEditingMaterialModes                     MaterialMode;                                      // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlatShading;                                      // 0x00B0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x00B4(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Image;                                             // 0x00C8(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Opacity;                                           // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TransparentMaterialColor;                          // 0x00D8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTwoSided;                                         // 0x00E8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TWeakObjectPtr<class UMaterialInterface>      CustomMaterial;                                    // 0x00EC(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshEditingViewProperties">();
	}
	static class UMeshEditingViewProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshEditingViewProperties>();
	}
};
static_assert(alignof(UMeshEditingViewProperties) == 0x000008, "Wrong alignment on UMeshEditingViewProperties");
static_assert(sizeof(UMeshEditingViewProperties) == 0x0000F8, "Wrong size on UMeshEditingViewProperties");
static_assert(offsetof(UMeshEditingViewProperties, bShowWireframe) == 0x0000A8, "Member 'UMeshEditingViewProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, MaterialMode) == 0x0000AC, "Member 'UMeshEditingViewProperties::MaterialMode' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, bFlatShading) == 0x0000B0, "Member 'UMeshEditingViewProperties::bFlatShading' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, Color) == 0x0000B4, "Member 'UMeshEditingViewProperties::Color' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, Image) == 0x0000C8, "Member 'UMeshEditingViewProperties::Image' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, Opacity) == 0x0000D0, "Member 'UMeshEditingViewProperties::Opacity' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, TransparentMaterialColor) == 0x0000D8, "Member 'UMeshEditingViewProperties::TransparentMaterialColor' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, bTwoSided) == 0x0000E8, "Member 'UMeshEditingViewProperties::bTwoSided' has a wrong offset!");
static_assert(offsetof(UMeshEditingViewProperties, CustomMaterial) == 0x0000EC, "Member 'UMeshEditingViewProperties::CustomMaterial' has a wrong offset!");

// Class MeshModelingTools.MeshUVChannelProperties
// 0x0020 (0x00C8 - 0x00A8)
class UMeshUVChannelProperties final : public UInteractiveToolPropertySet
{
public:
	class FString                                 UVChannel;                                         // 0x00A8(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         UVChannelNamesList;                                // 0x00B8(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	const TArray<class FString> GetUVChannelNamesFunc() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshUVChannelProperties">();
	}
	static class UMeshUVChannelProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshUVChannelProperties>();
	}
};
static_assert(alignof(UMeshUVChannelProperties) == 0x000008, "Wrong alignment on UMeshUVChannelProperties");
static_assert(sizeof(UMeshUVChannelProperties) == 0x0000C8, "Wrong size on UMeshUVChannelProperties");
static_assert(offsetof(UMeshUVChannelProperties, UVChannel) == 0x0000A8, "Member 'UMeshUVChannelProperties::UVChannel' has a wrong offset!");
static_assert(offsetof(UMeshUVChannelProperties, UVChannelNamesList) == 0x0000B8, "Member 'UMeshUVChannelProperties::UVChannelNamesList' has a wrong offset!");

// Class MeshModelingTools.RecomputeUVsToolBuilder
// 0x0000 (0x0028 - 0x0028)
class URecomputeUVsToolBuilder final : public USingleSelectionMeshEditingToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RecomputeUVsToolBuilder">();
	}
	static class URecomputeUVsToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecomputeUVsToolBuilder>();
	}
};
static_assert(alignof(URecomputeUVsToolBuilder) == 0x000008, "Wrong alignment on URecomputeUVsToolBuilder");
static_assert(sizeof(URecomputeUVsToolBuilder) == 0x000028, "Wrong size on URecomputeUVsToolBuilder");

// Class MeshModelingTools.RecomputeUVsTool
// 0x0068 (0x0118 - 0x00B0)
class URecomputeUVsTool final : public USingleSelectionMeshEditingTool
{
public:
	uint8                                         Pad_B0[0x8];                                       // 0x00B0(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshUVChannelProperties*               UVChannelProperties;                               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URecomputeUVsToolProperties*            Settings;                                          // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolygroupLayersProperties*             PolygroupLayerProperties;                          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExistingMeshMaterialProperties*        MaterialSettings;                                  // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bCreateUVLayoutViewOnSetup;                        // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUVLayoutPreview*                       UVLayoutView;                                      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URecomputeUVsOpFactory*                 RecomputeUVsOpFactory;                             // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x20];                                      // 0x00F8(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RecomputeUVsTool">();
	}
	static class URecomputeUVsTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecomputeUVsTool>();
	}
};
static_assert(alignof(URecomputeUVsTool) == 0x000008, "Wrong alignment on URecomputeUVsTool");
static_assert(sizeof(URecomputeUVsTool) == 0x000118, "Wrong size on URecomputeUVsTool");
static_assert(offsetof(URecomputeUVsTool, UVChannelProperties) == 0x0000B8, "Member 'URecomputeUVsTool::UVChannelProperties' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, Settings) == 0x0000C0, "Member 'URecomputeUVsTool::Settings' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, PolygroupLayerProperties) == 0x0000C8, "Member 'URecomputeUVsTool::PolygroupLayerProperties' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, MaterialSettings) == 0x0000D0, "Member 'URecomputeUVsTool::MaterialSettings' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, bCreateUVLayoutViewOnSetup) == 0x0000D8, "Member 'URecomputeUVsTool::bCreateUVLayoutViewOnSetup' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, UVLayoutView) == 0x0000E0, "Member 'URecomputeUVsTool::UVLayoutView' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, RecomputeUVsOpFactory) == 0x0000E8, "Member 'URecomputeUVsTool::RecomputeUVsOpFactory' has a wrong offset!");
static_assert(offsetof(URecomputeUVsTool, Preview) == 0x0000F0, "Member 'URecomputeUVsTool::Preview' has a wrong offset!");

// Class MeshModelingTools.PolyEditBevelEdgeProperties
// 0x0018 (0x00C0 - 0x00A8)
class UPolyEditBevelEdgeProperties final : public UInteractiveToolPropertySet
{
public:
	double                                        BevelDistance;                                     // 0x00A8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Subdivisions;                                      // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RoundWeight;                                       // 0x00B4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInferMaterialID;                                  // 0x00B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SetMaterialID;                                     // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditBevelEdgeProperties">();
	}
	static class UPolyEditBevelEdgeProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditBevelEdgeProperties>();
	}
};
static_assert(alignof(UPolyEditBevelEdgeProperties) == 0x000008, "Wrong alignment on UPolyEditBevelEdgeProperties");
static_assert(sizeof(UPolyEditBevelEdgeProperties) == 0x0000C0, "Wrong size on UPolyEditBevelEdgeProperties");
static_assert(offsetof(UPolyEditBevelEdgeProperties, BevelDistance) == 0x0000A8, "Member 'UPolyEditBevelEdgeProperties::BevelDistance' has a wrong offset!");
static_assert(offsetof(UPolyEditBevelEdgeProperties, Subdivisions) == 0x0000B0, "Member 'UPolyEditBevelEdgeProperties::Subdivisions' has a wrong offset!");
static_assert(offsetof(UPolyEditBevelEdgeProperties, RoundWeight) == 0x0000B4, "Member 'UPolyEditBevelEdgeProperties::RoundWeight' has a wrong offset!");
static_assert(offsetof(UPolyEditBevelEdgeProperties, bInferMaterialID) == 0x0000B8, "Member 'UPolyEditBevelEdgeProperties::bInferMaterialID' has a wrong offset!");
static_assert(offsetof(UPolyEditBevelEdgeProperties, SetMaterialID) == 0x0000BC, "Member 'UPolyEditBevelEdgeProperties::SetMaterialID' has a wrong offset!");

// Class MeshModelingTools.PolyEditBevelEdgeActivity
// 0x0110 (0x0140 - 0x0030)
class UPolyEditBevelEdgeActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x8];                                       // 0x0030(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditBevelEdgeProperties*           BevelProperties;                                   // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_48[0xF8];                                      // 0x0048(0x00F8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditBevelEdgeActivity">();
	}
	static class UPolyEditBevelEdgeActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditBevelEdgeActivity>();
	}
};
static_assert(alignof(UPolyEditBevelEdgeActivity) == 0x000008, "Wrong alignment on UPolyEditBevelEdgeActivity");
static_assert(sizeof(UPolyEditBevelEdgeActivity) == 0x000140, "Wrong size on UPolyEditBevelEdgeActivity");
static_assert(offsetof(UPolyEditBevelEdgeActivity, BevelProperties) == 0x000038, "Member 'UPolyEditBevelEdgeActivity::BevelProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditBevelEdgeActivity, ActivityContext) == 0x000040, "Member 'UPolyEditBevelEdgeActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.PolyEditCutProperties
// 0x0008 (0x00B0 - 0x00A8)
class UPolyEditCutProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditCutPlaneOrientation                  Orientation;                                       // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToVertices;                                   // 0x00AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditCutProperties">();
	}
	static class UPolyEditCutProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditCutProperties>();
	}
};
static_assert(alignof(UPolyEditCutProperties) == 0x000008, "Wrong alignment on UPolyEditCutProperties");
static_assert(sizeof(UPolyEditCutProperties) == 0x0000B0, "Wrong size on UPolyEditCutProperties");
static_assert(offsetof(UPolyEditCutProperties, Orientation) == 0x0000A8, "Member 'UPolyEditCutProperties::Orientation' has a wrong offset!");
static_assert(offsetof(UPolyEditCutProperties, bSnapToVertices) == 0x0000AC, "Member 'UPolyEditCutProperties::bSnapToVertices' has a wrong offset!");

// Class MeshModelingTools.PolyEditCutFacesActivity
// 0x0090 (0x00C0 - 0x0030)
class alignas(0x10) UPolyEditCutFacesActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditCutProperties*                 CutProperties;                                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditPreviewMesh*                   EditPreview;                                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCollectSurfacePathMechanic*            SurfacePathMechanic;                               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x60];                                      // 0x0060(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditCutFacesActivity">();
	}
	static class UPolyEditCutFacesActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditCutFacesActivity>();
	}
};
static_assert(alignof(UPolyEditCutFacesActivity) == 0x000010, "Wrong alignment on UPolyEditCutFacesActivity");
static_assert(sizeof(UPolyEditCutFacesActivity) == 0x0000C0, "Wrong size on UPolyEditCutFacesActivity");
static_assert(offsetof(UPolyEditCutFacesActivity, CutProperties) == 0x000040, "Member 'UPolyEditCutFacesActivity::CutProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditCutFacesActivity, EditPreview) == 0x000048, "Member 'UPolyEditCutFacesActivity::EditPreview' has a wrong offset!");
static_assert(offsetof(UPolyEditCutFacesActivity, SurfacePathMechanic) == 0x000050, "Member 'UPolyEditCutFacesActivity::SurfacePathMechanic' has a wrong offset!");
static_assert(offsetof(UPolyEditCutFacesActivity, ActivityContext) == 0x000058, "Member 'UPolyEditCutFacesActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.PolyEditExtrudeProperties
// 0x0030 (0x00D8 - 0x00A8)
class UPolyEditExtrudeProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditExtrudeDistanceMode                  DistanceMode;                                      // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditExtrudeModeOptions                   DirectionMode;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditExtrudeDirection                     Direction;                                         // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MaxDistanceScaleFactor;                            // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShellsToSolids;                                   // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EPolyEditExtrudeDirection                     MeasureDirection;                                  // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseColinearityForSettingBorderGroups;             // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditExtrudeProperties">();
	}
	static class UPolyEditExtrudeProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditExtrudeProperties>();
	}
};
static_assert(alignof(UPolyEditExtrudeProperties) == 0x000008, "Wrong alignment on UPolyEditExtrudeProperties");
static_assert(sizeof(UPolyEditExtrudeProperties) == 0x0000D8, "Wrong size on UPolyEditExtrudeProperties");
static_assert(offsetof(UPolyEditExtrudeProperties, DistanceMode) == 0x0000A8, "Member 'UPolyEditExtrudeProperties::DistanceMode' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, Distance) == 0x0000B0, "Member 'UPolyEditExtrudeProperties::Distance' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, DirectionMode) == 0x0000B8, "Member 'UPolyEditExtrudeProperties::DirectionMode' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, Direction) == 0x0000BC, "Member 'UPolyEditExtrudeProperties::Direction' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, MaxDistanceScaleFactor) == 0x0000C0, "Member 'UPolyEditExtrudeProperties::MaxDistanceScaleFactor' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, bShellsToSolids) == 0x0000C8, "Member 'UPolyEditExtrudeProperties::bShellsToSolids' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, MeasureDirection) == 0x0000CC, "Member 'UPolyEditExtrudeProperties::MeasureDirection' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeProperties, bUseColinearityForSettingBorderGroups) == 0x0000D0, "Member 'UPolyEditExtrudeProperties::bUseColinearityForSettingBorderGroups' has a wrong offset!");

// Class MeshModelingTools.PolyEditOffsetProperties
// 0x0030 (0x00D8 - 0x00A8)
class UPolyEditOffsetProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditExtrudeDistanceMode                  DistanceMode;                                      // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditOffsetModeOptions                    DirectionMode;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxDistanceScaleFactor;                            // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShellsToSolids;                                   // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EPolyEditExtrudeDirection                     MeasureDirection;                                  // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseColinearityForSettingBorderGroups;             // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditOffsetProperties">();
	}
	static class UPolyEditOffsetProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditOffsetProperties>();
	}
};
static_assert(alignof(UPolyEditOffsetProperties) == 0x000008, "Wrong alignment on UPolyEditOffsetProperties");
static_assert(sizeof(UPolyEditOffsetProperties) == 0x0000D8, "Wrong size on UPolyEditOffsetProperties");
static_assert(offsetof(UPolyEditOffsetProperties, DistanceMode) == 0x0000A8, "Member 'UPolyEditOffsetProperties::DistanceMode' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, Distance) == 0x0000B0, "Member 'UPolyEditOffsetProperties::Distance' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, DirectionMode) == 0x0000B8, "Member 'UPolyEditOffsetProperties::DirectionMode' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, MaxDistanceScaleFactor) == 0x0000C0, "Member 'UPolyEditOffsetProperties::MaxDistanceScaleFactor' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, bShellsToSolids) == 0x0000C8, "Member 'UPolyEditOffsetProperties::bShellsToSolids' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, MeasureDirection) == 0x0000CC, "Member 'UPolyEditOffsetProperties::MeasureDirection' has a wrong offset!");
static_assert(offsetof(UPolyEditOffsetProperties, bUseColinearityForSettingBorderGroups) == 0x0000D0, "Member 'UPolyEditOffsetProperties::bUseColinearityForSettingBorderGroups' has a wrong offset!");

// Class MeshModelingTools.PolyEditPushPullProperties
// 0x0030 (0x00D8 - 0x00A8)
class UPolyEditPushPullProperties final : public UInteractiveToolPropertySet
{
public:
	EPolyEditExtrudeDistanceMode                  DistanceMode;                                      // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Distance;                                          // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditPushPullModeOptions                  DirectionMode;                                     // 0x00B8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPolyEditExtrudeDirection                     SingleDirection;                                   // 0x00BC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        MaxDistanceScaleFactor;                            // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShellsToSolids;                                   // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EPolyEditExtrudeDirection                     MeasureDirection;                                  // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseColinearityForSettingBorderGroups;             // 0x00D0(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditPushPullProperties">();
	}
	static class UPolyEditPushPullProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditPushPullProperties>();
	}
};
static_assert(alignof(UPolyEditPushPullProperties) == 0x000008, "Wrong alignment on UPolyEditPushPullProperties");
static_assert(sizeof(UPolyEditPushPullProperties) == 0x0000D8, "Wrong size on UPolyEditPushPullProperties");
static_assert(offsetof(UPolyEditPushPullProperties, DistanceMode) == 0x0000A8, "Member 'UPolyEditPushPullProperties::DistanceMode' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, Distance) == 0x0000B0, "Member 'UPolyEditPushPullProperties::Distance' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, DirectionMode) == 0x0000B8, "Member 'UPolyEditPushPullProperties::DirectionMode' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, SingleDirection) == 0x0000BC, "Member 'UPolyEditPushPullProperties::SingleDirection' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, MaxDistanceScaleFactor) == 0x0000C0, "Member 'UPolyEditPushPullProperties::MaxDistanceScaleFactor' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, bShellsToSolids) == 0x0000C8, "Member 'UPolyEditPushPullProperties::bShellsToSolids' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, MeasureDirection) == 0x0000CC, "Member 'UPolyEditPushPullProperties::MeasureDirection' has a wrong offset!");
static_assert(offsetof(UPolyEditPushPullProperties, bUseColinearityForSettingBorderGroups) == 0x0000D0, "Member 'UPolyEditPushPullProperties::bUseColinearityForSettingBorderGroups' has a wrong offset!");

// Class MeshModelingTools.PolyEditExtrudeActivity
// 0x01A0 (0x01D0 - 0x0030)
class UPolyEditExtrudeActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditExtrudeProperties*             ExtrudeProperties;                                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPolyEditOffsetProperties*              OffsetProperties;                                  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPolyEditPushPullProperties*            PushPullProperties;                                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPlaneDistanceFromHitMechanic*          ExtrudeHeightMechanic;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_78[0x158];                                     // 0x0078(0x0158)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditExtrudeActivity">();
	}
	static class UPolyEditExtrudeActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditExtrudeActivity>();
	}
};
static_assert(alignof(UPolyEditExtrudeActivity) == 0x000008, "Wrong alignment on UPolyEditExtrudeActivity");
static_assert(sizeof(UPolyEditExtrudeActivity) == 0x0001D0, "Wrong size on UPolyEditExtrudeActivity");
static_assert(offsetof(UPolyEditExtrudeActivity, ExtrudeProperties) == 0x000050, "Member 'UPolyEditExtrudeActivity::ExtrudeProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeActivity, OffsetProperties) == 0x000058, "Member 'UPolyEditExtrudeActivity::OffsetProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeActivity, PushPullProperties) == 0x000060, "Member 'UPolyEditExtrudeActivity::PushPullProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeActivity, ExtrudeHeightMechanic) == 0x000068, "Member 'UPolyEditExtrudeActivity::ExtrudeHeightMechanic' has a wrong offset!");
static_assert(offsetof(UPolyEditExtrudeActivity, ActivityContext) == 0x000070, "Member 'UPolyEditExtrudeActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.GroupEdgeInsertionProperties
// 0x0010 (0x00B8 - 0x00A8)
class UGroupEdgeInsertionProperties final : public UInteractiveToolPropertySet
{
public:
	EGroupEdgeInsertionMode                       InsertionMode;                                     // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bContinuousInsertion;                              // 0x00AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VertexTolerance;                                   // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GroupEdgeInsertionProperties">();
	}
	static class UGroupEdgeInsertionProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGroupEdgeInsertionProperties>();
	}
};
static_assert(alignof(UGroupEdgeInsertionProperties) == 0x000008, "Wrong alignment on UGroupEdgeInsertionProperties");
static_assert(sizeof(UGroupEdgeInsertionProperties) == 0x0000B8, "Wrong size on UGroupEdgeInsertionProperties");
static_assert(offsetof(UGroupEdgeInsertionProperties, InsertionMode) == 0x0000A8, "Member 'UGroupEdgeInsertionProperties::InsertionMode' has a wrong offset!");
static_assert(offsetof(UGroupEdgeInsertionProperties, bContinuousInsertion) == 0x0000AC, "Member 'UGroupEdgeInsertionProperties::bContinuousInsertion' has a wrong offset!");
static_assert(offsetof(UGroupEdgeInsertionProperties, VertexTolerance) == 0x0000B0, "Member 'UGroupEdgeInsertionProperties::VertexTolerance' has a wrong offset!");

// Class MeshModelingTools.PolyEditInsertEdgeActivity
// 0x0440 (0x0470 - 0x0030)
class alignas(0x10) UPolyEditInsertEdgeActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UGroupEdgeInsertionProperties*          Settings;                                          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x418];                                     // 0x0058(0x0418)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditInsertEdgeActivity">();
	}
	static class UPolyEditInsertEdgeActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditInsertEdgeActivity>();
	}
};
static_assert(alignof(UPolyEditInsertEdgeActivity) == 0x000010, "Wrong alignment on UPolyEditInsertEdgeActivity");
static_assert(sizeof(UPolyEditInsertEdgeActivity) == 0x000470, "Wrong size on UPolyEditInsertEdgeActivity");
static_assert(offsetof(UPolyEditInsertEdgeActivity, Settings) == 0x000048, "Member 'UPolyEditInsertEdgeActivity::Settings' has a wrong offset!");
static_assert(offsetof(UPolyEditInsertEdgeActivity, ActivityContext) == 0x000050, "Member 'UPolyEditInsertEdgeActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.EdgeLoopInsertionProperties
// 0x0030 (0x00D8 - 0x00A8)
class UEdgeLoopInsertionProperties final : public UInteractiveToolPropertySet
{
public:
	EEdgeLoopPositioningMode                      PositionMode;                                      // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEdgeLoopInsertionMode                        InsertionMode;                                     // 0x00AC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumLoops;                                          // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ProportionOffset;                                  // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        DistanceOffset;                                    // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInteractive;                                      // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlipOffsetDirection;                              // 0x00C9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHighlightProblemGroups;                           // 0x00CA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        VertexTolerance;                                   // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EdgeLoopInsertionProperties">();
	}
	static class UEdgeLoopInsertionProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEdgeLoopInsertionProperties>();
	}
};
static_assert(alignof(UEdgeLoopInsertionProperties) == 0x000008, "Wrong alignment on UEdgeLoopInsertionProperties");
static_assert(sizeof(UEdgeLoopInsertionProperties) == 0x0000D8, "Wrong size on UEdgeLoopInsertionProperties");
static_assert(offsetof(UEdgeLoopInsertionProperties, PositionMode) == 0x0000A8, "Member 'UEdgeLoopInsertionProperties::PositionMode' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, InsertionMode) == 0x0000AC, "Member 'UEdgeLoopInsertionProperties::InsertionMode' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, NumLoops) == 0x0000B0, "Member 'UEdgeLoopInsertionProperties::NumLoops' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, ProportionOffset) == 0x0000B8, "Member 'UEdgeLoopInsertionProperties::ProportionOffset' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, DistanceOffset) == 0x0000C0, "Member 'UEdgeLoopInsertionProperties::DistanceOffset' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, bInteractive) == 0x0000C8, "Member 'UEdgeLoopInsertionProperties::bInteractive' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, bFlipOffsetDirection) == 0x0000C9, "Member 'UEdgeLoopInsertionProperties::bFlipOffsetDirection' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, bHighlightProblemGroups) == 0x0000CA, "Member 'UEdgeLoopInsertionProperties::bHighlightProblemGroups' has a wrong offset!");
static_assert(offsetof(UEdgeLoopInsertionProperties, VertexTolerance) == 0x0000D0, "Member 'UEdgeLoopInsertionProperties::VertexTolerance' has a wrong offset!");

// Class MeshModelingTools.PolyEditInsertEdgeLoopActivity
// 0x03D0 (0x0400 - 0x0030)
class alignas(0x10) UPolyEditInsertEdgeLoopActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UEdgeLoopInsertionProperties*           Settings;                                          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x3A8];                                     // 0x0058(0x03A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditInsertEdgeLoopActivity">();
	}
	static class UPolyEditInsertEdgeLoopActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditInsertEdgeLoopActivity>();
	}
};
static_assert(alignof(UPolyEditInsertEdgeLoopActivity) == 0x000010, "Wrong alignment on UPolyEditInsertEdgeLoopActivity");
static_assert(sizeof(UPolyEditInsertEdgeLoopActivity) == 0x000400, "Wrong size on UPolyEditInsertEdgeLoopActivity");
static_assert(offsetof(UPolyEditInsertEdgeLoopActivity, Settings) == 0x000048, "Member 'UPolyEditInsertEdgeLoopActivity::Settings' has a wrong offset!");
static_assert(offsetof(UPolyEditInsertEdgeLoopActivity, ActivityContext) == 0x000050, "Member 'UPolyEditInsertEdgeLoopActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.PolyEditInsetOutsetProperties
// 0x0010 (0x00B8 - 0x00A8)
class UPolyEditInsetOutsetProperties final : public UInteractiveToolPropertySet
{
public:
	float                                         Softness;                                          // 0x00A8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBoundaryOnly;                                     // 0x00AC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AreaScale;                                         // 0x00B0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReproject;                                        // 0x00B4(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOutset;                                           // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditInsetOutsetProperties">();
	}
	static class UPolyEditInsetOutsetProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditInsetOutsetProperties>();
	}
};
static_assert(alignof(UPolyEditInsetOutsetProperties) == 0x000008, "Wrong alignment on UPolyEditInsetOutsetProperties");
static_assert(sizeof(UPolyEditInsetOutsetProperties) == 0x0000B8, "Wrong size on UPolyEditInsetOutsetProperties");
static_assert(offsetof(UPolyEditInsetOutsetProperties, Softness) == 0x0000A8, "Member 'UPolyEditInsetOutsetProperties::Softness' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetProperties, bBoundaryOnly) == 0x0000AC, "Member 'UPolyEditInsetOutsetProperties::bBoundaryOnly' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetProperties, AreaScale) == 0x0000B0, "Member 'UPolyEditInsetOutsetProperties::AreaScale' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetProperties, bReproject) == 0x0000B4, "Member 'UPolyEditInsetOutsetProperties::bReproject' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetProperties, bOutset) == 0x0000B5, "Member 'UPolyEditInsetOutsetProperties::bOutset' has a wrong offset!");

// Class MeshModelingTools.PolyEditInsetOutsetActivity
// 0x0040 (0x0070 - 0x0030)
class UPolyEditInsetOutsetActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditInsetOutsetProperties*         Settings;                                          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditPreviewMesh*                   EditPreview;                                       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpatialCurveDistanceMechanic*          CurveDistMechanic;                                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditInsetOutsetActivity">();
	}
	static class UPolyEditInsetOutsetActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditInsetOutsetActivity>();
	}
};
static_assert(alignof(UPolyEditInsetOutsetActivity) == 0x000008, "Wrong alignment on UPolyEditInsetOutsetActivity");
static_assert(sizeof(UPolyEditInsetOutsetActivity) == 0x000070, "Wrong size on UPolyEditInsetOutsetActivity");
static_assert(offsetof(UPolyEditInsetOutsetActivity, Settings) == 0x000040, "Member 'UPolyEditInsetOutsetActivity::Settings' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetActivity, EditPreview) == 0x000050, "Member 'UPolyEditInsetOutsetActivity::EditPreview' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetActivity, CurveDistMechanic) == 0x000058, "Member 'UPolyEditInsetOutsetActivity::CurveDistMechanic' has a wrong offset!");
static_assert(offsetof(UPolyEditInsetOutsetActivity, ActivityContext) == 0x000060, "Member 'UPolyEditInsetOutsetActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.PolyEditSetUVProperties
// 0x0008 (0x00B0 - 0x00A8)
class UPolyEditSetUVProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowMaterial;                                     // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditSetUVProperties">();
	}
	static class UPolyEditSetUVProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditSetUVProperties>();
	}
};
static_assert(alignof(UPolyEditSetUVProperties) == 0x000008, "Wrong alignment on UPolyEditSetUVProperties");
static_assert(sizeof(UPolyEditSetUVProperties) == 0x0000B0, "Wrong size on UPolyEditSetUVProperties");
static_assert(offsetof(UPolyEditSetUVProperties, bShowMaterial) == 0x0000A8, "Member 'UPolyEditSetUVProperties::bShowMaterial' has a wrong offset!");

// Class MeshModelingTools.PolyEditPlanarProjectionUVActivity
// 0x00C0 (0x00F0 - 0x0030)
class alignas(0x10) UPolyEditPlanarProjectionUVActivity final : public UInteractiveToolActivity
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolyEditSetUVProperties*               SetUVProperties;                                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditPreviewMesh*                   EditPreview;                                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCollectSurfacePathMechanic*            SurfacePathMechanic;                               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPolyEditActivityContext*               ActivityContext;                                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_60[0x90];                                      // 0x0060(0x0090)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditPlanarProjectionUVActivity">();
	}
	static class UPolyEditPlanarProjectionUVActivity* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditPlanarProjectionUVActivity>();
	}
};
static_assert(alignof(UPolyEditPlanarProjectionUVActivity) == 0x000010, "Wrong alignment on UPolyEditPlanarProjectionUVActivity");
static_assert(sizeof(UPolyEditPlanarProjectionUVActivity) == 0x0000F0, "Wrong size on UPolyEditPlanarProjectionUVActivity");
static_assert(offsetof(UPolyEditPlanarProjectionUVActivity, SetUVProperties) == 0x000040, "Member 'UPolyEditPlanarProjectionUVActivity::SetUVProperties' has a wrong offset!");
static_assert(offsetof(UPolyEditPlanarProjectionUVActivity, EditPreview) == 0x000048, "Member 'UPolyEditPlanarProjectionUVActivity::EditPreview' has a wrong offset!");
static_assert(offsetof(UPolyEditPlanarProjectionUVActivity, SurfacePathMechanic) == 0x000050, "Member 'UPolyEditPlanarProjectionUVActivity::SurfacePathMechanic' has a wrong offset!");
static_assert(offsetof(UPolyEditPlanarProjectionUVActivity, ActivityContext) == 0x000058, "Member 'UPolyEditPlanarProjectionUVActivity::ActivityContext' has a wrong offset!");

// Class MeshModelingTools.UVLayoutToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UUVLayoutToolBuilder final : public UMultiSelectionMeshEditingToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVLayoutToolBuilder">();
	}
	static class UUVLayoutToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVLayoutToolBuilder>();
	}
};
static_assert(alignof(UUVLayoutToolBuilder) == 0x000008, "Wrong alignment on UUVLayoutToolBuilder");
static_assert(sizeof(UUVLayoutToolBuilder) == 0x000028, "Wrong size on UUVLayoutToolBuilder");

// Class MeshModelingTools.UVLayoutTool
// 0x00B8 (0x0170 - 0x00B8)
class alignas(0x10) UUVLayoutTool final : public UMultiSelectionMeshEditingTool
{
public:
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshUVChannelProperties*               UVChannelProperties;                               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUVLayoutProperties*                    BasicProperties;                                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExistingMeshMaterialProperties*        MaterialSettings;                                  // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMeshOpPreviewWithBackgroundCompute*> Previews;                                          // 0x00D8(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UUVLayoutOperatorFactory*>       Factories;                                         // 0x00E8(0x0010)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x68];                                      // 0x00F8(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UUVLayoutPreview*                       UVLayoutView;                                      // 0x0160(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVLayoutTool">();
	}
	static class UUVLayoutTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVLayoutTool>();
	}
};
static_assert(alignof(UUVLayoutTool) == 0x000010, "Wrong alignment on UUVLayoutTool");
static_assert(sizeof(UUVLayoutTool) == 0x000170, "Wrong size on UUVLayoutTool");
static_assert(offsetof(UUVLayoutTool, UVChannelProperties) == 0x0000C0, "Member 'UUVLayoutTool::UVChannelProperties' has a wrong offset!");
static_assert(offsetof(UUVLayoutTool, BasicProperties) == 0x0000C8, "Member 'UUVLayoutTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UUVLayoutTool, MaterialSettings) == 0x0000D0, "Member 'UUVLayoutTool::MaterialSettings' has a wrong offset!");
static_assert(offsetof(UUVLayoutTool, Previews) == 0x0000D8, "Member 'UUVLayoutTool::Previews' has a wrong offset!");
static_assert(offsetof(UUVLayoutTool, Factories) == 0x0000E8, "Member 'UUVLayoutTool::Factories' has a wrong offset!");
static_assert(offsetof(UUVLayoutTool, UVLayoutView) == 0x000160, "Member 'UUVLayoutTool::UVLayoutView' has a wrong offset!");

// Class MeshModelingTools.UVProjectionToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UUVProjectionToolBuilder final : public USingleTargetWithSelectionToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionToolBuilder">();
	}
	static class UUVProjectionToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionToolBuilder>();
	}
};
static_assert(alignof(UUVProjectionToolBuilder) == 0x000008, "Wrong alignment on UUVProjectionToolBuilder");
static_assert(sizeof(UUVProjectionToolBuilder) == 0x000028, "Wrong size on UUVProjectionToolBuilder");

// Class MeshModelingTools.UVProjectionToolEditActions
// 0x0008 (0x00B0 - 0x00A8)
class UUVProjectionToolEditActions final : public UInteractiveToolPropertySet
{
public:
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AutoFit();
	void AutoFitAlign();
	void Reset();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionToolEditActions">();
	}
	static class UUVProjectionToolEditActions* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionToolEditActions>();
	}
};
static_assert(alignof(UUVProjectionToolEditActions) == 0x000008, "Wrong alignment on UUVProjectionToolEditActions");
static_assert(sizeof(UUVProjectionToolEditActions) == 0x0000B0, "Wrong size on UUVProjectionToolEditActions");

// Class MeshModelingTools.UVProjectionToolProperties
// 0x00E8 (0x0190 - 0x00A8)
class UUVProjectionToolProperties final : public UInteractiveToolPropertySet
{
public:
	EUVProjectionMethod                           ProjectionType;                                    // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Dimensions;                                        // 0x00B0(0x0018)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bProportionalDimensions;                           // 0x00C8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	EUVProjectionToolInitializationMode           Initialization;                                    // 0x00CC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CylinderSplitAngle;                                // 0x00D0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExpMapNormalBlending;                              // 0x00D4(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpMapSmoothingSteps;                              // 0x00D8(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ExpMapSmoothingAlpha;                              // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Rotation;                                          // 0x00E0(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Scale;                                             // 0x00E8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Translation;                                       // 0x00F8(0x0010)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SavedDimensions;                                   // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSavedProportionalDimensions;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_121[0xF];                                      // 0x0121(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SavedTransform;                                    // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionToolProperties">();
	}
	static class UUVProjectionToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionToolProperties>();
	}
};
static_assert(alignof(UUVProjectionToolProperties) == 0x000010, "Wrong alignment on UUVProjectionToolProperties");
static_assert(sizeof(UUVProjectionToolProperties) == 0x000190, "Wrong size on UUVProjectionToolProperties");
static_assert(offsetof(UUVProjectionToolProperties, ProjectionType) == 0x0000A8, "Member 'UUVProjectionToolProperties::ProjectionType' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, Dimensions) == 0x0000B0, "Member 'UUVProjectionToolProperties::Dimensions' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, bProportionalDimensions) == 0x0000C8, "Member 'UUVProjectionToolProperties::bProportionalDimensions' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, Initialization) == 0x0000CC, "Member 'UUVProjectionToolProperties::Initialization' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, CylinderSplitAngle) == 0x0000D0, "Member 'UUVProjectionToolProperties::CylinderSplitAngle' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, ExpMapNormalBlending) == 0x0000D4, "Member 'UUVProjectionToolProperties::ExpMapNormalBlending' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, ExpMapSmoothingSteps) == 0x0000D8, "Member 'UUVProjectionToolProperties::ExpMapSmoothingSteps' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, ExpMapSmoothingAlpha) == 0x0000DC, "Member 'UUVProjectionToolProperties::ExpMapSmoothingAlpha' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, Rotation) == 0x0000E0, "Member 'UUVProjectionToolProperties::Rotation' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, Scale) == 0x0000E8, "Member 'UUVProjectionToolProperties::Scale' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, Translation) == 0x0000F8, "Member 'UUVProjectionToolProperties::Translation' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, SavedDimensions) == 0x000108, "Member 'UUVProjectionToolProperties::SavedDimensions' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, bSavedProportionalDimensions) == 0x000120, "Member 'UUVProjectionToolProperties::bSavedProportionalDimensions' has a wrong offset!");
static_assert(offsetof(UUVProjectionToolProperties, SavedTransform) == 0x000130, "Member 'UUVProjectionToolProperties::SavedTransform' has a wrong offset!");

// Class MeshModelingTools.UVProjectionOperatorFactory
// 0x0010 (0x0038 - 0x0028)
class UUVProjectionOperatorFactory final : public UObject
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UUVProjectionTool*                      Tool;                                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionOperatorFactory">();
	}
	static class UUVProjectionOperatorFactory* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionOperatorFactory>();
	}
};
static_assert(alignof(UUVProjectionOperatorFactory) == 0x000008, "Wrong alignment on UUVProjectionOperatorFactory");
static_assert(sizeof(UUVProjectionOperatorFactory) == 0x000038, "Wrong size on UUVProjectionOperatorFactory");
static_assert(offsetof(UUVProjectionOperatorFactory, Tool) == 0x000030, "Member 'UUVProjectionOperatorFactory::Tool' has a wrong offset!");

// Class MeshModelingTools.UVProjectionTool
// 0x03B0 (0x04D0 - 0x0120)
class alignas(0x10) UUVProjectionTool final : public USingleTargetWithSelectionTool
{
public:
	class UMeshUVChannelProperties*               UVChannelProperties;                               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUVProjectionToolProperties*            BasicProperties;                                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUVProjectionToolEditActions*           EditActions;                                       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExistingMeshMaterialProperties*        MaterialSettings;                                  // 0x0138(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*               CheckerMaterial;                                   // 0x0148(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombinedTransformGizmo*                TransformGizmo;                                    // 0x0150(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformProxy*                        TransformProxy;                                    // 0x0158(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUVProjectionOperatorFactory*           OperatorFactory;                                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPreviewGeometry*                       EdgeRenderer;                                      // 0x0168(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_170[0x348];                                    // 0x0170(0x0348)(Fixing Size After Last Property [ Dumper-7 ])
	class USingleClickInputBehavior*              ClickToSetPlaneBehavior;                           // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_4C0[0x10];                                     // 0x04C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVProjectionTool">();
	}
	static class UUVProjectionTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVProjectionTool>();
	}
};
static_assert(alignof(UUVProjectionTool) == 0x000010, "Wrong alignment on UUVProjectionTool");
static_assert(sizeof(UUVProjectionTool) == 0x0004D0, "Wrong size on UUVProjectionTool");
static_assert(offsetof(UUVProjectionTool, UVChannelProperties) == 0x000120, "Member 'UUVProjectionTool::UVChannelProperties' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, BasicProperties) == 0x000128, "Member 'UUVProjectionTool::BasicProperties' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, EditActions) == 0x000130, "Member 'UUVProjectionTool::EditActions' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, MaterialSettings) == 0x000138, "Member 'UUVProjectionTool::MaterialSettings' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, Preview) == 0x000140, "Member 'UUVProjectionTool::Preview' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, CheckerMaterial) == 0x000148, "Member 'UUVProjectionTool::CheckerMaterial' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, TransformGizmo) == 0x000150, "Member 'UUVProjectionTool::TransformGizmo' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, TransformProxy) == 0x000158, "Member 'UUVProjectionTool::TransformProxy' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, OperatorFactory) == 0x000160, "Member 'UUVProjectionTool::OperatorFactory' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, EdgeRenderer) == 0x000168, "Member 'UUVProjectionTool::EdgeRenderer' has a wrong offset!");
static_assert(offsetof(UUVProjectionTool, ClickToSetPlaneBehavior) == 0x0004B8, "Member 'UUVProjectionTool::ClickToSetPlaneBehavior' has a wrong offset!");

}

