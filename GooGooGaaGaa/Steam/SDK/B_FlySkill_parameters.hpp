#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FlySkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_FlySkill.B_FlySkill_C.DecreaseFlySoundVolume
// 0x0038 (0x0038 - 0x0000)
struct B_FlySkill_C_DecreaseFlySoundVolume final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_DecreaseFlySoundVolume) == 0x000008, "Wrong alignment on B_FlySkill_C_DecreaseFlySoundVolume");
static_assert(sizeof(B_FlySkill_C_DecreaseFlySoundVolume) == 0x000038, "Wrong size on B_FlySkill_C_DecreaseFlySoundVolume");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, DeltaTime) == 0x000000, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::DeltaTime' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DecreaseFlySoundVolume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x000030, "Member 'B_FlySkill_C_DecreaseFlySoundVolume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.DisableEffects
// 0x0003 (0x0003 - 0x0000)
struct B_FlySkill_C_DisableEffects final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_DisableEffects) == 0x000001, "Wrong alignment on B_FlySkill_C_DisableEffects");
static_assert(sizeof(B_FlySkill_C_DisableEffects) == 0x000003, "Wrong size on B_FlySkill_C_DisableEffects");
static_assert(offsetof(B_FlySkill_C_DisableEffects, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_DisableEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DisableEffects, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_FlySkill_C_DisableEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_DisableEffects, CallFunc_IsDedicatedServer_ReturnValue) == 0x000002, "Member 'B_FlySkill_C_DisableEffects::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.EnableEffects
// 0x00E8 (0x00E8 - 0x0000)
struct B_FlySkill_C_EnableEffects final
{
public:
	class USceneComponent*                        ComponentToAttachTo;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Select_Default;                             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_2;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_Select_Default_1;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_EnableEffects) == 0x000008, "Wrong alignment on B_FlySkill_C_EnableEffects");
static_assert(sizeof(B_FlySkill_C_EnableEffects) == 0x0000E8, "Wrong size on B_FlySkill_C_EnableEffects");
static_assert(offsetof(B_FlySkill_C_EnableEffects, ComponentToAttachTo) == 0x000000, "Member 'B_FlySkill_C_EnableEffects::ComponentToAttachTo' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, Temp_bool_Variable) == 0x000008, "Member 'B_FlySkill_C_EnableEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, Temp_object_Variable) == 0x000010, "Member 'B_FlySkill_C_EnableEffects::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, Temp_object_Variable_1) == 0x000018, "Member 'B_FlySkill_C_EnableEffects::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, Temp_bool_Variable_1) == 0x000020, "Member 'B_FlySkill_C_EnableEffects::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'B_FlySkill_C_EnableEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'B_FlySkill_C_EnableEffects::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_BreakVector_X) == 0x000040, "Member 'B_FlySkill_C_EnableEffects::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_BreakVector_Y) == 0x000048, "Member 'B_FlySkill_C_EnableEffects::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_BreakVector_Z) == 0x000050, "Member 'B_FlySkill_C_EnableEffects::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'B_FlySkill_C_EnableEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000060, "Member 'B_FlySkill_C_EnableEffects::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'B_FlySkill_C_EnableEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000070, "Member 'B_FlySkill_C_EnableEffects::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_IsDedicatedServer_ReturnValue) == 0x000078, "Member 'B_FlySkill_C_EnableEffects::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_GetOwner_ReturnValue_1) == 0x000080, "Member 'B_FlySkill_C_EnableEffects::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000088, "Member 'B_FlySkill_C_EnableEffects::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'B_FlySkill_C_EnableEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_DynamicCast_AsB_Witch) == 0x000098, "Member 'B_FlySkill_C_EnableEffects::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'B_FlySkill_C_EnableEffects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x0000A8, "Member 'B_FlySkill_C_EnableEffects::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'B_FlySkill_C_EnableEffects::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_GetObjectClass_ReturnValue) == 0x0000B8, "Member 'B_FlySkill_C_EnableEffects::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_Select_Default) == 0x0000C0, "Member 'B_FlySkill_C_EnableEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000C8, "Member 'B_FlySkill_C_EnableEffects::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_K2_GetRootComponent_ReturnValue_2) == 0x0000D0, "Member 'B_FlySkill_C_EnableEffects::CallFunc_K2_GetRootComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, K2Node_Select_Default_1) == 0x0000D8, "Member 'B_FlySkill_C_EnableEffects::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_EnableEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000E0, "Member 'B_FlySkill_C_EnableEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.ExecuteUbergraph_B_FlySkill
// 0x00E0 (0x00E0 - 0x0000)
struct B_FlySkill_C_ExecuteUbergraph_B_FlySkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetOwnersMana_Mana;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_IncreaseFlySoundVolume_DeltaTime_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DecreaseFlySoundVolume_DeltaTime_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast; // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill) == 0x000008, "Wrong alignment on B_FlySkill_C_ExecuteUbergraph_B_FlySkill");
static_assert(sizeof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill) == 0x0000E0, "Wrong size on B_FlySkill_C_ExecuteUbergraph_B_FlySkill");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, EntryPoint) == 0x000000, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_GetOwnersMana_Mana) == 0x000020, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_GetOwnersMana_Mana' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000038, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, K2Node_DynamicCast_AsPawn) == 0x000050, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_IsLocallyControlled_ReturnValue) == 0x000078, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_BreakVector_X) == 0x000080, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_BreakVector_Y) == 0x000088, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_BreakVector_Z) == 0x000090, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000B8, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_CanActivate_ReturnValue) == 0x0000B9, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_IsValid_ReturnValue) == 0x0000BA, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_IncreaseFlySoundVolume_DeltaTime_ImplicitCast) == 0x0000C0, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_IncreaseFlySoundVolume_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_DecreaseFlySoundVolume_DeltaTime_ImplicitCast) == 0x0000C8, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_DecreaseFlySoundVolume_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000D0, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ExecuteUbergraph_B_FlySkill, CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast) == 0x0000D8, "Member 'B_FlySkill_C_ExecuteUbergraph_B_FlySkill::CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.IncreaseFlySoundVolume
// 0x0030 (0x0030 - 0x0000)
struct B_FlySkill_C_IncreaseFlySoundVolume final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_IncreaseFlySoundVolume) == 0x000008, "Wrong alignment on B_FlySkill_C_IncreaseFlySoundVolume");
static_assert(sizeof(B_FlySkill_C_IncreaseFlySoundVolume) == 0x000030, "Wrong size on B_FlySkill_C_IncreaseFlySoundVolume");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, DeltaTime) == 0x000000, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::DeltaTime' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_IncreaseFlySoundVolume, CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast) == 0x000028, "Member 'B_FlySkill_C_IncreaseFlySoundVolume::CallFunc_SetVolumeMultiplier_NewVolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.InitializeRules
// 0x0008 (0x0008 - 0x0000)
struct B_FlySkill_C_InitializeRules final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_InitializeRules) == 0x000008, "Wrong alignment on B_FlySkill_C_InitializeRules");
static_assert(sizeof(B_FlySkill_C_InitializeRules) == 0x000008, "Wrong size on B_FlySkill_C_InitializeRules");
static_assert(offsetof(B_FlySkill_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.PropFlying
// 0x0058 (0x0058 - 0x0000)
struct B_FlySkill_C_PropFlying final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIProp_C>              K2Node_DynamicCast_AsIProp;                        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Fly_ForcedBoolean;                        // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_PropFlying) == 0x000008, "Wrong alignment on B_FlySkill_C_PropFlying");
static_assert(sizeof(B_FlySkill_C_PropFlying) == 0x000058, "Wrong size on B_FlySkill_C_PropFlying");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_PropFlying::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_PropFlying::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'B_FlySkill_C_PropFlying::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000018, "Member 'B_FlySkill_C_PropFlying::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_FlySkill_C_PropFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000021, "Member 'B_FlySkill_C_PropFlying::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'B_FlySkill_C_PropFlying::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, K2Node_DynamicCast_AsIProp) == 0x000030, "Member 'B_FlySkill_C_PropFlying::K2Node_DynamicCast_AsIProp' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_FlySkill_C_PropFlying::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_FlySkill_C_PropFlying::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'B_FlySkill_C_PropFlying::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_PropFlying, CallFunc_Fly_ForcedBoolean) == 0x000051, "Member 'B_FlySkill_C_PropFlying::CallFunc_Fly_ForcedBoolean' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_FlySkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_ReceiveTick) == 0x000004, "Wrong alignment on B_FlySkill_C_ReceiveTick");
static_assert(sizeof(B_FlySkill_C_ReceiveTick) == 0x000004, "Wrong size on B_FlySkill_C_ReceiveTick");
static_assert(offsetof(B_FlySkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_FlySkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.ReleaseFlying
// 0x0070 (0x0070 - 0x0000)
struct B_FlySkill_C_ReleaseFlying final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_ReleaseFlying) == 0x000008, "Wrong alignment on B_FlySkill_C_ReleaseFlying");
static_assert(sizeof(B_FlySkill_C_ReleaseFlying) == 0x000070, "Wrong size on B_FlySkill_C_ReleaseFlying");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_AsB_Player_State) == 0x000038, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_GetOwner_ReturnValue_1) == 0x000048, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_HasAuthority_ReturnValue) == 0x000050, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, CallFunc_GetOwner_ReturnValue_2) == 0x000058, "Member 'B_FlySkill_C_ReleaseFlying::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_AsCharacter) == 0x000060, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_ReleaseFlying, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'B_FlySkill_C_ReleaseFlying::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.SetFlying
// 0x0038 (0x0038 - 0x0000)
struct B_FlySkill_C_SetFlying final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_SetFlying) == 0x000008, "Wrong alignment on B_FlySkill_C_SetFlying");
static_assert(sizeof(B_FlySkill_C_SetFlying) == 0x000038, "Wrong size on B_FlySkill_C_SetFlying");
static_assert(offsetof(B_FlySkill_C_SetFlying, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_SetFlying::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_FlySkill_C_SetFlying::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000010, "Member 'B_FlySkill_C_SetFlying::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_FlySkill_C_SetFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'B_FlySkill_C_SetFlying::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, CallFunc_CanActivate_ReturnValue) == 0x00001A, "Member 'B_FlySkill_C_SetFlying::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, CallFunc_GetOwner_ReturnValue_1) == 0x000020, "Member 'B_FlySkill_C_SetFlying::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, K2Node_DynamicCast_AsCharacter) == 0x000028, "Member 'B_FlySkill_C_SetFlying::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_SetFlying, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_FlySkill_C_SetFlying::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.UpdateFlying
// 0x0018 (0x0018 - 0x0000)
struct B_FlySkill_C_UpdateFlying final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_UpdateFlying) == 0x000008, "Wrong alignment on B_FlySkill_C_UpdateFlying");
static_assert(sizeof(B_FlySkill_C_UpdateFlying) == 0x000018, "Wrong size on B_FlySkill_C_UpdateFlying");
static_assert(offsetof(B_FlySkill_C_UpdateFlying, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'B_FlySkill_C_UpdateFlying::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_UpdateFlying, K2Node_DynamicCast_AsB_Witch) == 0x000008, "Member 'B_FlySkill_C_UpdateFlying::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_UpdateFlying, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_FlySkill_C_UpdateFlying::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_UpdateFlying, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'B_FlySkill_C_UpdateFlying::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_FlySkill.B_FlySkill_C.WitchFlying
// 0x0090 (0x0090 - 0x0000)
struct B_FlySkill_C_WitchFlying final
{
public:
	class UCharacterMovementComponent*            MovementComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSlowed;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_GravityScale_ImplicitCast;      // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_GravityScale_ImplicitCast_1;    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_GravityScale_ImplicitCast_2;    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_FlySkill_C_WitchFlying) == 0x000008, "Wrong alignment on B_FlySkill_C_WitchFlying");
static_assert(sizeof(B_FlySkill_C_WitchFlying) == 0x000090, "Wrong size on B_FlySkill_C_WitchFlying");
static_assert(offsetof(B_FlySkill_C_WitchFlying, MovementComponent) == 0x000000, "Member 'B_FlySkill_C_WitchFlying::MovementComponent' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, IsSlowed) == 0x000008, "Member 'B_FlySkill_C_WitchFlying::IsSlowed' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'B_FlySkill_C_WitchFlying::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'B_FlySkill_C_WitchFlying::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000020, "Member 'B_FlySkill_C_WitchFlying::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'B_FlySkill_C_WitchFlying::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_FlySkill_C_WitchFlying::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_BreakVector_X) == 0x000038, "Member 'B_FlySkill_C_WitchFlying::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_BreakVector_Y) == 0x000040, "Member 'B_FlySkill_C_WitchFlying::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_BreakVector_Z) == 0x000048, "Member 'B_FlySkill_C_WitchFlying::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'B_FlySkill_C_WitchFlying::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x000058, "Member 'B_FlySkill_C_WitchFlying::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_SelectFloat_ReturnValue_2) == 0x000060, "Member 'B_FlySkill_C_WitchFlying::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'B_FlySkill_C_WitchFlying::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'B_FlySkill_C_WitchFlying::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'B_FlySkill_C_WitchFlying::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, K2Node_VariableSet_GravityScale_ImplicitCast) == 0x000080, "Member 'B_FlySkill_C_WitchFlying::K2Node_VariableSet_GravityScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, K2Node_VariableSet_GravityScale_ImplicitCast_1) == 0x000084, "Member 'B_FlySkill_C_WitchFlying::K2Node_VariableSet_GravityScale_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_FlySkill_C_WitchFlying, K2Node_VariableSet_GravityScale_ImplicitCast_2) == 0x000088, "Member 'B_FlySkill_C_WitchFlying::K2Node_VariableSet_GravityScale_ImplicitCast_2' has a wrong offset!");

}

