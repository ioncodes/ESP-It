#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ToolTip

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_ToolTip.WB_ToolTip_C.ExecuteUbergraph_WB_ToolTip
// 0x0020 (0x0020 - 0x0000)
struct WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_MaxDesiredWidth;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_CustomEvent_TooltipContent;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip) == 0x000008, "Wrong alignment on WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip");
static_assert(sizeof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip) == 0x000020, "Wrong size on WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip");
static_assert(offsetof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip, EntryPoint) == 0x000000, "Member 'WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip, K2Node_CustomEvent_MaxDesiredWidth) == 0x000004, "Member 'WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip::K2Node_CustomEvent_MaxDesiredWidth' has a wrong offset!");
static_assert(offsetof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip, K2Node_CustomEvent_TooltipContent) == 0x000008, "Member 'WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip::K2Node_CustomEvent_TooltipContent' has a wrong offset!");
static_assert(offsetof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip, CallFunc_AddChild_ReturnValue) == 0x000018, "Member 'WB_ToolTip_C_ExecuteUbergraph_WB_ToolTip::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WB_ToolTip.WB_ToolTip_C.SetTooltipContent
// 0x0008 (0x0008 - 0x0000)
struct WB_ToolTip_C_SetTooltipContent final
{
public:
	class UUserWidget*                            ToolTipContent_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ToolTip_C_SetTooltipContent) == 0x000008, "Wrong alignment on WB_ToolTip_C_SetTooltipContent");
static_assert(sizeof(WB_ToolTip_C_SetTooltipContent) == 0x000008, "Wrong size on WB_ToolTip_C_SetTooltipContent");
static_assert(offsetof(WB_ToolTip_C_SetTooltipContent, ToolTipContent_0) == 0x000000, "Member 'WB_ToolTip_C_SetTooltipContent::ToolTipContent_0' has a wrong offset!");

// Function WB_ToolTip.WB_ToolTip_C.UpdateWidth
// 0x0004 (0x0004 - 0x0000)
struct WB_ToolTip_C_UpdateWidth final
{
public:
	float                                         MaxDesiredWidth;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ToolTip_C_UpdateWidth) == 0x000004, "Wrong alignment on WB_ToolTip_C_UpdateWidth");
static_assert(sizeof(WB_ToolTip_C_UpdateWidth) == 0x000004, "Wrong size on WB_ToolTip_C_UpdateWidth");
static_assert(offsetof(WB_ToolTip_C_UpdateWidth, MaxDesiredWidth) == 0x000000, "Member 'WB_ToolTip_C_UpdateWidth::MaxDesiredWidth' has a wrong offset!");

}

