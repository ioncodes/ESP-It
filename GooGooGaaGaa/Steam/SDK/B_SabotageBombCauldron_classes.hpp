#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SabotageBombCauldron

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_SabotageBompCauldronState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SabotageBombCauldron.B_SabotageBombCauldron_C
// 0x0040 (0x02D0 - 0x0290)
class AB_SabotageBombCauldron_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Fluid;                                          // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Fill;                                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lightshaft;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Cauldron;                                       // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_SabotageBompCauldronState                   State;                                             // 0x02C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          Stopped;                                           // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Disarm();
	void ExecuteUbergraph_B_SabotageBombCauldron(int32 EntryPoint);
	void OnRep_State();
	void ReceiveBeginPlay();
	void UpdateMaterials();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SabotageBombCauldron_C">();
	}
	static class AB_SabotageBombCauldron_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SabotageBombCauldron_C>();
	}
};
static_assert(alignof(AB_SabotageBombCauldron_C) == 0x000008, "Wrong alignment on AB_SabotageBombCauldron_C");
static_assert(sizeof(AB_SabotageBombCauldron_C) == 0x0002D0, "Wrong size on AB_SabotageBombCauldron_C");
static_assert(offsetof(AB_SabotageBombCauldron_C, UberGraphFrame) == 0x000290, "Member 'AB_SabotageBombCauldron_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, SM_Fluid) == 0x000298, "Member 'AB_SabotageBombCauldron_C::SM_Fluid' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, Fill) == 0x0002A0, "Member 'AB_SabotageBombCauldron_C::Fill' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, Lightshaft) == 0x0002A8, "Member 'AB_SabotageBombCauldron_C::Lightshaft' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, Sphere) == 0x0002B0, "Member 'AB_SabotageBombCauldron_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, SM_Cauldron) == 0x0002B8, "Member 'AB_SabotageBombCauldron_C::SM_Cauldron' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, DefaultSceneRoot) == 0x0002C0, "Member 'AB_SabotageBombCauldron_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, State) == 0x0002C8, "Member 'AB_SabotageBombCauldron_C::State' has a wrong offset!");
static_assert(offsetof(AB_SabotageBombCauldron_C, Stopped) == 0x0002C9, "Member 'AB_SabotageBombCauldron_C::Stopped' has a wrong offset!");

}

