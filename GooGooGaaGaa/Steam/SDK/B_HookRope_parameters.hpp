#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HookRope

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_HookRope.B_HookRope_C.ExecuteUbergraph_B_HookRope
// 0x0018 (0x0018 - 0x0000)
struct B_HookRope_C_ExecuteUbergraph_B_HookRope final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookRope_C_ExecuteUbergraph_B_HookRope) == 0x000008, "Wrong alignment on B_HookRope_C_ExecuteUbergraph_B_HookRope");
static_assert(sizeof(B_HookRope_C_ExecuteUbergraph_B_HookRope) == 0x000018, "Wrong size on B_HookRope_C_ExecuteUbergraph_B_HookRope");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, EntryPoint) == 0x000000, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000C, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, CallFunc_IsValid_ReturnValue_1) == 0x00000D, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, CallFunc_IsValid_ReturnValue_2) == 0x00000E, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_ExecuteUbergraph_B_HookRope, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_HookRope_C_ExecuteUbergraph_B_HookRope::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function B_HookRope.B_HookRope_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_HookRope_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookRope_C_ReceiveTick) == 0x000004, "Wrong alignment on B_HookRope_C_ReceiveTick");
static_assert(sizeof(B_HookRope_C_ReceiveTick) == 0x000004, "Wrong size on B_HookRope_C_ReceiveTick");
static_assert(offsetof(B_HookRope_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_HookRope_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_HookRope.B_HookRope_C.UpdateRopeTransform
// 0x01D0 (0x01D0 - 0x0000)
struct B_HookRope_C_UpdateRopeTransform final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OwnerLocation;                                     // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0058(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HookRope_C_UpdateRopeTransform) == 0x000008, "Wrong alignment on B_HookRope_C_UpdateRopeTransform");
static_assert(sizeof(B_HookRope_C_UpdateRopeTransform) == 0x0001D0, "Wrong size on B_HookRope_C_UpdateRopeTransform");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, Target) == 0x000000, "Member 'B_HookRope_C_UpdateRopeTransform::Target' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, TargetLocation) == 0x000008, "Member 'B_HookRope_C_UpdateRopeTransform::TargetLocation' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, OwnerLocation) == 0x000020, "Member 'B_HookRope_C_UpdateRopeTransform::OwnerLocation' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000058, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000150, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000158, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_FindLookAtRotation_ReturnValue) == 0x000170, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_VSize_ReturnValue) == 0x000188, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000190, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000198, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_MakeVector_ReturnValue) == 0x0001A0, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HookRope_C_UpdateRopeTransform, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001B8, "Member 'B_HookRope_C_UpdateRopeTransform::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");

}

