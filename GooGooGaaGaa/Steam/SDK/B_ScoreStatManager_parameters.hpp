#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ScoreStatManager

#include "Basic.hpp"

#include "EWitchScoreStat_structs.hpp"
#include "EHunterScoreStat_structs.hpp"
#include "SCalculatedScoreStat_structs.hpp"


namespace SDK::Params
{

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddAverageHunterScoreStat
// 0x0018 (0x0018 - 0x0000)
struct B_ScoreStatManager_C_AddAverageHunterScoreStat final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_AddAverageHunterScoreStat) == 0x000004, "Wrong alignment on B_ScoreStatManager_C_AddAverageHunterScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_AddAverageHunterScoreStat) == 0x000018, "Wrong size on B_ScoreStatManager_C_AddAverageHunterScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, Count) == 0x000004, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::Count' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, CallFunc_Map_Find_Value) == 0x000008, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageHunterScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000014, "Member 'B_ScoreStatManager_C_AddAverageHunterScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddAverageWitchScoreStat
// 0x0018 (0x0018 - 0x0000)
struct B_ScoreStatManager_C_AddAverageWitchScoreStat final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Count;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_AddAverageWitchScoreStat) == 0x000004, "Wrong alignment on B_ScoreStatManager_C_AddAverageWitchScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_AddAverageWitchScoreStat) == 0x000018, "Wrong size on B_ScoreStatManager_C_AddAverageWitchScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, Count) == 0x000004, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::Count' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, CallFunc_Map_Find_Value) == 0x000008, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddAverageWitchScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000014, "Member 'B_ScoreStatManager_C_AddAverageWitchScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddFromOtherStatManager
// 0x00D0 (0x00D0 - 0x0000)
struct B_ScoreStatManager_C_AddFromOtherStatManager final
{
public:
	class UB_ScoreStatManager_C*                  SourceStatManager;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWitchScoreStat>                       CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	EWitchScoreStat                               CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHunterScoreStat>                      CallFunc_Map_Keys_Keys_1;                          // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWitchScoreStat>                       CallFunc_Map_Keys_Keys_2;                          // 0x0070(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWitchScoreStat                               CallFunc_Array_Get_Item_1;                         // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHunterScoreStat                              CallFunc_Array_Get_Item_2;                         // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_2;                         // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHunterScoreStat>                      CallFunc_Map_Keys_Keys_3;                          // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHunterScoreStat                              CallFunc_Array_Get_Item_3;                         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_3;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_AddFromOtherStatManager) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_AddFromOtherStatManager");
static_assert(sizeof(B_ScoreStatManager_C_AddFromOtherStatManager) == 0x0000D0, "Wrong size on B_ScoreStatManager_C_AddFromOtherStatManager");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, SourceStatManager) == 0x000000, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::SourceStatManager' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Add_IntInt_ReturnValue_2) == 0x000028, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Add_IntInt_ReturnValue_3) == 0x000030, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_Value) == 0x000050, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_ReturnValue) == 0x000054, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Less_IntInt_ReturnValue) == 0x000055, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Keys_Keys_1) == 0x000058, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Length_ReturnValue_1) == 0x000068, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x00006C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Keys_Keys_2) == 0x000070, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Keys_Keys_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, Temp_int_Array_Index_Variable_3) == 0x000080, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Get_Item_1) == 0x000084, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Get_Item_2) == 0x000085, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_Value_1) == 0x000088, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_ReturnValue_1) == 0x000090, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_Value_2) == 0x000094, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_ReturnValue_2) == 0x000098, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A0, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Keys_Keys_3) == 0x0000A8, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Keys_Keys_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Length_ReturnValue_3) == 0x0000B8, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Array_Get_Item_3) == 0x0000BC, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000BD, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_Value_3) == 0x0000C0, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddFromOtherStatManager, CallFunc_Map_Find_ReturnValue_3) == 0x0000C8, "Member 'B_ScoreStatManager_C_AddFromOtherStatManager::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddHunterScoreStat
// 0x0030 (0x0030 - 0x0000)
struct B_ScoreStatManager_C_AddHunterScoreStat final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_AddHunterScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_AddHunterScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_AddHunterScoreStat) == 0x000030, "Wrong size on B_ScoreStatManager_C_AddHunterScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, Value) == 0x000008, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000010, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddHunterScoreStat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_ScoreStatManager_C_AddHunterScoreStat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.AddWitchScoreStat
// 0x0030 (0x0030 - 0x0000)
struct B_ScoreStatManager_C_AddWitchScoreStat final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_AddWitchScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_AddWitchScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_AddWitchScoreStat) == 0x000030, "Wrong size on B_ScoreStatManager_C_AddWitchScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, Value) == 0x000008, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000010, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_AddWitchScoreStat, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_ScoreStatManager_C_AddWitchScoreStat::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAllCalculatedStats
// 0x00A8 (0x00A8 - 0x0000)
struct B_ScoreStatManager_C_GetAllCalculatedStats final
{
public:
	TArray<struct FSCalculatedScoreStat>          CalculatedScoreStats;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSCalculatedScoreStat>          StoreStatsCalculated;                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCalculatedScoreStat>          CallFunc_GetCalculatedHunterStats_CalculatedScoreStats; // 0x0038(0x0010)(ReferenceParm)
	struct FSCalculatedScoreStat                  CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSCalculatedScoreStat>          CallFunc_GetCalculatedWitchStats_CalculatedScoreStats; // 0x0070(0x0010)(ReferenceParm)
	struct FSCalculatedScoreStat                  CallFunc_Array_Get_Item_1;                         // 0x0080(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetAllCalculatedStats) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetAllCalculatedStats");
static_assert(sizeof(B_ScoreStatManager_C_GetAllCalculatedStats) == 0x0000A8, "Wrong size on B_ScoreStatManager_C_GetAllCalculatedStats");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CalculatedScoreStats) == 0x000000, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CalculatedScoreStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, StoreStatsCalculated) == 0x000010, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::StoreStatsCalculated' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, Temp_int_Array_Index_Variable) == 0x000028, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_GetCalculatedHunterStats_CalculatedScoreStats) == 0x000038, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_GetCalculatedHunterStats_CalculatedScoreStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_GetCalculatedWitchStats_CalculatedScoreStats) == 0x000070, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_GetCalculatedWitchStats_CalculatedScoreStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Array_Add_ReturnValue_1) == 0x00009C, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAllCalculatedStats, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'B_ScoreStatManager_C_GetAllCalculatedStats::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAverageHunterScoreStat
// 0x0030 (0x0030 - 0x0000)
struct B_ScoreStatManager_C_GetAverageHunterScoreStat final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AverageValue;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHunterScoreStat_Stat;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetAverageHunterScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetAverageHunterScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_GetAverageHunterScoreStat) == 0x000030, "Wrong size on B_ScoreStatManager_C_GetAverageHunterScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, AverageValue) == 0x000008, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::AverageValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, CallFunc_GetHunterScoreStat_Stat) == 0x000010, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::CallFunc_GetHunterScoreStat_Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageHunterScoreStat, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_ScoreStatManager_C_GetAverageHunterScoreStat::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetAverageWitchScoreStat
// 0x0030 (0x0030 - 0x0000)
struct B_ScoreStatManager_C_GetAverageWitchScoreStat final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AverageValue;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWitchScoreStat_Stat;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetAverageWitchScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetAverageWitchScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_GetAverageWitchScoreStat) == 0x000030, "Wrong size on B_ScoreStatManager_C_GetAverageWitchScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, AverageValue) == 0x000008, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::AverageValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, CallFunc_GetWitchScoreStat_Stat) == 0x000010, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::CallFunc_GetWitchScoreStat_Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetAverageWitchScoreStat, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_ScoreStatManager_C_GetAverageWitchScoreStat::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetCalculatedHunterStats
// 0x00A0 (0x00A0 - 0x0000)
struct B_ScoreStatManager_C_GetCalculatedHunterStats final
{
public:
	TArray<struct FSCalculatedScoreStat>          CalculatedScoreStats;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSCalculatedScoreStat>          ScoreStatsCalculated;                              // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EHunterScoreStat>                      CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	EHunterScoreStat                              CallFunc_Array_Get_Item;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHunterValueToUseForCalculation_ValueToUse; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHunterValueToUseForCalculation_OriginalValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCalculatedScoreStat                  K2Node_MakeStruct_SCalculatedScoreStat;            // 0x0078(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetCalculatedHunterStats) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetCalculatedHunterStats");
static_assert(sizeof(B_ScoreStatManager_C_GetCalculatedHunterStats) == 0x0000A0, "Wrong size on B_ScoreStatManager_C_GetCalculatedHunterStats");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CalculatedScoreStats) == 0x000000, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CalculatedScoreStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, ScoreStatsCalculated) == 0x000010, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::ScoreStatsCalculated' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_GetHunterValueToUseForCalculation_ValueToUse) == 0x000048, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_GetHunterValueToUseForCalculation_ValueToUse' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_GetHunterValueToUseForCalculation_OriginalValue) == 0x000050, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_GetHunterValueToUseForCalculation_OriginalValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Map_Find_Value) == 0x000060, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, K2Node_MakeStruct_SCalculatedScoreStat) == 0x000078, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::K2Node_MakeStruct_SCalculatedScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, CallFunc_Array_Add_ReturnValue) == 0x000090, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast) == 0x000094, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedHunterStats, K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast) == 0x000098, "Member 'B_ScoreStatManager_C_GetCalculatedHunterStats::K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetCalculatedWitchStats
// 0x00A8 (0x00A8 - 0x0000)
struct B_ScoreStatManager_C_GetCalculatedWitchStats final
{
public:
	TArray<struct FSCalculatedScoreStat>          CalculatedScoreStats;                              // 0x0000(0x0010)(Parm, OutParm)
	double                                        ValueToUse;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSCalculatedScoreStat>          ScoreStatsCalculated;                              // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EWitchScoreStat>                       CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	EWitchScoreStat                               CallFunc_Array_Get_Item;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWitchValueToUseForCalculation_ValueToUse; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWitchValueToUseForCalculation_OriginalValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSCalculatedScoreStat                  K2Node_MakeStruct_SCalculatedScoreStat;            // 0x0080(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetCalculatedWitchStats) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetCalculatedWitchStats");
static_assert(sizeof(B_ScoreStatManager_C_GetCalculatedWitchStats) == 0x0000A8, "Wrong size on B_ScoreStatManager_C_GetCalculatedWitchStats");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CalculatedScoreStats) == 0x000000, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CalculatedScoreStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, ValueToUse) == 0x000010, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::ValueToUse' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, ScoreStatsCalculated) == 0x000018, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::ScoreStatsCalculated' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, Temp_int_Array_Index_Variable) == 0x000028, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_GetWitchValueToUseForCalculation_ValueToUse) == 0x000050, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_GetWitchValueToUseForCalculation_ValueToUse' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_GetWitchValueToUseForCalculation_OriginalValue) == 0x000058, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_GetWitchValueToUseForCalculation_OriginalValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Map_Find_Value) == 0x000068, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, K2Node_MakeStruct_SCalculatedScoreStat) == 0x000080, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::K2Node_MakeStruct_SCalculatedScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast) == 0x00009C, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::K2Node_MakeStruct_OriginalValue_13_F5D772C44A30F05237EFCA98D5D25D6C_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetCalculatedWitchStats, K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast) == 0x0000A0, "Member 'B_ScoreStatManager_C_GetCalculatedWitchStats::K2Node_MakeStruct_Score_17_38989E5A42B65CEBF6AFA3B482B5EBC0_ImplicitCast' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetHunterScoreStat
// 0x0020 (0x0020 - 0x0000)
struct B_ScoreStatManager_C_GetHunterScoreStat final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Stat;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetHunterScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetHunterScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_GetHunterScoreStat) == 0x000020, "Wrong size on B_ScoreStatManager_C_GetHunterScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterScoreStat, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetHunterScoreStat::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterScoreStat, Stat) == 0x000008, "Member 'B_ScoreStatManager_C_GetHunterScoreStat::Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterScoreStat, CallFunc_Map_Find_Value) == 0x000010, "Member 'B_ScoreStatManager_C_GetHunterScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterScoreStat, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'B_ScoreStatManager_C_GetHunterScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetHunterValueToUseForCalculation
// 0x0060 (0x0060 - 0x0000)
struct B_ScoreStatManager_C_GetHunterValueToUseForCalculation final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ValueToUse;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OriginalValue;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OriginValue;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetHunterScoreStat_Stat;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAverageHunterScoreStat_AverageValue;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetHunterValueToUseForCalculation");
static_assert(sizeof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation) == 0x000060, "Wrong size on B_ScoreStatManager_C_GetHunterValueToUseForCalculation");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, ValueToUse) == 0x000008, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::ValueToUse' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, OriginalValue) == 0x000010, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::OriginalValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, OriginValue) == 0x000018, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::OriginValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, Value) == 0x000020, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_GetHunterScoreStat_Stat) == 0x000028, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_GetHunterScoreStat_Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_GetAverageHunterScoreStat_AverageValue) == 0x000030, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_GetAverageHunterScoreStat_AverageValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_Map_Find_Value) == 0x000038, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_Map_Contains_ReturnValue) == 0x000041, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetHunterValueToUseForCalculation, CallFunc_Map_Contains_ReturnValue_1) == 0x000058, "Member 'B_ScoreStatManager_C_GetHunterValueToUseForCalculation::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetWitchScoreStat
// 0x0020 (0x0020 - 0x0000)
struct B_ScoreStatManager_C_GetWitchScoreStat final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Stat;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetWitchScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetWitchScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_GetWitchScoreStat) == 0x000020, "Wrong size on B_ScoreStatManager_C_GetWitchScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchScoreStat, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetWitchScoreStat::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchScoreStat, Stat) == 0x000008, "Member 'B_ScoreStatManager_C_GetWitchScoreStat::Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchScoreStat, CallFunc_Map_Find_Value) == 0x000010, "Member 'B_ScoreStatManager_C_GetWitchScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchScoreStat, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'B_ScoreStatManager_C_GetWitchScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.GetWitchValueToUseForCalculation
// 0x0060 (0x0060 - 0x0000)
struct B_ScoreStatManager_C_GetWitchValueToUseForCalculation final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ValueToUse;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OriginalValue;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        OriginValue;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWitchScoreStat_Stat;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAverageWitchScoreStat_AverageValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_GetWitchValueToUseForCalculation");
static_assert(sizeof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation) == 0x000060, "Wrong size on B_ScoreStatManager_C_GetWitchValueToUseForCalculation");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, ValueToUse) == 0x000008, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::ValueToUse' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, OriginalValue) == 0x000010, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::OriginalValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, OriginValue) == 0x000018, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::OriginValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, Value) == 0x000020, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_GetWitchScoreStat_Stat) == 0x000028, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_GetWitchScoreStat_Stat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_GetAverageWitchScoreStat_AverageValue) == 0x000030, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_GetAverageWitchScoreStat_AverageValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_Map_Find_Value) == 0x000038, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_Map_Contains_ReturnValue) == 0x000041, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_GetWitchValueToUseForCalculation, CallFunc_Map_Contains_ReturnValue_1) == 0x000058, "Member 'B_ScoreStatManager_C_GetWitchValueToUseForCalculation::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.IsRecordingStats
// 0x0003 (0x0003 - 0x0000)
struct B_ScoreStatManager_C_IsRecordingStats final
{
public:
	bool                                          IsRecordingStats_0;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_IsRecordingStats) == 0x000001, "Wrong alignment on B_ScoreStatManager_C_IsRecordingStats");
static_assert(sizeof(B_ScoreStatManager_C_IsRecordingStats) == 0x000003, "Wrong size on B_ScoreStatManager_C_IsRecordingStats");
static_assert(offsetof(B_ScoreStatManager_C_IsRecordingStats, IsRecordingStats_0) == 0x000000, "Member 'B_ScoreStatManager_C_IsRecordingStats::IsRecordingStats_0' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_IsRecordingStats, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'B_ScoreStatManager_C_IsRecordingStats::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_IsRecordingStats, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x000002, "Member 'B_ScoreStatManager_C_IsRecordingStats::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.UpdateAverageHunterScoreStat
// 0x0028 (0x0028 - 0x0000)
struct B_ScoreStatManager_C_UpdateAverageHunterScoreStat final
{
public:
	EHunterScoreStat                              HunterScoreStat;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_UpdateAverageHunterScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat) == 0x000028, "Wrong size on B_ScoreStatManager_C_UpdateAverageHunterScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, HunterScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::HunterScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, Value) == 0x000008, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000010, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, CallFunc_MakeLiteralInt_ReturnValue) == 0x000014, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageHunterScoreStat, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_UpdateAverageHunterScoreStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_ScoreStatManager.B_ScoreStatManager_C.UpdateAverageWitchScoreStat
// 0x0028 (0x0028 - 0x0000)
struct B_ScoreStatManager_C_UpdateAverageWitchScoreStat final
{
public:
	EWitchScoreStat                               WitchScoreStat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecordingStats_IsRecordingStats;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat) == 0x000008, "Wrong alignment on B_ScoreStatManager_C_UpdateAverageWitchScoreStat");
static_assert(sizeof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat) == 0x000028, "Wrong size on B_ScoreStatManager_C_UpdateAverageWitchScoreStat");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, WitchScoreStat) == 0x000000, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::WitchScoreStat' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, Value) == 0x000008, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, CallFunc_IsRecordingStats_IsRecordingStats) == 0x000010, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::CallFunc_IsRecordingStats_IsRecordingStats' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, CallFunc_MakeLiteralInt_ReturnValue) == 0x000014, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ScoreStatManager_C_UpdateAverageWitchScoreStat, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'B_ScoreStatManager_C_UpdateAverageWitchScoreStat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

}

