#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectivePlayerController

#include "Basic.hpp"

#include "B_ObjectivePlayerController_classes.hpp"
#include "B_ObjectivePlayerController_parameters.hpp"


namespace SDK
{

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ExecuteUbergraph_B_ObjectivePlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ObjectivePlayerController_C::ExecuteUbergraph_B_ObjectivePlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "ExecuteUbergraph_B_ObjectivePlayerController");

	Params::B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.GetObjectivePlayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AB_ObjectivePlayerState_C*        ObjectivePlayerState_0                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ObjectivePlayerController_C::GetObjectivePlayerState(class AB_ObjectivePlayerState_C** ObjectivePlayerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "GetObjectivePlayerState");

	Params::B_ObjectivePlayerController_C_GetObjectivePlayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ObjectivePlayerState_0 != nullptr)
		*ObjectivePlayerState_0 = Parms.ObjectivePlayerState_0;
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.LoadPropsAndCauldrons
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AB_ObjectivePlayerController_C::LoadPropsAndCauldrons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "LoadPropsAndCauldrons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.NotifyMatchRunningKick
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AB_ObjectivePlayerController_C::NotifyMatchRunningKick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "NotifyMatchRunningKick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ObjectivePlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "ReceiveTick");

	Params::B_ObjectivePlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SelectObjectiveTeam
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ObjectiveTeam                         ObjectiveTeam                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ObjectivePlayerController_C::SelectObjectiveTeam(E_ObjectiveTeam ObjectiveTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "SelectObjectiveTeam");

	Params::B_ObjectivePlayerController_C_SelectObjectiveTeam Parms{};

	Parms.ObjectiveTeam = ObjectiveTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SetObjectiveTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ObjectiveTeam                         ObjectiveTeam                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ObjectivePlayerController_C::SetObjectiveTeam(E_ObjectiveTeam ObjectiveTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "SetObjectiveTeam");

	Params::B_ObjectivePlayerController_C_SetObjectiveTeam Parms{};

	Parms.ObjectiveTeam = ObjectiveTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SetReadyObjectiveTeamSelection
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_ObjectivePlayerController_C::SetReadyObjectiveTeamSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "SetReadyObjectiveTeamSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SurrenderServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_ObjectivePlayerController_C::SurrenderServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "SurrenderServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ToggleTeamSelectionReady
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ObjectivePlayerController_C::ToggleTeamSelectionReady()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ObjectivePlayerController_C", "ToggleTeamSelectionReady");

	UObject::ProcessEvent(Func, nullptr);
}

}

