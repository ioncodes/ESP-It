#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TradeWithPlayer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_RecipeInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "E_QuestionAnswer_structs.hpp"
#include "S_ItemInfo_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.AddTradeItem
// 0x0038 (0x0038 - 0x0000)
struct WB_TradeWithPlayer_C_AddTradeItem final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountToTrade;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTradingItem                           NewItem;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTradingItem                           K2Node_MakeStruct_TradingItem;                     // 0x0020(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTradingItem                           K2Node_MakeStruct_TradingItem_1;                   // 0x002C(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_AddTradeItem) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_AddTradeItem");
static_assert(sizeof(WB_TradeWithPlayer_C_AddTradeItem) == 0x000038, "Wrong size on WB_TradeWithPlayer_C_AddTradeItem");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, ItemId) == 0x000000, "Member 'WB_TradeWithPlayer_C_AddTradeItem::ItemId' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CountToTrade) == 0x000004, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CountToTrade' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, NewItem) == 0x000008, "Member 'WB_TradeWithPlayer_C_AddTradeItem::NewItem' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_Array_Length_ReturnValue_1) == 0x000018, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00001C, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, K2Node_MakeStruct_TradingItem) == 0x000020, "Member 'WB_TradeWithPlayer_C_AddTradeItem::K2Node_MakeStruct_TradingItem' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, K2Node_MakeStruct_TradingItem_1) == 0x00002C, "Member 'WB_TradeWithPlayer_C_AddTradeItem::K2Node_MakeStruct_TradingItem_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AddTradeItem, CallFunc_Array_Add_ReturnValue_1) == 0x000034, "Member 'WB_TradeWithPlayer_C_AddTradeItem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.AskForItemCount
// 0x0018 (0x0018 - 0x0000)
struct WB_TradeWithPlayer_C_AskForItemCount final
{
public:
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxValue_InValue_ImplicitCast;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_AskForItemCount) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_AskForItemCount");
static_assert(sizeof(WB_TradeWithPlayer_C_AskForItemCount) == 0x000018, "Wrong size on WB_TradeWithPlayer_C_AskForItemCount");
static_assert(offsetof(WB_TradeWithPlayer_C_AskForItemCount, CallFunc_IsGamepadMode_ReturnValue) == 0x000000, "Member 'WB_TradeWithPlayer_C_AskForItemCount::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AskForItemCount, CallFunc_SelectInt_ReturnValue) == 0x000004, "Member 'WB_TradeWithPlayer_C_AskForItemCount::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AskForItemCount, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WB_TradeWithPlayer_C_AskForItemCount::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_AskForItemCount, CallFunc_SetMaxValue_InValue_ImplicitCast) == 0x000010, "Member 'WB_TradeWithPlayer_C_AskForItemCount::CallFunc_SetMaxValue_InValue_ImplicitCast' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(sizeof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature) == 0x000018, "Wrong size on WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature");
static_assert(offsetof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature, CommitMethod) == 0x000010, "Member 'WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_InputField_K2Node_ComponentBoundEvent_4_OnEditableTextBoxCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'WB_TradeWithPlayer_C_BndEvt__WB_TradeWithPlayer_ValueSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.ConfirmCountChoice
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeWithPlayer_C_ConfirmCountChoice final
{
public:
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_ConfirmCountChoice) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_ConfirmCountChoice");
static_assert(sizeof(WB_TradeWithPlayer_C_ConfirmCountChoice) == 0x000010, "Wrong size on WB_TradeWithPlayer_C_ConfirmCountChoice");
static_assert(offsetof(WB_TradeWithPlayer_C_ConfirmCountChoice, CallFunc_GetValue_ReturnValue) == 0x000000, "Member 'WB_TradeWithPlayer_C_ConfirmCountChoice::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ConfirmCountChoice, CallFunc_Round_ReturnValue) == 0x000004, "Member 'WB_TradeWithPlayer_C_ConfirmCountChoice::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ConfirmCountChoice, CallFunc_Round_A_ImplicitCast) == 0x000008, "Member 'WB_TradeWithPlayer_C_ConfirmCountChoice::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.ExecuteUbergraph_WB_TradeWithPlayer
// 0x02F0 (0x02F0 - 0x0000)
struct WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTradingItem>                   K2Node_CustomEvent_inventory_1;                    // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FTradingItem>                   K2Node_CustomEvent_inventory;                      // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<struct FTradingItem>& Inventory)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTradingItem>                   Temp_struct_Variable;                              // 0x0038(0x0010)(ReferenceParm)
	TDelegate<void(E_QuestionAnswer Answer)>      K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_QuestionDialog_C*                   CallFunc_ShowQuestionDialog_QuestionDialog;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineFriendRef*                       K2Node_CustomEvent_Friend;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUserId_ReturnValue;                    // 0x00E8(0x0030)(HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0120(0x0010)()
	class USendTradeRequestProxy*                 CallFunc_SendTradeRequest_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<struct FTradingItem>& Inventory)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_QuestionAnswer                              K2Node_CustomEvent_Answer;                         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0160(0x0010)()
	struct FUniqueNetIdRepl                       CallFunc_GetUserId_ReturnValue_1;                  // 0x0170(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class URequestPlayerInventoryProxy*           CallFunc_RequestPlayerInventory_ReturnValue;       // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01C8(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0220(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0238(0x0010)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0248(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIMenuScreen_C>        CallFunc_OnBack_self_CastInput;                    // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        CallFunc_OnSpecialAction_self_CastInput;           // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0290(0x0010)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Text_ToInt_ReturnValue;                   // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x02B8(0x0010)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast_1;                   // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Round_A_ImplicitCast_2;                   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer");
static_assert(sizeof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer) == 0x0002F0, "Wrong size on WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, EntryPoint) == 0x000000, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CustomEvent_inventory_1) == 0x000008, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CustomEvent_inventory_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CustomEvent_inventory) == 0x000018, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CustomEvent_inventory' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, Temp_struct_Variable) == 0x000038, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000060, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_AsB_Game_Instance) == 0x000070, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000080, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetGameInstance_ReturnValue_1) == 0x000088, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_ShowQuestionDialog_QuestionDialog) == 0x000090, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_ShowQuestionDialog_QuestionDialog' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000098, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000A8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000B0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000BC, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CustomEvent_Friend) == 0x0000D0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CustomEvent_Friend' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000D8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetUserId_ReturnValue) == 0x0000E8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetUserId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_ComponentBoundEvent_Value) == 0x000118, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_ReturnValue) == 0x00011C, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_IntToText_ReturnValue) == 0x000120, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_SendTradeRequest_ReturnValue) == 0x000130, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_SendTradeRequest_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000140, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000144, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000145, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_BooleanOR_ReturnValue) == 0x000146, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000148, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_CustomEvent_Answer) == 0x000158, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_CustomEvent_Answer' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_SwitchEnum_CmpSuccess) == 0x000159, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_MakeLiteralText_ReturnValue) == 0x000160, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetUserId_ReturnValue_1) == 0x000170, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetUserId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_TextToString_ReturnValue) == 0x0001A0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_RequestPlayerInventory_ReturnValue) == 0x0001B0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_RequestPlayerInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetDisplayName_ReturnValue) == 0x0001B8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_StringToText_ReturnValue) == 0x0001C8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_MakeStruct_FormatArgumentData) == 0x0001D8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_MakeArray_Array) == 0x000220, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Format_ReturnValue) == 0x000238, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000248, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000258, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_GetIsEnabled_ReturnValue) == 0x000268, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_OnBack_self_CastInput) == 0x000270, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_OnBack_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_OnSpecialAction_self_CastInput) == 0x000280, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_OnSpecialAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_ComponentBoundEvent_Text) == 0x000290, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, K2Node_ComponentBoundEvent_CommitMethod) == 0x0002A0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Text_ToInt_ReturnValue) == 0x0002A4, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Text_ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_ReturnValue_1) == 0x0002A8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_ReturnValue_2) == 0x0002AC, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Clamp_ReturnValue) == 0x0002B0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0002B8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0002C8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_A_ImplicitCast) == 0x0002D0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_A_ImplicitCast_1) == 0x0002D8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_Round_A_ImplicitCast_2) == 0x0002E0, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_Round_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer, CallFunc_SetValue_InValue_ImplicitCast) == 0x0002E8, "Member 'WB_TradeWithPlayer_C_ExecuteUbergraph_WB_TradeWithPlayer::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_TradeWithPlayer_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_GetInitialFocusWidget");
static_assert(sizeof(WB_TradeWithPlayer_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_TradeWithPlayer_C_GetInitialFocusWidget");
static_assert(offsetof(WB_TradeWithPlayer_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_TradeWithPlayer_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.GetReceivingItems
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeWithPlayer_C_GetReceivingItems final
{
public:
	TArray<struct FTradingItem>                   ReceivingItems_0;                                  // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(WB_TradeWithPlayer_C_GetReceivingItems) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_GetReceivingItems");
static_assert(sizeof(WB_TradeWithPlayer_C_GetReceivingItems) == 0x000010, "Wrong size on WB_TradeWithPlayer_C_GetReceivingItems");
static_assert(offsetof(WB_TradeWithPlayer_C_GetReceivingItems, ReceivingItems_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_GetReceivingItems::ReceivingItems_0' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.GetSelectedIndex
// 0x0020 (0x0020 - 0x0000)
struct WB_TradeWithPlayer_C_GetSelectedIndex final
{
public:
	class UWB_TradePreview_C*                     PreviewTIleView;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedIndex;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_BP_GetSelectedItem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexForItem_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_GetSelectedIndex) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_GetSelectedIndex");
static_assert(sizeof(WB_TradeWithPlayer_C_GetSelectedIndex) == 0x000020, "Wrong size on WB_TradeWithPlayer_C_GetSelectedIndex");
static_assert(offsetof(WB_TradeWithPlayer_C_GetSelectedIndex, PreviewTIleView) == 0x000000, "Member 'WB_TradeWithPlayer_C_GetSelectedIndex::PreviewTIleView' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_GetSelectedIndex, SelectedIndex) == 0x000008, "Member 'WB_TradeWithPlayer_C_GetSelectedIndex::SelectedIndex' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_GetSelectedIndex, CallFunc_BP_GetSelectedItem_ReturnValue) == 0x000010, "Member 'WB_TradeWithPlayer_C_GetSelectedIndex::CallFunc_BP_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_GetSelectedIndex, CallFunc_GetIndexForItem_ReturnValue) == 0x000018, "Member 'WB_TradeWithPlayer_C_GetSelectedIndex::CallFunc_GetIndexForItem_ReturnValue' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.GetSendingItems
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeWithPlayer_C_GetSendingItems final
{
public:
	TArray<struct FTradingItem>                   SendingItems_0;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(WB_TradeWithPlayer_C_GetSendingItems) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_GetSendingItems");
static_assert(sizeof(WB_TradeWithPlayer_C_GetSendingItems) == 0x000010, "Wrong size on WB_TradeWithPlayer_C_GetSendingItems");
static_assert(offsetof(WB_TradeWithPlayer_C_GetSendingItems, SendingItems_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_GetSendingItems::SendingItems_0' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.InitializeTrade
// 0x0008 (0x0008 - 0x0000)
struct WB_TradeWithPlayer_C_InitializeTrade final
{
public:
	class UOnlineFriendRef*                       Friend;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_InitializeTrade) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_InitializeTrade");
static_assert(sizeof(WB_TradeWithPlayer_C_InitializeTrade) == 0x000008, "Wrong size on WB_TradeWithPlayer_C_InitializeTrade");
static_assert(offsetof(WB_TradeWithPlayer_C_InitializeTrade, Friend) == 0x000000, "Member 'WB_TradeWithPlayer_C_InitializeTrade::Friend' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.InitOtherPlayerItemsAndRecipes
// 0x0180 (0x0180 - 0x0000)
struct WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes final
{
public:
	TArray<struct FTradingItem>                   Inventory;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 AlreadyDoneId;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTradingItem                           CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemInfo                            CallFunc_GetSkinItem_ReturnValue;                  // 0x0058(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetSkinItem_Found;                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RecipeInfo                          CallFunc_GetRecipe_ReturnValue;                    // 0x0100(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes");
static_assert(sizeof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes) == 0x000180, "Wrong size on WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, Inventory) == 0x000000, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::Inventory' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, AlreadyDoneId) == 0x000010, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::AlreadyDoneId' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, Temp_int_Array_Index_Variable) == 0x000024, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Get_Item) == 0x00002C, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, K2Node_DynamicCast_AsB_Game_Instance) == 0x000048, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Contains_ReturnValue) == 0x000051, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_GetSkinItem_ReturnValue) == 0x000058, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_GetSkinItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_GetSkinItem_Found) == 0x0000D0, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_GetSkinItem_Found' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Add_ReturnValue_1) == 0x0000D8, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000E0, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Add_ReturnValue_2) == 0x0000E8, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0000F0, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, K2Node_DynamicCast_bSuccess_1) == 0x0000F8, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_GetRecipe_ReturnValue) == 0x000100, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_GetRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes, CallFunc_Array_Add_ReturnValue_3) == 0x000178, "Member 'WB_TradeWithPlayer_C_InitOtherPlayerItemsAndRecipes::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToInventory
// 0x01C0 (0x01C0 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToInventory final
{
public:
	class UWB_TradePreview_C*                     SourcePreview;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        ClostestWidgetDistance;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ClosestWidget;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TargetWidgets;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector2D                              SelectedSourcePosition;                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    SourceWidgets;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x0050(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0080(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	TScriptInterface<class IUserObjectListEntry>  K2Node_DynamicCast_AsUser_Object_List_Entry;       // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListItemSelected_ReturnValue;           // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUserObjectListEntry>  K2Node_DynamicCast_AsUser_Object_List_Entry_1;     // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetListItemObject_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0134(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition_1;          // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition_1;       // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue_1;   // 0x01A0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToInventory) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToInventory");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToInventory) == 0x0001C0, "Wrong size on WB_TradeWithPlayer_C_NavigateToInventory");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, SourcePreview) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::SourcePreview' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, ClostestWidgetDistance) == 0x000008, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::ClostestWidgetDistance' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, ClosestWidget) == 0x000010, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::ClosestWidget' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, TargetWidgets) == 0x000018, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::TargetWidgets' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, SelectedSourcePosition) == 0x000028, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::SelectedSourcePosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, SourceWidgets) == 0x000038, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::SourceWidgets' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, Temp_int_Array_Index_Variable) == 0x000048, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x000050, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, Temp_bool_True_if_break_was_hit_Variable) == 0x000068, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, Temp_int_Array_Index_Variable_1) == 0x00006C, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Array_Get_Item) == 0x000078, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetCachedGeometry_ReturnValue) == 0x000080, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, K2Node_DynamicCast_AsUser_Object_List_Entry) == 0x0000B8, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::K2Node_DynamicCast_AsUser_Object_List_Entry' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_LocalToViewport_PixelPosition) == 0x0000D0, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_LocalToViewport_ViewportPosition) == 0x0000E0, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_IsListItemSelected_ReturnValue) == 0x0000F0, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_IsListItemSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_BooleanAND_ReturnValue) == 0x0000F9, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetNumItems_ReturnValue) == 0x0000FC, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000100, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, K2Node_DynamicCast_AsUser_Object_List_Entry_1) == 0x000108, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::K2Node_DynamicCast_AsUser_Object_List_Entry_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetListItemObject_ReturnValue) == 0x000120, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetListItemObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Array_Get_Item_1) == 0x000128, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000130, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000134, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_LocalToViewport_PixelPosition_1) == 0x000170, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_LocalToViewport_PixelPosition_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_LocalToViewport_ViewportPosition_1) == 0x000180, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_LocalToViewport_ViewportPosition_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Distance2D_ReturnValue) == 0x000190, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000198, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_GetDisplayedEntryWidgets_ReturnValue_1) == 0x0001A0, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_GetDisplayedEntryWidgets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, Temp_int_Loop_Counter_Variable_1) == 0x0001B0, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B4, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001B8, "Member 'WB_TradeWithPlayer_C_NavigateToInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToInventoryFromReceive
// 0x0001 (0x0001 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToInventoryFromReceive final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToInventoryFromReceive) == 0x000001, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToInventoryFromReceive");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToInventoryFromReceive) == 0x000001, "Wrong size on WB_TradeWithPlayer_C_NavigateToInventoryFromReceive");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromReceive, Navigation_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromReceive::Navigation_0' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToInventoryFromSend
// 0x0048 (0x0048 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToInventoryFromSend final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ClostestWidgetDistance;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ClosestWidget;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    TargetWidgets;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector2D                              SelectedSourcePosition;                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    SourceWidgets;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToInventoryFromSend");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend) == 0x000048, "Wrong size on WB_TradeWithPlayer_C_NavigateToInventoryFromSend");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, Navigation_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, ClostestWidgetDistance) == 0x000008, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::ClostestWidgetDistance' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, ClosestWidget) == 0x000010, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::ClosestWidget' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, TargetWidgets) == 0x000018, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::TargetWidgets' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, SelectedSourcePosition) == 0x000028, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::SelectedSourcePosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToInventoryFromSend, SourceWidgets) == 0x000038, "Member 'WB_TradeWithPlayer_C_NavigateToInventoryFromSend::SourceWidgets' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToPreview
// 0x0100 (0x0100 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToPreview final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    DispalyedWIdgets;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_1;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x003C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUserObjectListEntry>  K2Node_DynamicCast_AsUser_Object_List_Entry;       // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsListItemSelected_ReturnValue;           // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUserWidget*>                    CallFunc_GetDisplayedEntryWidgets_ReturnValue;     // 0x00F0(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToPreview) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToPreview");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToPreview) == 0x000100, "Wrong size on WB_TradeWithPlayer_C_NavigateToPreview");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, Navigation_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, DispalyedWIdgets) == 0x000008, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::DispalyedWIdgets' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_GetNumItems_ReturnValue) == 0x000024, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_GetNumItems_ReturnValue_1) == 0x000028, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_GetNumItems_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Greater_IntInt_ReturnValue) == 0x00002C, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00002D, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_GetCachedGeometry_ReturnValue) == 0x00003C, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_LocalToViewport_PixelPosition) == 0x000078, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_LocalToViewport_ViewportPosition) == 0x000088, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_BreakVector2D_X) == 0x000098, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_BreakVector2D_Y) == 0x0000A0, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, K2Node_DynamicCast_AsUser_Object_List_Entry) == 0x0000A8, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::K2Node_DynamicCast_AsUser_Object_List_Entry' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_IsListItemSelected_ReturnValue) == 0x0000B9, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_IsListItemSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_GetViewportSize_ReturnValue) == 0x0000C0, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_BreakVector2D_X_1) == 0x0000D0, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_BreakVector2D_Y_1) == 0x0000D8, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToPreview, CallFunc_GetDisplayedEntryWidgets_ReturnValue) == 0x0000F0, "Member 'WB_TradeWithPlayer_C_NavigateToPreview::CallFunc_GetDisplayedEntryWidgets_ReturnValue' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToReceivePreview
// 0x0034 (0x0034 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToReceivePreview final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexToSelect;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_1;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_1;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumItems_ReturnValue_2;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToReceivePreview) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToReceivePreview");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToReceivePreview) == 0x000034, "Wrong size on WB_TradeWithPlayer_C_NavigateToReceivePreview");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, Navigation_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, IndexToSelect) == 0x000004, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::IndexToSelect' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_GetSelectedIndex_SelectedIndex) == 0x00000C, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_GetNumItems_ReturnValue) == 0x000010, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_Percent_IntInt_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_GetSelectedIndex_SelectedIndex_1) == 0x00001C, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_GetSelectedIndex_SelectedIndex_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_GetNumItems_ReturnValue_1) == 0x000020, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_GetNumItems_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000024, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_GetNumItems_ReturnValue_2) == 0x00002C, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_GetNumItems_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToReceivePreview, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000030, "Member 'WB_TradeWithPlayer_C_NavigateToReceivePreview::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.NavigateToSendPreview
// 0x0074 (0x0074 - 0x0000)
struct WB_TradeWithPlayer_C_NavigateToSendPreview final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexToSelect;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_1;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_2;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_3;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_1;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_3;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_4;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_4;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_2;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedIndex_SelectedIndex_5;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_5;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_3;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumItems_ReturnValue_4;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_NavigateToSendPreview) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_NavigateToSendPreview");
static_assert(sizeof(WB_TradeWithPlayer_C_NavigateToSendPreview) == 0x000074, "Wrong size on WB_TradeWithPlayer_C_NavigateToSendPreview");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, Navigation_0) == 0x000000, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, IndexToSelect) == 0x000004, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::IndexToSelect' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex) == 0x00000C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue) == 0x000010, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetNumItems_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetNumItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex_1) == 0x000018, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex_2) == 0x00001C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000020, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue_2) == 0x000024, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex_3) == 0x000030, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetNumItems_ReturnValue_1) == 0x000034, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetNumItems_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue_3) == 0x000038, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex_4) == 0x000040, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex_4' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000044, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue_4) == 0x000048, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetNumItems_ReturnValue_2) == 0x000050, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetNumItems_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetSelectedIndex_SelectedIndex_5) == 0x000054, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetSelectedIndex_SelectedIndex_5' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Percent_IntInt_ReturnValue_5) == 0x000058, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Percent_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Add_IntInt_ReturnValue_3) == 0x00005C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetNumItems_ReturnValue_3) == 0x000060, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetNumItems_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000064, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_GetNumItems_ReturnValue_4) == 0x00006C, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_GetNumItems_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_NavigateToSendPreview, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000070, "Member 'WB_TradeWithPlayer_C_NavigateToSendPreview::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.OnAnalogValueChanged
// 0x0438 (0x0438 - 0x0000)
struct WB_TradeWithPlayer_C_OnAnalogValueChanged final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FAnalogInputEvent                      InAnalogInputEvent;                                // 0x0038(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnAnalogValueChanged_ReturnValue;         // 0x0138(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnalogValue_ReturnValue;               // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnalogValue_ReturnValue_1;             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FE[0x2];                                      // 0x01FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0200(0x00B8)()
	struct FKeyEvent                              CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue; // 0x02B8(0x0040)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x02F8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0320(0x00B8)()
	double                                        CallFunc_FMin_ReturnValue;                         // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_OnAnalogValueChanged) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_OnAnalogValueChanged");
static_assert(sizeof(WB_TradeWithPlayer_C_OnAnalogValueChanged) == 0x000438, "Wrong size on WB_TradeWithPlayer_C_OnAnalogValueChanged");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, MyGeometry) == 0x000000, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, InAnalogInputEvent) == 0x000038, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::InAnalogInputEvent' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, ReturnValue) == 0x000080, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_OnAnalogValueChanged_ReturnValue) == 0x000138, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_OnAnalogValueChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Not_PreBool_ReturnValue) == 0x0001F0, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetAnalogValue_ReturnValue) == 0x0001F4, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetAnalogValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetAnalogValue_ReturnValue_1) == 0x0001F8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetAnalogValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0001FC, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001FD, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Handled_ReturnValue) == 0x000200, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue) == 0x0002B8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetKeyEventFromAnalogInputEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetKey_ReturnValue) == 0x0002F8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000310, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetValue_ReturnValue) == 0x000314, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000318, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Handled_ReturnValue_1) == 0x000320, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_FMin_ReturnValue) == 0x0003D8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GetValue_ReturnValue_1) == 0x0003E0, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003E8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_BooleanAND_ReturnValue) == 0x0003F0, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_FMax_ReturnValue) == 0x0003F8, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000400, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000408, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_FMin_B_ImplicitCast) == 0x000410, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000418, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_SetValue_InValue_ImplicitCast) == 0x000420, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000428, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnAnalogValueChanged, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x000430, "Member 'WB_TradeWithPlayer_C_OnAnalogValueChanged::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.OnFailure_5DF3E9CD40CABD8B423A32B8094E724E
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E final
{
public:
	TArray<struct FTradingItem>                   Inventory;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E");
static_assert(sizeof(WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E) == 0x000010, "Wrong size on WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E");
static_assert(offsetof(WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E, Inventory) == 0x000000, "Member 'WB_TradeWithPlayer_C_OnFailure_5DF3E9CD40CABD8B423A32B8094E724E::Inventory' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.OnPreviewKeyDown
// 0x05B0 (0x05B0 - 0x0000)
struct WB_TradeWithPlayer_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0208(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x02C0(0x00B8)()
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_ReturnValue_1;                     // 0x03A8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_2;                     // 0x03C8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue_3;                     // 0x03E8(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x0400(0x00B8)()
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x04B8(0x00B8)()
	struct FKey                                   CallFunc_GetGamepadAcceptKey_ReturnValue;          // 0x0570(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_B_ImplicitCast;                      // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast;            // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetValue_InValue_ImplicitCast_1;          // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_OnPreviewKeyDown");
static_assert(sizeof(WB_TradeWithPlayer_C_OnPreviewKeyDown) == 0x0005B0, "Wrong size on WB_TradeWithPlayer_C_OnPreviewKeyDown");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000201, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000202, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_1) == 0x000208, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_2) == 0x0002C0, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetValue_ReturnValue) == 0x000378, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000380, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetValue_ReturnValue_1) == 0x000388, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_FMin_ReturnValue) == 0x000390, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000398, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_FMax_ReturnValue) == 0x0003A0, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue_1) == 0x0003A8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x0003C0, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue_2) == 0x0003C8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x0003E0, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue_3) == 0x0003E8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_3) == 0x000400, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x0004B8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_GetGamepadAcceptKey_ReturnValue) == 0x000570, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_GetGamepadAcceptKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x000588, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_FMin_B_ImplicitCast) == 0x000590, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_FMin_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000598, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0005A0, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_SetValue_InValue_ImplicitCast) == 0x0005A8, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_SetValue_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_OnPreviewKeyDown, CallFunc_SetValue_InValue_ImplicitCast_1) == 0x0005AC, "Member 'WB_TradeWithPlayer_C_OnPreviewKeyDown::CallFunc_SetValue_InValue_ImplicitCast_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E
// 0x0010 (0x0010 - 0x0000)
struct WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E final
{
public:
	TArray<struct FTradingItem>                   Inventory;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E) == 0x000008, "Wrong alignment on WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E");
static_assert(sizeof(WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E) == 0x000010, "Wrong size on WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E");
static_assert(offsetof(WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E, Inventory) == 0x000000, "Member 'WB_TradeWithPlayer_C_OnSuccess_5DF3E9CD40CABD8B423A32B8094E724E::Inventory' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.RemoveFromTrade
// 0x001C (0x001C - 0x0000)
struct WB_TradeWithPlayer_C_RemoveFromTrade final
{
public:
	struct FTradingItem                           TradingItem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          IsReceivingItem;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_RemoveFromTrade) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_RemoveFromTrade");
static_assert(sizeof(WB_TradeWithPlayer_C_RemoveFromTrade) == 0x00001C, "Wrong size on WB_TradeWithPlayer_C_RemoveFromTrade");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, TradingItem) == 0x000000, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::TradingItem' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, IsReceivingItem) == 0x000008, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::IsReceivingItem' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_Array_Length_ReturnValue_1) == 0x000010, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000015, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_Array_RemoveItem_ReturnValue) == 0x000017, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_RemoveFromTrade, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000018, "Member 'WB_TradeWithPlayer_C_RemoveFromTrade::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.SendTradeAnswer
// 0x0001 (0x0001 - 0x0000)
struct WB_TradeWithPlayer_C_SendTradeAnswer final
{
public:
	E_QuestionAnswer                              Answer;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_SendTradeAnswer) == 0x000001, "Wrong alignment on WB_TradeWithPlayer_C_SendTradeAnswer");
static_assert(sizeof(WB_TradeWithPlayer_C_SendTradeAnswer) == 0x000001, "Wrong size on WB_TradeWithPlayer_C_SendTradeAnswer");
static_assert(offsetof(WB_TradeWithPlayer_C_SendTradeAnswer, Answer) == 0x000000, "Member 'WB_TradeWithPlayer_C_SendTradeAnswer::Answer' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.SetItemQuantity
// 0x0018 (0x0018 - 0x0000)
struct WB_TradeWithPlayer_C_SetItemQuantity final
{
public:
	struct FTradingItem                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_SetItemQuantity) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_SetItemQuantity");
static_assert(sizeof(WB_TradeWithPlayer_C_SetItemQuantity) == 0x000018, "Wrong size on WB_TradeWithPlayer_C_SetItemQuantity");
static_assert(offsetof(WB_TradeWithPlayer_C_SetItemQuantity, Item) == 0x000000, "Member 'WB_TradeWithPlayer_C_SetItemQuantity::Item' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_SetItemQuantity, CallFunc_Map_Find_Value) == 0x000008, "Member 'WB_TradeWithPlayer_C_SetItemQuantity::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_SetItemQuantity, CallFunc_Map_Find_ReturnValue) == 0x00000C, "Member 'WB_TradeWithPlayer_C_SetItemQuantity::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_SetItemQuantity, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_TradeWithPlayer_C_SetItemQuantity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_SetItemQuantity, CallFunc_Map_Contains_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_SetItemQuantity::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function WB_TradeWithPlayer.WB_TradeWithPlayer_C.TryAddTradeItem
// 0x001C (0x001C - 0x0000)
struct WB_TradeWithPlayer_C_TryAddTradeItem final
{
public:
	struct FTradingItem                           TradeItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TradeWithPlayer_C_TryAddTradeItem) == 0x000004, "Wrong alignment on WB_TradeWithPlayer_C_TryAddTradeItem");
static_assert(sizeof(WB_TradeWithPlayer_C_TryAddTradeItem) == 0x00001C, "Wrong size on WB_TradeWithPlayer_C_TryAddTradeItem");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, TradeItem) == 0x000000, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::TradeItem' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, CallFunc_Array_Length_ReturnValue_1) == 0x000010, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TradeWithPlayer_C_TryAddTradeItem, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_TradeWithPlayer_C_TryAddTradeItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

