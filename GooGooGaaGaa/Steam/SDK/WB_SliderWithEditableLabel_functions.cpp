#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SliderWithEditableLabel

#include "Basic.hpp"

#include "WB_SliderWithEditableLabel_classes.hpp"
#include "WB_SliderWithEditableLabel_parameters.hpp"


namespace SDK
{

// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnRealValueChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_SliderWithEditableLabel_C*    Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  RealValue_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::OnRealValueChanged__DelegateSignature(class UWB_SliderWithEditableLabel_C* Sender, double RealValue_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnRealValueChanged__DelegateSignature");

	Params::WB_SliderWithEditableLabel_C_OnRealValueChanged__DelegateSignature Parms{};

	Parms.Sender = Sender;
	Parms.RealValue_0 = RealValue_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");

	Params::WB_SliderWithEditableLabel_C_BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature
// (BlueprintEvent)

void UWB_SliderWithEditableLabel_C::BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureBeginEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureEndEvent__DelegateSignature
// (BlueprintEvent)

void UWB_SliderWithEditableLabel_C::BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureEndEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__ValueSlider_K2Node_ComponentBoundEvent_0_OnMouseCaptureEndEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::WB_SliderWithEditableLabel_C_BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_3_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_SliderWithEditableLabel_C::BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature");

	Params::WB_SliderWithEditableLabel_C_BndEvt__WB_SliderWithEditableLabel_InputField_K2Node_ComponentBoundEvent_5_OnEditableTextBoxChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__WB_SliderWithEditableLabel_ResetButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWB_SliderWithEditableLabel_C::BndEvt__WB_SliderWithEditableLabel_ResetButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__WB_SliderWithEditableLabel_ResetButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.BndEvt__WB_SliderWithEditableLabel_ValueFocusButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature
// (BlueprintEvent)

void UWB_SliderWithEditableLabel_C::BndEvt__WB_SliderWithEditableLabel_ValueFocusButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "BndEvt__WB_SliderWithEditableLabel_ValueFocusButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.ChangeRealValue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ValueChange                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::ChangeRealValue(double ValueChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "ChangeRealValue");

	Params::WB_SliderWithEditableLabel_C_ChangeRealValue Parms{};

	Parms.ValueChange = ValueChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.CheckDefaultToUpdateUI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::CheckDefaultToUpdateUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "CheckDefaultToUpdateUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.CreateTooltip
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::CreateTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "CreateTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.CustomLeft
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::CustomLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "CustomLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.CustomRight
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::CustomRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "CustomRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.DecreaseRealValue
// (BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::DecreaseRealValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "DecreaseRealValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.ExecuteUbergraph_WB_SliderWithEditableLabel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::ExecuteUbergraph_WB_SliderWithEditableLabel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "ExecuteUbergraph_WB_SliderWithEditableLabel");

	Params::WB_SliderWithEditableLabel_C_ExecuteUbergraph_WB_SliderWithEditableLabel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.FocusInputField
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::FocusInputField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "FocusInputField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.Get_ValueSlider_Value_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_SliderWithEditableLabel_C::Get_ValueSlider_Value_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "Get_ValueSlider_Value_0");

	Params::WB_SliderWithEditableLabel_C_Get_ValueSlider_Value_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.GetMinutes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_SliderWithEditableLabel_C::GetMinutes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "GetMinutes");

	Params::WB_SliderWithEditableLabel_C_GetMinutes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.GetOptionsOverrideIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::GetOptionsOverrideIndex(double Value, double* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "GetOptionsOverrideIndex");

	Params::WB_SliderWithEditableLabel_C_GetOptionsOverrideIndex Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.GetSeconds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_SliderWithEditableLabel_C::GetSeconds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "GetSeconds");

	Params::WB_SliderWithEditableLabel_C_GetSeconds Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.GetTextWithoutSuffix
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             TextObject                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Value                                                  (Parm, OutParm)

void UWB_SliderWithEditableLabel_C::GetTextWithoutSuffix(const class FText& TextObject, class FText* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "GetTextWithoutSuffix");

	Params::WB_SliderWithEditableLabel_C_GetTextWithoutSuffix Parms{};

	Parms.TextObject = std::move(TextObject);

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.GetValueText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_SliderWithEditableLabel_C::GetValueText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "GetValueText");

	Params::WB_SliderWithEditableLabel_C_GetValueText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.IncreaseRealValue
// (BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::IncreaseRealValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "IncreaseRealValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.InitializeFloatParam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUIParameterData                 FloatParam                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FUIParam                         DefaultValue                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UWB_SliderWithEditableLabel_C::InitializeFloatParam(const struct FUIParameterData& FloatParam, const struct FUIParam& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "InitializeFloatParam");

	Params::WB_SliderWithEditableLabel_C_InitializeFloatParam Parms{};

	Parms.FloatParam = std::move(FloatParam);
	Parms.DefaultValue = std::move(DefaultValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnClickedEvent
// (BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::OnClickedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnClickedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnControllerCaptureBegin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::OnControllerCaptureBegin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnControllerCaptureBegin__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnControllerCaptureEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::OnControllerCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnControllerCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_SliderWithEditableLabel_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnFocusReceived");

	Params::WB_SliderWithEditableLabel_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnKeyDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_SliderWithEditableLabel_C::OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnKeyDown");

	Params::WB_SliderWithEditableLabel_C_OnKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnMouseCaptureBegin__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::OnMouseCaptureBegin__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnMouseCaptureBegin__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnMouseCaptureEnd__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::OnMouseCaptureEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnMouseCaptureEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_SliderWithEditableLabel_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "OnMouseEnter");

	Params::WB_SliderWithEditableLabel_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "PreConstruct");

	Params::WB_SliderWithEditableLabel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.RealValueToValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  RealValue_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::RealValueToValue(double RealValue_0, double* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "RealValueToValue");

	Params::WB_SliderWithEditableLabel_C_RealValueToValue Parms{};

	Parms.RealValue_0 = RealValue_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.ResetValue
// (BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::ResetValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "ResetValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.RoundToStepSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWB_SliderWithEditableLabel_C::RoundToStepSize(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "RoundToStepSize");

	Params::WB_SliderWithEditableLabel_C_RoundToStepSize Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.SetInputFieldHovered
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::SetInputFieldHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "SetInputFieldHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.SetInputFieldUnhovered
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_SliderWithEditableLabel_C::SetInputFieldUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "SetInputFieldUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.SetRealValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::SetRealValue(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "SetRealValue");

	Params::WB_SliderWithEditableLabel_C_SetRealValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "Tick");

	Params::WB_SliderWithEditableLabel_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_SliderWithEditableLabel.WB_SliderWithEditableLabel_C.ValueToRealValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RealValue_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_SliderWithEditableLabel_C::ValueToRealValue(double Value, double* RealValue_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_SliderWithEditableLabel_C", "ValueToRealValue");

	Params::WB_SliderWithEditableLabel_C_ValueToRealValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (RealValue_0 != nullptr)
		*RealValue_0 = Parms.RealValue_0;
}

}

