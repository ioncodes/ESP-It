#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SpyCamera

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_SpyCamera.B_SpyCamera_C.ExecuteUbergraph_B_SpyCamera
// 0x0030 (0x0030 - 0x0000)
struct B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera) == 0x000008, "Wrong alignment on B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera");
static_assert(sizeof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera) == 0x000030, "Wrong size on B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, EntryPoint) == 0x000000, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, Temp_bool_Variable) == 0x000004, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, Temp_real_Variable) == 0x000008, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, Temp_real_Variable_1) == 0x000010, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, K2Node_Select_Default) == 0x000020, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000028, "Member 'B_SpyCamera_C_ExecuteUbergraph_B_SpyCamera::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");

// Function B_SpyCamera.B_SpyCamera_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_SpyCamera_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SpyCamera_C_ReceiveTick) == 0x000004, "Wrong alignment on B_SpyCamera_C_ReceiveTick");
static_assert(sizeof(B_SpyCamera_C_ReceiveTick) == 0x000004, "Wrong size on B_SpyCamera_C_ReceiveTick");
static_assert(offsetof(B_SpyCamera_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_SpyCamera_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

