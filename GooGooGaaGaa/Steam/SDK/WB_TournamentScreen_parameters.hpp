#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_TournamentScreen.WB_TournamentScreen_C.ExecuteUbergraph_WB_TournamentScreen
// 0x0120 (0x0120 - 0x0000)
struct WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0060(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsScreenOpen_IsOpen;                      // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen) == 0x000008, "Wrong alignment on WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen");
static_assert(sizeof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen) == 0x000120, "Wrong size on WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, EntryPoint) == 0x000000, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_State) == 0x000028, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameInstance_ReturnValue_1) == 0x000038, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000048, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetOwningPlayer_ReturnValue) == 0x000058, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_Event_MyGeometry) == 0x000060, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_Event_InDeltaTime) == 0x000098, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameState_ReturnValue_1) == 0x0000A0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Player_State) == 0x0000A8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_State_1) == 0x0000B8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_IsRoundEnd_RoundIsEnd) == 0x0000C2, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0000C8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000D0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Player_State_1) == 0x0000D8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000E8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F8, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000100, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_GetGameInstance_ReturnValue_3) == 0x000108, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000110, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, K2Node_DynamicCast_bSuccess_7) == 0x000118, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000119, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen, CallFunc_IsScreenOpen_IsOpen) == 0x00011A, "Member 'WB_TournamentScreen_C_ExecuteUbergraph_WB_TournamentScreen::CallFunc_IsScreenOpen_IsOpen' has a wrong offset!");

// Function WB_TournamentScreen.WB_TournamentScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TournamentScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScreen_C_Tick) == 0x000004, "Wrong alignment on WB_TournamentScreen_C_Tick");
static_assert(sizeof(WB_TournamentScreen_C_Tick) == 0x00003C, "Wrong size on WB_TournamentScreen_C_Tick");
static_assert(offsetof(WB_TournamentScreen_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TournamentScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TournamentScreen_C_Tick::InDeltaTime' has a wrong offset!");

}

