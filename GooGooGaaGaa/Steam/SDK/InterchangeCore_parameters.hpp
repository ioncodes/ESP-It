#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InterchangeCore

#include "Basic.hpp"

#include "InterchangeCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function InterchangeCore.InterchangeFactoryBase.GetFactoryClass
// 0x0008 (0x0008 - 0x0000)
struct InterchangeFactoryBase_GetFactoryClass final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBase_GetFactoryClass) == 0x000008, "Wrong alignment on InterchangeFactoryBase_GetFactoryClass");
static_assert(sizeof(InterchangeFactoryBase_GetFactoryClass) == 0x000008, "Wrong size on InterchangeFactoryBase_GetFactoryClass");
static_assert(offsetof(InterchangeFactoryBase_GetFactoryClass, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBase_GetFactoryClass::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceData.SetFilename
// 0x0018 (0x0018 - 0x0000)
struct InterchangeSourceData_SetFilename final
{
public:
	class FString                                 InFilename;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceData_SetFilename) == 0x000008, "Wrong alignment on InterchangeSourceData_SetFilename");
static_assert(sizeof(InterchangeSourceData_SetFilename) == 0x000018, "Wrong size on InterchangeSourceData_SetFilename");
static_assert(offsetof(InterchangeSourceData_SetFilename, InFilename) == 0x000000, "Member 'InterchangeSourceData_SetFilename::InFilename' has a wrong offset!");
static_assert(offsetof(InterchangeSourceData_SetFilename, ReturnValue) == 0x000010, "Member 'InterchangeSourceData_SetFilename::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceData.GetFileName
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceData_GetFileName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeSourceData_GetFileName) == 0x000008, "Wrong alignment on InterchangeSourceData_GetFileName");
static_assert(sizeof(InterchangeSourceData_GetFileName) == 0x000010, "Wrong size on InterchangeSourceData_GetFileName");
static_assert(offsetof(InterchangeSourceData_GetFileName, ReturnValue) == 0x000000, "Member 'InterchangeSourceData_GetFileName::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.FindOrAddPropertyStates
// 0x000C (0x000C - 0x0000)
struct InterchangePipelineBase_FindOrAddPropertyStates final
{
public:
	class FName                                   PropertyPath;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInterchangePipelinePropertyStates     ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangePipelineBase_FindOrAddPropertyStates) == 0x000004, "Wrong alignment on InterchangePipelineBase_FindOrAddPropertyStates");
static_assert(sizeof(InterchangePipelineBase_FindOrAddPropertyStates) == 0x00000C, "Wrong size on InterchangePipelineBase_FindOrAddPropertyStates");
static_assert(offsetof(InterchangePipelineBase_FindOrAddPropertyStates, PropertyPath) == 0x000000, "Member 'InterchangePipelineBase_FindOrAddPropertyStates::PropertyPath' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_FindOrAddPropertyStates, ReturnValue) == 0x000008, "Member 'InterchangePipelineBase_FindOrAddPropertyStates::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedExecuteExportPipeline
// 0x0008 (0x0008 - 0x0000)
struct InterchangePipelineBase_ScriptedExecuteExportPipeline final
{
public:
	class UInterchangeBaseNodeContainer*          BaseNodeContainer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangePipelineBase_ScriptedExecuteExportPipeline) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedExecuteExportPipeline");
static_assert(sizeof(InterchangePipelineBase_ScriptedExecuteExportPipeline) == 0x000008, "Wrong size on InterchangePipelineBase_ScriptedExecuteExportPipeline");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecuteExportPipeline, BaseNodeContainer) == 0x000000, "Member 'InterchangePipelineBase_ScriptedExecuteExportPipeline::BaseNodeContainer' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedExecutePipeline
// 0x0028 (0x0028 - 0x0000)
struct InterchangePipelineBase_ScriptedExecutePipeline final
{
public:
	class UInterchangeBaseNodeContainer*          BaseNodeContainer;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UInterchangeSourceData*>         SourceDatas;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ContentBasePath;                                   // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangePipelineBase_ScriptedExecutePipeline) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedExecutePipeline");
static_assert(sizeof(InterchangePipelineBase_ScriptedExecutePipeline) == 0x000028, "Wrong size on InterchangePipelineBase_ScriptedExecutePipeline");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePipeline, BaseNodeContainer) == 0x000000, "Member 'InterchangePipelineBase_ScriptedExecutePipeline::BaseNodeContainer' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePipeline, SourceDatas) == 0x000008, "Member 'InterchangePipelineBase_ScriptedExecutePipeline::SourceDatas' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePipeline, ContentBasePath) == 0x000018, "Member 'InterchangePipelineBase_ScriptedExecutePipeline::ContentBasePath' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedExecutePostFactoryPipeline
// 0x0028 (0x0028 - 0x0000)
struct InterchangePipelineBase_ScriptedExecutePostFactoryPipeline final
{
public:
	const class UInterchangeBaseNodeContainer*    BaseNodeContainer;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FactoryNodeKey;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                CreatedAsset;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAReimport;                                      // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedExecutePostFactoryPipeline");
static_assert(sizeof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline) == 0x000028, "Wrong size on InterchangePipelineBase_ScriptedExecutePostFactoryPipeline");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline, BaseNodeContainer) == 0x000000, "Member 'InterchangePipelineBase_ScriptedExecutePostFactoryPipeline::BaseNodeContainer' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline, FactoryNodeKey) == 0x000008, "Member 'InterchangePipelineBase_ScriptedExecutePostFactoryPipeline::FactoryNodeKey' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline, CreatedAsset) == 0x000018, "Member 'InterchangePipelineBase_ScriptedExecutePostFactoryPipeline::CreatedAsset' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostFactoryPipeline, bIsAReimport) == 0x000020, "Member 'InterchangePipelineBase_ScriptedExecutePostFactoryPipeline::bIsAReimport' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedExecutePostImportPipeline
// 0x0028 (0x0028 - 0x0000)
struct InterchangePipelineBase_ScriptedExecutePostImportPipeline final
{
public:
	const class UInterchangeBaseNodeContainer*    BaseNodeContainer;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FactoryNodeKey;                                    // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                CreatedAsset;                                      // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAReimport;                                      // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangePipelineBase_ScriptedExecutePostImportPipeline) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedExecutePostImportPipeline");
static_assert(sizeof(InterchangePipelineBase_ScriptedExecutePostImportPipeline) == 0x000028, "Wrong size on InterchangePipelineBase_ScriptedExecutePostImportPipeline");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostImportPipeline, BaseNodeContainer) == 0x000000, "Member 'InterchangePipelineBase_ScriptedExecutePostImportPipeline::BaseNodeContainer' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostImportPipeline, FactoryNodeKey) == 0x000008, "Member 'InterchangePipelineBase_ScriptedExecutePostImportPipeline::FactoryNodeKey' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostImportPipeline, CreatedAsset) == 0x000018, "Member 'InterchangePipelineBase_ScriptedExecutePostImportPipeline::CreatedAsset' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedExecutePostImportPipeline, bIsAReimport) == 0x000020, "Member 'InterchangePipelineBase_ScriptedExecutePostImportPipeline::bIsAReimport' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedSetReimportSourceIndex
// 0x0010 (0x0010 - 0x0000)
struct InterchangePipelineBase_ScriptedSetReimportSourceIndex final
{
public:
	class UClass*                                 ReimportObjectClass;                               // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SourceFileIndex;                                   // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangePipelineBase_ScriptedSetReimportSourceIndex) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedSetReimportSourceIndex");
static_assert(sizeof(InterchangePipelineBase_ScriptedSetReimportSourceIndex) == 0x000010, "Wrong size on InterchangePipelineBase_ScriptedSetReimportSourceIndex");
static_assert(offsetof(InterchangePipelineBase_ScriptedSetReimportSourceIndex, ReimportObjectClass) == 0x000000, "Member 'InterchangePipelineBase_ScriptedSetReimportSourceIndex::ReimportObjectClass' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_ScriptedSetReimportSourceIndex, SourceFileIndex) == 0x000008, "Member 'InterchangePipelineBase_ScriptedSetReimportSourceIndex::SourceFileIndex' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.DoesPropertyStatesExist
// 0x000C (0x000C - 0x0000)
struct InterchangePipelineBase_DoesPropertyStatesExist final
{
public:
	class FName                                   PropertyPath;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangePipelineBase_DoesPropertyStatesExist) == 0x000004, "Wrong alignment on InterchangePipelineBase_DoesPropertyStatesExist");
static_assert(sizeof(InterchangePipelineBase_DoesPropertyStatesExist) == 0x00000C, "Wrong size on InterchangePipelineBase_DoesPropertyStatesExist");
static_assert(offsetof(InterchangePipelineBase_DoesPropertyStatesExist, PropertyPath) == 0x000000, "Member 'InterchangePipelineBase_DoesPropertyStatesExist::PropertyPath' has a wrong offset!");
static_assert(offsetof(InterchangePipelineBase_DoesPropertyStatesExist, ReturnValue) == 0x000008, "Member 'InterchangePipelineBase_DoesPropertyStatesExist::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangePipelineBase.ScriptedGetPipelineDisplayName
// 0x0010 (0x0010 - 0x0000)
struct InterchangePipelineBase_ScriptedGetPipelineDisplayName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangePipelineBase_ScriptedGetPipelineDisplayName) == 0x000008, "Wrong alignment on InterchangePipelineBase_ScriptedGetPipelineDisplayName");
static_assert(sizeof(InterchangePipelineBase_ScriptedGetPipelineDisplayName) == 0x000010, "Wrong size on InterchangePipelineBase_ScriptedGetPipelineDisplayName");
static_assert(offsetof(InterchangePipelineBase_ScriptedGetPipelineDisplayName, ReturnValue) == 0x000000, "Member 'InterchangePipelineBase_ScriptedGetPipelineDisplayName::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddBooleanAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_AddBooleanAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddBooleanAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddBooleanAttribute");
static_assert(sizeof(InterchangeBaseNode_AddBooleanAttribute) == 0x000018, "Wrong size on InterchangeBaseNode_AddBooleanAttribute");
static_assert(offsetof(InterchangeBaseNode_AddBooleanAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddBooleanAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddBooleanAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddBooleanAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddBooleanAttribute, ReturnValue) == 0x000011, "Member 'InterchangeBaseNode_AddBooleanAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddDoubleAttribute
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNode_AddDoubleAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddDoubleAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddDoubleAttribute");
static_assert(sizeof(InterchangeBaseNode_AddDoubleAttribute) == 0x000020, "Wrong size on InterchangeBaseNode_AddDoubleAttribute");
static_assert(offsetof(InterchangeBaseNode_AddDoubleAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddDoubleAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddDoubleAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddDoubleAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddDoubleAttribute, ReturnValue) == 0x000018, "Member 'InterchangeBaseNode_AddDoubleAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddFloatAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_AddFloatAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddFloatAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddFloatAttribute");
static_assert(sizeof(InterchangeBaseNode_AddFloatAttribute) == 0x000018, "Wrong size on InterchangeBaseNode_AddFloatAttribute");
static_assert(offsetof(InterchangeBaseNode_AddFloatAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddFloatAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddFloatAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddFloatAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddFloatAttribute, ReturnValue) == 0x000014, "Member 'InterchangeBaseNode_AddFloatAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddGuidAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_AddGuidAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddGuidAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddGuidAttribute");
static_assert(sizeof(InterchangeBaseNode_AddGuidAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_AddGuidAttribute");
static_assert(offsetof(InterchangeBaseNode_AddGuidAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddGuidAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddGuidAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddGuidAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddGuidAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_AddGuidAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddInt32Attribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_AddInt32Attribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddInt32Attribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddInt32Attribute");
static_assert(sizeof(InterchangeBaseNode_AddInt32Attribute) == 0x000018, "Wrong size on InterchangeBaseNode_AddInt32Attribute");
static_assert(offsetof(InterchangeBaseNode_AddInt32Attribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddInt32Attribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddInt32Attribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddInt32Attribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddInt32Attribute, ReturnValue) == 0x000014, "Member 'InterchangeBaseNode_AddInt32Attribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddLinearColorAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_AddLinearColorAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Value;                                             // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddLinearColorAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddLinearColorAttribute");
static_assert(sizeof(InterchangeBaseNode_AddLinearColorAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_AddLinearColorAttribute");
static_assert(offsetof(InterchangeBaseNode_AddLinearColorAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddLinearColorAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddLinearColorAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddLinearColorAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddLinearColorAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_AddLinearColorAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddStringAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_AddStringAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddStringAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddStringAttribute");
static_assert(sizeof(InterchangeBaseNode_AddStringAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_AddStringAttribute");
static_assert(offsetof(InterchangeBaseNode_AddStringAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddStringAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddStringAttribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddStringAttribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddStringAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_AddStringAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddVector2Attribute
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNode_AddVector2Attribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              Value;                                             // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddVector2Attribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddVector2Attribute");
static_assert(sizeof(InterchangeBaseNode_AddVector2Attribute) == 0x000020, "Wrong size on InterchangeBaseNode_AddVector2Attribute");
static_assert(offsetof(InterchangeBaseNode_AddVector2Attribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_AddVector2Attribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddVector2Attribute, Value) == 0x000010, "Member 'InterchangeBaseNode_AddVector2Attribute::Value' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddVector2Attribute, ReturnValue) == 0x000018, "Member 'InterchangeBaseNode_AddVector2Attribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.InitializeNode
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_InitializeNode final
{
public:
	class FString                                 UniqueID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayLabel;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInterchangeNodeContainerType                 NodeContainerType;                                 // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_InitializeNode) == 0x000008, "Wrong alignment on InterchangeBaseNode_InitializeNode");
static_assert(sizeof(InterchangeBaseNode_InitializeNode) == 0x000028, "Wrong size on InterchangeBaseNode_InitializeNode");
static_assert(offsetof(InterchangeBaseNode_InitializeNode, UniqueID) == 0x000000, "Member 'InterchangeBaseNode_InitializeNode::UniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_InitializeNode, DisplayLabel) == 0x000010, "Member 'InterchangeBaseNode_InitializeNode::DisplayLabel' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_InitializeNode, NodeContainerType) == 0x000020, "Member 'InterchangeBaseNode_InitializeNode::NodeContainerType' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.RemoveAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_RemoveAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_RemoveAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_RemoveAttribute");
static_assert(sizeof(InterchangeBaseNode_RemoveAttribute) == 0x000018, "Wrong size on InterchangeBaseNode_RemoveAttribute");
static_assert(offsetof(InterchangeBaseNode_RemoveAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_RemoveAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_RemoveAttribute, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_RemoveAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.SetAssetName
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_SetAssetName final
{
public:
	class FString                                 AssetName;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_SetAssetName) == 0x000008, "Wrong alignment on InterchangeBaseNode_SetAssetName");
static_assert(sizeof(InterchangeBaseNode_SetAssetName) == 0x000018, "Wrong size on InterchangeBaseNode_SetAssetName");
static_assert(offsetof(InterchangeBaseNode_SetAssetName, AssetName) == 0x000000, "Member 'InterchangeBaseNode_SetAssetName::AssetName' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_SetAssetName, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_SetAssetName::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.SetDisplayLabel
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_SetDisplayLabel final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_SetDisplayLabel) == 0x000008, "Wrong alignment on InterchangeBaseNode_SetDisplayLabel");
static_assert(sizeof(InterchangeBaseNode_SetDisplayLabel) == 0x000018, "Wrong size on InterchangeBaseNode_SetDisplayLabel");
static_assert(offsetof(InterchangeBaseNode_SetDisplayLabel, DisplayName) == 0x000000, "Member 'InterchangeBaseNode_SetDisplayLabel::DisplayName' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_SetDisplayLabel, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_SetDisplayLabel::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.SetEnabled
// 0x0002 (0x0002 - 0x0000)
struct InterchangeBaseNode_SetEnabled final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_SetEnabled) == 0x000001, "Wrong alignment on InterchangeBaseNode_SetEnabled");
static_assert(sizeof(InterchangeBaseNode_SetEnabled) == 0x000002, "Wrong size on InterchangeBaseNode_SetEnabled");
static_assert(offsetof(InterchangeBaseNode_SetEnabled, bIsEnabled) == 0x000000, "Member 'InterchangeBaseNode_SetEnabled::bIsEnabled' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_SetEnabled, ReturnValue) == 0x000001, "Member 'InterchangeBaseNode_SetEnabled::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.SetParentUid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_SetParentUid final
{
public:
	class FString                                 ParentUid;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_SetParentUid) == 0x000008, "Wrong alignment on InterchangeBaseNode_SetParentUid");
static_assert(sizeof(InterchangeBaseNode_SetParentUid) == 0x000018, "Wrong size on InterchangeBaseNode_SetParentUid");
static_assert(offsetof(InterchangeBaseNode_SetParentUid, ParentUid) == 0x000000, "Member 'InterchangeBaseNode_SetParentUid::ParentUid' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_SetParentUid, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_SetParentUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.AddTargetNodeUid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_AddTargetNodeUid final
{
public:
	class FString                                 AssetUid;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_AddTargetNodeUid) == 0x000008, "Wrong alignment on InterchangeBaseNode_AddTargetNodeUid");
static_assert(sizeof(InterchangeBaseNode_AddTargetNodeUid) == 0x000018, "Wrong size on InterchangeBaseNode_AddTargetNodeUid");
static_assert(offsetof(InterchangeBaseNode_AddTargetNodeUid, AssetUid) == 0x000000, "Member 'InterchangeBaseNode_AddTargetNodeUid::AssetUid' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_AddTargetNodeUid, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_AddTargetNodeUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetAssetName
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNode_GetAssetName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetAssetName) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetAssetName");
static_assert(sizeof(InterchangeBaseNode_GetAssetName) == 0x000010, "Wrong size on InterchangeBaseNode_GetAssetName");
static_assert(offsetof(InterchangeBaseNode_GetAssetName, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetAssetName::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetBooleanAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_GetBooleanAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutValue;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetBooleanAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetBooleanAttribute");
static_assert(sizeof(InterchangeBaseNode_GetBooleanAttribute) == 0x000018, "Wrong size on InterchangeBaseNode_GetBooleanAttribute");
static_assert(offsetof(InterchangeBaseNode_GetBooleanAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetBooleanAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetBooleanAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetBooleanAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetBooleanAttribute, ReturnValue) == 0x000011, "Member 'InterchangeBaseNode_GetBooleanAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetDisplayLabel
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNode_GetDisplayLabel final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetDisplayLabel) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetDisplayLabel");
static_assert(sizeof(InterchangeBaseNode_GetDisplayLabel) == 0x000010, "Wrong size on InterchangeBaseNode_GetDisplayLabel");
static_assert(offsetof(InterchangeBaseNode_GetDisplayLabel, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetDisplayLabel::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetDoubleAttribute
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNode_GetDoubleAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        OutValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetDoubleAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetDoubleAttribute");
static_assert(sizeof(InterchangeBaseNode_GetDoubleAttribute) == 0x000020, "Wrong size on InterchangeBaseNode_GetDoubleAttribute");
static_assert(offsetof(InterchangeBaseNode_GetDoubleAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetDoubleAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetDoubleAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetDoubleAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetDoubleAttribute, ReturnValue) == 0x000018, "Member 'InterchangeBaseNode_GetDoubleAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetFloatAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_GetFloatAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetFloatAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetFloatAttribute");
static_assert(sizeof(InterchangeBaseNode_GetFloatAttribute) == 0x000018, "Wrong size on InterchangeBaseNode_GetFloatAttribute");
static_assert(offsetof(InterchangeBaseNode_GetFloatAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetFloatAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetFloatAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetFloatAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetFloatAttribute, ReturnValue) == 0x000014, "Member 'InterchangeBaseNode_GetFloatAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetGuidAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_GetGuidAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetGuidAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetGuidAttribute");
static_assert(sizeof(InterchangeBaseNode_GetGuidAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_GetGuidAttribute");
static_assert(offsetof(InterchangeBaseNode_GetGuidAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetGuidAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetGuidAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetGuidAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetGuidAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_GetGuidAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetInt32Attribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_GetInt32Attribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetInt32Attribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetInt32Attribute");
static_assert(sizeof(InterchangeBaseNode_GetInt32Attribute) == 0x000018, "Wrong size on InterchangeBaseNode_GetInt32Attribute");
static_assert(offsetof(InterchangeBaseNode_GetInt32Attribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetInt32Attribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetInt32Attribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetInt32Attribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetInt32Attribute, ReturnValue) == 0x000014, "Member 'InterchangeBaseNode_GetInt32Attribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetLinearColorAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_GetLinearColorAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetLinearColorAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetLinearColorAttribute");
static_assert(sizeof(InterchangeBaseNode_GetLinearColorAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_GetLinearColorAttribute");
static_assert(offsetof(InterchangeBaseNode_GetLinearColorAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetLinearColorAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetLinearColorAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetLinearColorAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetLinearColorAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_GetLinearColorAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetNodeContainerType
// 0x0001 (0x0001 - 0x0000)
struct InterchangeBaseNode_GetNodeContainerType final
{
public:
	EInterchangeNodeContainerType                 ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetNodeContainerType) == 0x000001, "Wrong alignment on InterchangeBaseNode_GetNodeContainerType");
static_assert(sizeof(InterchangeBaseNode_GetNodeContainerType) == 0x000001, "Wrong size on InterchangeBaseNode_GetNodeContainerType");
static_assert(offsetof(InterchangeBaseNode_GetNodeContainerType, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetNodeContainerType::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetParentUid
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNode_GetParentUid final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetParentUid) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetParentUid");
static_assert(sizeof(InterchangeBaseNode_GetParentUid) == 0x000010, "Wrong size on InterchangeBaseNode_GetParentUid");
static_assert(offsetof(InterchangeBaseNode_GetParentUid, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetParentUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetStringAttribute
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNode_GetStringAttribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutValue;                                          // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetStringAttribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetStringAttribute");
static_assert(sizeof(InterchangeBaseNode_GetStringAttribute) == 0x000028, "Wrong size on InterchangeBaseNode_GetStringAttribute");
static_assert(offsetof(InterchangeBaseNode_GetStringAttribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetStringAttribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetStringAttribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetStringAttribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetStringAttribute, ReturnValue) == 0x000020, "Member 'InterchangeBaseNode_GetStringAttribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetTargetNodeCount
// 0x0004 (0x0004 - 0x0000)
struct InterchangeBaseNode_GetTargetNodeCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetTargetNodeCount) == 0x000004, "Wrong alignment on InterchangeBaseNode_GetTargetNodeCount");
static_assert(sizeof(InterchangeBaseNode_GetTargetNodeCount) == 0x000004, "Wrong size on InterchangeBaseNode_GetTargetNodeCount");
static_assert(offsetof(InterchangeBaseNode_GetTargetNodeCount, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetTargetNodeCount::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetTargetNodeUids
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNode_GetTargetNodeUids final
{
public:
	TArray<class FString>                         OutTargetAssets;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetTargetNodeUids) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetTargetNodeUids");
static_assert(sizeof(InterchangeBaseNode_GetTargetNodeUids) == 0x000010, "Wrong size on InterchangeBaseNode_GetTargetNodeUids");
static_assert(offsetof(InterchangeBaseNode_GetTargetNodeUids, OutTargetAssets) == 0x000000, "Member 'InterchangeBaseNode_GetTargetNodeUids::OutTargetAssets' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetUniqueID
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNode_GetUniqueID final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_GetUniqueID) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetUniqueID");
static_assert(sizeof(InterchangeBaseNode_GetUniqueID) == 0x000010, "Wrong size on InterchangeBaseNode_GetUniqueID");
static_assert(offsetof(InterchangeBaseNode_GetUniqueID, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_GetUniqueID::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.GetVector2Attribute
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNode_GetVector2Attribute final
{
public:
	class FString                                 NodeAttributeKey;                                  // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2f                              OutValue;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_GetVector2Attribute) == 0x000008, "Wrong alignment on InterchangeBaseNode_GetVector2Attribute");
static_assert(sizeof(InterchangeBaseNode_GetVector2Attribute) == 0x000020, "Wrong size on InterchangeBaseNode_GetVector2Attribute");
static_assert(offsetof(InterchangeBaseNode_GetVector2Attribute, NodeAttributeKey) == 0x000000, "Member 'InterchangeBaseNode_GetVector2Attribute::NodeAttributeKey' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetVector2Attribute, OutValue) == 0x000010, "Member 'InterchangeBaseNode_GetVector2Attribute::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_GetVector2Attribute, ReturnValue) == 0x000018, "Member 'InterchangeBaseNode_GetVector2Attribute::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct InterchangeBaseNode_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNode_IsEnabled) == 0x000001, "Wrong alignment on InterchangeBaseNode_IsEnabled");
static_assert(sizeof(InterchangeBaseNode_IsEnabled) == 0x000001, "Wrong size on InterchangeBaseNode_IsEnabled");
static_assert(offsetof(InterchangeBaseNode_IsEnabled, ReturnValue) == 0x000000, "Member 'InterchangeBaseNode_IsEnabled::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNode.RemoveTargetNodeUid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNode_RemoveTargetNodeUid final
{
public:
	class FString                                 AssetUid;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNode_RemoveTargetNodeUid) == 0x000008, "Wrong alignment on InterchangeBaseNode_RemoveTargetNodeUid");
static_assert(sizeof(InterchangeBaseNode_RemoveTargetNodeUid) == 0x000018, "Wrong size on InterchangeBaseNode_RemoveTargetNodeUid");
static_assert(offsetof(InterchangeBaseNode_RemoveTargetNodeUid, AssetUid) == 0x000000, "Member 'InterchangeBaseNode_RemoveTargetNodeUid::AssetUid' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNode_RemoveTargetNodeUid, ReturnValue) == 0x000010, "Member 'InterchangeBaseNode_RemoveTargetNodeUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.AddNode
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_AddNode final
{
public:
	class UInterchangeBaseNode*                   Node;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_AddNode) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_AddNode");
static_assert(sizeof(InterchangeBaseNodeContainer_AddNode) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_AddNode");
static_assert(offsetof(InterchangeBaseNodeContainer_AddNode, Node) == 0x000000, "Member 'InterchangeBaseNodeContainer_AddNode::Node' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_AddNode, ReturnValue) == 0x000008, "Member 'InterchangeBaseNodeContainer_AddNode::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetNodeChildren
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNodeContainer_GetNodeChildren final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChildIndex;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInterchangeBaseNode*                   ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetNodeChildren) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetNodeChildren");
static_assert(sizeof(InterchangeBaseNodeContainer_GetNodeChildren) == 0x000020, "Wrong size on InterchangeBaseNodeContainer_GetNodeChildren");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildren, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetNodeChildren::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildren, ChildIndex) == 0x000010, "Member 'InterchangeBaseNodeContainer_GetNodeChildren::ChildIndex' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildren, ReturnValue) == 0x000018, "Member 'InterchangeBaseNodeContainer_GetNodeChildren::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.LoadFromFile
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNodeContainer_LoadFromFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_LoadFromFile) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_LoadFromFile");
static_assert(sizeof(InterchangeBaseNodeContainer_LoadFromFile) == 0x000010, "Wrong size on InterchangeBaseNodeContainer_LoadFromFile");
static_assert(offsetof(InterchangeBaseNodeContainer_LoadFromFile, Filename) == 0x000000, "Member 'InterchangeBaseNodeContainer_LoadFromFile::Filename' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.ReplaceNode
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_ReplaceNode final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInterchangeFactoryBaseNode*            NewNode;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_ReplaceNode) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_ReplaceNode");
static_assert(sizeof(InterchangeBaseNodeContainer_ReplaceNode) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_ReplaceNode");
static_assert(offsetof(InterchangeBaseNodeContainer_ReplaceNode, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_ReplaceNode::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_ReplaceNode, NewNode) == 0x000010, "Member 'InterchangeBaseNodeContainer_ReplaceNode::NewNode' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.SaveToFile
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNodeContainer_SaveToFile final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_SaveToFile) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_SaveToFile");
static_assert(sizeof(InterchangeBaseNodeContainer_SaveToFile) == 0x000010, "Wrong size on InterchangeBaseNodeContainer_SaveToFile");
static_assert(offsetof(InterchangeBaseNodeContainer_SaveToFile, Filename) == 0x000000, "Member 'InterchangeBaseNodeContainer_SaveToFile::Filename' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.SetNodeParentUid
// 0x0028 (0x0028 - 0x0000)
struct InterchangeBaseNodeContainer_SetNodeParentUid final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 NewParentNodeUid;                                  // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNodeContainer_SetNodeParentUid) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_SetNodeParentUid");
static_assert(sizeof(InterchangeBaseNodeContainer_SetNodeParentUid) == 0x000028, "Wrong size on InterchangeBaseNodeContainer_SetNodeParentUid");
static_assert(offsetof(InterchangeBaseNodeContainer_SetNodeParentUid, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_SetNodeParentUid::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_SetNodeParentUid, NewParentNodeUid) == 0x000010, "Member 'InterchangeBaseNodeContainer_SetNodeParentUid::NewParentNodeUid' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_SetNodeParentUid, ReturnValue) == 0x000020, "Member 'InterchangeBaseNodeContainer_SetNodeParentUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetFactoryNode
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_GetFactoryNode final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInterchangeFactoryBaseNode*            ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetFactoryNode) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetFactoryNode");
static_assert(sizeof(InterchangeBaseNodeContainer_GetFactoryNode) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_GetFactoryNode");
static_assert(offsetof(InterchangeBaseNodeContainer_GetFactoryNode, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetFactoryNode::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetFactoryNode, ReturnValue) == 0x000010, "Member 'InterchangeBaseNodeContainer_GetFactoryNode::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetNode
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_GetNode final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UInterchangeBaseNode*             ReturnValue;                                       // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetNode) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetNode");
static_assert(sizeof(InterchangeBaseNodeContainer_GetNode) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_GetNode");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNode, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetNode::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNode, ReturnValue) == 0x000010, "Member 'InterchangeBaseNodeContainer_GetNode::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetNodeChildrenCount
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_GetNodeChildrenCount final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNodeContainer_GetNodeChildrenCount) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetNodeChildrenCount");
static_assert(sizeof(InterchangeBaseNodeContainer_GetNodeChildrenCount) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_GetNodeChildrenCount");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildrenCount, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetNodeChildrenCount::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildrenCount, ReturnValue) == 0x000010, "Member 'InterchangeBaseNodeContainer_GetNodeChildrenCount::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetNodeChildrenUids
// 0x0020 (0x0020 - 0x0000)
struct InterchangeBaseNodeContainer_GetNodeChildrenUids final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetNodeChildrenUids) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetNodeChildrenUids");
static_assert(sizeof(InterchangeBaseNodeContainer_GetNodeChildrenUids) == 0x000020, "Wrong size on InterchangeBaseNodeContainer_GetNodeChildrenUids");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildrenUids, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetNodeChildrenUids::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodeChildrenUids, ReturnValue) == 0x000010, "Member 'InterchangeBaseNodeContainer_GetNodeChildrenUids::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetNodes
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_GetNodes final
{
public:
	const class UClass*                           ClassNode;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         OutNodes;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetNodes) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetNodes");
static_assert(sizeof(InterchangeBaseNodeContainer_GetNodes) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_GetNodes");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodes, ClassNode) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetNodes::ClassNode' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_GetNodes, OutNodes) == 0x000008, "Member 'InterchangeBaseNodeContainer_GetNodes::OutNodes' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.GetRoots
// 0x0010 (0x0010 - 0x0000)
struct InterchangeBaseNodeContainer_GetRoots final
{
public:
	TArray<class FString>                         RootNodes;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeBaseNodeContainer_GetRoots) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_GetRoots");
static_assert(sizeof(InterchangeBaseNodeContainer_GetRoots) == 0x000010, "Wrong size on InterchangeBaseNodeContainer_GetRoots");
static_assert(offsetof(InterchangeBaseNodeContainer_GetRoots, RootNodes) == 0x000000, "Member 'InterchangeBaseNodeContainer_GetRoots::RootNodes' has a wrong offset!");

// Function InterchangeCore.InterchangeBaseNodeContainer.IsNodeUidValid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeBaseNodeContainer_IsNodeUidValid final
{
public:
	class FString                                 NodeUniqueID;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeBaseNodeContainer_IsNodeUidValid) == 0x000008, "Wrong alignment on InterchangeBaseNodeContainer_IsNodeUidValid");
static_assert(sizeof(InterchangeBaseNodeContainer_IsNodeUidValid) == 0x000018, "Wrong size on InterchangeBaseNodeContainer_IsNodeUidValid");
static_assert(offsetof(InterchangeBaseNodeContainer_IsNodeUidValid, NodeUniqueID) == 0x000000, "Member 'InterchangeBaseNodeContainer_IsNodeUidValid::NodeUniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeBaseNodeContainer_IsNodeUidValid, ReturnValue) == 0x000010, "Member 'InterchangeBaseNodeContainer_IsNodeUidValid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.AddFactoryDependencyUid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeFactoryBaseNode_AddFactoryDependencyUid final
{
public:
	class FString                                 DependencyUid;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_AddFactoryDependencyUid) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_AddFactoryDependencyUid");
static_assert(sizeof(InterchangeFactoryBaseNode_AddFactoryDependencyUid) == 0x000018, "Wrong size on InterchangeFactoryBaseNode_AddFactoryDependencyUid");
static_assert(offsetof(InterchangeFactoryBaseNode_AddFactoryDependencyUid, DependencyUid) == 0x000000, "Member 'InterchangeFactoryBaseNode_AddFactoryDependencyUid::DependencyUid' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_AddFactoryDependencyUid, ReturnValue) == 0x000010, "Member 'InterchangeFactoryBaseNode_AddFactoryDependencyUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.RemoveFactoryDependencyUid
// 0x0018 (0x0018 - 0x0000)
struct InterchangeFactoryBaseNode_RemoveFactoryDependencyUid final
{
public:
	class FString                                 DependencyUid;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_RemoveFactoryDependencyUid) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_RemoveFactoryDependencyUid");
static_assert(sizeof(InterchangeFactoryBaseNode_RemoveFactoryDependencyUid) == 0x000018, "Wrong size on InterchangeFactoryBaseNode_RemoveFactoryDependencyUid");
static_assert(offsetof(InterchangeFactoryBaseNode_RemoveFactoryDependencyUid, DependencyUid) == 0x000000, "Member 'InterchangeFactoryBaseNode_RemoveFactoryDependencyUid::DependencyUid' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_RemoveFactoryDependencyUid, ReturnValue) == 0x000010, "Member 'InterchangeFactoryBaseNode_RemoveFactoryDependencyUid::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.SetCustomReferenceObject
// 0x0028 (0x0028 - 0x0000)
struct InterchangeFactoryBaseNode_SetCustomReferenceObject final
{
public:
	struct FSoftObjectPath                        AttributeValue;                                    // 0x0000(0x0020)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_SetCustomReferenceObject) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_SetCustomReferenceObject");
static_assert(sizeof(InterchangeFactoryBaseNode_SetCustomReferenceObject) == 0x000028, "Wrong size on InterchangeFactoryBaseNode_SetCustomReferenceObject");
static_assert(offsetof(InterchangeFactoryBaseNode_SetCustomReferenceObject, AttributeValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_SetCustomReferenceObject::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_SetCustomReferenceObject, ReturnValue) == 0x000020, "Member 'InterchangeFactoryBaseNode_SetCustomReferenceObject::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.SetCustomSubPath
// 0x0018 (0x0018 - 0x0000)
struct InterchangeFactoryBaseNode_SetCustomSubPath final
{
public:
	class FString                                 AttributeValue;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_SetCustomSubPath) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_SetCustomSubPath");
static_assert(sizeof(InterchangeFactoryBaseNode_SetCustomSubPath) == 0x000018, "Wrong size on InterchangeFactoryBaseNode_SetCustomSubPath");
static_assert(offsetof(InterchangeFactoryBaseNode_SetCustomSubPath, AttributeValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_SetCustomSubPath::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_SetCustomSubPath, ReturnValue) == 0x000010, "Member 'InterchangeFactoryBaseNode_SetCustomSubPath::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.SetForceNodeReimport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_SetForceNodeReimport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_SetForceNodeReimport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_SetForceNodeReimport");
static_assert(sizeof(InterchangeFactoryBaseNode_SetForceNodeReimport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_SetForceNodeReimport");
static_assert(offsetof(InterchangeFactoryBaseNode_SetForceNodeReimport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_SetForceNodeReimport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.SetReimportStrategyFlags
// 0x0002 (0x0002 - 0x0000)
struct InterchangeFactoryBaseNode_SetReimportStrategyFlags final
{
public:
	EReimportStrategyFlags                        ReimportStrategyFlags;                             // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_SetReimportStrategyFlags) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_SetReimportStrategyFlags");
static_assert(sizeof(InterchangeFactoryBaseNode_SetReimportStrategyFlags) == 0x000002, "Wrong size on InterchangeFactoryBaseNode_SetReimportStrategyFlags");
static_assert(offsetof(InterchangeFactoryBaseNode_SetReimportStrategyFlags, ReimportStrategyFlags) == 0x000000, "Member 'InterchangeFactoryBaseNode_SetReimportStrategyFlags::ReimportStrategyFlags' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_SetReimportStrategyFlags, ReturnValue) == 0x000001, "Member 'InterchangeFactoryBaseNode_SetReimportStrategyFlags::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.SetSkipNodeImport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_SetSkipNodeImport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_SetSkipNodeImport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_SetSkipNodeImport");
static_assert(sizeof(InterchangeFactoryBaseNode_SetSkipNodeImport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_SetSkipNodeImport");
static_assert(offsetof(InterchangeFactoryBaseNode_SetSkipNodeImport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_SetSkipNodeImport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.UnsetForceNodeReimport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_UnsetForceNodeReimport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_UnsetForceNodeReimport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_UnsetForceNodeReimport");
static_assert(sizeof(InterchangeFactoryBaseNode_UnsetForceNodeReimport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_UnsetForceNodeReimport");
static_assert(offsetof(InterchangeFactoryBaseNode_UnsetForceNodeReimport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_UnsetForceNodeReimport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.UnsetSkipNodeImport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_UnsetSkipNodeImport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_UnsetSkipNodeImport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_UnsetSkipNodeImport");
static_assert(sizeof(InterchangeFactoryBaseNode_UnsetSkipNodeImport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_UnsetSkipNodeImport");
static_assert(offsetof(InterchangeFactoryBaseNode_UnsetSkipNodeImport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_UnsetSkipNodeImport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetCustomReferenceObject
// 0x0028 (0x0028 - 0x0000)
struct InterchangeFactoryBaseNode_GetCustomReferenceObject final
{
public:
	struct FSoftObjectPath                        AttributeValue;                                    // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_GetCustomReferenceObject) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_GetCustomReferenceObject");
static_assert(sizeof(InterchangeFactoryBaseNode_GetCustomReferenceObject) == 0x000028, "Wrong size on InterchangeFactoryBaseNode_GetCustomReferenceObject");
static_assert(offsetof(InterchangeFactoryBaseNode_GetCustomReferenceObject, AttributeValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetCustomReferenceObject::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_GetCustomReferenceObject, ReturnValue) == 0x000020, "Member 'InterchangeFactoryBaseNode_GetCustomReferenceObject::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetCustomSubPath
// 0x0018 (0x0018 - 0x0000)
struct InterchangeFactoryBaseNode_GetCustomSubPath final
{
public:
	class FString                                 AttributeValue;                                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeFactoryBaseNode_GetCustomSubPath) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_GetCustomSubPath");
static_assert(sizeof(InterchangeFactoryBaseNode_GetCustomSubPath) == 0x000018, "Wrong size on InterchangeFactoryBaseNode_GetCustomSubPath");
static_assert(offsetof(InterchangeFactoryBaseNode_GetCustomSubPath, AttributeValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetCustomSubPath::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_GetCustomSubPath, ReturnValue) == 0x000010, "Member 'InterchangeFactoryBaseNode_GetCustomSubPath::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetFactoryDependencies
// 0x0010 (0x0010 - 0x0000)
struct InterchangeFactoryBaseNode_GetFactoryDependencies final
{
public:
	TArray<class FString>                         OutDependencies;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_GetFactoryDependencies) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_GetFactoryDependencies");
static_assert(sizeof(InterchangeFactoryBaseNode_GetFactoryDependencies) == 0x000010, "Wrong size on InterchangeFactoryBaseNode_GetFactoryDependencies");
static_assert(offsetof(InterchangeFactoryBaseNode_GetFactoryDependencies, OutDependencies) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetFactoryDependencies::OutDependencies' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetFactoryDependenciesCount
// 0x0004 (0x0004 - 0x0000)
struct InterchangeFactoryBaseNode_GetFactoryDependenciesCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_GetFactoryDependenciesCount) == 0x000004, "Wrong alignment on InterchangeFactoryBaseNode_GetFactoryDependenciesCount");
static_assert(sizeof(InterchangeFactoryBaseNode_GetFactoryDependenciesCount) == 0x000004, "Wrong size on InterchangeFactoryBaseNode_GetFactoryDependenciesCount");
static_assert(offsetof(InterchangeFactoryBaseNode_GetFactoryDependenciesCount, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetFactoryDependenciesCount::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetFactoryDependency
// 0x0018 (0x0018 - 0x0000)
struct InterchangeFactoryBaseNode_GetFactoryDependency final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutDependency;                                     // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_GetFactoryDependency) == 0x000008, "Wrong alignment on InterchangeFactoryBaseNode_GetFactoryDependency");
static_assert(sizeof(InterchangeFactoryBaseNode_GetFactoryDependency) == 0x000018, "Wrong size on InterchangeFactoryBaseNode_GetFactoryDependency");
static_assert(offsetof(InterchangeFactoryBaseNode_GetFactoryDependency, Index_0) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetFactoryDependency::Index_0' has a wrong offset!");
static_assert(offsetof(InterchangeFactoryBaseNode_GetFactoryDependency, OutDependency) == 0x000008, "Member 'InterchangeFactoryBaseNode_GetFactoryDependency::OutDependency' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.GetReimportStrategyFlags
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_GetReimportStrategyFlags final
{
public:
	EReimportStrategyFlags                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_GetReimportStrategyFlags) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_GetReimportStrategyFlags");
static_assert(sizeof(InterchangeFactoryBaseNode_GetReimportStrategyFlags) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_GetReimportStrategyFlags");
static_assert(offsetof(InterchangeFactoryBaseNode_GetReimportStrategyFlags, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_GetReimportStrategyFlags::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.ShouldForceNodeReimport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_ShouldForceNodeReimport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_ShouldForceNodeReimport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_ShouldForceNodeReimport");
static_assert(sizeof(InterchangeFactoryBaseNode_ShouldForceNodeReimport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_ShouldForceNodeReimport");
static_assert(offsetof(InterchangeFactoryBaseNode_ShouldForceNodeReimport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_ShouldForceNodeReimport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeFactoryBaseNode.ShouldSkipNodeImport
// 0x0001 (0x0001 - 0x0000)
struct InterchangeFactoryBaseNode_ShouldSkipNodeImport final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeFactoryBaseNode_ShouldSkipNodeImport) == 0x000001, "Wrong alignment on InterchangeFactoryBaseNode_ShouldSkipNodeImport");
static_assert(sizeof(InterchangeFactoryBaseNode_ShouldSkipNodeImport) == 0x000001, "Wrong size on InterchangeFactoryBaseNode_ShouldSkipNodeImport");
static_assert(offsetof(InterchangeFactoryBaseNode_ShouldSkipNodeImport, ReturnValue) == 0x000000, "Member 'InterchangeFactoryBaseNode_ShouldSkipNodeImport::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.InitializeSourceNode
// 0x0020 (0x0020 - 0x0000)
struct InterchangeSourceNode_InitializeSourceNode final
{
public:
	class FString                                 UniqueID;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayLabel;                                      // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeSourceNode_InitializeSourceNode) == 0x000008, "Wrong alignment on InterchangeSourceNode_InitializeSourceNode");
static_assert(sizeof(InterchangeSourceNode_InitializeSourceNode) == 0x000020, "Wrong size on InterchangeSourceNode_InitializeSourceNode");
static_assert(offsetof(InterchangeSourceNode_InitializeSourceNode, UniqueID) == 0x000000, "Member 'InterchangeSourceNode_InitializeSourceNode::UniqueID' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_InitializeSourceNode, DisplayLabel) == 0x000010, "Member 'InterchangeSourceNode_InitializeSourceNode::DisplayLabel' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomAnimatedTimeEnd
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_SetCustomAnimatedTimeEnd final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomAnimatedTimeEnd) == 0x000008, "Wrong alignment on InterchangeSourceNode_SetCustomAnimatedTimeEnd");
static_assert(sizeof(InterchangeSourceNode_SetCustomAnimatedTimeEnd) == 0x000010, "Wrong size on InterchangeSourceNode_SetCustomAnimatedTimeEnd");
static_assert(offsetof(InterchangeSourceNode_SetCustomAnimatedTimeEnd, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomAnimatedTimeEnd::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomAnimatedTimeEnd, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_SetCustomAnimatedTimeEnd::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomAnimatedTimeStart
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_SetCustomAnimatedTimeStart final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomAnimatedTimeStart) == 0x000008, "Wrong alignment on InterchangeSourceNode_SetCustomAnimatedTimeStart");
static_assert(sizeof(InterchangeSourceNode_SetCustomAnimatedTimeStart) == 0x000010, "Wrong size on InterchangeSourceNode_SetCustomAnimatedTimeStart");
static_assert(offsetof(InterchangeSourceNode_SetCustomAnimatedTimeStart, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomAnimatedTimeStart::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomAnimatedTimeStart, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_SetCustomAnimatedTimeStart::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomImportUnusedMaterial
// 0x0002 (0x0002 - 0x0000)
struct InterchangeSourceNode_SetCustomImportUnusedMaterial final
{
public:
	bool                                          AttributeValue;                                    // 0x0000(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeSourceNode_SetCustomImportUnusedMaterial) == 0x000001, "Wrong alignment on InterchangeSourceNode_SetCustomImportUnusedMaterial");
static_assert(sizeof(InterchangeSourceNode_SetCustomImportUnusedMaterial) == 0x000002, "Wrong size on InterchangeSourceNode_SetCustomImportUnusedMaterial");
static_assert(offsetof(InterchangeSourceNode_SetCustomImportUnusedMaterial, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomImportUnusedMaterial::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomImportUnusedMaterial, ReturnValue) == 0x000001, "Member 'InterchangeSourceNode_SetCustomImportUnusedMaterial::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomSourceFrameRateDenominator
// 0x0008 (0x0008 - 0x0000)
struct InterchangeSourceNode_SetCustomSourceFrameRateDenominator final
{
public:
	int32                                         AttributeValue;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomSourceFrameRateDenominator) == 0x000004, "Wrong alignment on InterchangeSourceNode_SetCustomSourceFrameRateDenominator");
static_assert(sizeof(InterchangeSourceNode_SetCustomSourceFrameRateDenominator) == 0x000008, "Wrong size on InterchangeSourceNode_SetCustomSourceFrameRateDenominator");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceFrameRateDenominator, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomSourceFrameRateDenominator::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceFrameRateDenominator, ReturnValue) == 0x000004, "Member 'InterchangeSourceNode_SetCustomSourceFrameRateDenominator::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomSourceFrameRateNumerator
// 0x0008 (0x0008 - 0x0000)
struct InterchangeSourceNode_SetCustomSourceFrameRateNumerator final
{
public:
	int32                                         AttributeValue;                                    // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomSourceFrameRateNumerator) == 0x000004, "Wrong alignment on InterchangeSourceNode_SetCustomSourceFrameRateNumerator");
static_assert(sizeof(InterchangeSourceNode_SetCustomSourceFrameRateNumerator) == 0x000008, "Wrong size on InterchangeSourceNode_SetCustomSourceFrameRateNumerator");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceFrameRateNumerator, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomSourceFrameRateNumerator::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceFrameRateNumerator, ReturnValue) == 0x000004, "Member 'InterchangeSourceNode_SetCustomSourceFrameRateNumerator::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomSourceTimelineEnd
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_SetCustomSourceTimelineEnd final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomSourceTimelineEnd) == 0x000008, "Wrong alignment on InterchangeSourceNode_SetCustomSourceTimelineEnd");
static_assert(sizeof(InterchangeSourceNode_SetCustomSourceTimelineEnd) == 0x000010, "Wrong size on InterchangeSourceNode_SetCustomSourceTimelineEnd");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceTimelineEnd, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomSourceTimelineEnd::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceTimelineEnd, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_SetCustomSourceTimelineEnd::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.SetCustomSourceTimelineStart
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_SetCustomSourceTimelineStart final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_SetCustomSourceTimelineStart) == 0x000008, "Wrong alignment on InterchangeSourceNode_SetCustomSourceTimelineStart");
static_assert(sizeof(InterchangeSourceNode_SetCustomSourceTimelineStart) == 0x000010, "Wrong size on InterchangeSourceNode_SetCustomSourceTimelineStart");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceTimelineStart, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_SetCustomSourceTimelineStart::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_SetCustomSourceTimelineStart, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_SetCustomSourceTimelineStart::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomAnimatedTimeEnd
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_GetCustomAnimatedTimeEnd final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomAnimatedTimeEnd) == 0x000008, "Wrong alignment on InterchangeSourceNode_GetCustomAnimatedTimeEnd");
static_assert(sizeof(InterchangeSourceNode_GetCustomAnimatedTimeEnd) == 0x000010, "Wrong size on InterchangeSourceNode_GetCustomAnimatedTimeEnd");
static_assert(offsetof(InterchangeSourceNode_GetCustomAnimatedTimeEnd, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomAnimatedTimeEnd::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomAnimatedTimeEnd, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_GetCustomAnimatedTimeEnd::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomAnimatedTimeStart
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_GetCustomAnimatedTimeStart final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomAnimatedTimeStart) == 0x000008, "Wrong alignment on InterchangeSourceNode_GetCustomAnimatedTimeStart");
static_assert(sizeof(InterchangeSourceNode_GetCustomAnimatedTimeStart) == 0x000010, "Wrong size on InterchangeSourceNode_GetCustomAnimatedTimeStart");
static_assert(offsetof(InterchangeSourceNode_GetCustomAnimatedTimeStart, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomAnimatedTimeStart::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomAnimatedTimeStart, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_GetCustomAnimatedTimeStart::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomImportUnusedMaterial
// 0x0002 (0x0002 - 0x0000)
struct InterchangeSourceNode_GetCustomImportUnusedMaterial final
{
public:
	bool                                          AttributeValue;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeSourceNode_GetCustomImportUnusedMaterial) == 0x000001, "Wrong alignment on InterchangeSourceNode_GetCustomImportUnusedMaterial");
static_assert(sizeof(InterchangeSourceNode_GetCustomImportUnusedMaterial) == 0x000002, "Wrong size on InterchangeSourceNode_GetCustomImportUnusedMaterial");
static_assert(offsetof(InterchangeSourceNode_GetCustomImportUnusedMaterial, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomImportUnusedMaterial::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomImportUnusedMaterial, ReturnValue) == 0x000001, "Member 'InterchangeSourceNode_GetCustomImportUnusedMaterial::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomSourceFrameRateDenominator
// 0x0008 (0x0008 - 0x0000)
struct InterchangeSourceNode_GetCustomSourceFrameRateDenominator final
{
public:
	int32                                         AttributeValue;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomSourceFrameRateDenominator) == 0x000004, "Wrong alignment on InterchangeSourceNode_GetCustomSourceFrameRateDenominator");
static_assert(sizeof(InterchangeSourceNode_GetCustomSourceFrameRateDenominator) == 0x000008, "Wrong size on InterchangeSourceNode_GetCustomSourceFrameRateDenominator");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceFrameRateDenominator, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomSourceFrameRateDenominator::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceFrameRateDenominator, ReturnValue) == 0x000004, "Member 'InterchangeSourceNode_GetCustomSourceFrameRateDenominator::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomSourceFrameRateNumerator
// 0x0008 (0x0008 - 0x0000)
struct InterchangeSourceNode_GetCustomSourceFrameRateNumerator final
{
public:
	int32                                         AttributeValue;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomSourceFrameRateNumerator) == 0x000004, "Wrong alignment on InterchangeSourceNode_GetCustomSourceFrameRateNumerator");
static_assert(sizeof(InterchangeSourceNode_GetCustomSourceFrameRateNumerator) == 0x000008, "Wrong size on InterchangeSourceNode_GetCustomSourceFrameRateNumerator");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceFrameRateNumerator, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomSourceFrameRateNumerator::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceFrameRateNumerator, ReturnValue) == 0x000004, "Member 'InterchangeSourceNode_GetCustomSourceFrameRateNumerator::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomSourceTimelineEnd
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_GetCustomSourceTimelineEnd final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomSourceTimelineEnd) == 0x000008, "Wrong alignment on InterchangeSourceNode_GetCustomSourceTimelineEnd");
static_assert(sizeof(InterchangeSourceNode_GetCustomSourceTimelineEnd) == 0x000010, "Wrong size on InterchangeSourceNode_GetCustomSourceTimelineEnd");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceTimelineEnd, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomSourceTimelineEnd::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceTimelineEnd, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_GetCustomSourceTimelineEnd::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeSourceNode.GetCustomSourceTimelineStart
// 0x0010 (0x0010 - 0x0000)
struct InterchangeSourceNode_GetCustomSourceTimelineStart final
{
public:
	double                                        AttributeValue;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeSourceNode_GetCustomSourceTimelineStart) == 0x000008, "Wrong alignment on InterchangeSourceNode_GetCustomSourceTimelineStart");
static_assert(sizeof(InterchangeSourceNode_GetCustomSourceTimelineStart) == 0x000010, "Wrong size on InterchangeSourceNode_GetCustomSourceTimelineStart");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceTimelineStart, AttributeValue) == 0x000000, "Member 'InterchangeSourceNode_GetCustomSourceTimelineStart::AttributeValue' has a wrong offset!");
static_assert(offsetof(InterchangeSourceNode_GetCustomSourceTimelineStart, ReturnValue) == 0x000008, "Member 'InterchangeSourceNode_GetCustomSourceTimelineStart::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.CreateUserDefinedAttribute_Boolean
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0018(0x0001)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PayloadKey;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequiresDelegate;                                  // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, Value) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::Value' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, PayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::PayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, RequiresDelegate) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::RequiresDelegate' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean, ReturnValue) == 0x000031, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Boolean::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.CreateUserDefinedAttribute_Double
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0018(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PayloadKey;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequiresDelegate;                                  // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, Value) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::Value' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, PayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::PayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, RequiresDelegate) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::RequiresDelegate' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double, ReturnValue) == 0x000031, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Double::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.CreateUserDefinedAttribute_Float
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PayloadKey;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequiresDelegate;                                  // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, Value) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::Value' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, PayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::PayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, RequiresDelegate) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::RequiresDelegate' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float, ReturnValue) == 0x000031, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Float::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.CreateUserDefinedAttribute_FString
// 0x0040 (0x0040 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PayloadKey;                                        // 0x0028(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequiresDelegate;                                  // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString) == 0x000040, "Wrong size on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, Value) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::Value' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, PayloadKey) == 0x000028, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::PayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, RequiresDelegate) == 0x000038, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::RequiresDelegate' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString, ReturnValue) == 0x000039, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_FString::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.CreateUserDefinedAttribute_Int32
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32 final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PayloadKey;                                        // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          RequiresDelegate;                                  // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, Value) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::Value' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, PayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::PayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, RequiresDelegate) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::RequiresDelegate' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32, ReturnValue) == 0x000031, "Member 'InterchangeUserDefinedAttributesAPI_CreateUserDefinedAttribute_Int32::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.DuplicateAllUserDefinedAttribute
// 0x0018 (0x0018 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute final
{
public:
	const class UInterchangeBaseNode*             InterchangeSourceNode;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInterchangeBaseNode*                   InterchangeDestinationNode;                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAddSourceNodeName;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute) == 0x000018, "Wrong size on InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute, InterchangeSourceNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute::InterchangeSourceNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute, InterchangeDestinationNode) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute::InterchangeDestinationNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute, bAddSourceNodeName) == 0x000010, "Member 'InterchangeUserDefinedAttributesAPI_DuplicateAllUserDefinedAttribute::bAddSourceNodeName' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttribute_Boolean
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OutValue;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutPayloadKey;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean, OutValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean, OutPayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean::OutPayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean, ReturnValue) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Boolean::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttribute_Double
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        OutValue;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutPayloadKey;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double, OutValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double, OutPayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double::OutPayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double, ReturnValue) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Double::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttribute_Float
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutValue;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutPayloadKey;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float, OutValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float, OutPayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float::OutPayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float, ReturnValue) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Float::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttribute_FString
// 0x0040 (0x0040 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutValue;                                          // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutPayloadKey;                                     // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString) == 0x000040, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString, OutValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString, OutPayloadKey) == 0x000028, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString::OutPayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString, ReturnValue) == 0x000038, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_FString::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttribute_Int32
// 0x0038 (0x0038 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32 final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutValue;                                          // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutPayloadKey;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32) == 0x000038, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32, OutValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32::OutValue' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32, OutPayloadKey) == 0x000020, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32::OutPayloadKey' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32, ReturnValue) == 0x000030, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttribute_Int32::ReturnValue' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.GetUserDefinedAttributeInfos
// 0x0018 (0x0018 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos final
{
public:
	const class UInterchangeBaseNode*             InterchangeNode;                                   // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInterchangeUserDefinedAttributeInfo> UserDefinedAttributeInfos;                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos) == 0x000018, "Wrong size on InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos, UserDefinedAttributeInfos) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_GetUserDefinedAttributeInfos::UserDefinedAttributeInfos' has a wrong offset!");

// Function InterchangeCore.InterchangeUserDefinedAttributesAPI.RemoveUserDefinedAttribute
// 0x0020 (0x0020 - 0x0000)
struct InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute final
{
public:
	class UInterchangeBaseNode*                   InterchangeNode;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDefinedAttributeName;                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute) == 0x000008, "Wrong alignment on InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute");
static_assert(sizeof(InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute) == 0x000020, "Wrong size on InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute, InterchangeNode) == 0x000000, "Member 'InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute::InterchangeNode' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute, UserDefinedAttributeName) == 0x000008, "Member 'InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute::UserDefinedAttributeName' has a wrong offset!");
static_assert(offsetof(InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute, ReturnValue) == 0x000018, "Member 'InterchangeUserDefinedAttributesAPI_RemoveUserDefinedAttribute::ReturnValue' has a wrong offset!");

}

