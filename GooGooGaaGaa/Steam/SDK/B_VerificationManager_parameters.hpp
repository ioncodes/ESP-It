#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_VerificationManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_VerificationManager.B_VerificationManager_C.ExecuteUbergraph_B_VerificationManager
// 0x0018 (0x0018 - 0x0000)
struct B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager) == 0x000008, "Wrong alignment on B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager");
static_assert(sizeof(B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager) == 0x000018, "Wrong size on B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager");
static_assert(offsetof(B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager, EntryPoint) == 0x000000, "Member 'B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_VerificationManager_C_ExecuteUbergraph_B_VerificationManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_VerificationManager.B_VerificationManager_C.VerifySteamConnection
// 0x0028 (0x0028 - 0x0000)
struct B_VerificationManager_C_VerifySteamConnection final
{
public:
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevel_Level;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSteamValid_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_VerificationManager_C_VerifySteamConnection) == 0x000008, "Wrong alignment on B_VerificationManager_C_VerifySteamConnection");
static_assert(sizeof(B_VerificationManager_C_VerifySteamConnection) == 0x000028, "Wrong size on B_VerificationManager_C_VerifySteamConnection");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, K2Node_DynamicCast_AsB_Game_Instance) == 0x000000, "Member 'B_VerificationManager_C_VerifySteamConnection::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'B_VerificationManager_C_VerifySteamConnection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000010, "Member 'B_VerificationManager_C_VerifySteamConnection::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'B_VerificationManager_C_VerifySteamConnection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, CallFunc_GetLevel_Level) == 0x00001C, "Member 'B_VerificationManager_C_VerifySteamConnection::CallFunc_GetLevel_Level' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, CallFunc_IsSteamValid_ReturnValue) == 0x000020, "Member 'B_VerificationManager_C_VerifySteamConnection::CallFunc_IsSteamValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_VerificationManager_C_VerifySteamConnection, CallFunc_Greater_IntInt_ReturnValue) == 0x000021, "Member 'B_VerificationManager_C_VerifySteamConnection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

