#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamWorkshop

#include "Basic.hpp"

#include "SteamGeneral_structs.hpp"
#include "SteamWorkshop_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemAppDependency.SteamWorkshop_AddRemoveAppDependency
// 0x0018 (0x0018 - 0x0000)
struct CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamAppId                            DependendAppId;                                    // 0x0008(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAddAppDependency;                                 // 0x000C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxyAddRemoveWorkshopItemAppDependency* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency) == 0x000008, "Wrong alignment on CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency");
static_assert(sizeof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency) == 0x000018, "Wrong size on CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency, ItemId) == 0x000000, "Member 'CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency, DependendAppId) == 0x000008, "Member 'CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency::DependendAppId' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency, bAddAppDependency) == 0x00000C, "Member 'CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency::bAddAppDependency' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency, ReturnValue) == 0x000010, "Member 'CallbackProxyAddRemoveWorkshopItemAppDependency_SteamWorkshop_AddRemoveAppDependency::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemFavorite.SteamWorkshop_AddRemoveItemFavorite
// 0x0018 (0x0018 - 0x0000)
struct CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAddToFavourites;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxyAddRemoveWorkshopItemFavorite* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite) == 0x000008, "Wrong alignment on CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite");
static_assert(sizeof(CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite) == 0x000018, "Wrong size on CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite, ItemId) == 0x000000, "Member 'CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite, bAddToFavourites) == 0x000008, "Member 'CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite::bAddToFavourites' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite, ReturnValue) == 0x000010, "Member 'CallbackProxyAddRemoveWorkshopItemFavorite_SteamWorkshop_AddRemoveItemFavorite::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyAddRemoveWorkshopItemItemdependency.SteamWorkshop_AddRemoveItemDependency
// 0x0020 (0x0020 - 0x0000)
struct CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamUGCItemId                        DependendItemId;                                   // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAddDependency;                                    // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxyAddRemoveWorkshopItemItemdependency* ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency) == 0x000008, "Wrong alignment on CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency");
static_assert(sizeof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency) == 0x000020, "Wrong size on CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency, ItemId) == 0x000000, "Member 'CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency, DependendItemId) == 0x000008, "Member 'CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency::DependendItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency, bAddDependency) == 0x000010, "Member 'CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency::bAddDependency' has a wrong offset!");
static_assert(offsetof(CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency, ReturnValue) == 0x000018, "Member 'CallbackProxyAddRemoveWorkshopItemItemdependency_SteamWorkshop_AddRemoveItemDependency::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyCreateWorkshopItem.SteamWorkshop_CreateItem
// 0x00D8 (0x00D8 - 0x0000)
struct CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem final
{
public:
	struct FSteamWorkshopUpdateDetails            ItemDetails;                                       // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UCallbackProxyCreateWorkshopItem*       ReturnValue;                                       // 0x00D0(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem) == 0x000008, "Wrong alignment on CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem");
static_assert(sizeof(CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem) == 0x0000D8, "Wrong size on CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem");
static_assert(offsetof(CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem, ItemDetails) == 0x000000, "Member 'CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem::ItemDetails' has a wrong offset!");
static_assert(offsetof(CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem, ReturnValue) == 0x0000D0, "Member 'CallbackProxyCreateWorkshopItem_SteamWorkshop_CreateItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyDeleteWorkshopItem.SteamWorkshop_DeleteItem
// 0x0010 (0x0010 - 0x0000)
struct CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UCallbackProxyDeleteWorkshopItem*       ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem) == 0x000008, "Wrong alignment on CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem");
static_assert(sizeof(CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem) == 0x000010, "Wrong size on CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem");
static_assert(offsetof(CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem, ItemId) == 0x000000, "Member 'CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem, ReturnValue) == 0x000008, "Member 'CallbackProxyDeleteWorkshopItem_SteamWorkshop_DeleteItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyGetWorkshopItemAppDependencies.SteamWorkshop_GetAppDependencies
// 0x0010 (0x0010 - 0x0000)
struct CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UCallbackProxyGetWorkshopItemAppDependencies* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies) == 0x000008, "Wrong alignment on CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies");
static_assert(sizeof(CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies) == 0x000010, "Wrong size on CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies");
static_assert(offsetof(CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies, ItemId) == 0x000000, "Member 'CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies, ReturnValue) == 0x000008, "Member 'CallbackProxyGetWorkshopItemAppDependencies_SteamWorkshop_GetAppDependencies::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyGetUserVoteOnWorkshopItem.SteamWorkshop_GetUserVoteOnItem
// 0x0010 (0x0010 - 0x0000)
struct CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	class UCallbackProxyGetUserVoteOnWorkshopItem* ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem) == 0x000008, "Wrong alignment on CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem");
static_assert(sizeof(CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem) == 0x000010, "Wrong size on CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem");
static_assert(offsetof(CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem, ItemId) == 0x000000, "Member 'CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem, ReturnValue) == 0x000008, "Member 'CallbackProxyGetUserVoteOnWorkshopItem_SteamWorkshop_GetUserVoteOnItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyQueryWorkshopForAllItems.SteamWorkshop_QueryForAllItems
// 0x0070 (0x0070 - 0x0000)
struct CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems final
{
public:
	struct FSteamUGCQueryParameterAll             Parameter;                                         // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UCallbackProxyQueryWorkshopForAllItems* ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems) == 0x000008, "Wrong alignment on CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems");
static_assert(sizeof(CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems) == 0x000070, "Wrong size on CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems");
static_assert(offsetof(CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems, Parameter) == 0x000000, "Member 'CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems::Parameter' has a wrong offset!");
static_assert(offsetof(CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems, ReturnValue) == 0x000068, "Member 'CallbackProxyQueryWorkshopForAllItems_SteamWorkshop_QueryForAllItems::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyQueryWorkshopForItemDetails.SteamWorkshop_QueryForItemDetails
// 0x0040 (0x0040 - 0x0000)
struct CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails final
{
public:
	struct FSteamUGCQueryParameterDetails         Parameter;                                         // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UCallbackProxyQueryWorkshopForItemDetails* ReturnValue;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails) == 0x000008, "Wrong alignment on CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails");
static_assert(sizeof(CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails) == 0x000040, "Wrong size on CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails");
static_assert(offsetof(CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails, Parameter) == 0x000000, "Member 'CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails::Parameter' has a wrong offset!");
static_assert(offsetof(CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails, ReturnValue) == 0x000038, "Member 'CallbackProxyQueryWorkshopForItemDetails_SteamWorkshop_QueryForItemDetails::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyQueryWorkshopForUserItems.SteamWorkshop_QueryForUserItems
// 0x0070 (0x0070 - 0x0000)
struct CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems final
{
public:
	struct FSteamUGCQueryParameterUser            Parameter;                                         // 0x0000(0x0068)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class UCallbackProxyQueryWorkshopForUserItems* ReturnValue;                                       // 0x0068(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems) == 0x000008, "Wrong alignment on CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems");
static_assert(sizeof(CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems) == 0x000070, "Wrong size on CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems");
static_assert(offsetof(CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems, Parameter) == 0x000000, "Member 'CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems::Parameter' has a wrong offset!");
static_assert(offsetof(CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems, ReturnValue) == 0x000068, "Member 'CallbackProxyQueryWorkshopForUserItems_SteamWorkshop_QueryForUserItems::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxySetUserVoteOnWorkshopItem.SteamWorkshop_SetUserVoteOnItem
// 0x0018 (0x0018 - 0x0000)
struct CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bVoteUp;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxySetUserVoteOnWorkshopItem* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem) == 0x000008, "Wrong alignment on CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem");
static_assert(sizeof(CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem) == 0x000018, "Wrong size on CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem");
static_assert(offsetof(CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem, ItemId) == 0x000000, "Member 'CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem, bVoteUp) == 0x000008, "Member 'CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem::bVoteUp' has a wrong offset!");
static_assert(offsetof(CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem, ReturnValue) == 0x000010, "Member 'CallbackProxySetUserVoteOnWorkshopItem_SteamWorkshop_SetUserVoteOnItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyStartStopWorkshopItemsPlaytimeTracking.SteamWorkshop_StartStopItemsPlaytimeTracking
// 0x0020 (0x0020 - 0x0000)
struct CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking final
{
public:
	TArray<struct FSteamUGCItemId>                ItemIds;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bStartPlaytimeTracking;                            // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxyStartStopWorkshopItemsPlaytimeTracking* ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking) == 0x000008, "Wrong alignment on CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking");
static_assert(sizeof(CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking) == 0x000020, "Wrong size on CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking");
static_assert(offsetof(CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking, ItemIds) == 0x000000, "Member 'CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking::ItemIds' has a wrong offset!");
static_assert(offsetof(CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking, bStartPlaytimeTracking) == 0x000010, "Member 'CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking::bStartPlaytimeTracking' has a wrong offset!");
static_assert(offsetof(CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking, ReturnValue) == 0x000018, "Member 'CallbackProxyStartStopWorkshopItemsPlaytimeTracking_SteamWorkshop_StartStopItemsPlaytimeTracking::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems.SteamWorkshop_StopPlaytimeTrackingAllItems
// 0x0008 (0x0008 - 0x0000)
struct CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems final
{
public:
	class UCallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems* ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems) == 0x000008, "Wrong alignment on CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems");
static_assert(sizeof(CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems) == 0x000008, "Wrong size on CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems");
static_assert(offsetof(CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems, ReturnValue) == 0x000000, "Member 'CallbackProxyStopWorkshopItemsPlaytimeTrackingAllItems_SteamWorkshop_StopPlaytimeTrackingAllItems::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxySubscribeUnsubscribeWorkshopItem.SteamWorkshop_SubscribeUnsubscribeItem
// 0x0018 (0x0018 - 0x0000)
struct CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bSubscribe;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCallbackProxySubscribeUnsubscribeWorkshopItem* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem) == 0x000008, "Wrong alignment on CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem");
static_assert(sizeof(CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem) == 0x000018, "Wrong size on CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem");
static_assert(offsetof(CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem, ItemId) == 0x000000, "Member 'CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem, bSubscribe) == 0x000008, "Member 'CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem::bSubscribe' has a wrong offset!");
static_assert(offsetof(CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem, ReturnValue) == 0x000010, "Member 'CallbackProxySubscribeUnsubscribeWorkshopItem_SteamWorkshop_SubscribeUnsubscribeItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.CallbackProxyUpdateWorkshopItem.SteamWorkshop_UpdateItem
// 0x00F0 (0x00F0 - 0x0000)
struct CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamWorkshopUpdateDetails            UpdateDetails;                                     // 0x0008(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	TDelegate<void(const struct FSteamUGCUpdateHandle& UpdateHandle)> OnUpdateStarted;                                   // 0x00D8(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCallbackProxyUpdateWorkshopItem*       ReturnValue;                                       // 0x00E8(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem) == 0x000008, "Wrong alignment on CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem");
static_assert(sizeof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem) == 0x0000F0, "Wrong size on CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem");
static_assert(offsetof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem, ItemId) == 0x000000, "Member 'CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem::ItemId' has a wrong offset!");
static_assert(offsetof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem, UpdateDetails) == 0x000008, "Member 'CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem::UpdateDetails' has a wrong offset!");
static_assert(offsetof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem, OnUpdateStarted) == 0x0000D8, "Member 'CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem::OnUpdateStarted' has a wrong offset!");
static_assert(offsetof(CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem, ReturnValue) == 0x0000E8, "Member 'CallbackProxyUpdateWorkshopItem_SteamWorkshop_UpdateItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamUGCQueryParameterTagsAllUser
// 0x0060 (0x0060 - 0x0000)
struct SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser final
{
public:
	TArray<class FString>                         RequiredTags;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         ExcludedTags;                                      // 0x0010(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSteamKeyValuePair>             RequiredKeyValueTags;                              // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSteamUGCQueryParameterTagsAllUser     ReturnValue;                                       // 0x0030(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser");
static_assert(sizeof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser) == 0x000060, "Wrong size on SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser, RequiredTags) == 0x000000, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser::RequiredTags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser, ExcludedTags) == 0x000010, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser::ExcludedTags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser, RequiredKeyValueTags) == 0x000020, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser::RequiredKeyValueTags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser, ReturnValue) == 0x000030, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUser::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamUGCQueryParameterTagsAllUserDetails
// 0x0020 (0x0020 - 0x0000)
struct SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails final
{
public:
	TArray<struct FSteamKeyValuePair>             RequiredKeyValueTags;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	struct FSteamUGCQueryParameterTagsAllUserDetails ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails");
static_assert(sizeof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails) == 0x000020, "Wrong size on SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails, RequiredKeyValueTags) == 0x000000, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails::RequiredKeyValueTags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails, ReturnValue) == 0x000010, "Member 'SteamWorkshopLibrary_MakeSteamUGCQueryParameterTagsAllUserDetails::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.MakeSteamWorkshopUpdateDetails
// 0x0198 (0x0198 - 0x0000)
struct SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0010(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UpdateNotice;                                      // 0x0020(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MetaData;                                          // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         Tags;                                              // 0x0040(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<struct FSteamKeyValuePair>             KeyValueTags;                                      // 0x0050(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ContentDirectory;                                  // 0x0060(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreviewImage;                                      // 0x0070(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AdditionalImages;                                  // 0x0080(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         YoutubeVideoIDs;                                   // 0x0090(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<class FString>                         KeysOfKeyValueTagsToRemove;                        // 0x00A0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	TArray<int32>                                 IndexOfPreviewToRemove;                            // 0x00B0(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	ESteamSupportedLanguages                      UpdateLanguage;                                    // 0x00C0(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamItemVisibility                          Visibility;                                        // 0x00C1(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamWorkshopUpdateDetails            ReturnValue;                                       // 0x00C8(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails");
static_assert(sizeof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails) == 0x000198, "Wrong size on SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, Title) == 0x000000, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::Title' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, Description) == 0x000010, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::Description' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, UpdateNotice) == 0x000020, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::UpdateNotice' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, MetaData) == 0x000030, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::MetaData' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, Tags) == 0x000040, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::Tags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, KeyValueTags) == 0x000050, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::KeyValueTags' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, ContentDirectory) == 0x000060, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::ContentDirectory' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, PreviewImage) == 0x000070, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::PreviewImage' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, AdditionalImages) == 0x000080, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::AdditionalImages' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, YoutubeVideoIDs) == 0x000090, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::YoutubeVideoIDs' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, KeysOfKeyValueTagsToRemove) == 0x0000A0, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::KeysOfKeyValueTagsToRemove' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, IndexOfPreviewToRemove) == 0x0000B0, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::IndexOfPreviewToRemove' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, UpdateLanguage) == 0x0000C0, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::UpdateLanguage' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, Visibility) == 0x0000C1, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::Visibility' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails, ReturnValue) == 0x0000C8, "Member 'SteamWorkshopLibrary_MakeSteamWorkshopUpdateDetails::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.PrintWorkshopItemDetails
// 0x0128 (0x0128 - 0x0000)
struct SteamWorkshopLibrary_PrintWorkshopItemDetails final
{
public:
	struct FSteamWorkshopItemDetails              ItemDetails;                                       // 0x0000(0x0110)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	float                                         DisplayTime;                                       // 0x0110(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           Color;                                             // 0x0114(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0124(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0125(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_PrintWorkshopItemDetails) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_PrintWorkshopItemDetails");
static_assert(sizeof(SteamWorkshopLibrary_PrintWorkshopItemDetails) == 0x000128, "Wrong size on SteamWorkshopLibrary_PrintWorkshopItemDetails");
static_assert(offsetof(SteamWorkshopLibrary_PrintWorkshopItemDetails, ItemDetails) == 0x000000, "Member 'SteamWorkshopLibrary_PrintWorkshopItemDetails::ItemDetails' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_PrintWorkshopItemDetails, DisplayTime) == 0x000110, "Member 'SteamWorkshopLibrary_PrintWorkshopItemDetails::DisplayTime' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_PrintWorkshopItemDetails, Color) == 0x000114, "Member 'SteamWorkshopLibrary_PrintWorkshopItemDetails::Color' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_PrintWorkshopItemDetails, bPrintToScreen) == 0x000124, "Member 'SteamWorkshopLibrary_PrintWorkshopItemDetails::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_PrintWorkshopItemDetails, bPrintToLog) == 0x000125, "Member 'SteamWorkshopLibrary_PrintWorkshopItemDetails::bPrintToLog' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamDelegate_OnWorkshopItemDownloaded_Bind
// 0x0014 (0x0014 - 0x0000)
struct SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind final
{
public:
	TDelegate<void(const struct FDownloadItemResult& Result)> DelegateToCall;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind) == 0x000004, "Wrong alignment on SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind");
static_assert(sizeof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind) == 0x000014, "Wrong size on SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind");
static_assert(offsetof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind, DelegateToCall) == 0x000000, "Member 'SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind::DelegateToCall' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind, ReturnValue) == 0x000010, "Member 'SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Bind::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamDelegate_OnWorkshopItemDownloaded_Unbind
// 0x0014 (0x0014 - 0x0000)
struct SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind final
{
public:
	TDelegate<void(const struct FDownloadItemResult& Result)> DelegateToCall;                                    // 0x0000(0x0010)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind) == 0x000004, "Wrong alignment on SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind");
static_assert(sizeof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind) == 0x000014, "Wrong size on SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind");
static_assert(offsetof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind, DelegateToCall) == 0x000000, "Member 'SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind::DelegateToCall' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind, ReturnValue) == 0x000010, "Member 'SteamWorkshopLibrary_SteamDelegate_OnWorkshopItemDownloaded_Unbind::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_ActivateGameOverlayToWorkshopItem
// 0x0008 (0x0008 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem) == 0x000008, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_ActivateGameOverlayToWorkshopItem::ItemId' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_DownloadItem
// 0x0010 (0x0010 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_DownloadItem final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bHighPriority;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EResultBP                                     ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_DownloadItem) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_DownloadItem");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_DownloadItem) == 0x000010, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_DownloadItem");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_DownloadItem, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_DownloadItem::ItemId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_DownloadItem, bHighPriority) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_DownloadItem::bHighPriority' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_DownloadItem, ReturnValue) == 0x000009, "Member 'SteamWorkshopLibrary_SteamWorkshop_DownloadItem::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemDownloadInfo
// 0x0030 (0x0030 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FWorkshopItemDownloadInfo              DownloadInfo;                                      // 0x0008(0x0020)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	EResultBP                                     ReturnValue;                                       // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo) == 0x000030, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo::ItemId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo, DownloadInfo) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo::DownloadInfo' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo, ReturnValue) == 0x000028, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemDownloadInfo::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemInstallInfo
// 0x0038 (0x0038 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamWorkshopItemInstallInfo          Info;                                              // 0x0008(0x0028)(Parm, OutParm, NativeAccessSpecifierPublic)
	EResultBP                                     ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo) == 0x000038, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo::ItemId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo, Info) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo::Info' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo, ReturnValue) == 0x000030, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemInstallInfo::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemQueryStatistic
// 0x0020 (0x0020 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic final
{
public:
	struct FSteamUGCQueryHandle                   QueryHandle;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemStatisticBP                              StatToRetrieve;                                    // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUInt64                                StatValue;                                         // 0x0010(0x0008)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic) == 0x000020, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic, QueryHandle) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic::QueryHandle' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic, ItemIndex) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic::ItemIndex' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic, StatToRetrieve) == 0x00000C, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic::StatToRetrieve' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic, StatValue) == 0x000010, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic::StatValue' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic, ReturnValue) == 0x000018, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemQueryStatistic::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemState
// 0x0018 (0x0018 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemState final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	TArray<EItemStateBP>                          ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemState) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemState");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemState) == 0x000018, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemState");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemState, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemState::ItemId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemState, ReturnValue) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemState::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemStateFlag
// 0x0010 (0x0010 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag final
{
public:
	struct FSteamUGCItemId                        ItemId;                                            // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	EItemStateBP                                  FlagToQuery;                                       // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag) == 0x000010, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag, ItemId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag::ItemId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag, FlagToQuery) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag::FlagToQuery' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag, ReturnValue) == 0x000009, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemStateFlag::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetItemUpdateProgress
// 0x0030 (0x0030 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress final
{
public:
	struct FSteamUGCUpdateHandle                  UpdateHandle;                                      // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	struct FWorkshopItemUpdateInfo                Info;                                              // 0x0008(0x0028)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress) == 0x000030, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress, UpdateHandle) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress::UpdateHandle' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress, Info) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetItemUpdateProgress::Info' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetNumSubscribedItems
// 0x0004 (0x0004 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems) == 0x000004, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems) == 0x000004, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems, ReturnValue) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetNumSubscribedItems::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_GetSubscribedItems
// 0x0018 (0x0018 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems final
{
public:
	int32                                         MaxNumItemsToReturn;                               // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamUGCItemId>                OutItems;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems) == 0x000018, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems, MaxNumItemsToReturn) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems::MaxNumItemsToReturn' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems, OutItems) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_GetSubscribedItems::OutItems' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_SetServerDownloadDirectory
// 0x0020 (0x0020 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory final
{
public:
	struct FSteamDepotId                          ServerDepotId;                                     // 0x0000(0x0004)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Directory;                                         // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EResultBP                                     ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory) == 0x000008, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory) == 0x000020, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory, ServerDepotId) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory::ServerDepotId' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory, Directory) == 0x000008, "Member 'SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory::Directory' has a wrong offset!");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory, ReturnValue) == 0x000018, "Member 'SteamWorkshopLibrary_SteamWorkshop_SetServerDownloadDirectory::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_SuspendResumeDownloads
// 0x0001 (0x0001 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads final
{
public:
	bool                                          bDoSuspend;                                        // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads) == 0x000001, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads) == 0x000001, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads, bDoSuspend) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_SuspendResumeDownloads::bDoSuspend' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_UpdateDescriptionLengthMin_FromConfig
// 0x0004 (0x0004 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig) == 0x000004, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig) == 0x000004, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig, ReturnValue) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_UpdateDescriptionLengthMin_FromConfig::ReturnValue' has a wrong offset!");

// Function SteamWorkshop.SteamWorkshopLibrary.SteamWorkshop_UpdateTitleLengthMin_FromConfig
// 0x0004 (0x0004 - 0x0000)
struct SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig) == 0x000004, "Wrong alignment on SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig");
static_assert(sizeof(SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig) == 0x000004, "Wrong size on SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig");
static_assert(offsetof(SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig, ReturnValue) == 0x000000, "Member 'SteamWorkshopLibrary_SteamWorkshop_UpdateTitleLengthMin_FromConfig::ReturnValue' has a wrong offset!");

}

