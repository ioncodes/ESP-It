#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DamageEffect

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_DamageEffect.B_DamageEffect_C
// 0x0018 (0x00B8 - 0x00A0)
class UB_DamageEffect_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_ActorEvents_C*                       ActorEvents;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         ParticleSystem;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_DamageEffect(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SpawnEffect(class AController* Causer);
	void SpawnPointEffect(const struct FVector& HitLocation, const struct FVector& HitDirection, class AController* Causer);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_DamageEffect_C">();
	}
	static class UB_DamageEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_DamageEffect_C>();
	}
};
static_assert(alignof(UB_DamageEffect_C) == 0x000008, "Wrong alignment on UB_DamageEffect_C");
static_assert(sizeof(UB_DamageEffect_C) == 0x0000B8, "Wrong size on UB_DamageEffect_C");
static_assert(offsetof(UB_DamageEffect_C, UberGraphFrame) == 0x0000A0, "Member 'UB_DamageEffect_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_DamageEffect_C, ActorEvents) == 0x0000A8, "Member 'UB_DamageEffect_C::ActorEvents' has a wrong offset!");
static_assert(offsetof(UB_DamageEffect_C, ParticleSystem) == 0x0000B0, "Member 'UB_DamageEffect_C::ParticleSystem' has a wrong offset!");

}

