#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorPlayerController

#include "Basic.hpp"

#include "B_ImpostorPlayerController_classes.hpp"
#include "B_ImpostorPlayerController_parameters.hpp"


namespace SDK
{

// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.ExecuteUbergraph_B_ImpostorPlayerController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::ExecuteUbergraph_B_ImpostorPlayerController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "ExecuteUbergraph_B_ImpostorPlayerController");

	Params::B_ImpostorPlayerController_C_ExecuteUbergraph_B_ImpostorPlayerController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.InpActEvt_Action_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::InpActEvt_Action_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "InpActEvt_Action_K2Node_InputActionEvent_0");

	Params::B_ImpostorPlayerController_C_InpActEvt_Action_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.InpActEvt_Action_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::InpActEvt_Action_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "InpActEvt_Action_K2Node_InputActionEvent_1");

	Params::B_ImpostorPlayerController_C_InpActEvt_Action_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.InpActEvt_U_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::InpActEvt_U_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "InpActEvt_U_K2Node_InputKeyEvent_0");

	Params::B_ImpostorPlayerController_C_InpActEvt_U_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ImpostorPlayerController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "ReceiveTick");

	Params::B_ImpostorPlayerController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.SendChatMessageServerFunc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChatType                               ChatType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AB_ImpostorPlayerController_C::SendChatMessageServerFunc(EChatType ChatType, const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "SendChatMessageServerFunc");

	Params::B_ImpostorPlayerController_C_SendChatMessageServerFunc Parms{};

	Parms.ChatType = ChatType;
	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.SetReadyServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WantsToSpectate                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ready                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::SetReadyServer(bool WantsToSpectate, bool Ready)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "SetReadyServer");

	Params::B_ImpostorPlayerController_C_SetReadyServer Parms{};

	Parms.WantsToSpectate = WantsToSpectate;
	Parms.Ready = Ready;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.ShowPlayerListMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasRelease                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::ShowPlayerListMenu(bool WasRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "ShowPlayerListMenu");

	Params::B_ImpostorPlayerController_C_ShowPlayerListMenu Parms{};

	Parms.WasRelease = WasRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.TraceForTask
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorPlayerController_C::TraceForTask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "TraceForTask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.TraceForTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorPlayerController_C::TraceForTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "TraceForTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.TraceForVoteStart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorPlayerController_C::TraceForVoteStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "TraceForVoteStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerController.B_ImpostorPlayerController_C.TypeChatMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EChatType                               ChatType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerController_C::TypeChatMessage(EChatType ChatType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerController_C", "TypeChatMessage");

	Params::B_ImpostorPlayerController_C_TypeChatMessage Parms{};

	Parms.ChatType = ChatType;

	UObject::ProcessEvent(Func, &Parms);
}

}

