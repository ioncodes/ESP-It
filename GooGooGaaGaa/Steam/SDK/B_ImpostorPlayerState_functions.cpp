#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorPlayerState

#include "Basic.hpp"

#include "B_ImpostorPlayerState_classes.hpp"
#include "B_ImpostorPlayerState_parameters.hpp"


namespace SDK
{

// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ActivateCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SpyMonitor_C*                  CurrentMonitor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ActivateCamera(class AB_SpyMonitor_C* CurrentMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ActivateCamera");

	Params::B_ImpostorPlayerState_C_ActivateCamera Parms{};

	Parms.CurrentMonitor = CurrentMonitor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ActivateCameraFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SpyMonitor_C*                  CurrentMonitor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ActivateCameraFunction(class AB_SpyMonitor_C* CurrentMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ActivateCameraFunction");

	Params::B_ImpostorPlayerState_C_ActivateCameraFunction Parms{};

	Parms.CurrentMonitor = CurrentMonitor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.CompleteTaskMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TaskType                              TaskType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::CompleteTaskMulti(E_TaskType TaskType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "CompleteTaskMulti");

	Params::B_ImpostorPlayerState_C_CompleteTaskMulti Parms{};

	Parms.TaskType = TaskType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.CompleteTaskServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_TaskType                              TaskType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::CompleteTaskServer(E_TaskType TaskType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "CompleteTaskServer");

	Params::B_ImpostorPlayerState_C_CompleteTaskServer Parms{};

	Parms.TaskType = TaskType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToEyeEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorWitchPortal_C*         Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_ImpostorHunter_C*              Hunter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToEyeEffect(class AB_ImpostorWitchPortal_C* Portal, class AB_ImpostorHunter_C* Hunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToEyeEffect");

	Params::B_ImpostorPlayerState_C_ConvertToEyeEffect Parms{};

	Parms.Portal = Portal;
	Parms.Hunter = Hunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToEyeMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorWitchPortal_C*         Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_ImpostorHunter_C*              Hunter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToEyeMulti(class AB_ImpostorWitchPortal_C* Portal, class AB_ImpostorHunter_C* Hunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToEyeMulti");

	Params::B_ImpostorPlayerState_C_ConvertToEyeMulti Parms{};

	Parms.Portal = Portal;
	Parms.Hunter = Hunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToEyeOrHunter
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorWitchPortal_C*         Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToEyeOrHunter(class AB_ImpostorWitchPortal_C* Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToEyeOrHunter");

	Params::B_ImpostorPlayerState_C_ConvertToEyeOrHunter Parms{};

	Parms.Portal = Portal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToEyeOrHunterFunction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorWitchPortal_C*         Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToEyeOrHunterFunction(class AB_ImpostorWitchPortal_C* Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToEyeOrHunterFunction");

	Params::B_ImpostorPlayerState_C_ConvertToEyeOrHunterFunction Parms{};

	Parms.Portal = Portal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToHunterEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToHunterEffect(class AActor* Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToHunterEffect");

	Params::B_ImpostorPlayerState_C_ConvertToHunterEffect Parms{};

	Parms.Portal = Portal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ConvertToHunterMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorWitchPortal_C*         Portal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ConvertToHunterMulti(class AB_ImpostorWitchPortal_C* Portal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ConvertToHunterMulti");

	Params::B_ImpostorPlayerState_C_ConvertToHunterMulti Parms{};

	Parms.Portal = Portal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.DeactivateCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SpyMonitor_C*                  CurrentMonitor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::DeactivateCamera(class AB_SpyMonitor_C* CurrentMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "DeactivateCamera");

	Params::B_ImpostorPlayerState_C_DeactivateCamera Parms{};

	Parms.CurrentMonitor = CurrentMonitor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.DeactivateCameraFunction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SpyMonitor_C*                  MyMonitor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::DeactivateCameraFunction(class AB_SpyMonitor_C* MyMonitor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "DeactivateCameraFunction");

	Params::B_ImpostorPlayerState_C_DeactivateCameraFunction Parms{};

	Parms.MyMonitor = MyMonitor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.DisarmCauldronServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SabotageBombCauldron_C*        BombActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::DisarmCauldronServer(class AB_SabotageBombCauldron_C* BombActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "DisarmCauldronServer");

	Params::B_ImpostorPlayerState_C_DisarmCauldronServer Parms{};

	Parms.BombActor = BombActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ExecuteUbergraph_B_ImpostorPlayerState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ExecuteUbergraph_B_ImpostorPlayerState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ExecuteUbergraph_B_ImpostorPlayerState");

	Params::B_ImpostorPlayerState_C_ExecuteUbergraph_B_ImpostorPlayerState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.KillPlayerServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorHunter_C*              Hunter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::KillPlayerServer(class AB_ImpostorHunter_C* Hunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "KillPlayerServer");

	Params::B_ImpostorPlayerState_C_KillPlayerServer Parms{};

	Parms.Hunter = Hunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.OnRep_IsImpostor
// (BlueprintCallable, BlueprintEvent)

void AB_ImpostorPlayerState_C::OnRep_IsImpostor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "OnRep_IsImpostor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ImpostorPlayerState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ReceiveTick");

	Params::B_ImpostorPlayerState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.RemoveVote
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorPlayerState_C::RemoveVote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "RemoveVote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.SabotageMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SabotageActor_C*               SabotageActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::SabotageMulti(class AB_SabotageActor_C* SabotageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "SabotageMulti");

	Params::B_ImpostorPlayerState_C_SabotageMulti Parms{};

	Parms.SabotageActor = SabotageActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.SabotageServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SabotageActor_C*               SabotageActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::SabotageServer(class AB_SabotageActor_C* SabotageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "SabotageServer");

	Params::B_ImpostorPlayerState_C_SabotageServer Parms{};

	Parms.SabotageActor = SabotageActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.SetTasksMulti
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<E_TaskType>                      Tasks_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AB_ImpostorPlayerState_C::SetTasksMulti(const TArray<E_TaskType>& Tasks_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "SetTasksMulti");

	Params::B_ImpostorPlayerState_C_SetTasksMulti Parms{};

	Parms.Tasks_0 = std::move(Tasks_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.StartMeetingServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorPlayerState_C*         FoundPlayerState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::StartMeetingServer(class AB_ImpostorPlayerState_C* FoundPlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "StartMeetingServer");

	Params::B_ImpostorPlayerState_C_StartMeetingServer Parms{};

	Parms.FoundPlayerState = FoundPlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.StopPortal
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SabotagePortal_C*              PortalActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   PortalIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::StopPortal(class AB_SabotagePortal_C* PortalActor, int32 PortalIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "StopPortal");

	Params::B_ImpostorPlayerState_C_StopPortal Parms{};

	Parms.PortalActor = PortalActor;
	Parms.PortalIndex = PortalIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.ToggleStormCrystal
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_SabotageStormCrystal_C*        StromCrystal                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::ToggleStormCrystal(class AB_SabotageStormCrystal_C* StromCrystal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "ToggleStormCrystal");

	Params::B_ImpostorPlayerState_C_ToggleStormCrystal Parms{};

	Parms.StromCrystal = StromCrystal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.TryKillPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_ImpostorHunter_C*              Hunter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::TryKillPlayer(class AB_ImpostorHunter_C* Hunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "TryKillPlayer");

	Params::B_ImpostorPlayerState_C_TryKillPlayer Parms{};

	Parms.Hunter = Hunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.VotePlayerMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::VotePlayerMulti(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "VotePlayerMulti");

	Params::B_ImpostorPlayerState_C_VotePlayerMulti Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorPlayerState.B_ImpostorPlayerState_C.VotePlayerServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorPlayerState_C::VotePlayerServer(class APlayerState* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorPlayerState_C", "VotePlayerServer");

	Params::B_ImpostorPlayerState_C_VotePlayerServer Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}

}

