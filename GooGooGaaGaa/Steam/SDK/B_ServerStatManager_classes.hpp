#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ServerStatManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_PropSet_structs.hpp"
#include "E_PropCategory_structs.hpp"
#include "S_PropData_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ServerStatManager.B_ServerStatManager_C
// 0x02A0 (0x02D0 - 0x0030)
class UB_ServerStatManager_C final : public UBaseManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMap<class APlayerState*, class UB_PlayerPropCollection_C*> PlayerPropCollections;                             // 0x0038(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class APlayerState*, class UB_PlayerLootDrop_C*> PlayerLootDrops;                                   // 0x0088(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TMap<class APlayerState*, class UB_PlayerPrestigeLevel_C*> PlayerPrestigeLevels;                              // 0x00D8(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UB_PlayerPropCollection_C*              LocalPropCollection;                               // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         AllProps;                                          // 0x0130(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FS_PropData>               PropDatas;                                         // 0x0140(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_PropCategory, class FName>             PropCategoryStats;                                 // 0x0190(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<E_PropSet, class FName>                  PropSetStats;                                      // 0x01E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ServerStatsRequestFailures;                        // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CollectedPropsWhileNotLoaded;                      // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsStoreFailures;                          // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsRequestEndOfRoundFailures;              // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsStoreEndOfRoundFailures;                // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, class AB_PlayerState_C*>  PlayerStates;                                      // 0x0248(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         ServerStatsRequestPlayersNotFound;                 // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsStoreSuccesses;                         // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsRequestSuccesses;                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsStoreDisconnectedFailures;              // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsStoreDisconnectedSuccesses;             // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 OverrideDropItemDefIds;                            // 0x02B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UB_AchievementManager_C*                AchievementManager;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ServerStatsHandleDropFailures;                     // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CallStoreOnlineStats(class AB_PlayerState_C* PlayerState);
	void CleanUpPropCollections();
	void CollectProp(class APlayerState* PlayerState, int32 PropID);
	void CollectPropFunction(const class APlayerState*& PlayerState, int32 PropID);
	void ExecuteUbergraph_B_ServerStatManager(int32 EntryPoint);
	void FinishLoadingServerStats(const class FString& ProductUserId);
	void GetLocalPropCollection(class UB_PlayerPropCollection_C** LocalPropCollection_0);
	void GetRequestingPlayerCount(int32* RequestingPlayerCount);
	void GetStoringPlayerCount(int32* StoringPlayerCount);
	void GrantDropExp(class APlayerState* PlayerState, int32 Exp);
	void GrantPrestigeExp(class APlayerState* PlayerState, int32 Exp);
	void HandleDropSuccess(class APlayerState* PlayerState);
	void Initialize(class UGameInstance* InGameInstance);
	void InitializeAllProps();
	void LoadPlayerServerStats(class AB_PlayerState_C* PlayerState);
	void OnLoadGSOnlineStats(bool Success, const class FString& ProductUserId);
	void OnStoreGSOnlineStats(bool Success, const class FString& ProductUserId);
	void SavePlayerServerStats(class APlayerState* PlayerState, bool LeftGame);
	void UpdateCollectedPropsOfLocalPropCollection(int32 PropID, class UB_PlayerPropCollection_C** PlayerPropCollection);

	void GetStatsAndAchvManager(class UB_NewStatsAndAchievementsManager_C** Result) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ServerStatManager_C">();
	}
	static class UB_ServerStatManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ServerStatManager_C>();
	}
};
static_assert(alignof(UB_ServerStatManager_C) == 0x000008, "Wrong alignment on UB_ServerStatManager_C");
static_assert(sizeof(UB_ServerStatManager_C) == 0x0002D0, "Wrong size on UB_ServerStatManager_C");
static_assert(offsetof(UB_ServerStatManager_C, UberGraphFrame) == 0x000030, "Member 'UB_ServerStatManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PlayerPropCollections) == 0x000038, "Member 'UB_ServerStatManager_C::PlayerPropCollections' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PlayerLootDrops) == 0x000088, "Member 'UB_ServerStatManager_C::PlayerLootDrops' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PlayerPrestigeLevels) == 0x0000D8, "Member 'UB_ServerStatManager_C::PlayerPrestigeLevels' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, LocalPropCollection) == 0x000128, "Member 'UB_ServerStatManager_C::LocalPropCollection' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, AllProps) == 0x000130, "Member 'UB_ServerStatManager_C::AllProps' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PropDatas) == 0x000140, "Member 'UB_ServerStatManager_C::PropDatas' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PropCategoryStats) == 0x000190, "Member 'UB_ServerStatManager_C::PropCategoryStats' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PropSetStats) == 0x0001E0, "Member 'UB_ServerStatManager_C::PropSetStats' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsRequestFailures) == 0x000230, "Member 'UB_ServerStatManager_C::ServerStatsRequestFailures' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, CollectedPropsWhileNotLoaded) == 0x000234, "Member 'UB_ServerStatManager_C::CollectedPropsWhileNotLoaded' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsStoreFailures) == 0x000238, "Member 'UB_ServerStatManager_C::ServerStatsStoreFailures' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsRequestEndOfRoundFailures) == 0x00023C, "Member 'UB_ServerStatManager_C::ServerStatsRequestEndOfRoundFailures' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsStoreEndOfRoundFailures) == 0x000240, "Member 'UB_ServerStatManager_C::ServerStatsStoreEndOfRoundFailures' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, PlayerStates) == 0x000248, "Member 'UB_ServerStatManager_C::PlayerStates' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsRequestPlayersNotFound) == 0x000298, "Member 'UB_ServerStatManager_C::ServerStatsRequestPlayersNotFound' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsStoreSuccesses) == 0x00029C, "Member 'UB_ServerStatManager_C::ServerStatsStoreSuccesses' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsRequestSuccesses) == 0x0002A0, "Member 'UB_ServerStatManager_C::ServerStatsRequestSuccesses' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsStoreDisconnectedFailures) == 0x0002A4, "Member 'UB_ServerStatManager_C::ServerStatsStoreDisconnectedFailures' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsStoreDisconnectedSuccesses) == 0x0002A8, "Member 'UB_ServerStatManager_C::ServerStatsStoreDisconnectedSuccesses' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, OverrideDropItemDefIds) == 0x0002B0, "Member 'UB_ServerStatManager_C::OverrideDropItemDefIds' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, AchievementManager) == 0x0002C0, "Member 'UB_ServerStatManager_C::AchievementManager' has a wrong offset!");
static_assert(offsetof(UB_ServerStatManager_C, ServerStatsHandleDropFailures) == 0x0002C8, "Member 'UB_ServerStatManager_C::ServerStatsHandleDropFailures' has a wrong offset!");

}

