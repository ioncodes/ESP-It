#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ControllerIcon

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SButtonLocalization_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ControllerIcon.WB_ControllerIcon_C.Get_ControllerIcon_Visibility
// 0x0028 (0x0028 - 0x0000)
struct WB_ControllerIcon_C_Get_ControllerIcon_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   KeyNone;                                           // 0x0008(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_Get_ControllerIcon_Visibility");
static_assert(sizeof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility) == 0x000028, "Wrong size on WB_ControllerIcon_C_Get_ControllerIcon_Visibility");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, ReturnValue) == 0x000000, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, KeyNone) == 0x000008, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::KeyNone' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, Temp_bool_Variable) == 0x000020, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, Temp_byte_Variable) == 0x000021, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, Temp_byte_Variable_1) == 0x000022, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000023, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Get_ControllerIcon_Visibility, K2Node_Select_Default) == 0x000024, "Member 'WB_ControllerIcon_C_Get_ControllerIcon_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.IsWideKey
// 0x0030 (0x0030 - 0x0000)
struct WB_ControllerIcon_C_IsWideKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWideKey;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_IsWideKey) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_IsWideKey");
static_assert(sizeof(WB_ControllerIcon_C_IsWideKey) == 0x000030, "Wrong size on WB_ControllerIcon_C_IsWideKey");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, ReturnValue) == 0x000000, "Member 'WB_ControllerIcon_C_IsWideKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, bWideKey) == 0x000001, "Member 'WB_ControllerIcon_C_IsWideKey::bWideKey' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_ControllerIcon_C_IsWideKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_ControllerIcon_C_IsWideKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ControllerIcon_C_IsWideKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_ControllerIcon_C_IsWideKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_ControllerIcon_C_IsWideKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00002C, "Member 'WB_ControllerIcon_C_IsWideKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsWideKey, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'WB_ControllerIcon_C_IsWideKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.Update
// 0x0020 (0x0020 - 0x0000)
struct WB_ControllerIcon_C_Update final
{
public:
	struct FVector2D                              TextScale;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Image;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InAutoTextWrap;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  InJustification;                                   // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_Update) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_Update");
static_assert(sizeof(WB_ControllerIcon_C_Update) == 0x000020, "Wrong size on WB_ControllerIcon_C_Update");
static_assert(offsetof(WB_ControllerIcon_C_Update, TextScale) == 0x000000, "Member 'WB_ControllerIcon_C_Update::TextScale' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Update, Image) == 0x000010, "Member 'WB_ControllerIcon_C_Update::Image' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Update, InAutoTextWrap) == 0x000018, "Member 'WB_ControllerIcon_C_Update::InAutoTextWrap' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_Update, InJustification) == 0x000019, "Member 'WB_ControllerIcon_C_Update::InJustification' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.IsSuperWideKey
// 0x0030 (0x0030 - 0x0000)
struct WB_ControllerIcon_C_IsSuperWideKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuperWideKey;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_IsSuperWideKey) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_IsSuperWideKey");
static_assert(sizeof(WB_ControllerIcon_C_IsSuperWideKey) == 0x000030, "Wrong size on WB_ControllerIcon_C_IsSuperWideKey");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, ReturnValue) == 0x000000, "Member 'WB_ControllerIcon_C_IsSuperWideKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, bSuperWideKey) == 0x000001, "Member 'WB_ControllerIcon_C_IsSuperWideKey::bSuperWideKey' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_ControllerIcon_C_IsSuperWideKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_ControllerIcon_C_IsSuperWideKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ControllerIcon_C_IsSuperWideKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_ControllerIcon_C_IsSuperWideKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_ControllerIcon_C_IsSuperWideKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00002C, "Member 'WB_ControllerIcon_C_IsSuperWideKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsSuperWideKey, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'WB_ControllerIcon_C_IsSuperWideKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.CreateTextWidget
// 0x0038 (0x0038 - 0x0000)
struct WB_ControllerIcon_C_CreateTextWidget final
{
public:
	class UWB_Text_C*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_Text_C*                             CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0010(0x0010)()
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScaleBoxSlot*                          K2Node_DynamicCast_AsScale_Box_Slot;               // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_CreateTextWidget) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_CreateTextWidget");
static_assert(sizeof(WB_ControllerIcon_C_CreateTextWidget) == 0x000038, "Wrong size on WB_ControllerIcon_C_CreateTextWidget");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, ReturnValue) == 0x000000, "Member 'WB_ControllerIcon_C_CreateTextWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'WB_ControllerIcon_C_CreateTextWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000010, "Member 'WB_ControllerIcon_C_CreateTextWidget::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'WB_ControllerIcon_C_CreateTextWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, K2Node_DynamicCast_AsScale_Box_Slot) == 0x000028, "Member 'WB_ControllerIcon_C_CreateTextWidget::K2Node_DynamicCast_AsScale_Box_Slot' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_CreateTextWidget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_ControllerIcon_C_CreateTextWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.IsNumKey
// 0x0030 (0x0030 - 0x0000)
struct WB_ControllerIcon_C_IsNumKey final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNumKey;                                           // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_IsNumKey) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_IsNumKey");
static_assert(sizeof(WB_ControllerIcon_C_IsNumKey) == 0x000030, "Wrong size on WB_ControllerIcon_C_IsNumKey");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, ReturnValue) == 0x000000, "Member 'WB_ControllerIcon_C_IsNumKey::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, bNumKey) == 0x000001, "Member 'WB_ControllerIcon_C_IsNumKey::bNumKey' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_ControllerIcon_C_IsNumKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_ControllerIcon_C_IsNumKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_ControllerIcon_C_IsNumKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_ControllerIcon_C_IsNumKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WB_ControllerIcon_C_IsNumKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00002C, "Member 'WB_ControllerIcon_C_IsNumKey::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_IsNumKey, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'WB_ControllerIcon_C_IsNumKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.SetButtonImage
// 0x0008 (0x0008 - 0x0000)
struct WB_ControllerIcon_C_SetButtonImage final
{
public:
	class UTexture*                               Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_SetButtonImage) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_SetButtonImage");
static_assert(sizeof(WB_ControllerIcon_C_SetButtonImage) == 0x000008, "Wrong size on WB_ControllerIcon_C_SetButtonImage");
static_assert(offsetof(WB_ControllerIcon_C_SetButtonImage, Image) == 0x000000, "Member 'WB_ControllerIcon_C_SetButtonImage::Image' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_ControllerIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WB_ControllerIcon_C_PreConstruct");
static_assert(sizeof(WB_ControllerIcon_C_PreConstruct) == 0x000001, "Wrong size on WB_ControllerIcon_C_PreConstruct");
static_assert(offsetof(WB_ControllerIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_ControllerIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.SetBoundKey
// 0x0018 (0x0018 - 0x0000)
struct WB_ControllerIcon_C_SetBoundKey final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_SetBoundKey) == 0x000008, "Wrong alignment on WB_ControllerIcon_C_SetBoundKey");
static_assert(sizeof(WB_ControllerIcon_C_SetBoundKey) == 0x000018, "Wrong size on WB_ControllerIcon_C_SetBoundKey");
static_assert(offsetof(WB_ControllerIcon_C_SetBoundKey, Key) == 0x000000, "Member 'WB_ControllerIcon_C_SetBoundKey::Key' has a wrong offset!");

// Function WB_ControllerIcon.WB_ControllerIcon_C.ExecuteUbergraph_WB_ControllerIcon
// 0x01E0 (0x01E0 - 0x0000)
struct WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_CustomEvent_Image;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0030(0x00D0)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_Key;                            // 0x0108(0x0018)(ConstParm, HasGetValueTypeHash)
	struct FSButtonLocalization                   CallFunc_GetButtonLocalization_ReturnValue;        // 0x0120(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetButtonLocalization_bKeyFound;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsKeyboardKey_ReturnValue;            // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0140(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0150(0x0048)(HasGetValueTypeHash)
	class UWB_Text_C*                             CallFunc_CreateTextWidget_ReturnValue;             // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01B0(0x0010)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSuperWideKey_ReturnValue;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumKey_ReturnValue;                     // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWideKey_ReturnValue;                    // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon) == 0x000010, "Wrong alignment on WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon");
static_assert(sizeof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon) == 0x0001E0, "Wrong size on WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, EntryPoint) == 0x000000, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_CustomEvent_Image) == 0x000020, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_MakeStruct_SlateBrush) == 0x000030, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_Event_IsDesignTime) == 0x000100, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_CustomEvent_Key) == 0x000108, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_GetButtonLocalization_ReturnValue) == 0x000120, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_GetButtonLocalization_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_GetButtonLocalization_bKeyFound) == 0x000138, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_GetButtonLocalization_bKeyFound' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000139, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_Key_IsKeyboardKey_ReturnValue) == 0x00013A, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_Key_IsKeyboardKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000140, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_MakeStruct_FormatArgumentData) == 0x000150, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_CreateTextWidget_ReturnValue) == 0x000198, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_CreateTextWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, K2Node_MakeArray_Array) == 0x0001A0, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_Format_ReturnValue) == 0x0001B0, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_Conv_TextToString_ReturnValue) == 0x0001C0, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_IsSuperWideKey_ReturnValue) == 0x0001D0, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_IsSuperWideKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_IsNumKey_ReturnValue) == 0x0001D1, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_IsNumKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_IsWideKey_ReturnValue) == 0x0001D2, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_IsWideKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon, CallFunc_IsValid_ReturnValue_1) == 0x0001D3, "Member 'WB_ControllerIcon_C_ExecuteUbergraph_WB_ControllerIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

