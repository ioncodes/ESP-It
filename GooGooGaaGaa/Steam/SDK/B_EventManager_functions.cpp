#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_EventManager

#include "Basic.hpp"

#include "B_EventManager_classes.hpp"
#include "B_EventManager_parameters.hpp"


namespace SDK
{

// Function B_EventManager.B_EventManager_C.EventToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EventNames                              Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           String                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_EventManager_C::EventToString(const EventNames& Event, class FString* String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "EventToString");

	Params::B_EventManager_C_EventToString Parms{};

	Parms.Event = Event;

	UObject::ProcessEvent(Func, &Parms);

	if (String != nullptr)
		*String = std::move(Parms.String);
}


// Function B_EventManager.B_EventManager_C.ExecuteUbergraph_B_EventManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::ExecuteUbergraph_B_EventManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "ExecuteUbergraph_B_EventManager");

	Params::B_EventManager_C_ExecuteUbergraph_B_EventManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_EventManager.B_EventManager_C.GetEventTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EventTime                               EventTimeType                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan UB_EventManager_C::GetEventTime(EventTime* EventTimeType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "GetEventTime");

	Params::B_EventManager_C_GetEventTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EventTimeType != nullptr)
		*EventTimeType = Parms.EventTimeType;

	return Parms.ReturnValue;
}


// Function B_EventManager.B_EventManager_C.GetTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULowEntryJsonObject*              JsonObject                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FDateTime UB_EventManager_C::GetTime(class ULowEntryJsonObject* JsonObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "GetTime");

	Params::B_EventManager_C_GetTime Parms{};

	Parms.JsonObject = JsonObject;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_EventManager.B_EventManager_C.Initialize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    InGameInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::Initialize(class UGameInstance* InGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "Initialize");

	Params::B_EventManager_C_Initialize Parms{};

	Parms.InGameInstance = InGameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_EventManager.B_EventManager_C.LogRetrieveWarning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_EventManager_C::LogRetrieveWarning(const class FString& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "LogRetrieveWarning");

	Params::B_EventManager_C_LogRetrieveWarning Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_EventManager.B_EventManager_C.OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DownloadedString                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   QueryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8(const class FString& DownloadedString, int32 QueryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8");

	Params::B_EventManager_C_OnFailure_8A98FB154B4FC2E1ACB26396C28D4BA8 Parms{};

	Parms.DownloadedString = std::move(DownloadedString);
	Parms.QueryID = QueryID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_EventManager.B_EventManager_C.OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DownloadedString                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   QueryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8(const class FString& DownloadedString, int32 QueryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8");

	Params::B_EventManager_C_OnSuccess_8A98FB154B4FC2E1ACB26396C28D4BA8 Parms{};

	Parms.DownloadedString = std::move(DownloadedString);
	Parms.QueryID = QueryID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_EventManager.B_EventManager_C.ParseAndAddEvents
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULowEntryJsonObject*              JsonEvent                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::ParseAndAddEvents(class ULowEntryJsonObject* JsonEvent, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "ParseAndAddEvents");

	Params::B_EventManager_C_ParseAndAddEvents Parms{};

	Parms.JsonEvent = JsonEvent;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_EventManager.B_EventManager_C.StringToEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EventNames                              Event                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_EventManager_C::StringToEvent(const class FString& String, EventNames* Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_EventManager_C", "StringToEvent");

	Params::B_EventManager_C_StringToEvent Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);

	if (Event != nullptr)
		*Event = Parms.Event;
}

}

