#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseSkill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_SkillRuleType_structs.hpp"
#include "E_SkillType_structs.hpp"
#include "ESkillCategory_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_BaseSkill.B_BaseSkill_C
// 0x0040 (0x00F0 - 0x00B0)
class UB_BaseSkill_C : public UBaseSkill
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   SkillName;                                         // 0x00B8(0x0010)(Edit, BlueprintVisible)
	class UTexture2D*                             SkillIcon;                                         // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SkillIsListed;                                     // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                OldSkillCategory;                                  // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TooltipVideo;                                      // 0x00D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	E_SkillRuleType                               SkillOverrideType;                                 // 0x00E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SkillType                                   SkillType;                                         // 0x00E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeRules();
	void ReceiveBeginPlay();
	bool CanActivate();
	void HasAuthority(bool* HasAuthority_0);
	void RulesUpdated();
	void ExecuteUbergraph_B_BaseSkill(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_BaseSkill_C">();
	}
	static class UB_BaseSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_BaseSkill_C>();
	}
};
static_assert(alignof(UB_BaseSkill_C) == 0x000008, "Wrong alignment on UB_BaseSkill_C");
static_assert(sizeof(UB_BaseSkill_C) == 0x0000F0, "Wrong size on UB_BaseSkill_C");
static_assert(offsetof(UB_BaseSkill_C, UberGraphFrame) == 0x0000B0, "Member 'UB_BaseSkill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, SkillName) == 0x0000B8, "Member 'UB_BaseSkill_C::SkillName' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, SkillIcon) == 0x0000C8, "Member 'UB_BaseSkill_C::SkillIcon' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, SkillIsListed) == 0x0000D0, "Member 'UB_BaseSkill_C::SkillIsListed' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, OldSkillCategory) == 0x0000D1, "Member 'UB_BaseSkill_C::OldSkillCategory' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, TooltipVideo) == 0x0000D8, "Member 'UB_BaseSkill_C::TooltipVideo' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, SkillOverrideType) == 0x0000E8, "Member 'UB_BaseSkill_C::SkillOverrideType' has a wrong offset!");
static_assert(offsetof(UB_BaseSkill_C, SkillType) == 0x0000E9, "Member 'UB_BaseSkill_C::SkillType' has a wrong offset!");

}

