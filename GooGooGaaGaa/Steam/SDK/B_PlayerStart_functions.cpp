#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PlayerStart

#include "Basic.hpp"

#include "B_PlayerStart_classes.hpp"
#include "B_PlayerStart_parameters.hpp"


namespace SDK
{

// Function B_PlayerStart.B_PlayerStart_C.ExecuteUbergraph_B_PlayerStart
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PlayerStart_C::ExecuteUbergraph_B_PlayerStart(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PlayerStart_C", "ExecuteUbergraph_B_PlayerStart");

	Params::B_PlayerStart_C_ExecuteUbergraph_B_PlayerStart Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PlayerStart.B_PlayerStart_C.GetOccupied
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Occupied_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PlayerStart_C::GetOccupied(bool* Occupied_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PlayerStart_C", "GetOccupied");

	Params::B_PlayerStart_C_GetOccupied Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Occupied_0 != nullptr)
		*Occupied_0 = Parms.Occupied_0;
}


// Function B_PlayerStart.B_PlayerStart_C.SetOccupied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Occupied_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PlayerStart_C::SetOccupied(bool Occupied_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PlayerStart_C", "SetOccupied");

	Params::B_PlayerStart_C_SetOccupied Parms{};

	Parms.Occupied_0 = Occupied_0;

	UObject::ProcessEvent(Func, &Parms);
}

}

