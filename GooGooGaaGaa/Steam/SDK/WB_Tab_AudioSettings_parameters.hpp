#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Tab_AudioSettings

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_AmbientVolume_K2Node_ComponentBoundEvent_129_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_GeneralVolume_K2Node_ComponentBoundEvent_194_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_MusicVolume_K2Node_ComponentBoundEvent_0_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_SoundVolume_K2Node_ComponentBoundEvent_1_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_UserInterfaceVolume_K2Node_ComponentBoundEvent_282_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature final
{
public:
	double                                        RealValue;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(sizeof(WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature");
static_assert(offsetof(WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature, RealValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_BndEvt__Slider_VoiceChatVolume_K2Node_ComponentBoundEvent_2_OnRealValueChanged__DelegateSignature::RealValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.ExecuteUbergraph_WB_Tab_AudioSettings
// 0x00F0 (0x00F0 - 0x0000)
struct WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_5;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_4;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_3;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_SliderWithLabel_C*                  CallFunc_GetFocusedVolumeSlider_FocusedVolumeSlider; // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_CreateSound2D_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SettingsTabs_C*                     CallFunc_WidgetGetParentOfClass_ReturnValue_1;     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_ComponentBoundEvent_RealValue_2;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue_1;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_ComponentBoundEvent_RealValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_bDirty;                           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue_1;              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings");
static_assert(sizeof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings) == 0x0000F0, "Wrong size on WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, EntryPoint) == 0x000000, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue_5) == 0x000040, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue_4) == 0x000048, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue_3) == 0x000050, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000068, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_GetFocusedVolumeSlider_FocusedVolumeSlider) == 0x000070, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_GetFocusedVolumeSlider_FocusedVolumeSlider' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_CreateSound2D_ReturnValue) == 0x000078, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_CreateSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_CreateSound2D_ReturnValue_1) == 0x000080, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_CreateSound2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_WidgetGetParentOfClass_ReturnValue) == 0x000088, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_WidgetGetParentOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_WidgetGetParentOfClass_ReturnValue_1) == 0x000090, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_WidgetGetParentOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_IsValid_ReturnValue_1) == 0x000099, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00009A, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x00009B, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x00009C, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue_2) == 0x0000A0, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000B0, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue_1) == 0x0000B8, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x0000C0, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000C8, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, K2Node_ComponentBoundEvent_RealValue) == 0x0000D0, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::K2Node_ComponentBoundEvent_RealValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x0000D8, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_MapRangeClamped_ReturnValue_5) == 0x0000E0, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_IsDirty_bDirty) == 0x0000E8, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_IsDirty_bDirty' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_IsGamepadMode_ReturnValue) == 0x0000E9, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings, CallFunc_IsGamepadMode_ReturnValue_1) == 0x0000EA, "Member 'WB_Tab_AudioSettings_C_ExecuteUbergraph_WB_Tab_AudioSettings::CallFunc_IsGamepadMode_ReturnValue_1' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.GetFocusedVolumeSlider
// 0x0010 (0x0010 - 0x0000)
struct WB_Tab_AudioSettings_C_GetFocusedVolumeSlider final
{
public:
	class UWB_SliderWithLabel_C*                  FocusedVolumeSlider;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_1;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_2;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_3;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_4;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue_5;            // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_GetFocusedVolumeSlider");
static_assert(sizeof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider) == 0x000010, "Wrong size on WB_Tab_AudioSettings_C_GetFocusedVolumeSlider");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, FocusedVolumeSlider) == 0x000000, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::FocusedVolumeSlider' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000008, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue_1) == 0x000009, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue_2) == 0x00000A, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue_3) == 0x00000B, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue_4) == 0x00000C, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetFocusedVolumeSlider, CallFunc_HasAnyUserFocus_ReturnValue_5) == 0x00000D, "Member 'WB_Tab_AudioSettings_C_GetFocusedVolumeSlider::CallFunc_HasAnyUserFocus_ReturnValue_5' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_GetInitialFocusWidget");
static_assert(sizeof(WB_Tab_AudioSettings_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_GetInitialFocusWidget");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetInitialFocusWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_GetInitialFocusWidget::ReturnValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.GetPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_Tab_AudioSettings_C_GetPanelWidget final
{
public:
	class UPanelWidget*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_GetPanelWidget) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_GetPanelWidget");
static_assert(sizeof(WB_Tab_AudioSettings_C_GetPanelWidget) == 0x000008, "Wrong size on WB_Tab_AudioSettings_C_GetPanelWidget");
static_assert(offsetof(WB_Tab_AudioSettings_C_GetPanelWidget, ReturnValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_GetPanelWidget::ReturnValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.IsDirty
// 0x0001 (0x0001 - 0x0000)
struct WB_Tab_AudioSettings_C_IsDirty final
{
public:
	bool                                          bDirty_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_IsDirty) == 0x000001, "Wrong alignment on WB_Tab_AudioSettings_C_IsDirty");
static_assert(sizeof(WB_Tab_AudioSettings_C_IsDirty) == 0x000001, "Wrong size on WB_Tab_AudioSettings_C_IsDirty");
static_assert(offsetof(WB_Tab_AudioSettings_C_IsDirty, bDirty_0) == 0x000000, "Member 'WB_Tab_AudioSettings_C_IsDirty::bDirty_0' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.LoadSettings
// 0x0048 (0x0048 - 0x0000)
struct WB_Tab_AudioSettings_C_LoadSettings final
{
public:
	float                                         CallFunc_LoadSoundVolumes_Master;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSoundVolumes_Sound;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSoundVolumes_Music;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSoundVolumes_Ambient;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSoundVolumes_UserInterface;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LoadSoundVolumes_VoiceChat;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalMasterVolume_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalSoundVolume_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalMusicVolume_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalAmbientVolume_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalUserInterfaceVolume_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalVoiceChatVolume_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_LoadSettings) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_LoadSettings");
static_assert(sizeof(WB_Tab_AudioSettings_C_LoadSettings) == 0x000048, "Wrong size on WB_Tab_AudioSettings_C_LoadSettings");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_Master) == 0x000000, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_Master' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_Sound) == 0x000004, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_Sound' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_Music) == 0x000008, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_Music' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_Ambient) == 0x00000C, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_Ambient' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_UserInterface) == 0x000010, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_UserInterface' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, CallFunc_LoadSoundVolumes_VoiceChat) == 0x000014, "Member 'WB_Tab_AudioSettings_C_LoadSettings::CallFunc_LoadSoundVolumes_VoiceChat' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalMasterVolume_ImplicitCast) == 0x000018, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalMasterVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalSoundVolume_ImplicitCast) == 0x000020, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalSoundVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalMusicVolume_ImplicitCast) == 0x000028, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalMusicVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalAmbientVolume_ImplicitCast) == 0x000030, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalAmbientVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalUserInterfaceVolume_ImplicitCast) == 0x000038, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalUserInterfaceVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_LoadSettings, K2Node_VariableSet_OriginalVoiceChatVolume_ImplicitCast) == 0x000040, "Member 'WB_Tab_AudioSettings_C_LoadSettings::K2Node_VariableSet_OriginalVoiceChatVolume_ImplicitCast' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.NavigateList
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_AudioSettings_C_NavigateList final
{
public:
	EUINavigation                                 Navigation_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_NavigateVerticalPanelWidget_WidgetToFocus; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_NavigateList) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_NavigateList");
static_assert(sizeof(WB_Tab_AudioSettings_C_NavigateList) == 0x000018, "Wrong size on WB_Tab_AudioSettings_C_NavigateList");
static_assert(offsetof(WB_Tab_AudioSettings_C_NavigateList, Navigation_0) == 0x000000, "Member 'WB_Tab_AudioSettings_C_NavigateList::Navigation_0' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_NavigateList, ReturnValue) == 0x000008, "Member 'WB_Tab_AudioSettings_C_NavigateList::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_NavigateList, CallFunc_NavigateVerticalPanelWidget_WidgetToFocus) == 0x000010, "Member 'WB_Tab_AudioSettings_C_NavigateList::CallFunc_NavigateVerticalPanelWidget_WidgetToFocus' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WB_Tab_AudioSettings_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
};
static_assert(alignof(WB_Tab_AudioSettings_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_OnFocusReceived");
static_assert(sizeof(WB_Tab_AudioSettings_C_OnFocusReceived) == 0x0001B0, "Wrong size on WB_Tab_AudioSettings_C_OnFocusReceived");
static_assert(offsetof(WB_Tab_AudioSettings_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_Tab_AudioSettings_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_Tab_AudioSettings_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_Tab_AudioSettings_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WB_Tab_AudioSettings_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.SaveSettings
// 0x0048 (0x0048 - 0x0000)
struct WB_Tab_AudioSettings_C_SaveSettings final
{
public:
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue_1;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue_2;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue_3;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue_4;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SoundClass_GetVolume_ReturnValue_5;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_VoiceChat_ImplicitCast;  // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_UserInterface_ImplicitCast; // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_Ambient_ImplicitCast;    // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_Music_ImplicitCast;      // 0x003C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_Sound_ImplicitCast;      // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SaveSoundVolumes_Master_ImplicitCast;     // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_SaveSettings) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_SaveSettings");
static_assert(sizeof(WB_Tab_AudioSettings_C_SaveSettings) == 0x000048, "Wrong size on WB_Tab_AudioSettings_C_SaveSettings");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue_1) == 0x000008, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue_2) == 0x000010, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue_3) == 0x000018, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue_4) == 0x000020, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SoundClass_GetVolume_ReturnValue_5) == 0x000028, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SoundClass_GetVolume_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_VoiceChat_ImplicitCast) == 0x000030, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_VoiceChat_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_UserInterface_ImplicitCast) == 0x000034, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_UserInterface_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_Ambient_ImplicitCast) == 0x000038, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_Ambient_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_Music_ImplicitCast) == 0x00003C, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_Music_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_Sound_ImplicitCast) == 0x000040, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_Sound_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SaveSettings, CallFunc_SaveSoundVolumes_Master_ImplicitCast) == 0x000044, "Member 'WB_Tab_AudioSettings_C_SaveSettings::CallFunc_SaveSoundVolumes_Master_ImplicitCast' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.SetSliderSound
// 0x0018 (0x0018 - 0x0000)
struct WB_Tab_AudioSettings_C_SetSliderSound final
{
public:
	class USoundBase*                             SliderSound;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ControllerSound;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_SetSliderSound) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_SetSliderSound");
static_assert(sizeof(WB_Tab_AudioSettings_C_SetSliderSound) == 0x000018, "Wrong size on WB_Tab_AudioSettings_C_SetSliderSound");
static_assert(offsetof(WB_Tab_AudioSettings_C_SetSliderSound, SliderSound) == 0x000000, "Member 'WB_Tab_AudioSettings_C_SetSliderSound::SliderSound' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SetSliderSound, ControllerSound) == 0x000008, "Member 'WB_Tab_AudioSettings_C_SetSliderSound::ControllerSound' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_SetSliderSound, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WB_Tab_AudioSettings_C_SetSliderSound::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_Tab_AudioSettings_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_Tick) == 0x000004, "Wrong alignment on WB_Tab_AudioSettings_C_Tick");
static_assert(sizeof(WB_Tab_AudioSettings_C_Tick) == 0x00003C, "Wrong size on WB_Tab_AudioSettings_C_Tick");
static_assert(offsetof(WB_Tab_AudioSettings_C_Tick, MyGeometry) == 0x000000, "Member 'WB_Tab_AudioSettings_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_Tab_AudioSettings_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_Tab_AudioSettings.WB_Tab_AudioSettings_C.UpdateWidgetValues
// 0x0030 (0x0030 - 0x0000)
struct WB_Tab_AudioSettings_C_UpdateWidgetValues final
{
public:
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Tab_AudioSettings_C_UpdateWidgetValues) == 0x000008, "Wrong alignment on WB_Tab_AudioSettings_C_UpdateWidgetValues");
static_assert(sizeof(WB_Tab_AudioSettings_C_UpdateWidgetValues) == 0x000030, "Wrong size on WB_Tab_AudioSettings_C_UpdateWidgetValues");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000000, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000008, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000010, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000018, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000020, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_Tab_AudioSettings_C_UpdateWidgetValues, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000028, "Member 'WB_Tab_AudioSettings_C_UpdateWidgetValues::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");

}

