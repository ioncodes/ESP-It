#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_StaticMeshProp

#include "Basic.hpp"

#include "S_PropVolumeCategory_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EHighlightChannel_structs.hpp"
#include "SRuntimePropData_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_StaticMeshProp.B_StaticMeshProp_C.TransformingIntoWitch__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature final
{
public:
	class AB_StaticMeshProp_C*                    Prop;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             Witch;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature");
static_assert(sizeof(B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature) == 0x000010, "Wrong size on B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature");
static_assert(offsetof(B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature, Prop) == 0x000000, "Member 'B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature::Prop' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature, Witch) == 0x000008, "Member 'B_StaticMeshProp_C_TransformingIntoWitch__DelegateSignature::Witch' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVisualInterpolators
// 0x0028 (0x0028 - 0x0000)
struct B_StaticMeshProp_C_GetVisualInterpolators final
{
public:
	TArray<class AB_VisualIntepolator_C*>         VisualInterpolators;                               // 0x0000(0x0010)(Parm, OutParm)
	class AB_VisualIntepolator_C*                 CallFunc_CreateVisualInterpolatorForMesh_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_VisualIntepolator_C*>         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
};
static_assert(alignof(B_StaticMeshProp_C_GetVisualInterpolators) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetVisualInterpolators");
static_assert(sizeof(B_StaticMeshProp_C_GetVisualInterpolators) == 0x000028, "Wrong size on B_StaticMeshProp_C_GetVisualInterpolators");
static_assert(offsetof(B_StaticMeshProp_C_GetVisualInterpolators, VisualInterpolators) == 0x000000, "Member 'B_StaticMeshProp_C_GetVisualInterpolators::VisualInterpolators' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVisualInterpolators, CallFunc_CreateVisualInterpolatorForMesh_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_GetVisualInterpolators::CallFunc_CreateVisualInterpolatorForMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVisualInterpolators, K2Node_MakeArray_Array) == 0x000018, "Member 'B_StaticMeshProp_C_GetVisualInterpolators::K2Node_MakeArray_Array' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.ApplyTemplateData
// 0x0020 (0x0020 - 0x0000)
struct B_StaticMeshProp_C_ApplyTemplateData final
{
public:
	class AActor*                                 Template;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_ApplyTemplateData) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_ApplyTemplateData");
static_assert(sizeof(B_StaticMeshProp_C_ApplyTemplateData) == 0x000020, "Wrong size on B_StaticMeshProp_C_ApplyTemplateData");
static_assert(offsetof(B_StaticMeshProp_C_ApplyTemplateData, Template) == 0x000000, "Member 'B_StaticMeshProp_C_ApplyTemplateData::Template' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ApplyTemplateData, ForcedBoolean) == 0x000008, "Member 'B_StaticMeshProp_C_ApplyTemplateData::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ApplyTemplateData, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000010, "Member 'B_StaticMeshProp_C_ApplyTemplateData::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ApplyTemplateData, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_StaticMeshProp_C_ApplyTemplateData::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Action
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_Action final
{
public:
	bool                                          ForcedBoolean;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Action) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_Action");
static_assert(sizeof(B_StaticMeshProp_C_Action) == 0x000001, "Wrong size on B_StaticMeshProp_C_Action");
static_assert(offsetof(B_StaticMeshProp_C_Action, ForcedBoolean) == 0x000000, "Member 'B_StaticMeshProp_C_Action::ForcedBoolean' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UserConstructionScript
// 0x0050 (0x0050 - 0x0000)
struct B_StaticMeshProp_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CallFunc_GetSoundCuesForPhysicalGroup_CollisionSound; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CallFunc_GetSoundCuesForPhysicalGroup_SlideSound;  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UserConstructionScript");
static_assert(sizeof(B_StaticMeshProp_C_UserConstructionScript) == 0x000050, "Wrong size on B_StaticMeshProp_C_UserConstructionScript");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000018, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000020, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000028, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_GetSoundCuesForPhysicalGroup_CollisionSound) == 0x000038, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_GetSoundCuesForPhysicalGroup_CollisionSound' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_GetSoundCuesForPhysicalGroup_SlideSound) == 0x000040, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_GetSoundCuesForPhysicalGroup_SlideSound' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UserConstructionScript, CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast) == 0x000048, "Member 'B_StaticMeshProp_C_UserConstructionScript::CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRippleEffect
// 0x0008 (0x0008 - 0x0000)
struct B_StaticMeshProp_C_GetRippleEffect final
{
public:
	class UNiagaraSystem*                         RippleEffectNiagara;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetRippleEffect) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetRippleEffect");
static_assert(sizeof(B_StaticMeshProp_C_GetRippleEffect) == 0x000008, "Wrong size on B_StaticMeshProp_C_GetRippleEffect");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleEffect, RippleEffectNiagara) == 0x000000, "Member 'B_StaticMeshProp_C_GetRippleEffect::RippleEffectNiagara' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashEffect
// 0x0008 (0x0008 - 0x0000)
struct B_StaticMeshProp_C_GetSplashEffect final
{
public:
	class UNiagaraSystem*                         SplashEffectNiagara;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetSplashEffect) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetSplashEffect");
static_assert(sizeof(B_StaticMeshProp_C_GetSplashEffect) == 0x000008, "Wrong size on B_StaticMeshProp_C_GetSplashEffect");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashEffect, SplashEffectNiagara) == 0x000000, "Member 'B_StaticMeshProp_C_GetSplashEffect::SplashEffectNiagara' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRippleScale
// 0x0048 (0x0048 - 0x0000)
struct B_StaticMeshProp_C_GetRippleScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSize_Size;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetRippleScale) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetRippleScale");
static_assert(sizeof(B_StaticMeshProp_C_GetRippleScale) == 0x000048, "Wrong size on B_StaticMeshProp_C_GetRippleScale");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleScale, Scale) == 0x000000, "Member 'B_StaticMeshProp_C_GetRippleScale::Scale' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleScale, CallFunc_GetSize_Size) == 0x000018, "Member 'B_StaticMeshProp_C_GetRippleScale::CallFunc_GetSize_Size' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleScale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_GetRippleScale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleScale, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'B_StaticMeshProp_C_GetRippleScale::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRippleScale, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'B_StaticMeshProp_C_GetRippleScale::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashScale
// 0x0048 (0x0048 - 0x0000)
struct B_StaticMeshProp_C_GetSplashScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSize_Size;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetSplashScale) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetSplashScale");
static_assert(sizeof(B_StaticMeshProp_C_GetSplashScale) == 0x000048, "Wrong size on B_StaticMeshProp_C_GetSplashScale");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashScale, Scale) == 0x000000, "Member 'B_StaticMeshProp_C_GetSplashScale::Scale' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashScale, CallFunc_GetSize_Size) == 0x000018, "Member 'B_StaticMeshProp_C_GetSplashScale::CallFunc_GetSize_Size' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashScale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_GetSplashScale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashScale, CallFunc_FMax_ReturnValue) == 0x000028, "Member 'B_StaticMeshProp_C_GetSplashScale::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashScale, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000030, "Member 'B_StaticMeshProp_C_GetSplashScale::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSplashSound
// 0x0008 (0x0008 - 0x0000)
struct B_StaticMeshProp_C_GetSplashSound final
{
public:
	class USoundCue*                              Sound;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetSplashSound) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetSplashSound");
static_assert(sizeof(B_StaticMeshProp_C_GetSplashSound) == 0x000008, "Wrong size on B_StaticMeshProp_C_GetSplashSound");
static_assert(offsetof(B_StaticMeshProp_C_GetSplashSound, Sound) == 0x000000, "Member 'B_StaticMeshProp_C_GetSplashSound::Sound' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.CanTeleport
// 0x0002 (0x0002 - 0x0000)
struct B_StaticMeshProp_C_CanTeleport final
{
public:
	bool                                          CanTeleport_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_CanTeleport) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_CanTeleport");
static_assert(sizeof(B_StaticMeshProp_C_CanTeleport) == 0x000002, "Wrong size on B_StaticMeshProp_C_CanTeleport");
static_assert(offsetof(B_StaticMeshProp_C_CanTeleport, CanTeleport_0) == 0x000000, "Member 'B_StaticMeshProp_C_CanTeleport::CanTeleport_0' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CanTeleport, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'B_StaticMeshProp_C_CanTeleport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetHighlight
// 0x0003 (0x0003 - 0x0000)
struct B_StaticMeshProp_C_SetHighlight final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshHighlight_Highlightable;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetHighlight) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_SetHighlight");
static_assert(sizeof(B_StaticMeshProp_C_SetHighlight) == 0x000003, "Wrong size on B_StaticMeshProp_C_SetHighlight");
static_assert(offsetof(B_StaticMeshProp_C_SetHighlight, Highlighted) == 0x000000, "Member 'B_StaticMeshProp_C_SetHighlight::Highlighted' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetHighlight, ForcedBoolean) == 0x000001, "Member 'B_StaticMeshProp_C_SetHighlight::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetHighlight, CallFunc_RefreshHighlight_Highlightable) == 0x000002, "Member 'B_StaticMeshProp_C_SetHighlight::CallFunc_RefreshHighlight_Highlightable' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.RefreshHighlight
// 0x0038 (0x0038 - 0x0000)
struct B_StaticMeshProp_C_RefreshHighlight final
{
public:
	bool                                          Highlightable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_RefreshHighlight) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_RefreshHighlight");
static_assert(sizeof(B_StaticMeshProp_C_RefreshHighlight) == 0x000038, "Wrong size on B_StaticMeshProp_C_RefreshHighlight");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, Highlightable) == 0x000000, "Member 'B_StaticMeshProp_C_RefreshHighlight::Highlightable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_GetGameInstance_ReturnValue_1) == 0x000018, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_StaticMeshProp_C_RefreshHighlight::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_StaticMeshProp_C_RefreshHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x000031, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_BooleanOR_ReturnValue) == 0x000033, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_RefreshHighlight, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'B_StaticMeshProp_C_RefreshHighlight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetSize
// 0x0090 (0x0090 - 0x0000)
struct B_StaticMeshProp_C_GetSize final
{
public:
	double                                        Size;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetSize) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetSize");
static_assert(sizeof(B_StaticMeshProp_C_GetSize) == 0x000090, "Wrong size on B_StaticMeshProp_C_GetSize");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, Size) == 0x000000, "Member 'B_StaticMeshProp_C_GetSize::Size' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_GetActorScale3D_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_BreakVector_X) == 0x000020, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_BreakVector_Y) == 0x000028, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_BreakVector_Z) == 0x000030, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_GetLocalBounds_Min) == 0x000038, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_GetLocalBounds_Max) == 0x000050, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'B_StaticMeshProp_C_GetSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Fly
// 0x0020 (0x0020 - 0x0000)
struct B_StaticMeshProp_C_Fly final
{
public:
	double                                        TargetBoost;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Fly) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_Fly");
static_assert(sizeof(B_StaticMeshProp_C_Fly) == 0x000020, "Wrong size on B_StaticMeshProp_C_Fly");
static_assert(offsetof(B_StaticMeshProp_C_Fly, TargetBoost) == 0x000000, "Member 'B_StaticMeshProp_C_Fly::TargetBoost' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Fly, DeltaTime) == 0x000008, "Member 'B_StaticMeshProp_C_Fly::DeltaTime' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Fly, ForcedBoolean) == 0x000010, "Member 'B_StaticMeshProp_C_Fly::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Fly, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'B_StaticMeshProp_C_Fly::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetRuntimeSpeedMultiplier
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_SetRuntimeSpeedMultiplier final
{
public:
	double                                        RuntimeSpeedMultiplier_0;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetRuntimeSpeedMultiplier) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_SetRuntimeSpeedMultiplier");
static_assert(sizeof(B_StaticMeshProp_C_SetRuntimeSpeedMultiplier) == 0x000010, "Wrong size on B_StaticMeshProp_C_SetRuntimeSpeedMultiplier");
static_assert(offsetof(B_StaticMeshProp_C_SetRuntimeSpeedMultiplier, RuntimeSpeedMultiplier_0) == 0x000000, "Member 'B_StaticMeshProp_C_SetRuntimeSpeedMultiplier::RuntimeSpeedMultiplier_0' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetRuntimeSpeedMultiplier, ForcedBoolean) == 0x000008, "Member 'B_StaticMeshProp_C_SetRuntimeSpeedMultiplier::ForcedBoolean' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetWantedRotation
// 0x00C0 (0x00C0 - 0x0000)
struct B_StaticMeshProp_C_SetWantedRotation final
{
public:
	struct FRotator                               WantedRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForcedBoolean;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ClampedWantedRotation;                             // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Value_ImplicitCast_1;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetWantedRotation) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_SetWantedRotation");
static_assert(sizeof(B_StaticMeshProp_C_SetWantedRotation) == 0x0000C0, "Wrong size on B_StaticMeshProp_C_SetWantedRotation");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, WantedRotation) == 0x000000, "Member 'B_StaticMeshProp_C_SetWantedRotation::WantedRotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, ForcedBoolean) == 0x000018, "Member 'B_StaticMeshProp_C_SetWantedRotation::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, ClampedWantedRotation) == 0x000020, "Member 'B_StaticMeshProp_C_SetWantedRotation::ClampedWantedRotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000044, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_FClamp_ReturnValue_1) == 0x000068, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000070, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_MakeRotator_ReturnValue_2) == 0x000088, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_FClamp_Value_ImplicitCast) == 0x0000A8, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_FClamp_Value_ImplicitCast_1) == 0x0000B0, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_FClamp_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0000B8, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetWantedRotation, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0000BC, "Member 'B_StaticMeshProp_C_SetWantedRotation::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Jump
// 0x0002 (0x0002 - 0x0000)
struct B_StaticMeshProp_C_Jump final
{
public:
	bool                                          JumpSuccess;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_JumpStaticMeshProp_JumpSuccess;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Jump) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_Jump");
static_assert(sizeof(B_StaticMeshProp_C_Jump) == 0x000002, "Wrong size on B_StaticMeshProp_C_Jump");
static_assert(offsetof(B_StaticMeshProp_C_Jump, JumpSuccess) == 0x000000, "Member 'B_StaticMeshProp_C_Jump::JumpSuccess' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Jump, CallFunc_JumpStaticMeshProp_JumpSuccess) == 0x000001, "Member 'B_StaticMeshProp_C_Jump::CallFunc_JumpStaticMeshProp_JumpSuccess' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Stop
// 0x0068 (0x0068 - 0x0000)
struct B_StaticMeshProp_C_Stop final
{
public:
	bool                                          Start;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               WantedRotation;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ForcedOutput;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetWantedRotation_ForcedBoolean;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue_1;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_VariableSet_StartYaw_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_StartPitch_ImplicitCast;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Stop) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_Stop");
static_assert(sizeof(B_StaticMeshProp_C_Stop) == 0x000068, "Wrong size on B_StaticMeshProp_C_Stop");
static_assert(offsetof(B_StaticMeshProp_C_Stop, Start) == 0x000000, "Member 'B_StaticMeshProp_C_Stop::Start' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, WantedRotation) == 0x000008, "Member 'B_StaticMeshProp_C_Stop::WantedRotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, ForcedOutput) == 0x000020, "Member 'B_StaticMeshProp_C_Stop::ForcedOutput' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_SetWantedRotation_ForcedBoolean) == 0x000021, "Member 'B_StaticMeshProp_C_Stop::CallFunc_SetWantedRotation_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'B_StaticMeshProp_C_Stop::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'B_StaticMeshProp_C_Stop::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'B_StaticMeshProp_C_Stop::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_NormalizeAxis_ReturnValue) == 0x000030, "Member 'B_StaticMeshProp_C_Stop::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_NormalizeAxis_ReturnValue_1) == 0x000034, "Member 'B_StaticMeshProp_C_Stop::CallFunc_NormalizeAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'B_StaticMeshProp_C_Stop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'B_StaticMeshProp_C_Stop::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'B_StaticMeshProp_C_Stop::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, K2Node_VariableSet_StartYaw_ImplicitCast) == 0x000058, "Member 'B_StaticMeshProp_C_Stop::K2Node_VariableSet_StartYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Stop, K2Node_VariableSet_StartPitch_ImplicitCast) == 0x000060, "Member 'B_StaticMeshProp_C_Stop::K2Node_VariableSet_StartPitch_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetControlledByWitch
// 0x00F0 (0x00F0 - 0x0000)
struct B_StaticMeshProp_C_SetControlledByWitch final
{
public:
	class AB_PropPawnPhysics_C*                   Witch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSRuntimePropData                      LastRuntimePropData;                               // 0x0008(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedOutput;                                      // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasSleepingBeforeControl;                          // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetControlledByWitch) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_SetControlledByWitch");
static_assert(sizeof(B_StaticMeshProp_C_SetControlledByWitch) == 0x0000F0, "Wrong size on B_StaticMeshProp_C_SetControlledByWitch");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, Witch) == 0x000000, "Member 'B_StaticMeshProp_C_SetControlledByWitch::Witch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, LastRuntimePropData) == 0x000008, "Member 'B_StaticMeshProp_C_SetControlledByWitch::LastRuntimePropData' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, ForcedOutput) == 0x000040, "Member 'B_StaticMeshProp_C_SetControlledByWitch::ForcedOutput' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, WasSleepingBeforeControl) == 0x000041, "Member 'B_StaticMeshProp_C_SetControlledByWitch::WasSleepingBeforeControl' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Conv_BoolToString_ReturnValue) == 0x000048, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000060, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_GetDisplayName_ReturnValue) == 0x000070, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetControlledByWitch, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'B_StaticMeshProp_C_SetControlledByWitch::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Move
// 0x0020 (0x0020 - 0x0000)
struct B_StaticMeshProp_C_Move final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedOutput;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Move) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_Move");
static_assert(sizeof(B_StaticMeshProp_C_Move) == 0x000020, "Wrong size on B_StaticMeshProp_C_Move");
static_assert(offsetof(B_StaticMeshProp_C_Move, Vector) == 0x000000, "Member 'B_StaticMeshProp_C_Move::Vector' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Move, ForcedOutput) == 0x000018, "Member 'B_StaticMeshProp_C_Move::ForcedOutput' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetMaxHealth
// 0x0030 (0x0030 - 0x0000)
struct B_StaticMeshProp_C_GetMaxHealth final
{
public:
	double                                        MaxHealth_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PropVolumeCategory                  CallFunc_GetVolumeCategory_PropVolumeCategory;     // 0x0008(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetMaxHealth) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetMaxHealth");
static_assert(sizeof(B_StaticMeshProp_C_GetMaxHealth) == 0x000030, "Wrong size on B_StaticMeshProp_C_GetMaxHealth");
static_assert(offsetof(B_StaticMeshProp_C_GetMaxHealth, MaxHealth_0) == 0x000000, "Member 'B_StaticMeshProp_C_GetMaxHealth::MaxHealth_0' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetMaxHealth, CallFunc_GetVolumeCategory_PropVolumeCategory) == 0x000008, "Member 'B_StaticMeshProp_C_GetMaxHealth::CallFunc_GetVolumeCategory_PropVolumeCategory' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetMaxHealth, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_StaticMeshProp_C_GetMaxHealth::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetName
// 0x0020 (0x0020 - 0x0000)
struct B_StaticMeshProp_C_GetName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetName) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetName");
static_assert(sizeof(B_StaticMeshProp_C_GetName) == 0x000020, "Wrong size on B_StaticMeshProp_C_GetName");
static_assert(offsetof(B_StaticMeshProp_C_GetName, Name_0) == 0x000000, "Member 'B_StaticMeshProp_C_GetName::Name_0' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetName, CallFunc_Conv_TextToString_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_GetName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetCameraDistance
// 0x0048 (0x0048 - 0x0000)
struct B_StaticMeshProp_C_GetCameraDistance final
{
public:
	double                                        CameraDistance_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetCameraDistance) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetCameraDistance");
static_assert(sizeof(B_StaticMeshProp_C_GetCameraDistance) == 0x000048, "Wrong size on B_StaticMeshProp_C_GetCameraDistance");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CameraDistance_0) == 0x000000, "Member 'B_StaticMeshProp_C_GetCameraDistance::CameraDistance_0' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_GetActorScale3D_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_BreakVector_X) == 0x000020, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_BreakVector_Y) == 0x000028, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_BreakVector_Z) == 0x000030, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCameraDistance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'B_StaticMeshProp_C_GetCameraDistance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetRuntimePropData
// 0x00F8 (0x00F8 - 0x0000)
struct B_StaticMeshProp_C_GetRuntimePropData final
{
public:
	struct FSRuntimePropData                      RuntimePropData;                                   // 0x0000(0x0038)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSRuntimePropData                      K2Node_MakeStruct_SRuntimePropData;                // 0x00B8(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Size_7_C538C41D4CF3857673ABEBBCC021E7DB_ImplicitCast; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetRuntimePropData) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetRuntimePropData");
static_assert(sizeof(B_StaticMeshProp_C_GetRuntimePropData) == 0x0000F8, "Wrong size on B_StaticMeshProp_C_GetRuntimePropData");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, RuntimePropData) == 0x000000, "Member 'B_StaticMeshProp_C_GetRuntimePropData::RuntimePropData' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000038, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000050, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_GetLocalBounds_Min) == 0x000068, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_GetLocalBounds_Max) == 0x000080, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, CallFunc_VSize_ReturnValue) == 0x0000B0, "Member 'B_StaticMeshProp_C_GetRuntimePropData::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, K2Node_MakeStruct_SRuntimePropData) == 0x0000B8, "Member 'B_StaticMeshProp_C_GetRuntimePropData::K2Node_MakeStruct_SRuntimePropData' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetRuntimePropData, K2Node_MakeStruct_Size_7_C538C41D4CF3857673ABEBBCC021E7DB_ImplicitCast) == 0x0000F0, "Member 'B_StaticMeshProp_C_GetRuntimePropData::K2Node_MakeStruct_Size_7_C538C41D4CF3857673ABEBBCC021E7DB_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetCenter
// 0x0078 (0x0078 - 0x0000)
struct B_StaticMeshProp_C_GetCenter final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetCenter) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetCenter");
static_assert(sizeof(B_StaticMeshProp_C_GetCenter) == 0x000078, "Wrong size on B_StaticMeshProp_C_GetCenter");
static_assert(offsetof(B_StaticMeshProp_C_GetCenter, Center) == 0x000000, "Member 'B_StaticMeshProp_C_GetCenter::Center' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCenter, CallFunc_GetLocalBounds_Min) == 0x000018, "Member 'B_StaticMeshProp_C_GetCenter::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCenter, CallFunc_GetLocalBounds_Max) == 0x000030, "Member 'B_StaticMeshProp_C_GetCenter::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCenter, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'B_StaticMeshProp_C_GetCenter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetCenter, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000060, "Member 'B_StaticMeshProp_C_GetCenter::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.OffsetPosition
// 0x0BA0 (0x0BA0 - 0x0000)
struct B_StaticMeshProp_C_OffsetPosition final
{
public:
	class AActor*                                 Prop;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             WantedSpawnTransform;                              // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ValidTransform;                                    // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0090(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CurrentIgnoreActors;                               // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FTransform                             CurrentWantedSpawnTransform;                       // 0x0100(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Offset;                                            // 0x0160(0x0010)(Edit, BlueprintVisible)
	double                                        ObjectSize;                                        // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0188(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0198(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x01B8(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_2;                          // 0x01C8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_3;                          // 0x0240(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformTest_ValidTransform;             // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TransformTest_Transform;                  // 0x0360(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0450(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0550(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformTest_ValidTransform_1;           // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TransformTest_Transform_1;                // 0x0630(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0690(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformTest_ValidTransform_2;           // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0xF];                                      // 0x06F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TransformTest_Transform_2;                // 0x0700(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x07A8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A2[0x6];                                      // 0x08A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x08A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x08C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x08D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x08F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0920(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorFloat_ReturnValue;              // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0980(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformTest_ValidTransform_3;           // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0xF];                                      // 0x09E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TransformTest_Transform_3;                // 0x09F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A55[0x3];                                      // 0x0A55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x0A58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0A70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_2;       // 0x0AA0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_2;  // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0B99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_OffsetPosition) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_OffsetPosition");
static_assert(sizeof(B_StaticMeshProp_C_OffsetPosition) == 0x000BA0, "Wrong size on B_StaticMeshProp_C_OffsetPosition");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Prop) == 0x000000, "Member 'B_StaticMeshProp_C_OffsetPosition::Prop' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, WantedSpawnTransform) == 0x000010, "Member 'B_StaticMeshProp_C_OffsetPosition::WantedSpawnTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, IgnoreActors) == 0x000070, "Member 'B_StaticMeshProp_C_OffsetPosition::IgnoreActors' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, ValidTransform) == 0x000080, "Member 'B_StaticMeshProp_C_OffsetPosition::ValidTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Transform) == 0x000090, "Member 'B_StaticMeshProp_C_OffsetPosition::Transform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CurrentIgnoreActors) == 0x0000F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CurrentIgnoreActors' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CurrentWantedSpawnTransform) == 0x000100, "Member 'B_StaticMeshProp_C_OffsetPosition::CurrentWantedSpawnTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Offset) == 0x000160, "Member 'B_StaticMeshProp_C_OffsetPosition::Offset' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, ObjectSize) == 0x000170, "Member 'B_StaticMeshProp_C_OffsetPosition::ObjectSize' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, K2Node_MakeArray_Array) == 0x000178, "Member 'B_StaticMeshProp_C_OffsetPosition::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Temp_object_Variable) == 0x000188, "Member 'B_StaticMeshProp_C_OffsetPosition::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Temp_object_Variable_1) == 0x000198, "Member 'B_StaticMeshProp_C_OffsetPosition::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'B_StaticMeshProp_C_OffsetPosition::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Add_IntInt_ReturnValue) == 0x0001AC, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Temp_int_Array_Index_Variable) == 0x0001B0, "Member 'B_StaticMeshProp_C_OffsetPosition::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, K2Node_MakeArray_Array_1) == 0x0001B8, "Member 'B_StaticMeshProp_C_OffsetPosition::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, K2Node_MakeArray_Array_2) == 0x0001C8, "Member 'B_StaticMeshProp_C_OffsetPosition::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location) == 0x0001D8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation) == 0x0001F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale) == 0x000208, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000220, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_MakeVector_ReturnValue) == 0x000228, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, K2Node_MakeArray_Array_3) == 0x000240, "Member 'B_StaticMeshProp_C_OffsetPosition::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_1) == 0x000250, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_1) == 0x000268, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_1) == 0x000280, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_MakeTransform_ReturnValue) == 0x0002B0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_2) == 0x000310, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_2) == 0x000328, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_2) == 0x000340, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_ValidTransform) == 0x000358, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_ValidTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_Transform) == 0x000360, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_Transform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_3) == 0x0003C0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_3) == 0x0003D8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_3) == 0x0003F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_4) == 0x000408, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_4) == 0x000420, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_4) == 0x000438, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000450, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000548, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, Temp_object_Variable_2) == 0x000550, "Member 'B_StaticMeshProp_C_OffsetPosition::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000560, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000568, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_5) == 0x000580, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_5) == 0x000598, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_5) == 0x0005B0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_6) == 0x0005C8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_6) == 0x0005E0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_6) == 0x0005F8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000610, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_ValidTransform_1) == 0x000628, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_ValidTransform_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_Transform_1) == 0x000630, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_Transform_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_MakeTransform_ReturnValue_1) == 0x000690, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_ValidTransform_2) == 0x0006F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_ValidTransform_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_Transform_2) == 0x000700, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_Transform_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_7) == 0x000760, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_7) == 0x000778, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_7) == 0x000790, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x0007A8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x0008A0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x0008A1, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_GetActorScale3D_ReturnValue) == 0x0008A8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_GetLocalBounds_Min) == 0x0008C0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_GetLocalBounds_Max) == 0x0008D8, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0008F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakVector_X) == 0x000908, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakVector_Y) == 0x000910, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakVector_Z) == 0x000918, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Array_Get_Item) == 0x000920, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_FMax_ReturnValue) == 0x000938, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Add_VectorFloat_ReturnValue) == 0x000940, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Add_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_FMax_ReturnValue_1) == 0x000958, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000960, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000978, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_MakeTransform_ReturnValue_2) == 0x000980, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_ValidTransform_3) == 0x0009E0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_ValidTransform_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_TransformTest_Transform_3) == 0x0009F0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_TransformTest_Transform_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Array_Length_ReturnValue) == 0x000A50, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Less_IntInt_ReturnValue) == 0x000A54, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Location_8) == 0x000A58, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Rotation_8) == 0x000A70, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_BreakTransform_Scale_8) == 0x000A88, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_OutHit_2) == 0x000AA0, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_LineTraceSingleForObjects_ReturnValue_2) == 0x000B98, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_LineTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_OffsetPosition, CallFunc_Not_PreBool_ReturnValue_2) == 0x000B99, "Member 'B_StaticMeshProp_C_OffsetPosition::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFromFrozenState
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_UpdateFromFrozenState final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateFromFrozenState) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_UpdateFromFrozenState");
static_assert(sizeof(B_StaticMeshProp_C_UpdateFromFrozenState) == 0x000001, "Wrong size on B_StaticMeshProp_C_UpdateFromFrozenState");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFromFrozenState, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateFromFrozenState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.AutoSetInitialPhysicsState
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_AutoSetInitialPhysicsState final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_AutoSetInitialPhysicsState) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_AutoSetInitialPhysicsState");
static_assert(sizeof(B_StaticMeshProp_C_AutoSetInitialPhysicsState) == 0x000001, "Wrong size on B_StaticMeshProp_C_AutoSetInitialPhysicsState");
static_assert(offsetof(B_StaticMeshProp_C_AutoSetInitialPhysicsState, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_AutoSetInitialPhysicsState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetPhysicsEnabled
// 0x0003 (0x0003 - 0x0000)
struct B_StaticMeshProp_C_SetPhysicsEnabled final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetPhysicsEnabled) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_SetPhysicsEnabled");
static_assert(sizeof(B_StaticMeshProp_C_SetPhysicsEnabled) == 0x000003, "Wrong size on B_StaticMeshProp_C_SetPhysicsEnabled");
static_assert(offsetof(B_StaticMeshProp_C_SetPhysicsEnabled, bIsEnabled) == 0x000000, "Member 'B_StaticMeshProp_C_SetPhysicsEnabled::bIsEnabled' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetPhysicsEnabled, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000001, "Member 'B_StaticMeshProp_C_SetPhysicsEnabled::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SetPhysicsEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'B_StaticMeshProp_C_SetPhysicsEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateAfterPlayTestToggle
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_UpdateAfterPlayTestToggle final
{
public:
	bool                                          HasPlayTestStarted;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateAfterPlayTestToggle) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_UpdateAfterPlayTestToggle");
static_assert(sizeof(B_StaticMeshProp_C_UpdateAfterPlayTestToggle) == 0x000001, "Wrong size on B_StaticMeshProp_C_UpdateAfterPlayTestToggle");
static_assert(offsetof(B_StaticMeshProp_C_UpdateAfterPlayTestToggle, HasPlayTestStarted) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateAfterPlayTestToggle::HasPlayTestStarted' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateMeshCollision
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_UpdateMeshCollision final
{
public:
	bool                                          EnableCollision;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateMeshCollision) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_UpdateMeshCollision");
static_assert(sizeof(B_StaticMeshProp_C_UpdateMeshCollision) == 0x000001, "Wrong size on B_StaticMeshProp_C_UpdateMeshCollision");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMeshCollision, EnableCollision) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateMeshCollision::EnableCollision' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.HandleWake
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_HandleWake final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_HandleWake) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_HandleWake");
static_assert(sizeof(B_StaticMeshProp_C_HandleWake) == 0x000001, "Wrong size on B_StaticMeshProp_C_HandleWake");
static_assert(offsetof(B_StaticMeshProp_C_HandleWake, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_HandleWake::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFadeAndVisualChildForPropPawnPhysics
// 0x0028 (0x0028 - 0x0000)
struct B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics final
{
public:
	class AB_PropPawnPhysics_C*                   PropPawnPhysics;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics");
static_assert(sizeof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics) == 0x000028, "Wrong size on B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics, PropPawnPhysics) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics::PropPawnPhysics' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics, CallFunc_GetInstigator_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000018, "Member 'B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_StaticMeshProp_C_UpdateFadeAndVisualChildForPropPawnPhysics::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.Dissolve
// 0x0120 (0x0120 - 0x0000)
struct B_StaticMeshProp_C_Dissolve final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue_2;    // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue_3;    // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item_3;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast; // 0x0110(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1; // 0x0114(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_Dissolve) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_Dissolve");
static_assert(sizeof(B_StaticMeshProp_C_Dissolve) == 0x000120, "Wrong size on B_StaticMeshProp_C_Dissolve");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Variable) == 0x000000, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Variable_1) == 0x000008, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_IsDedicatedServer_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000028, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'B_StaticMeshProp_C_Dissolve::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Lerp_ReturnValue_1) == 0x000050, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_IntInt_ReturnValue_3) == 0x00005C, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000060, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000080, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000098, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_K2_GetComponentsByClass_ReturnValue_2) == 0x0000A0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_K2_GetComponentsByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_FClamp_ReturnValue) == 0x0000C0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000D0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_FClamp_ReturnValue_1) == 0x0000E8, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_K2_GetComponentsByClass_ReturnValue_3) == 0x0000F0, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_K2_GetComponentsByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Get_Item_3) == 0x000100, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Array_Length_ReturnValue_3) == 0x000108, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_Less_IntInt_ReturnValue_3) == 0x00010C, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast) == 0x000110, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1) == 0x000114, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_SetScalarParameterValueOnMaterials_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000118, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_Dissolve, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x00011C, "Member 'B_StaticMeshProp_C_Dissolve::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.InitDissolve
// 0x0038 (0x0038 - 0x0000)
struct B_StaticMeshProp_C_InitDissolve final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_InitDissolve) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_InitDissolve");
static_assert(sizeof(B_StaticMeshProp_C_InitDissolve) == 0x000038, "Wrong size on B_StaticMeshProp_C_InitDissolve");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, Temp_int_Variable) == 0x000000, "Member 'B_StaticMeshProp_C_InitDissolve::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_InitDissolve, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x000030, "Member 'B_StaticMeshProp_C_InitDissolve::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVolume
// 0x00C8 (0x00C8 - 0x0000)
struct B_StaticMeshProp_C_GetVolume final
{
public:
	double                                        Volume;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Min;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalBounds_Max;                       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetVolume) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetVolume");
static_assert(sizeof(B_StaticMeshProp_C_GetVolume) == 0x0000C8, "Wrong size on B_StaticMeshProp_C_GetVolume");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, Volume) == 0x000000, "Member 'B_StaticMeshProp_C_GetVolume::Volume' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_GetActorScale3D_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_X) == 0x000020, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_Y) == 0x000028, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_Z) == 0x000030, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_GetLocalBounds_Min) == 0x000038, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_GetLocalBounds_Min' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_GetLocalBounds_Max) == 0x000050, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_GetLocalBounds_Max' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_X_1) == 0x000098, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolume, CallFunc_Sqrt_ReturnValue) == 0x0000C0, "Member 'B_StaticMeshProp_C_GetVolume::CallFunc_Sqrt_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.GetVolumeCategory
// 0x0048 (0x0048 - 0x0000)
struct B_StaticMeshProp_C_GetVolumeCategory final
{
public:
	struct FS_PropVolumeCategory                  PropVolumeCategory;                                // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetVolume_Volume;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PropVolumeCategory                  CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory; // 0x0028(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_GetVolumeCategory) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_GetVolumeCategory");
static_assert(sizeof(B_StaticMeshProp_C_GetVolumeCategory) == 0x000048, "Wrong size on B_StaticMeshProp_C_GetVolumeCategory");
static_assert(offsetof(B_StaticMeshProp_C_GetVolumeCategory, PropVolumeCategory) == 0x000000, "Member 'B_StaticMeshProp_C_GetVolumeCategory::PropVolumeCategory' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolumeCategory, CallFunc_GetVolume_Volume) == 0x000020, "Member 'B_StaticMeshProp_C_GetVolumeCategory::CallFunc_GetVolume_Volume' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_GetVolumeCategory, CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory) == 0x000028, "Member 'B_StaticMeshProp_C_GetVolumeCategory::CallFunc_GetVolumeCategoryForStaticMesh_VolumeCategory' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateIntialSleep
// 0x0080 (0x0080 - 0x0000)
struct B_StaticMeshProp_C_UpdateIntialSleep final
{
public:
	bool                                          CallFunc_IsUsingPropReplicationOptimization_ReturnValue; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateIntialSleep) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_UpdateIntialSleep");
static_assert(sizeof(B_StaticMeshProp_C_UpdateIntialSleep) == 0x000080, "Wrong size on B_StaticMeshProp_C_UpdateIntialSleep");
static_assert(offsetof(B_StaticMeshProp_C_UpdateIntialSleep, CallFunc_IsUsingPropReplicationOptimization_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateIntialSleep::CallFunc_IsUsingPropReplicationOptimization_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateIntialSleep, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_UpdateIntialSleep::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateIntialSleep, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'B_StaticMeshProp_C_UpdateIntialSleep::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateScaledSpeed
// 0x0028 (0x0028 - 0x0000)
struct B_StaticMeshProp_C_UpdateScaledSpeed final
{
public:
	struct FS_PropVolumeCategory                  CallFunc_GetVolumeCategory_PropVolumeCategory;     // 0x0000(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateScaledSpeed) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UpdateScaledSpeed");
static_assert(sizeof(B_StaticMeshProp_C_UpdateScaledSpeed) == 0x000028, "Wrong size on B_StaticMeshProp_C_UpdateScaledSpeed");
static_assert(offsetof(B_StaticMeshProp_C_UpdateScaledSpeed, CallFunc_GetVolumeCategory_PropVolumeCategory) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateScaledSpeed::CallFunc_GetVolumeCategory_PropVolumeCategory' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateScaledSpeed, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_UpdateScaledSpeed::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateFreezeStatus
// 0x0048 (0x0048 - 0x0000)
struct B_StaticMeshProp_C_UpdateFreezeStatus final
{
public:
	bool                                          IgnorePhysicsSetting;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPhysicsEnabled_ReturnValue;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateFreezeStatus) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UpdateFreezeStatus");
static_assert(sizeof(B_StaticMeshProp_C_UpdateFreezeStatus) == 0x000048, "Wrong size on B_StaticMeshProp_C_UpdateFreezeStatus");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, IgnorePhysicsSetting) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::IgnorePhysicsSetting' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_AsB_Game_State_1) == 0x000028, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000038, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, CallFunc_IsPhysicsEnabled_ReturnValue) == 0x000042, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::CallFunc_IsPhysicsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateFreezeStatus, CallFunc_BooleanOR_ReturnValue) == 0x000043, "Member 'B_StaticMeshProp_C_UpdateFreezeStatus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateSleepWakeStatus
// 0x0003 (0x0003 - 0x0000)
struct B_StaticMeshProp_C_UpdateSleepWakeStatus final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateSleepWakeStatus) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_UpdateSleepWakeStatus");
static_assert(sizeof(B_StaticMeshProp_C_UpdateSleepWakeStatus) == 0x000003, "Wrong size on B_StaticMeshProp_C_UpdateSleepWakeStatus");
static_assert(offsetof(B_StaticMeshProp_C_UpdateSleepWakeStatus, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateSleepWakeStatus::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateSleepWakeStatus, CallFunc_HasAuthority_ReturnValue_1) == 0x000001, "Member 'B_StaticMeshProp_C_UpdateSleepWakeStatus::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateSleepWakeStatus, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'B_StaticMeshProp_C_UpdateSleepWakeStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UnselectFromEditing
// 0x0002 (0x0002 - 0x0000)
struct B_StaticMeshProp_C_UnselectFromEditing final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshHighlight_Highlightable;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UnselectFromEditing) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_UnselectFromEditing");
static_assert(sizeof(B_StaticMeshProp_C_UnselectFromEditing) == 0x000002, "Wrong size on B_StaticMeshProp_C_UnselectFromEditing");
static_assert(offsetof(B_StaticMeshProp_C_UnselectFromEditing, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UnselectFromEditing::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UnselectFromEditing, CallFunc_RefreshHighlight_Highlightable) == 0x000001, "Member 'B_StaticMeshProp_C_UnselectFromEditing::CallFunc_RefreshHighlight_Highlightable' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SelectForEditing
// 0x0028 (0x0028 - 0x0000)
struct B_StaticMeshProp_C_SelectForEditing final
{
public:
	class APlayerState*                           EditingPlayerState;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          KeepOtherPropsSleep;                               // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_StaticMeshProp_C*>            Props;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshHighlight_Highlightable;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SelectForEditing) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_SelectForEditing");
static_assert(sizeof(B_StaticMeshProp_C_SelectForEditing) == 0x000028, "Wrong size on B_StaticMeshProp_C_SelectForEditing");
static_assert(offsetof(B_StaticMeshProp_C_SelectForEditing, EditingPlayerState) == 0x000000, "Member 'B_StaticMeshProp_C_SelectForEditing::EditingPlayerState' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SelectForEditing, KeepOtherPropsSleep) == 0x000008, "Member 'B_StaticMeshProp_C_SelectForEditing::KeepOtherPropsSleep' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SelectForEditing, Props) == 0x000010, "Member 'B_StaticMeshProp_C_SelectForEditing::Props' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SelectForEditing, CallFunc_HasAuthority_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_SelectForEditing::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_SelectForEditing, CallFunc_RefreshHighlight_Highlightable) == 0x000021, "Member 'B_StaticMeshProp_C_SelectForEditing::CallFunc_RefreshHighlight_Highlightable' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetUncontrolledByWitch
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_SetUncontrolledByWitch final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetUncontrolledByWitch) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_SetUncontrolledByWitch");
static_assert(sizeof(B_StaticMeshProp_C_SetUncontrolledByWitch) == 0x000001, "Wrong size on B_StaticMeshProp_C_SetUncontrolledByWitch");
static_assert(offsetof(B_StaticMeshProp_C_SetUncontrolledByWitch, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_SetUncontrolledByWitch::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.DebugSpawnCollisionTestMesh
// 0x0080 (0x0080 - 0x0000)
struct B_StaticMeshProp_C_DebugSpawnCollisionTestMesh final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AStaticMeshActor*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_DebugSpawnCollisionTestMesh");
static_assert(sizeof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh) == 0x000080, "Wrong size on B_StaticMeshProp_C_DebugSpawnCollisionTestMesh");
static_assert(offsetof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh, SpawnTransform) == 0x000000, "Member 'B_StaticMeshProp_C_DebugSpawnCollisionTestMesh::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000060, "Member 'B_StaticMeshProp_C_DebugSpawnCollisionTestMesh::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'B_StaticMeshProp_C_DebugSpawnCollisionTestMesh::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_DebugSpawnCollisionTestMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000070, "Member 'B_StaticMeshProp_C_DebugSpawnCollisionTestMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.WakeFromSleep
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_WakeFromSleep final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_WakeFromSleep) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_WakeFromSleep");
static_assert(sizeof(B_StaticMeshProp_C_WakeFromSleep) == 0x000001, "Wrong size on B_StaticMeshProp_C_WakeFromSleep");
static_assert(offsetof(B_StaticMeshProp_C_WakeFromSleep, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_WakeFromSleep::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.CreateVisualInterpolatorForMesh
// 0x0130 (0x0130 - 0x0000)
struct B_StaticMeshProp_C_CreateVisualInterpolatorForMesh final
{
public:
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_VisualIntepolator_C*                 ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CreatingStaticMeshComponent;                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MeshComponentToCreate;                             // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0090(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_VisualIntepolator_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_CreateVisualInterpolatorForMesh");
static_assert(sizeof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh) == 0x000130, "Wrong size on B_StaticMeshProp_C_CreateVisualInterpolatorForMesh");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, MeshComponent) == 0x000000, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::MeshComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CreatingStaticMeshComponent) == 0x000010, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CreatingStaticMeshComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, MeshComponentToCreate) == 0x000018, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::MeshComponentToCreate' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, Temp_struct_Variable) == 0x000020, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, Temp_int_Array_Index_Variable) == 0x000080, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_GetMaterials_ReturnValue) == 0x000090, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x0000A8, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000118, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_CreateVisualInterpolatorForMesh, CallFunc_AddComponent_ReturnValue) == 0x000128, "Member 'B_StaticMeshProp_C_CreateVisualInterpolatorForMesh::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.PutToSleep
// 0x0018 (0x0018 - 0x0000)
struct B_StaticMeshProp_C_PutToSleep final
{
public:
	TArray<class UActorComponent*>                Comps;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_PutToSleep) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_PutToSleep");
static_assert(sizeof(B_StaticMeshProp_C_PutToSleep) == 0x000018, "Wrong size on B_StaticMeshProp_C_PutToSleep");
static_assert(offsetof(B_StaticMeshProp_C_PutToSleep, Comps) == 0x000000, "Member 'B_StaticMeshProp_C_PutToSleep::Comps' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_PutToSleep, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_PutToSleep::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.TickJump
// 0x0028 (0x0028 - 0x0000)
struct B_StaticMeshProp_C_TickJump final
{
public:
	double                                        Delta_Seconds;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_TickJump) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_TickJump");
static_assert(sizeof(B_StaticMeshProp_C_TickJump) == 0x000028, "Wrong size on B_StaticMeshProp_C_TickJump");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, Delta_Seconds) == 0x000000, "Member 'B_StaticMeshProp_C_TickJump::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_TickJump::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'B_StaticMeshProp_C_TickJump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000011, "Member 'B_StaticMeshProp_C_TickJump::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'B_StaticMeshProp_C_TickJump::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickJump, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_TickJump::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.TickStop
// 0x0210 (0x0210 - 0x0000)
struct B_StaticMeshProp_C_TickStop final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_TickStop) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_TickStop");
static_assert(sizeof(B_StaticMeshProp_C_TickStop) == 0x000210, "Wrong size on B_StaticMeshProp_C_TickStop");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, DeltaSeconds) == 0x000000, "Member 'B_StaticMeshProp_C_TickStop::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_NegateRotator_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_MakeTransform_ReturnValue_1) == 0x0000A0, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_ComposeTransforms_ReturnValue) == 0x000100, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakTransform_Location) == 0x000160, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakTransform_Rotation) == 0x000178, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakTransform_Scale) == 0x000190, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakRotator_Roll) == 0x0001A8, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakRotator_Pitch) == 0x0001AC, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_BreakRotator_Yaw) == 0x0001B0, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_MakeVector_ReturnValue) == 0x0001C0, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D8, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_MakeVector_X_ImplicitCast) == 0x0001F0, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_MakeVector_Y_ImplicitCast) == 0x0001F8, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TickStop, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000200, "Member 'B_StaticMeshProp_C_TickStop::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateMass
// 0x0040 (0x0040 - 0x0000)
struct B_StaticMeshProp_C_UpdateMass final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateMass) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UpdateMass");
static_assert(sizeof(B_StaticMeshProp_C_UpdateMass) == 0x000040, "Wrong size on B_StaticMeshProp_C_UpdateMass");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_BreakVector_X) == 0x000018, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_BreakVector_Y) == 0x000020, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_BreakVector_Z) == 0x000028, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateMass, CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast) == 0x000038, "Member 'B_StaticMeshProp_C_UpdateMass::CallFunc_SetMassOverrideInKg_MassInKg_ImplicitCast' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.AttachSpringArm
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_AttachSpringArm final
{
public:
	class AB_PropPawnPhysics_C*                   Witch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToActor_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_AttachSpringArm) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_AttachSpringArm");
static_assert(sizeof(B_StaticMeshProp_C_AttachSpringArm) == 0x000010, "Wrong size on B_StaticMeshProp_C_AttachSpringArm");
static_assert(offsetof(B_StaticMeshProp_C_AttachSpringArm, Witch) == 0x000000, "Member 'B_StaticMeshProp_C_AttachSpringArm::Witch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_AttachSpringArm, CallFunc_K2_AttachToActor_ReturnValue) == 0x000008, "Member 'B_StaticMeshProp_C_AttachSpringArm::CallFunc_K2_AttachToActor_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.TransformTest
// 0x01A0 (0x01A0 - 0x0000)
struct B_StaticMeshProp_C_TransformTest final
{
public:
	TArray<class AActor*>                         IgnoreActors;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ValidTransform;                                    // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0080(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ComponentEncroachesGeometry_ReturnValue;  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_TransformTest) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_TransformTest");
static_assert(sizeof(B_StaticMeshProp_C_TransformTest) == 0x0001A0, "Wrong size on B_StaticMeshProp_C_TransformTest");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, IgnoreActors) == 0x000000, "Member 'B_StaticMeshProp_C_TransformTest::IgnoreActors' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, SpawnTransform) == 0x000010, "Member 'B_StaticMeshProp_C_TransformTest::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, ValidTransform) == 0x000070, "Member 'B_StaticMeshProp_C_TransformTest::ValidTransform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, Transform) == 0x000080, "Member 'B_StaticMeshProp_C_TransformTest::Transform' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_ComponentEncroachesGeometry_ReturnValue) == 0x000190, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_ComponentEncroachesGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_TransformTest, CallFunc_Not_PreBool_ReturnValue) == 0x000191, "Member 'B_StaticMeshProp_C_TransformTest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.UpdateRenderCustomDepth
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_UpdateRenderCustomDepth final
{
public:
	class AB_PropPawnPhysics_C*                   Witch;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_UpdateRenderCustomDepth) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_UpdateRenderCustomDepth");
static_assert(sizeof(B_StaticMeshProp_C_UpdateRenderCustomDepth) == 0x000010, "Wrong size on B_StaticMeshProp_C_UpdateRenderCustomDepth");
static_assert(offsetof(B_StaticMeshProp_C_UpdateRenderCustomDepth, Witch) == 0x000000, "Member 'B_StaticMeshProp_C_UpdateRenderCustomDepth::Witch' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateRenderCustomDepth, CallFunc_SetHighlight_ForcedBoolean) == 0x000008, "Member 'B_StaticMeshProp_C_UpdateRenderCustomDepth::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_UpdateRenderCustomDepth, CallFunc_IsLocallyControlled_ReturnValue) == 0x000009, "Member 'B_StaticMeshProp_C_UpdateRenderCustomDepth::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.RestoreVelocity
// 0x0038 (0x0038 - 0x0000)
struct B_StaticMeshProp_C_RestoreVelocity final
{
public:
	struct FSRuntimePropData                      RuntimePropData;                                   // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_RestoreVelocity) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_RestoreVelocity");
static_assert(sizeof(B_StaticMeshProp_C_RestoreVelocity) == 0x000038, "Wrong size on B_StaticMeshProp_C_RestoreVelocity");
static_assert(offsetof(B_StaticMeshProp_C_RestoreVelocity, RuntimePropData) == 0x000000, "Member 'B_StaticMeshProp_C_RestoreVelocity::RuntimePropData' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    SleepingComponent;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature");
static_assert(sizeof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature) == 0x000010, "Wrong size on B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature");
static_assert(offsetof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature, SleepingComponent) == 0x000000, "Member 'B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature::SleepingComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature, BoneName) == 0x000008, "Member 'B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_1_ComponentSleepSignature__DelegateSignature::BoneName' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    WakingComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature");
static_assert(sizeof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature) == 0x000010, "Wrong size on B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature");
static_assert(offsetof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature, WakingComponent) == 0x000000, "Member 'B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature::WakingComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature, BoneName) == 0x000008, "Member 'B_StaticMeshProp_C_BndEvt__Mesh_K2Node_ComponentBoundEvent_2_ComponentWakeSignature__DelegateSignature::BoneName' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.MultiSetWantedRotation
// 0x0018 (0x0018 - 0x0000)
struct B_StaticMeshProp_C_MultiSetWantedRotation final
{
public:
	struct FRotator                               WantedRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_StaticMeshProp_C_MultiSetWantedRotation) == 0x000008, "Wrong alignment on B_StaticMeshProp_C_MultiSetWantedRotation");
static_assert(sizeof(B_StaticMeshProp_C_MultiSetWantedRotation) == 0x000018, "Wrong size on B_StaticMeshProp_C_MultiSetWantedRotation");
static_assert(offsetof(B_StaticMeshProp_C_MultiSetWantedRotation, WantedRotation) == 0x000000, "Member 'B_StaticMeshProp_C_MultiSetWantedRotation::WantedRotation' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_StaticMeshProp_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_ReceiveTick) == 0x000004, "Wrong alignment on B_StaticMeshProp_C_ReceiveTick");
static_assert(sizeof(B_StaticMeshProp_C_ReceiveTick) == 0x000004, "Wrong size on B_StaticMeshProp_C_ReceiveTick");
static_assert(offsetof(B_StaticMeshProp_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_StaticMeshProp_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.SetHighlightChannel
// 0x0001 (0x0001 - 0x0000)
struct B_StaticMeshProp_C_SetHighlightChannel final
{
public:
	EHighlightChannel                             Channel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_SetHighlightChannel) == 0x000001, "Wrong alignment on B_StaticMeshProp_C_SetHighlightChannel");
static_assert(sizeof(B_StaticMeshProp_C_SetHighlightChannel) == 0x000001, "Wrong size on B_StaticMeshProp_C_SetHighlightChannel");
static_assert(offsetof(B_StaticMeshProp_C_SetHighlightChannel, Channel) == 0x000000, "Member 'B_StaticMeshProp_C_SetHighlightChannel::Channel' has a wrong offset!");

// Function B_StaticMeshProp.B_StaticMeshProp_C.ExecuteUbergraph_B_StaticMeshProp
// 0x02C0 (0x02C0 - 0x0000)
struct B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_WakingComponent;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHighlightChannel                             K2Node_Event_Channel;                              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool HasPlayTestStarted)>      K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyRigidBodyAwake_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State_1;      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x00F8(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0xF];                                      // 0x01F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0200(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_WantedRotation;                 // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_SleepingComponent;      // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName_1;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCullDistance_NewCullDistance_ImplicitCast; // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_TickJump_Delta_Seconds_ImplicitCast;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickStop_DeltaSeconds_ImplicitCast;       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp) == 0x000010, "Wrong alignment on B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp");
static_assert(sizeof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp) == 0x0002C0, "Wrong size on B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, EntryPoint) == 0x000000, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_ComponentBoundEvent_WakingComponent) == 0x000008, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_ComponentBoundEvent_WakingComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_ComponentBoundEvent_BoneName) == 0x000010, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_ComponentBoundEvent_BoneName' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000028, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_Event_Channel) == 0x000031, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_Event_Channel' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsDedicatedServer_ReturnValue) == 0x000032, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_SetHighlight_ForcedBoolean) == 0x000033, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_K2_SetTimer_ReturnValue) == 0x000038, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_HasAuthority_ReturnValue_1) == 0x000041, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsValid_ReturnValue_1) == 0x000042, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_HasAuthority_ReturnValue_2) == 0x000043, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_HasAuthority_ReturnValue_3) == 0x000054, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetComponentBounds_Origin) == 0x000058, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetComponentBounds_BoxExtent) == 0x000070, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetComponentBounds_SphereRadius) == 0x000088, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetInstigator_ReturnValue_1) == 0x000098, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsValid_ReturnValue_2) == 0x0000A0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1) == 0x0000A8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_AsB_Prop_Pawn_Physics_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsValid_ReturnValue_3) == 0x0000B1, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_Event_DeltaSeconds) == 0x0000B4, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x0000C0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsAnyRigidBodyAwake_ReturnValue) == 0x0000C9, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsAnyRigidBodyAwake_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_Not_PreBool_ReturnValue) == 0x0000CA, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetGameState_ReturnValue_1) == 0x0000D0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_AsB_Game_State) == 0x0000D8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_AsB_Creative_Game_State_1) == 0x0000E8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_AsB_Creative_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0000F8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_K2_SetActorTransform_ReturnValue) == 0x0001F0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_GetTransform_ReturnValue) == 0x000200, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000260, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_CustomEvent_WantedRotation) == 0x000268, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_CustomEvent_WantedRotation' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_IsValid_ReturnValue_4) == 0x000280, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_ComponentBoundEvent_SleepingComponent) == 0x000288, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_ComponentBoundEvent_SleepingComponent' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, K2Node_ComponentBoundEvent_BoneName_1) == 0x000290, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::K2Node_ComponentBoundEvent_BoneName_1' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_SetCullDistance_NewCullDistance_ImplicitCast) == 0x0002A0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_SetCullDistance_NewCullDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_TickJump_Delta_Seconds_ImplicitCast) == 0x0002A8, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_TickJump_Delta_Seconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp, CallFunc_TickStop_DeltaSeconds_ImplicitCast) == 0x0002B0, "Member 'B_StaticMeshProp_C_ExecuteUbergraph_B_StaticMeshProp::CallFunc_TickStop_DeltaSeconds_ImplicitCast' has a wrong offset!");

}

