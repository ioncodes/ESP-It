#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Getter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function BFL_Getter.BFL_Getter_C.IsGamepadMode
// 0x0028 (0x0028 - 0x0000)
struct BFL_Getter_C_IsGamepadMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConsoleBuild_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Getter_C_IsGamepadMode) == 0x000008, "Wrong alignment on BFL_Getter_C_IsGamepadMode");
static_assert(sizeof(BFL_Getter_C_IsGamepadMode) == 0x000028, "Wrong size on BFL_Getter_C_IsGamepadMode");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, __WorldContext) == 0x000000, "Member 'BFL_Getter_C_IsGamepadMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, ReturnValue) == 0x000008, "Member 'BFL_Getter_C_IsGamepadMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, CallFunc_IsConsoleBuild_ReturnValue) == 0x000009, "Member 'BFL_Getter_C_IsGamepadMode::CallFunc_IsConsoleBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BFL_Getter_C_IsGamepadMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'BFL_Getter_C_IsGamepadMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BFL_Getter_C_IsGamepadMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_IsGamepadMode, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'BFL_Getter_C_IsGamepadMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BFL_Getter.BFL_Getter_C.GetTeamColor
// 0x0050 (0x0050 - 0x0000)
struct BFL_Getter_C_GetTeamColor final
{
public:
	ETeamID                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Getter_C_GetTeamColor) == 0x000008, "Wrong alignment on BFL_Getter_C_GetTeamColor");
static_assert(sizeof(BFL_Getter_C_GetTeamColor) == 0x000050, "Wrong size on BFL_Getter_C_GetTeamColor");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, Team) == 0x000000, "Member 'BFL_Getter_C_GetTeamColor::Team' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, __WorldContext) == 0x000008, "Member 'BFL_Getter_C_GetTeamColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, ReturnValue) == 0x000010, "Member 'BFL_Getter_C_GetTeamColor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'BFL_Getter_C_GetTeamColor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, Temp_byte_Variable) == 0x000028, "Member 'BFL_Getter_C_GetTeamColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'BFL_Getter_C_GetTeamColor::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BFL_Getter_C_GetTeamColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_Getter_C_GetTeamColor, K2Node_Select_Default) == 0x00003C, "Member 'BFL_Getter_C_GetTeamColor::K2Node_Select_Default' has a wrong offset!");

}

