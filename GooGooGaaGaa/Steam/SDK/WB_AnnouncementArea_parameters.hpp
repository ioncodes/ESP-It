#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AnnouncementArea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.DetermineLastWitchText
// 0x00F0 (0x00F0 - 0x0000)
struct WB_AnnouncementArea_C_DetermineLastWitchText final
{
public:
	class FString                                 WitchName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0010)()
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0010)()
};
static_assert(alignof(WB_AnnouncementArea_C_DetermineLastWitchText) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_DetermineLastWitchText");
static_assert(sizeof(WB_AnnouncementArea_C_DetermineLastWitchText) == 0x0000F0, "Wrong size on WB_AnnouncementArea_C_DetermineLastWitchText");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, WitchName) == 0x000000, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::WitchName' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, ReturnValue) == 0x000010, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, Temp_text_Variable) == 0x000020, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, Temp_bool_Variable) == 0x000088, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, K2Node_MakeArray_Array) == 0x000090, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A0, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, K2Node_DynamicCast_AsB_Player_State) == 0x0000B8, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, CallFunc_GetPlayerOrBotName_Name) == 0x0000C8, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000D8, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_DetermineLastWitchText, K2Node_Select_Default) == 0x0000E0, "Member 'WB_AnnouncementArea_C_DetermineLastWitchText::K2Node_Select_Default' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.EVENT_OnAnnouncementAnimationFinished
// 0x0010 (0x0010 - 0x0000)
struct WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished final
{
public:
	bool                                          CallFunc_IsAnAnnouncementQueued_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_AnnouncementEntry_C*                CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished");
static_assert(sizeof(WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished) == 0x000010, "Wrong size on WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished");
static_assert(offsetof(WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished, CallFunc_IsAnAnnouncementQueued_ReturnValue) == 0x000000, "Member 'WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished::CallFunc_IsAnAnnouncementQueued_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_AnnouncementArea_C_EVENT_OnAnnouncementAnimationFinished::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.GetMyTeam
// 0x0020 (0x0020 - 0x0000)
struct WB_AnnouncementArea_C_GetMyTeam final
{
public:
	ETeamID                                       Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_GetMyTeam) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_GetMyTeam");
static_assert(sizeof(WB_AnnouncementArea_C_GetMyTeam) == 0x000020, "Wrong size on WB_AnnouncementArea_C_GetMyTeam");
static_assert(offsetof(WB_AnnouncementArea_C_GetMyTeam, Team) == 0x000000, "Member 'WB_AnnouncementArea_C_GetMyTeam::Team' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_GetMyTeam, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_AnnouncementArea_C_GetMyTeam::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_GetMyTeam, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'WB_AnnouncementArea_C_GetMyTeam::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_GetMyTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_AnnouncementArea_C_GetMyTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.HandleLastWitchAnnouncement
// 0x0038 (0x0038 - 0x0000)
struct WB_AnnouncementArea_C_HandleLastWitchAnnouncement final
{
public:
	class FString                                 WitchName;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UWB_AnnouncementEntry_C*                AnnouncementToShow;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_AnnouncementEntry_C*                CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_DetermineLastWitchText_ReturnValue;       // 0x0020(0x0010)()
	bool                                          CallFunc_IsAnAnnouncementShown_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_HandleLastWitchAnnouncement");
static_assert(sizeof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement) == 0x000038, "Wrong size on WB_AnnouncementArea_C_HandleLastWitchAnnouncement");
static_assert(offsetof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement, WitchName) == 0x000000, "Member 'WB_AnnouncementArea_C_HandleLastWitchAnnouncement::WitchName' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement, AnnouncementToShow) == 0x000010, "Member 'WB_AnnouncementArea_C_HandleLastWitchAnnouncement::AnnouncementToShow' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement, CallFunc_Create_ReturnValue) == 0x000018, "Member 'WB_AnnouncementArea_C_HandleLastWitchAnnouncement::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement, CallFunc_DetermineLastWitchText_ReturnValue) == 0x000020, "Member 'WB_AnnouncementArea_C_HandleLastWitchAnnouncement::CallFunc_DetermineLastWitchText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_HandleLastWitchAnnouncement, CallFunc_IsAnAnnouncementShown_ReturnValue) == 0x000030, "Member 'WB_AnnouncementArea_C_HandleLastWitchAnnouncement::CallFunc_IsAnAnnouncementShown_ReturnValue' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.IsAnAnnouncementQueued
// 0x000C (0x000C - 0x0000)
struct WB_AnnouncementArea_C_IsAnAnnouncementQueued final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_IsAnAnnouncementQueued) == 0x000004, "Wrong alignment on WB_AnnouncementArea_C_IsAnAnnouncementQueued");
static_assert(sizeof(WB_AnnouncementArea_C_IsAnAnnouncementQueued) == 0x00000C, "Wrong size on WB_AnnouncementArea_C_IsAnAnnouncementQueued");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementQueued, ReturnValue) == 0x000000, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementQueued::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementQueued, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementQueued::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementQueued, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementQueued::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.IsAnAnnouncementShown
// 0x000C (0x000C - 0x0000)
struct WB_AnnouncementArea_C_IsAnAnnouncementShown final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_IsAnAnnouncementShown) == 0x000004, "Wrong alignment on WB_AnnouncementArea_C_IsAnAnnouncementShown");
static_assert(sizeof(WB_AnnouncementArea_C_IsAnAnnouncementShown) == 0x00000C, "Wrong size on WB_AnnouncementArea_C_IsAnAnnouncementShown");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementShown, ReturnValue) == 0x000000, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementShown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementShown, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementShown::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_IsAnAnnouncementShown, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WB_AnnouncementArea_C_IsAnAnnouncementShown::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.QueueAnnouncement
// 0x0010 (0x0010 - 0x0000)
struct WB_AnnouncementArea_C_QueueAnnouncement final
{
public:
	const class UWB_AnnouncementEntry_C*          NewItem;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_QueueAnnouncement) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_QueueAnnouncement");
static_assert(sizeof(WB_AnnouncementArea_C_QueueAnnouncement) == 0x000010, "Wrong size on WB_AnnouncementArea_C_QueueAnnouncement");
static_assert(offsetof(WB_AnnouncementArea_C_QueueAnnouncement, NewItem) == 0x000000, "Member 'WB_AnnouncementArea_C_QueueAnnouncement::NewItem' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_QueueAnnouncement, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'WB_AnnouncementArea_C_QueueAnnouncement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WB_AnnouncementArea.WB_AnnouncementArea_C.ShowAnnouncement
// 0x0020 (0x0020 - 0x0000)
struct WB_AnnouncementArea_C_ShowAnnouncement final
{
public:
	class UWB_AnnouncementEntry_C*                Announcement;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AnnouncementArea_C_ShowAnnouncement) == 0x000008, "Wrong alignment on WB_AnnouncementArea_C_ShowAnnouncement");
static_assert(sizeof(WB_AnnouncementArea_C_ShowAnnouncement) == 0x000020, "Wrong size on WB_AnnouncementArea_C_ShowAnnouncement");
static_assert(offsetof(WB_AnnouncementArea_C_ShowAnnouncement, Announcement) == 0x000000, "Member 'WB_AnnouncementArea_C_ShowAnnouncement::Announcement' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_ShowAnnouncement, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_AnnouncementArea_C_ShowAnnouncement::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_AnnouncementArea_C_ShowAnnouncement, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x000018, "Member 'WB_AnnouncementArea_C_ShowAnnouncement::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");

}

