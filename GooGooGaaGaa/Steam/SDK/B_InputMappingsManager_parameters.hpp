#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_InputMappingsManager

#include "Basic.hpp"

#include "SActionAndTeam_structs.hpp"
#include "SControllerBinding_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "SAxisMappings_structs.hpp"
#include "SActionMappings_structs.hpp"
#include "SAxisToEdit_structs.hpp"
#include "EControllerLayout_structs.hpp"


namespace SDK::Params
{

// Function B_InputMappingsManager.B_InputMappingsManager_C.AddActionBinding
// 0x00C8 (0x00C8 - 0x0000)
struct B_InputMappingsManager_C_AddActionBinding final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key;                                               // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bDuplicateKey;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0030(0x0028)()
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0058(0x0010)(ReferenceParm)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0068(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping_1;         // 0x0098(0x0028)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_AddActionBinding) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_AddActionBinding");
static_assert(sizeof(B_InputMappingsManager_C_AddActionBinding) == 0x0000C8, "Wrong size on B_InputMappingsManager_C_AddActionBinding");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, ActionName) == 0x000000, "Member 'B_InputMappingsManager_C_AddActionBinding::ActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, Key) == 0x000008, "Member 'B_InputMappingsManager_C_AddActionBinding::Key' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, bDuplicateKey) == 0x000020, "Member 'B_InputMappingsManager_C_AddActionBinding::bDuplicateKey' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, Temp_int_Array_Index_Variable) == 0x000024, "Member 'B_InputMappingsManager_C_AddActionBinding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'B_InputMappingsManager_C_AddActionBinding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, K2Node_MakeStruct_InputActionKeyMapping) == 0x000030, "Member 'B_InputMappingsManager_C_AddActionBinding::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000058, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000095, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, K2Node_MakeStruct_InputActionKeyMapping_1) == 0x000098, "Member 'B_InputMappingsManager_C_AddActionBinding::K2Node_MakeStruct_InputActionKeyMapping_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Map_Contains_ReturnValue) == 0x0000C1, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddActionBinding, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'B_InputMappingsManager_C_AddActionBinding::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.AddControllerMappings
// 0x0098 (0x0098 - 0x0000)
struct B_InputMappingsManager_C_AddControllerMappings final
{
public:
	TArray<struct FSControllerBinding>            ControllerLayoutRef;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bDuplicateKey;                                     // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentAction;                                     // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CurrentKey;                                        // 0x0020(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSControllerBinding                    CallFunc_Array_Get_Item;                           // 0x0050(0x0028)(HasGetValueTypeHash)
	struct FSActionAndTeam                        CallFunc_Array_Get_Item_1;                         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_AddControllerMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_AddControllerMappings");
static_assert(sizeof(B_InputMappingsManager_C_AddControllerMappings) == 0x000098, "Wrong size on B_InputMappingsManager_C_AddControllerMappings");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, ControllerLayoutRef) == 0x000000, "Member 'B_InputMappingsManager_C_AddControllerMappings::ControllerLayoutRef' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, bDuplicateKey) == 0x000010, "Member 'B_InputMappingsManager_C_AddControllerMappings::bDuplicateKey' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CurrentAction) == 0x000014, "Member 'B_InputMappingsManager_C_AddControllerMappings::CurrentAction' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CurrentKey) == 0x000020, "Member 'B_InputMappingsManager_C_AddControllerMappings::CurrentKey' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'B_InputMappingsManager_C_AddControllerMappings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, Temp_int_Array_Index_Variable) == 0x000048, "Member 'B_InputMappingsManager_C_AddControllerMappings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'B_InputMappingsManager_C_AddControllerMappings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, Temp_int_Loop_Counter_Variable_1) == 0x000088, "Member 'B_InputMappingsManager_C_AddControllerMappings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AddControllerMappings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'B_InputMappingsManager_C_AddControllerMappings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.AreActionMappingsSameLength
// 0x00E8 (0x00E8 - 0x0000)
struct B_InputMappingsManager_C_AreActionMappingsSameLength final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSActionMappings>    CurrentActionMappings_0;                           // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class FName, struct FSActionMappings>    ActionMappings;                                    // 0x0058(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value;                           // 0x00B0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value_1;                         // 0x00C8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_AreActionMappingsSameLength) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_AreActionMappingsSameLength");
static_assert(sizeof(B_InputMappingsManager_C_AreActionMappingsSameLength) == 0x0000E8, "Wrong size on B_InputMappingsManager_C_AreActionMappingsSameLength");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, ActionName) == 0x000000, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::ActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CurrentActionMappings_0) == 0x000008, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CurrentActionMappings_0' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, ActionMappings) == 0x000058, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::ActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, ReturnValue) == 0x0000A8, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Map_Find_Value_1) == 0x0000C8, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Map_Find_ReturnValue_1) == 0x0000D8, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreActionMappingsSameLength, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'B_InputMappingsManager_C_AreActionMappingsSameLength::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.AreAxisMappingsSameLength
// 0x00F8 (0x00F8 - 0x0000)
struct B_InputMappingsManager_C_AreAxisMappingsSameLength final
{
public:
	class FName                                   AxisName;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSAxisMappings>      CurrentAxisMappings_0;                             // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class FName, struct FSAxisMappings>      AxisMappings;                                      // 0x0058(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAxisMappings                         CallFunc_Map_Find_Value;                           // 0x00B0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAxisMappings                         CallFunc_Map_Find_Value_1;                         // 0x00D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_AreAxisMappingsSameLength) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_AreAxisMappingsSameLength");
static_assert(sizeof(B_InputMappingsManager_C_AreAxisMappingsSameLength) == 0x0000F8, "Wrong size on B_InputMappingsManager_C_AreAxisMappingsSameLength");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, AxisName) == 0x000000, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::AxisName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CurrentAxisMappings_0) == 0x000008, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CurrentAxisMappings_0' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, AxisMappings) == 0x000058, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::AxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, ReturnValue) == 0x0000A8, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Map_Find_Value_1) == 0x0000D0, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Map_Find_ReturnValue_1) == 0x0000E8, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_Array_Length_ReturnValue_1) == 0x0000F0, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_AreAxisMappingsSameLength, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'B_InputMappingsManager_C_AreAxisMappingsSameLength::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.ChangeControllerLayout
// 0x0020 (0x0020 - 0x0000)
struct B_InputMappingsManager_C_ChangeControllerLayout final
{
public:
	EControllerLayout                             ControllerLayout;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerLayout                             Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSControllerBinding>            K2Node_Select_Default;                             // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_ChangeControllerLayout) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_ChangeControllerLayout");
static_assert(sizeof(B_InputMappingsManager_C_ChangeControllerLayout) == 0x000020, "Wrong size on B_InputMappingsManager_C_ChangeControllerLayout");
static_assert(offsetof(B_InputMappingsManager_C_ChangeControllerLayout, ControllerLayout) == 0x000000, "Member 'B_InputMappingsManager_C_ChangeControllerLayout::ControllerLayout' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ChangeControllerLayout, Temp_byte_Variable) == 0x000001, "Member 'B_InputMappingsManager_C_ChangeControllerLayout::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ChangeControllerLayout, K2Node_Select_Default) == 0x000008, "Member 'B_InputMappingsManager_C_ChangeControllerLayout::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ChangeControllerLayout, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'B_InputMappingsManager_C_ChangeControllerLayout::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.ExecuteUbergraph_B_InputMappingsManager
// 0x0020 (0x0020 - 0x0000)
struct B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager");
static_assert(sizeof(B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager) == 0x000020, "Wrong size on B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager");
static_assert(offsetof(B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager, EntryPoint) == 0x000000, "Member 'B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager, K2Node_Event_InGameInstance) == 0x000008, "Member 'B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager::K2Node_Event_InGameInstance' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'B_InputMappingsManager_C_ExecuteUbergraph_B_InputMappingsManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.GetActionMappingFor
// 0x00D0 (0x00D0 - 0x0000)
struct B_InputMappingsManager_C_GetActionMappingFor final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 ReturnValue;                                       // 0x0018(0x0028)(Parm, OutParm, ReturnParm)
	TArray<struct FInputActionKeyMapping>         CurrentMappings;                                   // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0060(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value;                           // 0x00B8(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_GetActionMappingFor) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_GetActionMappingFor");
static_assert(sizeof(B_InputMappingsManager_C_GetActionMappingFor) == 0x0000D0, "Wrong size on B_InputMappingsManager_C_GetActionMappingFor");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, Key) == 0x000000, "Member 'B_InputMappingsManager_C_GetActionMappingFor::Key' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, ReturnValue) == 0x000018, "Member 'B_InputMappingsManager_C_GetActionMappingFor::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CurrentMappings) == 0x000040, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CurrentMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'B_InputMappingsManager_C_GetActionMappingFor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, Temp_int_Array_Index_Variable) == 0x000058, "Member 'B_InputMappingsManager_C_GetActionMappingFor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'B_InputMappingsManager_C_GetActionMappingFor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Array_Get_Item) == 0x000060, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'B_InputMappingsManager_C_GetActionMappingFor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000090, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Map_Keys_Keys) == 0x000098, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Array_Get_Item_1) == 0x0000AC, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetActionMappingFor, CallFunc_Map_Find_ReturnValue) == 0x0000C8, "Member 'B_InputMappingsManager_C_GetActionMappingFor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.GetAxisMappingFor
// 0x00D8 (0x00D8 - 0x0000)
struct B_InputMappingsManager_C_GetAxisMappingFor final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   ReturnValue;                                       // 0x0018(0x0028)(Parm, OutParm, ReturnParm)
	TArray<struct FInputAxisKeyMapping>           CurrentMappings;                                   // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0060(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAxisMappings                         CallFunc_Map_Find_Value;                           // 0x00B8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_GetAxisMappingFor) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_GetAxisMappingFor");
static_assert(sizeof(B_InputMappingsManager_C_GetAxisMappingFor) == 0x0000D8, "Wrong size on B_InputMappingsManager_C_GetAxisMappingFor");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, Key) == 0x000000, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::Key' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, ReturnValue) == 0x000018, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CurrentMappings) == 0x000040, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CurrentMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, Temp_int_Array_Index_Variable) == 0x000058, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Array_Get_Item) == 0x000060, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000090, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Map_Keys_Keys) == 0x000098, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Array_Length_ReturnValue_1) == 0x0000A8, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Array_Get_Item_1) == 0x0000AC, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B4, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Map_Find_Value) == 0x0000B8, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisMappingFor, CallFunc_Map_Find_ReturnValue) == 0x0000D0, "Member 'B_InputMappingsManager_C_GetAxisMappingFor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.GetAxisName
// 0x0040 (0x0040 - 0x0000)
struct B_InputMappingsManager_C_GetAxisName final
{
public:
	struct FSAxisToEdit                           AxisToEdit;                                        // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FName                                   ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_GetAxisName) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_GetAxisName");
static_assert(sizeof(B_InputMappingsManager_C_GetAxisName) == 0x000040, "Wrong size on B_InputMappingsManager_C_GetAxisName");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisName, AxisToEdit) == 0x000000, "Member 'B_InputMappingsManager_C_GetAxisName::AxisToEdit' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisName, ReturnValue) == 0x000020, "Member 'B_InputMappingsManager_C_GetAxisName::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisName, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'B_InputMappingsManager_C_GetAxisName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetAxisName, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'B_InputMappingsManager_C_GetAxisName::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.GetCurrentMappings
// 0x0230 (0x0230 - 0x0000)
struct B_InputMappingsManager_C_GetCurrentMappings final
{
public:
	TMap<class FName, struct FSActionMappings>    ActionMappings;                                    // 0x0000(0x0050)(Parm, OutParm)
	TMap<class FName, struct FSAxisMappings>      AxisMappings;                                      // 0x0050(0x0050)(Parm, OutParm)
	TMap<class FName, struct FSAxisMappings>      LocalAxisMappings;                                 // 0x00A0(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, struct FSActionMappings>    LocalActionMappings;                               // 0x00F0(0x0050)(Edit, BlueprintVisible)
	TArray<struct FInputAxisKeyMapping>           CurrentAxisMapping;                                // 0x0140(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         CurrentActionMapping;                              // 0x0150(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputAxisKeyMapping>           LocalAxisMappings_X;                               // 0x0160(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         LocalActionMappings_X;                             // 0x0170(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSAxisToEdit                           CallFunc_Array_Get_Item;                           // 0x01A0(0x0020)(HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x01C8(0x0010)(ReferenceParm)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeyBindingsForAxis_Bindings;           // 0x01D8(0x0010)(ReferenceParm)
	struct FSActionMappings                       K2Node_MakeStruct_SActionMappings;                 // 0x01E8(0x0010)(HasGetValueTypeHash)
	struct FSAxisMappings                         K2Node_MakeStruct_SAxisMappings;                   // 0x01F8(0x0018)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_GetCurrentMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_GetCurrentMappings");
static_assert(sizeof(B_InputMappingsManager_C_GetCurrentMappings) == 0x000230, "Wrong size on B_InputMappingsManager_C_GetCurrentMappings");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, ActionMappings) == 0x000000, "Member 'B_InputMappingsManager_C_GetCurrentMappings::ActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, AxisMappings) == 0x000050, "Member 'B_InputMappingsManager_C_GetCurrentMappings::AxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, LocalAxisMappings) == 0x0000A0, "Member 'B_InputMappingsManager_C_GetCurrentMappings::LocalAxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, LocalActionMappings) == 0x0000F0, "Member 'B_InputMappingsManager_C_GetCurrentMappings::LocalActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CurrentAxisMapping) == 0x000140, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CurrentAxisMapping' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CurrentActionMapping) == 0x000150, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CurrentActionMapping' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, LocalAxisMappings_X) == 0x000160, "Member 'B_InputMappingsManager_C_GetCurrentMappings::LocalAxisMappings_X' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, LocalActionMappings_X) == 0x000170, "Member 'B_InputMappingsManager_C_GetCurrentMappings::LocalActionMappings_X' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'B_InputMappingsManager_C_GetCurrentMappings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, Temp_int_Array_Index_Variable) == 0x000188, "Member 'B_InputMappingsManager_C_GetCurrentMappings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, Temp_int_Loop_Counter_Variable_1) == 0x00018C, "Member 'B_InputMappingsManager_C_GetCurrentMappings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000190, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Array_Length_ReturnValue) == 0x000194, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, Temp_int_Array_Index_Variable_1) == 0x00019C, "Member 'B_InputMappingsManager_C_GetCurrentMappings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_GetKeyBindingsForAction_Bindings) == 0x0001C8, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_GetKeyBindingsForAxis_Bindings) == 0x0001D8, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_GetKeyBindingsForAxis_Bindings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, K2Node_MakeStruct_SActionMappings) == 0x0001E8, "Member 'B_InputMappingsManager_C_GetCurrentMappings::K2Node_MakeStruct_SActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, K2Node_MakeStruct_SAxisMappings) == 0x0001F8, "Member 'B_InputMappingsManager_C_GetCurrentMappings::K2Node_MakeStruct_SAxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Conv_TextToString_ReturnValue) == 0x000210, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Array_Length_ReturnValue_1) == 0x000220, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Conv_StringToName_ReturnValue) == 0x000224, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_GetCurrentMappings, CallFunc_Less_IntInt_ReturnValue_1) == 0x00022C, "Member 'B_InputMappingsManager_C_GetCurrentMappings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_InputMappingsManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_Initialize) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_Initialize");
static_assert(sizeof(B_InputMappingsManager_C_Initialize) == 0x000008, "Wrong size on B_InputMappingsManager_C_Initialize");
static_assert(offsetof(B_InputMappingsManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_InputMappingsManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.IsDirty
// 0x0001 (0x0001 - 0x0000)
struct B_InputMappingsManager_C_IsDirty final
{
public:
	bool                                          bDirty_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_IsDirty) == 0x000001, "Wrong alignment on B_InputMappingsManager_C_IsDirty");
static_assert(sizeof(B_InputMappingsManager_C_IsDirty) == 0x000001, "Wrong size on B_InputMappingsManager_C_IsDirty");
static_assert(offsetof(B_InputMappingsManager_C_IsDirty, bDirty_0) == 0x000000, "Member 'B_InputMappingsManager_C_IsDirty::bDirty_0' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.IsKeyForAction
// 0x0088 (0x0088 - 0x0000)
struct B_InputMappingsManager_C_IsKeyForAction final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   Action;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         LocalMappings;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0058(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_IsKeyForAction) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_IsKeyForAction");
static_assert(sizeof(B_InputMappingsManager_C_IsKeyForAction) == 0x000088, "Wrong size on B_InputMappingsManager_C_IsKeyForAction");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, Key) == 0x000000, "Member 'B_InputMappingsManager_C_IsKeyForAction::Key' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, Action) == 0x000018, "Member 'B_InputMappingsManager_C_IsKeyForAction::Action' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, ReturnValue) == 0x000020, "Member 'B_InputMappingsManager_C_IsKeyForAction::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, LocalMappings) == 0x000028, "Member 'B_InputMappingsManager_C_IsKeyForAction::LocalMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000038, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, Temp_int_Array_Index_Variable) == 0x000048, "Member 'B_InputMappingsManager_C_IsKeyForAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'B_InputMappingsManager_C_IsKeyForAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_Array_Get_Item) == 0x000058, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_IsKeyForAction, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000085, "Member 'B_InputMappingsManager_C_IsKeyForAction::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RemoveControllerActionMappings
// 0x00E8 (0x00E8 - 0x0000)
struct B_InputMappingsManager_C_RemoveControllerActionMappings final
{
public:
	TArray<struct FInputActionKeyMapping>         CurrentMappings;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSActionAndTeam>                CurrentActionAndTeams;                             // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EControllerLayout                             Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSActionAndTeam                        CallFunc_Array_Get_Item;                           // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0028)()
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSControllerBinding>            K2Node_Select_Default;                             // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSControllerBinding                    CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_RemoveControllerActionMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RemoveControllerActionMappings");
static_assert(sizeof(B_InputMappingsManager_C_RemoveControllerActionMappings) == 0x0000E8, "Wrong size on B_InputMappingsManager_C_RemoveControllerActionMappings");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CurrentMappings) == 0x000000, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CurrentMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CurrentActionAndTeams) == 0x000010, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CurrentActionAndTeams' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Array_Index_Variable) == 0x000028, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_byte_Variable) == 0x00002C, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Array_Index_Variable_1) == 0x000030, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Array_Index_Variable_2) == 0x00003C, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000078, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000088, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, Temp_int_Loop_Counter_Variable_2) == 0x000094, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Less_IntInt_ReturnValue_1) == 0x000099, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, K2Node_Select_Default) == 0x0000A0, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RemoveControllerActionMappings, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E0, "Member 'B_InputMappingsManager_C_RemoveControllerActionMappings::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.ReverseLayout
// 0x0180 (0x0180 - 0x0000)
struct B_InputMappingsManager_C_ReverseLayout final
{
public:
	struct FKey                                   CurrentActionKey;                                  // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FName                                   CurrentActionName;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 RightThumbstickAction;                             // 0x0020(0x0028)(Edit, BlueprintVisible)
	struct FInputActionKeyMapping                 LeftThumbstickAction;                              // 0x0048(0x0028)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         CurrentActionMaps;                                 // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           ActionKeys;                                        // 0x0080(0x0010)(Edit, BlueprintVisible)
	struct FInputAxisKeyMapping                   CallFunc_GetAxisMappingFor_ReturnValue;            // 0x0090(0x0028)()
	struct FInputAxisKeyMapping                   CallFunc_GetAxisMappingFor_ReturnValue_1;          // 0x00B8(0x0028)()
	struct FInputAxisKeyMapping                   CallFunc_GetAxisMappingFor_ReturnValue_2;          // 0x00E0(0x0028)()
	struct FInputAxisKeyMapping                   CallFunc_GetAxisMappingFor_ReturnValue_3;          // 0x0108(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_GetActionMappingFor_ReturnValue;          // 0x0130(0x0028)()
	struct FInputActionKeyMapping                 CallFunc_GetActionMappingFor_ReturnValue_1;        // 0x0158(0x0028)()
};
static_assert(alignof(B_InputMappingsManager_C_ReverseLayout) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_ReverseLayout");
static_assert(sizeof(B_InputMappingsManager_C_ReverseLayout) == 0x000180, "Wrong size on B_InputMappingsManager_C_ReverseLayout");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CurrentActionKey) == 0x000000, "Member 'B_InputMappingsManager_C_ReverseLayout::CurrentActionKey' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CurrentActionName) == 0x000018, "Member 'B_InputMappingsManager_C_ReverseLayout::CurrentActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, RightThumbstickAction) == 0x000020, "Member 'B_InputMappingsManager_C_ReverseLayout::RightThumbstickAction' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, LeftThumbstickAction) == 0x000048, "Member 'B_InputMappingsManager_C_ReverseLayout::LeftThumbstickAction' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CurrentActionMaps) == 0x000070, "Member 'B_InputMappingsManager_C_ReverseLayout::CurrentActionMaps' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, ActionKeys) == 0x000080, "Member 'B_InputMappingsManager_C_ReverseLayout::ActionKeys' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetAxisMappingFor_ReturnValue) == 0x000090, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetAxisMappingFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetAxisMappingFor_ReturnValue_1) == 0x0000B8, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetAxisMappingFor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetAxisMappingFor_ReturnValue_2) == 0x0000E0, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetAxisMappingFor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetAxisMappingFor_ReturnValue_3) == 0x000108, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetAxisMappingFor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetActionMappingFor_ReturnValue) == 0x000130, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetActionMappingFor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_ReverseLayout, CallFunc_GetActionMappingFor_ReturnValue_1) == 0x000158, "Member 'B_InputMappingsManager_C_ReverseLayout::CallFunc_GetActionMappingFor_ReturnValue_1' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RevertActionMappingsComplex
// 0x0108 (0x0108 - 0x0000)
struct B_InputMappingsManager_C_RevertActionMappingsComplex final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSActionMappings>    RestoredActionMappings;                            // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentIndex;                                      // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         RestoredMappings;                                  // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         CurrentMappings;                                   // 0x0070(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value;                           // 0x0088(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x00A0(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value_1;                         // 0x00F0(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_RevertActionMappingsComplex) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RevertActionMappingsComplex");
static_assert(sizeof(B_InputMappingsManager_C_RevertActionMappingsComplex) == 0x000108, "Wrong size on B_InputMappingsManager_C_RevertActionMappingsComplex");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, ActionName) == 0x000000, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::ActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, RestoredActionMappings) == 0x000008, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::RestoredActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CurrentIndex) == 0x000058, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, RestoredMappings) == 0x000060, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::RestoredMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CurrentMappings) == 0x000070, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CurrentMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, Temp_int_Variable) == 0x000080, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Map_Find_Value) == 0x000088, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, K2Node_MakeStruct_InputActionKeyMapping) == 0x0000A0, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000D2, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_BooleanAND_ReturnValue) == 0x0000D3, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D4, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D5, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000D6, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D7, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_BooleanAND_ReturnValue_2) == 0x0000D8, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Array_Length_ReturnValue_2) == 0x0000DC, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Array_Length_ReturnValue_3) == 0x0000E0, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Max_ReturnValue) == 0x0000E4, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E8, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Map_Find_Value_1) == 0x0000F0, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_Map_Find_ReturnValue_1) == 0x000100, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsComplex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000101, "Member 'B_InputMappingsManager_C_RevertActionMappingsComplex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RevertActionMappingsSimple
// 0x0060 (0x0060 - 0x0000)
struct B_InputMappingsManager_C_RevertActionMappingsSimple final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSActionMappings                       CallFunc_Map_Find_Value;                           // 0x0018(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_RevertActionMappingsSimple) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RevertActionMappingsSimple");
static_assert(sizeof(B_InputMappingsManager_C_RevertActionMappingsSimple) == 0x000060, "Wrong size on B_InputMappingsManager_C_RevertActionMappingsSimple");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, ActionName) == 0x000000, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::ActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertActionMappingsSimple, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'B_InputMappingsManager_C_RevertActionMappingsSimple::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RevertAxisMappingsComplex
// 0x00E8 (0x00E8 - 0x0000)
struct B_InputMappingsManager_C_RevertAxisMappingsComplex final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSAxisMappings>      RestoredAxisMappings;                              // 0x0008(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentIndex;                                      // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           RestoredMappings;                                  // 0x0060(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputAxisKeyMapping>           CurrentMappings;                                   // 0x0070(0x0010)(Edit, BlueprintVisible)
	struct FSAxisMappings                         CallFunc_Map_Find_Value;                           // 0x0080(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSAxisMappings                         CallFunc_Map_Find_Value_1;                         // 0x00C0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_RevertAxisMappingsComplex) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RevertAxisMappingsComplex");
static_assert(sizeof(B_InputMappingsManager_C_RevertAxisMappingsComplex) == 0x0000E8, "Wrong size on B_InputMappingsManager_C_RevertAxisMappingsComplex");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, ActionName) == 0x000000, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::ActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, RestoredAxisMappings) == 0x000008, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::RestoredAxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CurrentIndex) == 0x000058, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CurrentIndex' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, RestoredMappings) == 0x000060, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::RestoredMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CurrentMappings) == 0x000070, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CurrentMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Map_Find_Value) == 0x000080, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Array_Length_ReturnValue_2) == 0x0000A4, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Array_Length_ReturnValue_3) == 0x0000A8, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, Temp_int_Variable) == 0x0000AC, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Max_ReturnValue) == 0x0000B0, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Map_Find_Value_1) == 0x0000C0, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Map_Find_ReturnValue_1) == 0x0000D8, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D9, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Less_IntInt_ReturnValue) == 0x0000DA, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DB, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_BooleanAND_ReturnValue) == 0x0000DC, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000DD, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_BooleanAND_ReturnValue_1) == 0x0000DE, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000DF, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000E0, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsComplex, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E1, "Member 'B_InputMappingsManager_C_RevertAxisMappingsComplex::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RevertAxisMappingsSimple
// 0x0068 (0x0068 - 0x0000)
struct B_InputMappingsManager_C_RevertAxisMappingsSimple final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAxisMappings                         CallFunc_Map_Find_Value;                           // 0x0018(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0038(0x0028)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InputMappingsManager_C_RevertAxisMappingsSimple) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RevertAxisMappingsSimple");
static_assert(sizeof(B_InputMappingsManager_C_RevertAxisMappingsSimple) == 0x000068, "Wrong size on B_InputMappingsManager_C_RevertAxisMappingsSimple");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, Key) == 0x000000, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::Key' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Array_Get_Item) == 0x000038, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertAxisMappingsSimple, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'B_InputMappingsManager_C_RevertAxisMappingsSimple::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.RevertRestoringMappings
// 0x01D0 (0x01D0 - 0x0000)
struct B_InputMappingsManager_C_RevertRestoringMappings final
{
public:
	class FName                                   CurrentAxisName;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentActionName;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSAxisMappings>      RestoredAxisMappings;                              // 0x0010(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, struct FSActionMappings>    RestoredActionMappings;                            // 0x0060(0x0050)(Edit, BlueprintVisible)
	TArray<struct FInputAxisKeyMapping>           LocalAxisMappings_X;                               // 0x00B0(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         LocalActionMappings_X;                             // 0x00C0(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAxisMappingsSameLength_ReturnValue;    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreActionMappingsSameLength_ReturnValue;  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSAxisToEdit                           CallFunc_Array_Get_Item_1;                         // 0x0108(0x0020)(HasGetValueTypeHash)
	class FName                                   CallFunc_GetAxisName_ReturnValue;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FSActionMappings>    CallFunc_GetCurrentMappings_ActionMappings;        // 0x0130(0x0050)()
	TMap<class FName, struct FSAxisMappings>      CallFunc_GetCurrentMappings_AxisMappings;          // 0x0180(0x0050)()
};
static_assert(alignof(B_InputMappingsManager_C_RevertRestoringMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_RevertRestoringMappings");
static_assert(sizeof(B_InputMappingsManager_C_RevertRestoringMappings) == 0x0001D0, "Wrong size on B_InputMappingsManager_C_RevertRestoringMappings");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CurrentAxisName) == 0x000000, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CurrentAxisName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CurrentActionName) == 0x000008, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CurrentActionName' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, RestoredAxisMappings) == 0x000010, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::RestoredAxisMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, RestoredActionMappings) == 0x000060, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::RestoredActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, LocalAxisMappings_X) == 0x0000B0, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::LocalAxisMappings_X' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, LocalActionMappings_X) == 0x0000C0, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::LocalActionMappings_X' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_AreAxisMappingsSameLength_ReturnValue) == 0x0000E0, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_AreAxisMappingsSameLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Less_IntInt_ReturnValue) == 0x0000EC, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_AreActionMappingsSameLength_ReturnValue) == 0x0000ED, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_AreActionMappingsSameLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000FC, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, Temp_int_Array_Index_Variable_1) == 0x000100, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_GetAxisName_ReturnValue) == 0x000128, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_GetAxisName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_GetCurrentMappings_ActionMappings) == 0x000130, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_GetCurrentMappings_ActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_RevertRestoringMappings, CallFunc_GetCurrentMappings_AxisMappings) == 0x000180, "Member 'B_InputMappingsManager_C_RevertRestoringMappings::CallFunc_GetCurrentMappings_AxisMappings' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.StoreCurrentMappings
// 0x00A0 (0x00A0 - 0x0000)
struct B_InputMappingsManager_C_StoreCurrentMappings final
{
public:
	TMap<class FName, struct FSActionMappings>    CallFunc_GetCurrentMappings_ActionMappings;        // 0x0000(0x0050)()
	TMap<class FName, struct FSAxisMappings>      CallFunc_GetCurrentMappings_AxisMappings;          // 0x0050(0x0050)()
};
static_assert(alignof(B_InputMappingsManager_C_StoreCurrentMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_StoreCurrentMappings");
static_assert(sizeof(B_InputMappingsManager_C_StoreCurrentMappings) == 0x0000A0, "Wrong size on B_InputMappingsManager_C_StoreCurrentMappings");
static_assert(offsetof(B_InputMappingsManager_C_StoreCurrentMappings, CallFunc_GetCurrentMappings_ActionMappings) == 0x000000, "Member 'B_InputMappingsManager_C_StoreCurrentMappings::CallFunc_GetCurrentMappings_ActionMappings' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_StoreCurrentMappings, CallFunc_GetCurrentMappings_AxisMappings) == 0x000050, "Member 'B_InputMappingsManager_C_StoreCurrentMappings::CallFunc_GetCurrentMappings_AxisMappings' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.SwapActionMappings
// 0x0050 (0x0050 - 0x0000)
struct B_InputMappingsManager_C_SwapActionMappings final
{
public:
	struct FInputActionKeyMapping                 A;                                                 // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FInputActionKeyMapping                 B;                                                 // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_InputMappingsManager_C_SwapActionMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_SwapActionMappings");
static_assert(sizeof(B_InputMappingsManager_C_SwapActionMappings) == 0x000050, "Wrong size on B_InputMappingsManager_C_SwapActionMappings");
static_assert(offsetof(B_InputMappingsManager_C_SwapActionMappings, A) == 0x000000, "Member 'B_InputMappingsManager_C_SwapActionMappings::A' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_SwapActionMappings, B) == 0x000028, "Member 'B_InputMappingsManager_C_SwapActionMappings::B' has a wrong offset!");

// Function B_InputMappingsManager.B_InputMappingsManager_C.SwapAxisMappings
// 0x0050 (0x0050 - 0x0000)
struct B_InputMappingsManager_C_SwapAxisMappings final
{
public:
	struct FInputAxisKeyMapping                   A;                                                 // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FInputAxisKeyMapping                   B;                                                 // 0x0028(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_InputMappingsManager_C_SwapAxisMappings) == 0x000008, "Wrong alignment on B_InputMappingsManager_C_SwapAxisMappings");
static_assert(sizeof(B_InputMappingsManager_C_SwapAxisMappings) == 0x000050, "Wrong size on B_InputMappingsManager_C_SwapAxisMappings");
static_assert(offsetof(B_InputMappingsManager_C_SwapAxisMappings, A) == 0x000000, "Member 'B_InputMappingsManager_C_SwapAxisMappings::A' has a wrong offset!");
static_assert(offsetof(B_InputMappingsManager_C_SwapAxisMappings, B) == 0x000028, "Member 'B_InputMappingsManager_C_SwapAxisMappings::B' has a wrong offset!");

}

