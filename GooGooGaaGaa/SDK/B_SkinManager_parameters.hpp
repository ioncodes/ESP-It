#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkinManager

#include "Basic.hpp"

#include "PropWitchHuntModule_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_SkinManager.B_SkinManager_C.InitAttachedPart
// 0x0100 (0x0100 - 0x0000)
struct B_SkinManager_C_InitAttachedPart final
{
public:
	TSoftClassPtr<class UClass>                   SkinItem;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Parent;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkinMeshes;                                        // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AB_SkinItem_C*                          ReturnValue;                                       // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          SpawnedSkinItem;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D3[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D4[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D5[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Skin_Item;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D6[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SkinManager_C_InitAttachedPart) == 0x000010, "Wrong alignment on B_SkinManager_C_InitAttachedPart");
static_assert(sizeof(B_SkinManager_C_InitAttachedPart) == 0x000100, "Wrong size on B_SkinManager_C_InitAttachedPart");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, SkinItem) == 0x000000, "Member 'B_SkinManager_C_InitAttachedPart::SkinItem' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, Parent) == 0x000028, "Member 'B_SkinManager_C_InitAttachedPart::Parent' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, SocketName) == 0x000030, "Member 'B_SkinManager_C_InitAttachedPart::SocketName' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, Owner) == 0x000038, "Member 'B_SkinManager_C_InitAttachedPart::Owner' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, SkinMeshes) == 0x000040, "Member 'B_SkinManager_C_InitAttachedPart::SkinMeshes' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, ReturnValue) == 0x000050, "Member 'B_SkinManager_C_InitAttachedPart::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, SpawnedSkinItem) == 0x000058, "Member 'B_SkinManager_C_InitAttachedPart::SpawnedSkinItem' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000060, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000D0, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000D8, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, K2Node_ClassDynamicCast_AsB_Skin_Item) == 0x0000E0, "Member 'B_SkinManager_C_InitAttachedPart::K2Node_ClassDynamicCast_AsB_Skin_Item' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, K2Node_ClassDynamicCast_bSuccess) == 0x0000E8, "Member 'B_SkinManager_C_InitAttachedPart::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F0, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitAttachedPart, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F8, "Member 'B_SkinManager_C_InitAttachedPart::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_SkinManager.B_SkinManager_C.InitBodyPart
// 0x0100 (0x0100 - 0x0000)
struct B_SkinManager_C_InitBodyPart final
{
public:
	TSoftClassPtr<class UClass>                   SkinItem;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ParentMesh;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkinMeshes;                                        // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AB_SkinBodypart_C*                      ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      SpawnedSkinBodyPart;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D7[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Skin_Bodypart;         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D8[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D9[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DA[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SkinManager_C_InitBodyPart) == 0x000010, "Wrong alignment on B_SkinManager_C_InitBodyPart");
static_assert(sizeof(B_SkinManager_C_InitBodyPart) == 0x000100, "Wrong size on B_SkinManager_C_InitBodyPart");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, SkinItem) == 0x000000, "Member 'B_SkinManager_C_InitBodyPart::SkinItem' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, ParentMesh) == 0x000028, "Member 'B_SkinManager_C_InitBodyPart::ParentMesh' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, Owner) == 0x000030, "Member 'B_SkinManager_C_InitBodyPart::Owner' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, SkinMeshes) == 0x000038, "Member 'B_SkinManager_C_InitBodyPart::SkinMeshes' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, ReturnValue) == 0x000048, "Member 'B_SkinManager_C_InitBodyPart::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, SpawnedSkinBodyPart) == 0x000050, "Member 'B_SkinManager_C_InitBodyPart::SpawnedSkinBodyPart' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000058, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000060, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, K2Node_ClassDynamicCast_AsB_Skin_Bodypart) == 0x000068, "Member 'B_SkinManager_C_InitBodyPart::K2Node_ClassDynamicCast_AsB_Skin_Bodypart' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, K2Node_ClassDynamicCast_bSuccess) == 0x000070, "Member 'B_SkinManager_C_InitBodyPart::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000E0, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000E8, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_InitBodyPart, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000F0, "Member 'B_SkinManager_C_InitBodyPart::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_SkinManager.B_SkinManager_C.LoadSkinHunterData
// 0x0218 (0x0218 - 0x0000)
struct B_SkinManager_C_LoadSkinHunterData final
{
public:
	class USkeletalMeshComponent*                 Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkinMeshes;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHunterSkin                            HunterSkin;                                        // 0x0018(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      Head;                                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentSocketName;                                 // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UClass*>              AttachBodyPartClasses;                             // 0x0068(0x0050)(Edit, BlueprintVisible)
	TArray<class UClass*>                         BodyPartClasses;                                   // 0x00B8(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DB[0x2];                                     // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DC[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Skin_Hunter_Color_Base; // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DD[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DE[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DF[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UClass*>              K2Node_MakeMap_Map;                                // 0x0138(0x0050)()
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0188(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      CallFunc_InitBodyPart_ReturnValue;                 // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x01B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E0[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E1[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x01E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AB_SkinItem_C*                          CallFunc_InitAttachedPart_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SkinManager_C_LoadSkinHunterData) == 0x000008, "Wrong alignment on B_SkinManager_C_LoadSkinHunterData");
static_assert(sizeof(B_SkinManager_C_LoadSkinHunterData) == 0x000218, "Wrong size on B_SkinManager_C_LoadSkinHunterData");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Parent) == 0x000000, "Member 'B_SkinManager_C_LoadSkinHunterData::Parent' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, SkinMeshes) == 0x000008, "Member 'B_SkinManager_C_LoadSkinHunterData::SkinMeshes' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, HunterSkin) == 0x000018, "Member 'B_SkinManager_C_LoadSkinHunterData::HunterSkin' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Owner) == 0x000050, "Member 'B_SkinManager_C_LoadSkinHunterData::Owner' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Head) == 0x000058, "Member 'B_SkinManager_C_LoadSkinHunterData::Head' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CurrentSocketName) == 0x000060, "Member 'B_SkinManager_C_LoadSkinHunterData::CurrentSocketName' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, AttachBodyPartClasses) == 0x000068, "Member 'B_SkinManager_C_LoadSkinHunterData::AttachBodyPartClasses' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, BodyPartClasses) == 0x0000B8, "Member 'B_SkinManager_C_LoadSkinHunterData::BodyPartClasses' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Array_Index_Variable_2) == 0x0000D8, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000DC, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000DD, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, K2Node_ClassDynamicCast_AsB_Skin_Hunter_Color_Base) == 0x0000F0, "Member 'B_SkinManager_C_LoadSkinHunterData::K2Node_ClassDynamicCast_AsB_Skin_Hunter_Color_Base' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, K2Node_ClassDynamicCast_bSuccess) == 0x0000F8, "Member 'B_SkinManager_C_LoadSkinHunterData::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000100, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, Temp_int_Loop_Counter_Variable_2) == 0x000104, "Member 'B_SkinManager_C_LoadSkinHunterData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Map_Keys_Keys) == 0x000108, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Get_Item_1) == 0x00011C, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Length_ReturnValue_1) == 0x000124, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Add_IntInt_ReturnValue_2) == 0x000128, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Less_IntInt_ReturnValue_1) == 0x00012C, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, K2Node_MakeMap_Map) == 0x000138, "Member 'B_SkinManager_C_LoadSkinHunterData::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000188, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_InitBodyPart_ReturnValue) == 0x0001B0, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_InitBodyPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, K2Node_MakeArray_Array) == 0x0001B8, "Member 'B_SkinManager_C_LoadSkinHunterData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Array_Length_ReturnValue_2) == 0x0001C8, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001CC, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Map_Find_Value) == 0x0001D0, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Map_Find_ReturnValue) == 0x0001D8, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x0001E0, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_InitAttachedPart_ReturnValue) == 0x000208, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_InitAttachedPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_IsDedicatedServer_ReturnValue) == 0x000210, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinHunterData, CallFunc_Not_PreBool_ReturnValue) == 0x000211, "Member 'B_SkinManager_C_LoadSkinHunterData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_SkinManager.B_SkinManager_C.LoadSkinWitchData
// 0x0120 (0x0120 - 0x0000)
struct B_SkinManager_C_LoadSkinWitchData final
{
public:
	class USkeletalMeshComponent*                 Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         SkinMeshes;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FWitchSkin                             WitchSkin;                                         // 0x0018(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class AActor*                                 Owner;                                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         BodyPartClasses;                                   // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E2[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Skin_Witch_Color_Base; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E3[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0088(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class AB_SkinItem_C*                          CallFunc_InitAttachedPart_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E4[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x00C8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E5[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	class AB_SkinBodypart_C*                      CallFunc_InitBodyPart_ReturnValue;                 // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SkinManager_C_LoadSkinWitchData) == 0x000008, "Wrong alignment on B_SkinManager_C_LoadSkinWitchData");
static_assert(sizeof(B_SkinManager_C_LoadSkinWitchData) == 0x000120, "Wrong size on B_SkinManager_C_LoadSkinWitchData");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Parent) == 0x000000, "Member 'B_SkinManager_C_LoadSkinWitchData::Parent' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, SkinMeshes) == 0x000008, "Member 'B_SkinManager_C_LoadSkinWitchData::SkinMeshes' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, WitchSkin) == 0x000018, "Member 'B_SkinManager_C_LoadSkinWitchData::WitchSkin' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Owner) == 0x000040, "Member 'B_SkinManager_C_LoadSkinWitchData::Owner' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, BodyPartClasses) == 0x000048, "Member 'B_SkinManager_C_LoadSkinWitchData::BodyPartClasses' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'B_SkinManager_C_LoadSkinWitchData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Temp_int_Array_Index_Variable) == 0x000060, "Member 'B_SkinManager_C_LoadSkinWitchData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Temp_int_Loop_Counter_Variable_1) == 0x000064, "Member 'B_SkinManager_C_LoadSkinWitchData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, K2Node_ClassDynamicCast_AsB_Skin_Witch_Color_Base) == 0x000078, "Member 'B_SkinManager_C_LoadSkinWitchData::K2Node_ClassDynamicCast_AsB_Skin_Witch_Color_Base' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, K2Node_ClassDynamicCast_bSuccess) == 0x000080, "Member 'B_SkinManager_C_LoadSkinWitchData::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000088, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_InitAttachedPart_ReturnValue) == 0x0000B0, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_InitAttachedPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x0000C8, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F0, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, Temp_int_Array_Index_Variable_1) == 0x0000F4, "Member 'B_SkinManager_C_LoadSkinWitchData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, K2Node_MakeArray_Array) == 0x000100, "Member 'B_SkinManager_C_LoadSkinWitchData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_InitBodyPart_ReturnValue) == 0x000110, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_InitBodyPart_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_IsDedicatedServer_ReturnValue) == 0x000118, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SkinManager_C_LoadSkinWitchData, CallFunc_Not_PreBool_ReturnValue) == 0x000119, "Member 'B_SkinManager_C_LoadSkinWitchData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

