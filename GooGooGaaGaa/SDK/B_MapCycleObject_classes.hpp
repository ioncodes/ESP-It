#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MapCycleObject

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MapCycleObject.B_MapCycleObject_C
// 0x0028 (0x0050 - 0x0028)
class UB_MapCycleObject_C final : public USaveGame
{
public:
	bool                                          RandomOrder;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3805[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         FileNames;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 MapCycleName;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void AddItemToMapCycle(const class FString& Filename, int32 AllowedAmountOfMaps, bool* Success);
	void ClearMapCycle();
	bool MapCycleContainsItem(const class FString& Filename, int32* Param_Index);
	void MapCycleIsEmpty(bool* IsEmpty);
	void RemoveMapFromMapCycle(int32 IndexToRemove);

	void CompareWithMapCycle(class UB_MapCycleObject_C* MapCycleObject, bool* IsMatch) const;
	void GetAmountOfMapsInCycle(int32* AmountOfMaps) const;
	void MapCycleHasNoName(bool* HasNoName) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MapCycleObject_C">();
	}
	static class UB_MapCycleObject_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MapCycleObject_C>();
	}
};
static_assert(alignof(UB_MapCycleObject_C) == 0x000008, "Wrong alignment on UB_MapCycleObject_C");
static_assert(sizeof(UB_MapCycleObject_C) == 0x000050, "Wrong size on UB_MapCycleObject_C");
static_assert(offsetof(UB_MapCycleObject_C, RandomOrder) == 0x000028, "Member 'UB_MapCycleObject_C::RandomOrder' has a wrong offset!");
static_assert(offsetof(UB_MapCycleObject_C, FileNames) == 0x000030, "Member 'UB_MapCycleObject_C::FileNames' has a wrong offset!");
static_assert(offsetof(UB_MapCycleObject_C, MapCycleName) == 0x000040, "Member 'UB_MapCycleObject_C::MapCycleName' has a wrong offset!");

}

