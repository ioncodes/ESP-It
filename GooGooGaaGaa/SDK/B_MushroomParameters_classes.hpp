#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MushroomParameters

#include "Basic.hpp"

#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MushroomParameters.B_MushroomParameters_C
// 0x0050 (0x00A8 - 0x0058)
class UB_MushroomParameters_C : public USkillParameters
{
public:
	double                                        Cooldown;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActivationManaCost;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ConfuseDuration;                                   // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitIterations;                                   // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitCount;                                        // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileVelocity;                                // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SplitProjectileVelocity;                           // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MushroomDuration;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EffectRadius;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MushroomSize;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MiniMushroomSize;                                  // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FText GetFormattedTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MushroomParameters_C">();
	}
	static class UB_MushroomParameters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MushroomParameters_C>();
	}
};
static_assert(alignof(UB_MushroomParameters_C) == 0x000008, "Wrong alignment on UB_MushroomParameters_C");
static_assert(sizeof(UB_MushroomParameters_C) == 0x0000A8, "Wrong size on UB_MushroomParameters_C");
static_assert(offsetof(UB_MushroomParameters_C, Cooldown) == 0x000058, "Member 'UB_MushroomParameters_C::Cooldown' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, ActivationManaCost) == 0x000060, "Member 'UB_MushroomParameters_C::ActivationManaCost' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, ConfuseDuration) == 0x000068, "Member 'UB_MushroomParameters_C::ConfuseDuration' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, SplitIterations) == 0x000070, "Member 'UB_MushroomParameters_C::SplitIterations' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, SplitCount) == 0x000074, "Member 'UB_MushroomParameters_C::SplitCount' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, ProjectileVelocity) == 0x000078, "Member 'UB_MushroomParameters_C::ProjectileVelocity' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, SplitProjectileVelocity) == 0x000080, "Member 'UB_MushroomParameters_C::SplitProjectileVelocity' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, MushroomDuration) == 0x000088, "Member 'UB_MushroomParameters_C::MushroomDuration' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, EffectRadius) == 0x000090, "Member 'UB_MushroomParameters_C::EffectRadius' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, MushroomSize) == 0x000098, "Member 'UB_MushroomParameters_C::MushroomSize' has a wrong offset!");
static_assert(offsetof(UB_MushroomParameters_C, MiniMushroomSize) == 0x0000A0, "Member 'UB_MushroomParameters_C::MiniMushroomSize' has a wrong offset!");

}

