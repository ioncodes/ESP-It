#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_RoofSnow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_RoofSnow.B_RoofSnow_C
// 0x0028 (0x02C0 - 0x0298)
class AB_RoofSnow_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_LongHouseRoof;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PainterMat;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               RoofMat;                                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 SnowMask;                                          // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DrawCollision(const struct FHitResult& Hit);
	void ExecuteUbergraph_B_RoofSnow(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_RoofSnow_C">();
	}
	static class AB_RoofSnow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_RoofSnow_C>();
	}
};
static_assert(alignof(AB_RoofSnow_C) == 0x000008, "Wrong alignment on AB_RoofSnow_C");
static_assert(sizeof(AB_RoofSnow_C) == 0x0002C0, "Wrong size on AB_RoofSnow_C");
static_assert(offsetof(AB_RoofSnow_C, UberGraphFrame) == 0x000298, "Member 'AB_RoofSnow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_RoofSnow_C, SM_LongHouseRoof) == 0x0002A0, "Member 'AB_RoofSnow_C::SM_LongHouseRoof' has a wrong offset!");
static_assert(offsetof(AB_RoofSnow_C, PainterMat) == 0x0002A8, "Member 'AB_RoofSnow_C::PainterMat' has a wrong offset!");
static_assert(offsetof(AB_RoofSnow_C, RoofMat) == 0x0002B0, "Member 'AB_RoofSnow_C::RoofMat' has a wrong offset!");
static_assert(offsetof(AB_RoofSnow_C, SnowMask) == 0x0002B8, "Member 'AB_RoofSnow_C::SnowMask' has a wrong offset!");

}

