#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerListBlock

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_PlayerListBlock.WB_PlayerListBlock_C.IsPlayerShown
// 0x0010 (0x0010 - 0x0000)
struct WB_PlayerListBlock_C_IsPlayerShown final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShown;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListBlock_C_IsPlayerShown) == 0x000008, "Wrong alignment on WB_PlayerListBlock_C_IsPlayerShown");
static_assert(sizeof(WB_PlayerListBlock_C_IsPlayerShown) == 0x000010, "Wrong size on WB_PlayerListBlock_C_IsPlayerShown");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, PlayerState) == 0x000000, "Member 'WB_PlayerListBlock_C_IsPlayerShown::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, IsShown) == 0x000008, "Member 'WB_PlayerListBlock_C_IsPlayerShown::IsShown' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, CallFunc_IsValidClass_ReturnValue) == 0x000009, "Member 'WB_PlayerListBlock_C_IsPlayerShown::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'WB_PlayerListBlock_C_IsPlayerShown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, CallFunc_BooleanOR_ReturnValue) == 0x00000B, "Member 'WB_PlayerListBlock_C_IsPlayerShown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_IsPlayerShown, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'WB_PlayerListBlock_C_IsPlayerShown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_PlayerListBlock.WB_PlayerListBlock_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_PlayerListBlock_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListBlock_C_Tick) == 0x000004, "Wrong alignment on WB_PlayerListBlock_C_Tick");
static_assert(sizeof(WB_PlayerListBlock_C_Tick) == 0x00003C, "Wrong size on WB_PlayerListBlock_C_Tick");
static_assert(offsetof(WB_PlayerListBlock_C_Tick, MyGeometry) == 0x000000, "Member 'WB_PlayerListBlock_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_PlayerListBlock_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_PlayerListBlock.WB_PlayerListBlock_C.AddPlayerBlock
// 0x0010 (0x0010 - 0x0000)
struct WB_PlayerListBlock_C_AddPlayerBlock final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerBlock_C*                      PlayerBlock;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListBlock_C_AddPlayerBlock) == 0x000008, "Wrong alignment on WB_PlayerListBlock_C_AddPlayerBlock");
static_assert(sizeof(WB_PlayerListBlock_C_AddPlayerBlock) == 0x000010, "Wrong size on WB_PlayerListBlock_C_AddPlayerBlock");
static_assert(offsetof(WB_PlayerListBlock_C_AddPlayerBlock, PlayerState) == 0x000000, "Member 'WB_PlayerListBlock_C_AddPlayerBlock::PlayerState' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_AddPlayerBlock, PlayerBlock) == 0x000008, "Member 'WB_PlayerListBlock_C_AddPlayerBlock::PlayerBlock' has a wrong offset!");

// Function WB_PlayerListBlock.WB_PlayerListBlock_C.RefreshPlayers
// 0x00E8 (0x00E8 - 0x0000)
struct WB_PlayerListBlock_C_RefreshPlayers final
{
public:
	class UWB_PlayerBlock_C*                      PlayerBlockToHandle;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       CurrentPlayerState;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_PlayerBlock_C*>              CallFunc_Map_Values_Values;                        // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWB_PlayerBlock_C*                      CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598E[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598F[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerBlock_C*                      CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5990[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5991[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerBlock_C*                      CallFunc_Create_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_2;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5992[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerBlock_C*                      CallFunc_Map_Find_Value_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerShown_IsShown;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5993[0x5];                                     // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5994[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5995[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListBlock_C_RefreshPlayers) == 0x000008, "Wrong alignment on WB_PlayerListBlock_C_RefreshPlayers");
static_assert(sizeof(WB_PlayerListBlock_C_RefreshPlayers) == 0x0000E8, "Wrong size on WB_PlayerListBlock_C_RefreshPlayers");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, PlayerBlockToHandle) == 0x000000, "Member 'WB_PlayerListBlock_C_RefreshPlayers::PlayerBlockToHandle' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CurrentPlayerState) == 0x000008, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CurrentPlayerState' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, Temp_int_Loop_Counter_Variable_2) == 0x000028, "Member 'WB_PlayerListBlock_C_RefreshPlayers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Values_Values) == 0x000038, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Remove_ReturnValue) == 0x000055, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_IsValid_ReturnValue) == 0x000056, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Remove_ReturnValue_1) == 0x000070, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Find_Value) == 0x000078, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Create_ReturnValue) == 0x000090, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_AddChild_ReturnValue) == 0x000098, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Remove_ReturnValue_2) == 0x0000A0, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Find_Value_1) == 0x0000A8, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Find_ReturnValue_1) == 0x0000B0, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Contains_ReturnValue) == 0x0000B1, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_IsPlayerShown_IsShown) == 0x0000B2, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_IsPlayerShown_IsShown' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_GetGameState_ReturnValue) == 0x0000B8, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Map_Contains_ReturnValue_1) == 0x0000C0, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, K2Node_DynamicCast_AsB_Player_State) == 0x0000D0, "Member 'WB_PlayerListBlock_C_RefreshPlayers::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'WB_PlayerListBlock_C_RefreshPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Array_Length_ReturnValue_2) == 0x0000DC, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_RefreshPlayers, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E0, "Member 'WB_PlayerListBlock_C_RefreshPlayers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function WB_PlayerListBlock.WB_PlayerListBlock_C.ExecuteUbergraph_WB_PlayerListBlock
// 0x0040 (0x0040 - 0x0000)
struct WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock) == 0x000004, "Wrong alignment on WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock");
static_assert(sizeof(WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock) == 0x000040, "Wrong size on WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock");
static_assert(offsetof(WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock, EntryPoint) == 0x000000, "Member 'WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_PlayerListBlock_C_ExecuteUbergraph_WB_PlayerListBlock::K2Node_Event_InDeltaTime' has a wrong offset!");

}

