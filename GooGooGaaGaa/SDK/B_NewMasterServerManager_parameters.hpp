#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_NewMasterServerManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LowEntryJson_structs.hpp"
#include "ERestCommonError_structs.hpp"


namespace SDK::Params
{

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.AddDefaultParameters
// 0x0090 (0x0090 - 0x0000)
struct B_NewMasterServerManager_C_AddDefaultParameters final
{
public:
	TMap<class FString, class FString>            Parameters;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Temp_string_Variable;                              // 0x0050(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0070(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectVersion_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_AddDefaultParameters) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_AddDefaultParameters");
static_assert(sizeof(B_NewMasterServerManager_C_AddDefaultParameters) == 0x000090, "Wrong size on B_NewMasterServerManager_C_AddDefaultParameters");
static_assert(offsetof(B_NewMasterServerManager_C_AddDefaultParameters, Parameters) == 0x000000, "Member 'B_NewMasterServerManager_C_AddDefaultParameters::Parameters' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_AddDefaultParameters, Temp_string_Variable) == 0x000050, "Member 'B_NewMasterServerManager_C_AddDefaultParameters::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_AddDefaultParameters, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'B_NewMasterServerManager_C_AddDefaultParameters::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_AddDefaultParameters, Temp_string_Variable_1) == 0x000070, "Member 'B_NewMasterServerManager_C_AddDefaultParameters::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_AddDefaultParameters, CallFunc_GetProjectVersion_ReturnValue) == 0x000080, "Member 'B_NewMasterServerManager_C_AddDefaultParameters::CallFunc_GetProjectVersion_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BPTick
// 0x0004 (0x0004 - 0x0000)
struct B_NewMasterServerManager_C_BPTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BPTick) == 0x000004, "Wrong alignment on B_NewMasterServerManager_C_BPTick");
static_assert(sizeof(B_NewMasterServerManager_C_BPTick) == 0x000004, "Wrong size on B_NewMasterServerManager_C_BPTick");
static_assert(offsetof(B_NewMasterServerManager_C_BPTick, DeltaTime) == 0x000000, "Member 'B_NewMasterServerManager_C_BPTick::DeltaTime' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Build User Event Post Multiple Data
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data final
{
public:
	class FString                                 JsonContent;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0030(0x0010)(ReferenceParm)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data");
static_assert(sizeof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, JsonContent) == 0x000000, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::JsonContent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, RestRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data, CallFunc_BuildRestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Multiple_Data::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Build User Event Post Single Data
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data final
{
public:
	class FString                                 JsonContent;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0030(0x0010)(ReferenceParm)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data");
static_assert(sizeof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, JsonContent) == 0x000000, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::JsonContent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, RestRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data, CallFunc_BuildRestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_Build_User_Event_Post_Single_Data::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetAccessTokenRequest
// 0x0090 (0x0090 - 0x0000)
struct B_NewMasterServerManager_C_BuildGetAccessTokenRequest final
{
public:
	class FString                                 Token;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0028(0x0050)()
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildGetAccessTokenRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest) == 0x000090, "Wrong size on B_NewMasterServerManager_C_BuildGetAccessTokenRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, Token) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::Token' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, RestRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, K2Node_MakeMap_Map) == 0x000028, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000078, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetAccessTokenRequest, CallFunc_BuildRestCallUrl_Url) == 0x000080, "Member 'B_NewMasterServerManager_C_BuildGetAccessTokenRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetGSStatsCallUrl
// 0x0080 (0x0080 - 0x0000)
struct B_NewMasterServerManager_C_BuildGetGSStatsCallUrl final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 URL;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0020(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildGetGSStatsCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl) == 0x000080, "Wrong size on B_NewMasterServerManager_C_BuildGetGSStatsCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl, ProductUserId) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildGetGSStatsCallUrl::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl, URL) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildGetGSStatsCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl, K2Node_MakeMap_Map) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildGetGSStatsCallUrl::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetGSStatsCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildGetGSStatsCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetStatsCallUrl
// 0x0070 (0x0070 - 0x0000)
struct B_NewMasterServerManager_C_BuildGetStatsCallUrl final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0010(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildGetStatsCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildGetStatsCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildGetStatsCallUrl) == 0x000070, "Wrong size on B_NewMasterServerManager_C_BuildGetStatsCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetStatsCallUrl, URL) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildGetStatsCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetStatsCallUrl, K2Node_MakeMap_Map) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildGetStatsCallUrl::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetStatsCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000060, "Member 'B_NewMasterServerManager_C_BuildGetStatsCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildGetSystemMessagesRequest
// 0x0080 (0x0080 - 0x0000)
struct B_NewMasterServerManager_C_BuildGetSystemMessagesRequest final
{
public:
	class UVaRestRequestJSON*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0020(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildGetSystemMessagesRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest) == 0x000080, "Wrong size on B_NewMasterServerManager_C_BuildGetSystemMessagesRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, Result) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, TempRequest) == 0x000008, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, K2Node_MakeMap_Map) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildGetSystemMessagesRequest, CallFunc_BuildRestCallUrl_Url) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildGetSystemMessagesRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildLoginRequest
// 0x00E0 (0x00E0 - 0x0000)
struct B_NewMasterServerManager_C_BuildLoginRequest final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Locale;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AdditionalAuthInformation;                         // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ProductUserId;                                     // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0078(0x0050)()
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildLoginRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildLoginRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildLoginRequest) == 0x0000E0, "Wrong size on B_NewMasterServerManager_C_BuildLoginRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, UserName) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::UserName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, Password) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::Password' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, Locale) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::Locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, AccountType) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, AdditionalAuthInformation) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::AdditionalAuthInformation' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, ProductUserId) == 0x000050, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, RestRequest) == 0x000060, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, TempRequest) == 0x000068, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, K2Node_MakeMap_Map) == 0x000078, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x0000C8, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequest, CallFunc_BuildRestCallUrl_Url) == 0x0000D0, "Member 'B_NewMasterServerManager_C_BuildLoginRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildLoginRequestWithRefreshToken
// 0x00C0 (0x00C0 - 0x0000)
struct B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken final
{
public:
	class FString                                 Param_RefreshToken;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Locale;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AdditionalAuthInformation;                         // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0058(0x0050)()
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken");
static_assert(sizeof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken) == 0x0000C0, "Wrong size on B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, Param_RefreshToken) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::Param_RefreshToken' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, Locale) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::Locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, AccountType) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, AdditionalAuthInformation) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::AdditionalAuthInformation' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, RestRequest) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, TempRequest) == 0x000048, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000050, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, K2Node_MakeMap_Map) == 0x000058, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x0000A8, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken, CallFunc_BuildRestCallUrl_Url) == 0x0000B0, "Member 'B_NewMasterServerManager_C_BuildLoginRequestWithRefreshToken::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildParameterString
// 0x0118 (0x0118 - 0x0000)
struct B_NewMasterServerManager_C_BuildParameterString final
{
public:
	TMap<class FString, class FString>            Parameters;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Out;                                               // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ParamString;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E9[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EA[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EB[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildParameterString) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildParameterString");
static_assert(sizeof(B_NewMasterServerManager_C_BuildParameterString) == 0x000118, "Wrong size on B_NewMasterServerManager_C_BuildParameterString");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, Parameters) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildParameterString::Parameters' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, Out) == 0x000050, "Member 'B_NewMasterServerManager_C_BuildParameterString::Out' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, ParamString) == 0x000060, "Member 'B_NewMasterServerManager_C_BuildParameterString::ParamString' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, Temp_int_Array_Index_Variable) == 0x000080, "Member 'B_NewMasterServerManager_C_BuildParameterString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Array_Get_Item) == 0x000088, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_SelectString_ReturnValue) == 0x0000A0, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'B_NewMasterServerManager_C_BuildParameterString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Map_Find_Value) == 0x0000E0, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F8, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildParameterString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000108, "Member 'B_NewMasterServerManager_C_BuildParameterString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildPostQuestProgressRequest
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_BuildPostQuestProgressRequest final
{
public:
	class FString                                 JsonContent;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     RestRequest;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0030(0x0010)(ReferenceParm)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildQuestCallUrl_Url;                    // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildPostQuestProgressRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_BuildPostQuestProgressRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, JsonContent) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::JsonContent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, RestRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildPostQuestProgressRequest, CallFunc_BuildQuestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_BuildPostQuestProgressRequest::CallFunc_BuildQuestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildQuestCallUrl
// 0x0080 (0x0080 - 0x0000)
struct B_NewMasterServerManager_C_BuildQuestCallUrl final
{
public:
	class FString                                 FunctionName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Parameters;                                        // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 URL;                                               // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildQuestCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildQuestCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildQuestCallUrl) == 0x000080, "Wrong size on B_NewMasterServerManager_C_BuildQuestCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildQuestCallUrl, FunctionName) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildQuestCallUrl::FunctionName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildQuestCallUrl, Parameters) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildQuestCallUrl::Parameters' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildQuestCallUrl, URL) == 0x000060, "Member 'B_NewMasterServerManager_C_BuildQuestCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildQuestCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildQuestCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildResetGSStatsCallRequest
// 0x00A8 (0x00A8 - 0x0000)
struct B_NewMasterServerManager_C_BuildResetGSStatsCallRequest final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          AchievementsToo;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EC[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     ResultRequest;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0048(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildResetGSStatsCallRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest) == 0x0000A8, "Wrong size on B_NewMasterServerManager_C_BuildResetGSStatsCallRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, ProductUserId) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, AchievementsToo) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::AchievementsToo' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, ResultRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::ResultRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, TempRequest) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, K2Node_MakeMap_Map) == 0x000048, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildResetGSStatsCallRequest, CallFunc_BuildRestCallUrl_Url) == 0x000098, "Member 'B_NewMasterServerManager_C_BuildResetGSStatsCallRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildRestCallUrl
// 0x03C0 (0x03C0 - 0x0000)
struct B_NewMasterServerManager_C_BuildRestCallUrl final
{
public:
	class FString                                 Section;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Function;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Parameters;                                        // 0x0020(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 URL;                                               // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ParamString;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShippingBuild_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49ED[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildParameterString_Out;                 // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRestCallHostname_ReturnValue;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00D0(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_GetRestCallPort_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EE[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetRestCallProtocol_ReturnValue;          // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0158(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01A8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01F8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0210(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0228(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0278(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x02C8(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02E8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0338(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0388(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0398(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildRestCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildRestCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildRestCallUrl) == 0x0003C0, "Wrong size on B_NewMasterServerManager_C_BuildRestCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, Section) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::Section' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, Function) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::Function' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, Parameters) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::Parameters' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, URL) == 0x000070, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, ParamString) == 0x000080, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::ParamString' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_ShippingBuild_ReturnValue) == 0x000090, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_ShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_BuildParameterString_Out) == 0x000098, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_BuildParameterString_Out' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_GetRestCallHostname_ReturnValue) == 0x0000A8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_GetRestCallHostname_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_StringToText_ReturnValue) == 0x0000B8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData) == 0x0000D0, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_GetRestCallPort_ReturnValue) == 0x000120, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_GetRestCallPort_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_GetRestCallProtocol_ReturnValue) == 0x000128, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_GetRestCallProtocol_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000138, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_1) == 0x000158, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001A8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001F8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000210, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_3) == 0x000228, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_4) == 0x000278, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_StringToText_ReturnValue_4) == 0x0002C8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0002E0, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002E8, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeStruct_FormatArgumentData_6) == 0x000338, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, K2Node_MakeArray_Array) == 0x000388, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Format_ReturnValue) == 0x000398, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildRestCallUrl, CallFunc_Conv_TextToString_ReturnValue) == 0x0003B0, "Member 'B_NewMasterServerManager_C_BuildRestCallUrl::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildSetGSStatCallUrl
// 0x00A8 (0x00A8 - 0x0000)
struct B_NewMasterServerManager_C_BuildSetGSStatCallUrl final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StatName;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EF[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0048(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildSetGSStatCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl) == 0x0000A8, "Wrong size on B_NewMasterServerManager_C_BuildSetGSStatCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, ProductUserId) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, StatName) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::StatName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, Value) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::Value' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, URL) == 0x000028, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, K2Node_MakeMap_Map) == 0x000048, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetGSStatCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000098, "Member 'B_NewMasterServerManager_C_BuildSetGSStatCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildSetStatCallUrl
// 0x0098 (0x0098 - 0x0000)
struct B_NewMasterServerManager_C_BuildSetStatCallUrl final
{
public:
	class FString                                 StatName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 URL;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0038(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildSetStatCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildSetStatCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildSetStatCallUrl) == 0x000098, "Wrong size on B_NewMasterServerManager_C_BuildSetStatCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, StatName) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::StatName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, Value) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::Value' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, URL) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, K2Node_MakeMap_Map) == 0x000038, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildSetStatCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000088, "Member 'B_NewMasterServerManager_C_BuildSetStatCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildStoreGSStatsCallRequest
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest final
{
public:
	class FString                                 JsonContent;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     ResultRequest;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0020(0x0010)(ReferenceParm)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, JsonContent) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::JsonContent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, ResultRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::ResultRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000038, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest, CallFunc_BuildRestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_BuildStoreGSStatsCallRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildStoreStatsCallRequest
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_BuildStoreStatsCallRequest final
{
public:
	class FString                                 JsonContent;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     ResultRequest;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     TempRequest;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_StringToBytesUtf8_ReturnValue;            // 0x0020(0x0010)(ReferenceParm)
	class UVaRestSubsystem*                       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_ConstructVaRestRequestExt_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildStoreStatsCallRequest");
static_assert(sizeof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_BuildStoreStatsCallRequest");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, JsonContent) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::JsonContent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, ResultRequest) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::ResultRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, TempRequest) == 0x000018, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::TempRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, CallFunc_StringToBytesUtf8_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::CallFunc_StringToBytesUtf8_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, CallFunc_ConstructVaRestRequestExt_ReturnValue) == 0x000038, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::CallFunc_ConstructVaRestRequestExt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildStoreStatsCallRequest, CallFunc_BuildRestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_BuildStoreStatsCallRequest::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.BuildUserIdCallUrl
// 0x00A0 (0x00A0 - 0x0000)
struct B_NewMasterServerManager_C_BuildUserIdCallUrl final
{
public:
	class FString                                 ProductUserId;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NativePlatformId;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 URL;                                               // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0040(0x0050)()
	class FString                                 CallFunc_BuildRestCallUrl_Url;                     // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_BuildUserIdCallUrl) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_BuildUserIdCallUrl");
static_assert(sizeof(B_NewMasterServerManager_C_BuildUserIdCallUrl) == 0x0000A0, "Wrong size on B_NewMasterServerManager_C_BuildUserIdCallUrl");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, ProductUserId) == 0x000000, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::ProductUserId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, AccountType) == 0x000010, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, NativePlatformId) == 0x000020, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::NativePlatformId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, URL) == 0x000030, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::URL' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, K2Node_MakeMap_Map) == 0x000040, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_BuildUserIdCallUrl, CallFunc_BuildRestCallUrl_Url) == 0x000090, "Member 'B_NewMasterServerManager_C_BuildUserIdCallUrl::CallFunc_BuildRestCallUrl_Url' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CacheLoginData
// 0x0080 (0x0080 - 0x0000)
struct B_NewMasterServerManager_C_CacheLoginData final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Locale;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CachedUsername;                                    // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CachedPassword;                                    // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CachedLocale;                                      // 0x0060(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CachedAccountType;                                 // 0x0070(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_CacheLoginData) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_CacheLoginData");
static_assert(sizeof(B_NewMasterServerManager_C_CacheLoginData) == 0x000080, "Wrong size on B_NewMasterServerManager_C_CacheLoginData");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, UserName) == 0x000000, "Member 'B_NewMasterServerManager_C_CacheLoginData::UserName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, Password) == 0x000010, "Member 'B_NewMasterServerManager_C_CacheLoginData::Password' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, Locale) == 0x000020, "Member 'B_NewMasterServerManager_C_CacheLoginData::Locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, AccountType) == 0x000030, "Member 'B_NewMasterServerManager_C_CacheLoginData::AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, CachedUsername) == 0x000040, "Member 'B_NewMasterServerManager_C_CacheLoginData::CachedUsername' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, CachedPassword) == 0x000050, "Member 'B_NewMasterServerManager_C_CacheLoginData::CachedPassword' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, CachedLocale) == 0x000060, "Member 'B_NewMasterServerManager_C_CacheLoginData::CachedLocale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CacheLoginData, CachedAccountType) == 0x000070, "Member 'B_NewMasterServerManager_C_CacheLoginData::CachedAccountType' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CheckRefreshAccessToken
// 0x0030 (0x0030 - 0x0000)
struct B_NewMasterServerManager_C_CheckRefreshAccessToken final
{
public:
	int32                                         MinDelayInSeconds;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidRefreshToken_IsValid;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAccessToken_IsValid;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_CheckRefreshAccessToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_CheckRefreshAccessToken");
static_assert(sizeof(B_NewMasterServerManager_C_CheckRefreshAccessToken) == 0x000030, "Wrong size on B_NewMasterServerManager_C_CheckRefreshAccessToken");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, MinDelayInSeconds) == 0x000000, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::MinDelayInSeconds' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_HasValidRefreshToken_IsValid) == 0x000004, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_HasValidRefreshToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_MakeTimespan_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_UtcNow_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_UtcNow_ReturnValue_1) == 0x000020, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_HasValidAccessToken_IsValid) == 0x000029, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_HasValidAccessToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CheckRefreshAccessToken, CallFunc_BooleanAND_ReturnValue) == 0x00002B, "Member 'B_NewMasterServerManager_C_CheckRefreshAccessToken::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.CommonErrorCodeFromString
// 0x0018 (0x0018 - 0x0000)
struct B_NewMasterServerManager_C_CommonErrorCodeFromString final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	ERestCommonError                              ErrorCode;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              ErrorCodeVar;                                      // 0x0012(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValidVar;                                        // 0x0013(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_CommonErrorCodeFromString) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_CommonErrorCodeFromString");
static_assert(sizeof(B_NewMasterServerManager_C_CommonErrorCodeFromString) == 0x000018, "Wrong size on B_NewMasterServerManager_C_CommonErrorCodeFromString");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, String) == 0x000000, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::String' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, ErrorCode) == 0x000010, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::ErrorCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, IsValid) == 0x000011, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, ErrorCodeVar) == 0x000012, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::ErrorCodeVar' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, IsValidVar) == 0x000013, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::IsValidVar' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_CommonErrorCodeFromString, K2Node_SwitchString_CmpSuccess) == 0x000014, "Member 'B_NewMasterServerManager_C_CommonErrorCodeFromString::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ConnectUsingWebSocket
// 0x01A0 (0x01A0 - 0x0000)
struct B_NewMasterServerManager_C_ConnectUsingWebSocket final
{
public:
	bool                                          CallFunc_ShippingBuild_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShippingBuild_ReturnValue_1;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetRestCallHostname_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRestCallHostname_ReturnValue_1;        // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
	bool                                          CallFunc_Connect_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F4[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00B0(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0050)(HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0178(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0188(0x0018)()
};
static_assert(alignof(B_NewMasterServerManager_C_ConnectUsingWebSocket) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ConnectUsingWebSocket");
static_assert(sizeof(B_NewMasterServerManager_C_ConnectUsingWebSocket) == 0x0001A0, "Wrong size on B_NewMasterServerManager_C_ConnectUsingWebSocket");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_ShippingBuild_ReturnValue) == 0x000000, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_ShippingBuild_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_ShippingBuild_ReturnValue_1) == 0x000001, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_ShippingBuild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_GetRestCallHostname_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_GetRestCallHostname_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_GetRestCallHostname_ReturnValue_1) == 0x000018, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_GetRestCallHostname_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_Connect_ReturnValue) == 0x000040, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_Connect_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_MakeLiteralString_ReturnValue) == 0x000098, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000A8, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000B0, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000C8, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D0, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000170, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, K2Node_MakeArray_Array) == 0x000178, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ConnectUsingWebSocket, CallFunc_Format_ReturnValue) == 0x000188, "Member 'B_NewMasterServerManager_C_ConnectUsingWebSocket::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ExecuteUbergraph_B_NewMasterServerManager
// 0x0998 (0x0998 - 0x0000)
struct B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F5[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_DateTime_ToIso8601_String;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& Text)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_2;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_3;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_4;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_5;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_6;         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Request_3;                      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_BuildGetAccessTokenRequest_RestRequest;   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F6[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetResponseCode_ReturnValue;              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F7[0x5];                                     // 0x009B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeFromIsoString_Result;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DateTimeFromIsoString_ReturnValue;        // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F8[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F9[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue_1;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetBoolean_Branch;                 // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Object_GetBoolean_ReturnValue;            // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FA[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Request_2;                      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FB[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetURL_ReturnValue;                       // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetURL_ReturnValue_1;                     // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnected_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FC[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_RefreshToken;                   // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_locale_1;                       // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AccountType_1;                  // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetURL_ReturnValue_2;                     // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Request_1;                      // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResponseCode_ReturnValue_1;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FD[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaRestRequestJSON*                     K2Node_CustomEvent_Request;                        // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue_1; // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01C8(0x0050)(HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue_1; // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue_1; // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch_1;            // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FE[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0230(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49FF[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0018)()
	bool                                          CallFunc_ProcessLoginResponse_Success;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A00[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ProcessLoginResponse_Code;                // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ProcessLoginResponse_Message;             // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetResponseCode_ReturnValue_2;            // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A01[0x3];                                     // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo; // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo_1; // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_BuildLoginRequestWithRefreshToken_RestRequest; // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId; // 0x02A8(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue; // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAccessToken_IsValid;              // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A02[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_1;                     // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A03[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidRefreshToken_IsValid;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsRunningOnDedicatedServer;     // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A04[0x6];                                     // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_CustomEvent_GameInstance;                   // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_7;         // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_success_1;                            // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A05[0x7];                                     // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_errorMessage;                         // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0358(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0370(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0388(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x03D8(0x0050)(HasGetValueTypeHash)
	int32                                         K2Node_Event_StatusCode;                           // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A06[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Reason;                               // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasClean;                            // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A07[0x7];                                     // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0448(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x0458(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0470(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0488(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x04D8(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x04F8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0548(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0598(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x05A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x05B8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x05D0(0x0018)()
	bool                                          CallFunc_HasValidAccessToken_IsValid_1;            // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_success;                              // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A08[0x2];                                     // 0x05EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_accountId;                            // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x05F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0610(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0660(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x06B0(0x0010)(ReferenceParm)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_8;         // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x06C8(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A09[0x7];                                     // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_9;         // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0A[0x7];                                     // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_username;                       // 0x06F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_password;                       // 0x0708(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_locale;                         // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AccountType;                    // 0x0728(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AuthInfo;                       // 0x0738(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_10;        // 0x0748(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0750(0x0018)()
	class FString                                 CallFunc_CacheLoginData_CachedUsername;            // 0x0768(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CacheLoginData_CachedPassword;            // 0x0778(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CacheLoginData_CachedLocale;              // 0x0788(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CacheLoginData_CachedAccountType;         // 0x0798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x07A8(0x0050)(HasGetValueTypeHash)
	class UVaRestRequestJSON*                     CallFunc_BuildLoginRequest_RestRequest;            // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0800(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_9;            // 0x0818(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0868(0x0010)(ReferenceParm)
	class UServerBrowser*                         CallFunc_GetServerBrowser_ReturnValue;             // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0880(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0B[0x7];                                     // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Text;                           // 0x08A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x08B0(0x0018)()
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x08C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x08D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x08E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_Parse_StringToGuid_OutGuid;               // 0x08F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Parse_StringToGuid_Success;               // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0C[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0910(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class UVaRestRequestJSON* Request)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0920(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0940(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue_2;                     // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DateTime_ToIso8601_String_1;              // 0x0958(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0968(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager");
static_assert(sizeof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager) == 0x000998, "Wrong size on B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, EntryPoint) == 0x000000, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_DateTime_ToIso8601_String) == 0x000008, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_DateTime_ToIso8601_String' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000028, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000030, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_2) == 0x000038, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_3) == 0x000040, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_4) == 0x000048, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_5) == 0x000050, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_6) == 0x000058, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_Request_3) == 0x000060, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_Request_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_BuildGetAccessTokenRequest_RestRequest) == 0x000068, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_BuildGetAccessTokenRequest_RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000070, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000080, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000088, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_Branch) == 0x000090, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetResponseCode_ReturnValue) == 0x000094, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetResponseCode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000099, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetString_Branch) == 0x00009A, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetString_ReturnValue) == 0x0000A0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_DateTimeFromIsoString_Result) == 0x0000B0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_DateTimeFromIsoString_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_DateTimeFromIsoString_ReturnValue) == 0x0000B8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_DateTimeFromIsoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000B9, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetInteger_Branch) == 0x0000BA, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetInteger_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetInteger_ReturnValue) == 0x0000BC, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetString_Branch_1) == 0x0000C0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetString_Branch_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetString_ReturnValue_1) == 0x0000C8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000D9, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x0000DA, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetBoolean_Branch) == 0x0000DB, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetBoolean_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Object_GetBoolean_ReturnValue) == 0x0000DC, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Object_GetBoolean_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_Request_2) == 0x0000E0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_Request_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess_4) == 0x0000E8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetURL_ReturnValue) == 0x0000F0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetURL_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetURL_ReturnValue_1) == 0x000100, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetURL_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Not_PreBool_ReturnValue) == 0x000110, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_IsConnected_ReturnValue) == 0x000111, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_IsConnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_RefreshToken) == 0x000118, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_RefreshToken' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_locale_1) == 0x000128, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_locale_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_AccountType_1) == 0x000138, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_AccountType_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetURL_ReturnValue_2) == 0x000148, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetURL_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000158, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000168, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x000178, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000188, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_Request_1) == 0x000198, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_Request_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetResponseCode_ReturnValue_1) == 0x0001A0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetResponseCode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_Request) == 0x0001A8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_Request' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0001B0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetResponseContentAsString_ReturnValue_1) == 0x0001B8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetResponseContentAsString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData) == 0x0001C8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue_1) == 0x000218, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue_1) == 0x000220, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Json_ParseJsonString_Branch_1) == 0x000228, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Json_ParseJsonString_Branch_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array) == 0x000230, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_SwitchEnum_CmpSuccess_5) == 0x000240, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue) == 0x000248, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_ProcessLoginResponse_Success) == 0x000260, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_ProcessLoginResponse_Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_ProcessLoginResponse_Code) == 0x000264, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_ProcessLoginResponse_Code' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_ProcessLoginResponse_Message) == 0x000268, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_ProcessLoginResponse_Message' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetResponseCode_ReturnValue_2) == 0x000278, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetResponseCode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00027C, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo) == 0x000280, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo_1) == 0x000290, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetLoginAuthInfoForFirstLocalPC_AuthInfo_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_BuildLoginRequestWithRefreshToken_RestRequest) == 0x0002A0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_BuildLoginRequestWithRefreshToken_RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId) == 0x0002A8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue) == 0x0002D8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue) == 0x0002E8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_DeltaTime) == 0x0002F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_HasValidAccessToken_IsValid) == 0x0002FC, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_HasValidAccessToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_UtcNow_ReturnValue) == 0x000300, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_UtcNow_ReturnValue_1) == 0x000308, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_UtcNow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x000310, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_MakeTimespan_ReturnValue) == 0x000318, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000320, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_HasValidRefreshToken_IsValid) == 0x000328, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_HasValidRefreshToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_IsRunningOnDedicatedServer) == 0x000329, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_IsRunningOnDedicatedServer' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_GameInstance) == 0x000330, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_GameInstance' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_7) == 0x000338, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_success_1) == 0x000340, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_success_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_errorMessage) == 0x000348, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_errorMessage' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_StringToText_ReturnValue) == 0x000358, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_BoolToText_ReturnValue) == 0x000370, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_1) == 0x000388, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_2) == 0x0003D8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_StatusCode) == 0x000428, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_StatusCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_Reason) == 0x000430, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_bWasClean) == 0x000440, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_bWasClean' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array_1) == 0x000448, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x000458, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue_1) == 0x000470, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_3) == 0x000488, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0004D8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0004F0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_4) == 0x0004F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_5) == 0x000548, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array_2) == 0x000598, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array_3) == 0x0005A8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue_2) == 0x0005B8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue_3) == 0x0005D0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_HasValidAccessToken_IsValid_1) == 0x0005E8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_HasValidAccessToken_IsValid_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_success) == 0x0005E9, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_Event_accountId) == 0x0005EC, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_Event_accountId' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x0005F0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0005F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_6) == 0x000610, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_7) == 0x000660, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array_4) == 0x0006B0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_8) == 0x0006C0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue_4) == 0x0006C8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x0006E0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_9) == 0x0006E8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_BooleanAND_ReturnValue) == 0x0006F0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_username) == 0x0006F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_username' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_password) == 0x000708, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_password' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_locale) == 0x000718, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_AccountType) == 0x000728, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_AuthInfo) == 0x000738, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_AuthInfo' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetEngineSubsystem_ReturnValue_10) == 0x000748, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetEngineSubsystem_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000750, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_CacheLoginData_CachedUsername) == 0x000768, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_CacheLoginData_CachedUsername' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_CacheLoginData_CachedPassword) == 0x000778, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_CacheLoginData_CachedPassword' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_CacheLoginData_CachedLocale) == 0x000788, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_CacheLoginData_CachedLocale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_CacheLoginData_CachedAccountType) == 0x000798, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_CacheLoginData_CachedAccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_8) == 0x0007A8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_BuildLoginRequest_RestRequest) == 0x0007F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_BuildLoginRequest_RestRequest' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000800, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeStruct_FormatArgumentData_9) == 0x000818, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeStruct_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_MakeArray_Array_5) == 0x000868, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_GetServerBrowser_ReturnValue) == 0x000878, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_GetServerBrowser_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Format_ReturnValue_5) == 0x000880, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_IsValid_ReturnValue) == 0x000898, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CustomEvent_Text) == 0x0008A0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_StringToText_ReturnValue_4) == 0x0008B0, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x0008C8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0008D8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0008E8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Parse_StringToGuid_OutGuid) == 0x0008F8, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Parse_StringToGuid_OutGuid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Parse_StringToGuid_Success) == 0x000908, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Parse_StringToGuid_Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Conv_BoolToString_ReturnValue) == 0x000910, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x000920, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000930, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000940, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_UtcNow_ReturnValue_2) == 0x000950, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_UtcNow_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_DateTime_ToIso8601_String_1) == 0x000958, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_DateTime_ToIso8601_String_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000968, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000978, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000988, "Member 'B_NewMasterServerManager_C_ExecuteUbergraph_B_NewMasterServerManager::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetDirectConnectAddress
// 0x0080 (0x0080 - 0x0000)
struct B_NewMasterServerManager_C_GetDirectConnectAddress final
{
public:
	bool                                          UseProdServers;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 HostName;                                          // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Port;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocalhost;                                       // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0E[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0F[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_GetDirectConnectAddress) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_GetDirectConnectAddress");
static_assert(sizeof(B_NewMasterServerManager_C_GetDirectConnectAddress) == 0x000080, "Wrong size on B_NewMasterServerManager_C_GetDirectConnectAddress");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, UseProdServers) == 0x000000, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::UseProdServers' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, HostName) == 0x000008, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::HostName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, Port) == 0x000018, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::Port' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, IsLocalhost) == 0x00001C, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::IsLocalhost' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_SelectString_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_SelectInt_ReturnValue) == 0x000040, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000068, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetDirectConnectAddress, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000078, "Member 'B_NewMasterServerManager_C_GetDirectConnectAddress::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_Initialize final
{
public:
	bool                                          IsRunningOnDedicatedServer;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A10[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      GameInstance;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_Initialize) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_Initialize");
static_assert(sizeof(B_NewMasterServerManager_C_Initialize) == 0x000010, "Wrong size on B_NewMasterServerManager_C_Initialize");
static_assert(offsetof(B_NewMasterServerManager_C_Initialize, IsRunningOnDedicatedServer) == 0x000000, "Member 'B_NewMasterServerManager_C_Initialize::IsRunningOnDedicatedServer' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Initialize, GameInstance) == 0x000008, "Member 'B_NewMasterServerManager_C_Initialize::GameInstance' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.InvalidateRefreshToken
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_InvalidateRefreshToken final
{
public:
	bool                                          bCallLoginFailedEvent;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A11[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ErrorCode;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_InvalidateRefreshToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_InvalidateRefreshToken");
static_assert(sizeof(B_NewMasterServerManager_C_InvalidateRefreshToken) == 0x000010, "Wrong size on B_NewMasterServerManager_C_InvalidateRefreshToken");
static_assert(offsetof(B_NewMasterServerManager_C_InvalidateRefreshToken, bCallLoginFailedEvent) == 0x000000, "Member 'B_NewMasterServerManager_C_InvalidateRefreshToken::bCallLoginFailedEvent' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_InvalidateRefreshToken, ErrorCode) == 0x000004, "Member 'B_NewMasterServerManager_C_InvalidateRefreshToken::ErrorCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_InvalidateRefreshToken, CallFunc_MakeDateTime_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_InvalidateRefreshToken::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.LogHelper
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_LogHelper final
{
public:
	class FString                                 Text;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_LogHelper) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_LogHelper");
static_assert(sizeof(B_NewMasterServerManager_C_LogHelper) == 0x000010, "Wrong size on B_NewMasterServerManager_C_LogHelper");
static_assert(offsetof(B_NewMasterServerManager_C_LogHelper, Text) == 0x000000, "Member 'B_NewMasterServerManager_C_LogHelper::Text' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnConnected
// 0x0018 (0x0018 - 0x0000)
struct B_NewMasterServerManager_C_OnConnected final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A12[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ErrorMessage;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnConnected) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnConnected");
static_assert(sizeof(B_NewMasterServerManager_C_OnConnected) == 0x000018, "Wrong size on B_NewMasterServerManager_C_OnConnected");
static_assert(offsetof(B_NewMasterServerManager_C_OnConnected, Success) == 0x000000, "Member 'B_NewMasterServerManager_C_OnConnected::Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_OnConnected, ErrorMessage) == 0x000008, "Member 'B_NewMasterServerManager_C_OnConnected::ErrorMessage' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnDisconnected
// 0x0020 (0x0020 - 0x0000)
struct B_NewMasterServerManager_C_OnDisconnected final
{
public:
	int32                                         StatusCode;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A13[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Reason;                                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          bWasClean;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnDisconnected) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnDisconnected");
static_assert(sizeof(B_NewMasterServerManager_C_OnDisconnected) == 0x000020, "Wrong size on B_NewMasterServerManager_C_OnDisconnected");
static_assert(offsetof(B_NewMasterServerManager_C_OnDisconnected, StatusCode) == 0x000000, "Member 'B_NewMasterServerManager_C_OnDisconnected::StatusCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_OnDisconnected, Reason) == 0x000008, "Member 'B_NewMasterServerManager_C_OnDisconnected::Reason' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_OnDisconnected, bWasClean) == 0x000018, "Member 'B_NewMasterServerManager_C_OnDisconnected::bWasClean' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnLoginFailed__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature final
{
public:
	int32                                         ErrorCode;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature) == 0x000004, "Wrong alignment on B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature");
static_assert(sizeof(B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature) == 0x000004, "Wrong size on B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature");
static_assert(offsetof(B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature, ErrorCode) == 0x000000, "Member 'B_NewMasterServerManager_C_OnLoginFailed__DelegateSignature::ErrorCode' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnLoginResponse
// 0x0008 (0x0008 - 0x0000)
struct B_NewMasterServerManager_C_OnLoginResponse final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A14[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AccountId;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnLoginResponse) == 0x000004, "Wrong alignment on B_NewMasterServerManager_C_OnLoginResponse");
static_assert(sizeof(B_NewMasterServerManager_C_OnLoginResponse) == 0x000008, "Wrong size on B_NewMasterServerManager_C_OnLoginResponse");
static_assert(offsetof(B_NewMasterServerManager_C_OnLoginResponse, Success) == 0x000000, "Member 'B_NewMasterServerManager_C_OnLoginResponse::Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_OnLoginResponse, AccountId) == 0x000004, "Member 'B_NewMasterServerManager_C_OnLoginResponse::AccountId' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestComplete
// 0x0008 (0x0008 - 0x0000)
struct B_NewMasterServerManager_C_OnRequestComplete final
{
public:
	class UVaRestRequestJSON*                     Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnRequestComplete) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnRequestComplete");
static_assert(sizeof(B_NewMasterServerManager_C_OnRequestComplete) == 0x000008, "Wrong size on B_NewMasterServerManager_C_OnRequestComplete");
static_assert(offsetof(B_NewMasterServerManager_C_OnRequestComplete, Request) == 0x000000, "Member 'B_NewMasterServerManager_C_OnRequestComplete::Request' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestCompleted_Access
// 0x0008 (0x0008 - 0x0000)
struct B_NewMasterServerManager_C_OnRequestCompleted_Access final
{
public:
	class UVaRestRequestJSON*                     Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnRequestCompleted_Access) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnRequestCompleted_Access");
static_assert(sizeof(B_NewMasterServerManager_C_OnRequestCompleted_Access) == 0x000008, "Wrong size on B_NewMasterServerManager_C_OnRequestCompleted_Access");
static_assert(offsetof(B_NewMasterServerManager_C_OnRequestCompleted_Access, Request) == 0x000000, "Member 'B_NewMasterServerManager_C_OnRequestCompleted_Access::Request' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestFail
// 0x0008 (0x0008 - 0x0000)
struct B_NewMasterServerManager_C_OnRequestFail final
{
public:
	class UVaRestRequestJSON*                     Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnRequestFail) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnRequestFail");
static_assert(sizeof(B_NewMasterServerManager_C_OnRequestFail) == 0x000008, "Wrong size on B_NewMasterServerManager_C_OnRequestFail");
static_assert(offsetof(B_NewMasterServerManager_C_OnRequestFail, Request) == 0x000000, "Member 'B_NewMasterServerManager_C_OnRequestFail::Request' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.OnRequestFailed_Access
// 0x0008 (0x0008 - 0x0000)
struct B_NewMasterServerManager_C_OnRequestFailed_Access final
{
public:
	class UVaRestRequestJSON*                     Request;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_OnRequestFailed_Access) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_OnRequestFailed_Access");
static_assert(sizeof(B_NewMasterServerManager_C_OnRequestFailed_Access) == 0x000008, "Wrong size on B_NewMasterServerManager_C_OnRequestFailed_Access");
static_assert(offsetof(B_NewMasterServerManager_C_OnRequestFailed_Access, Request) == 0x000000, "Member 'B_NewMasterServerManager_C_OnRequestFailed_Access::Request' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromJsonResponse
// 0x0038 (0x0038 - 0x0000)
struct B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultIsValid;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocalResultIsValid;                                // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A15[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_ParseErrorCodeFromLEJsonObject_Result;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid; // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse");
static_assert(sizeof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse) == 0x000038, "Wrong size on B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, Response) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, Result) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, ResultIsValid) == 0x000009, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, LocalResultIsValid) == 0x00000A, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::LocalResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000028, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_Json_ParseJsonString_Branch) == 0x000030, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_Result) == 0x000031, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid) == 0x000032, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse, K2Node_SwitchEnum_CmpSuccess) == 0x000033, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromJsonResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromLEJsonObject
// 0x0028 (0x0028 - 0x0000)
struct B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultIsValid;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              ErrorCodeResult;                                   // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          JsonWasValidResult;                                // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A16[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_CommonErrorCodeFromString_ErrorCode;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CommonErrorCodeFromString_IsValid;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject");
static_assert(sizeof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject) == 0x000028, "Wrong size on B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, JsonObject) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::JsonObject' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, Result) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, ResultIsValid) == 0x000009, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, ErrorCodeResult) == 0x00000A, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::ErrorCodeResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, JsonWasValidResult) == 0x00000B, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::JsonWasValidResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, CallFunc_Object_GetString_Branch) == 0x00000C, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, CallFunc_Object_GetString_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, CallFunc_CommonErrorCodeFromString_ErrorCode) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::CallFunc_CommonErrorCodeFromString_ErrorCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, CallFunc_CommonErrorCodeFromString_IsValid) == 0x000021, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::CallFunc_CommonErrorCodeFromString_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromLEJsonObject::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseErrorCodeFromVaJsonObject
// 0x0028 (0x0028 - 0x0000)
struct B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject final
{
public:
	class UVaRestJsonObject*                      JsonObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResultIsValid;                                     // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              ErrorCodeResult;                                   // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          JsonWasValidResult;                                // 0x000B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A17[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStringField_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_CommonErrorCodeFromString_ErrorCode;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CommonErrorCodeFromString_IsValid;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject");
static_assert(sizeof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject) == 0x000028, "Wrong size on B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, JsonObject) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::JsonObject' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, Result) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, ResultIsValid) == 0x000009, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, ErrorCodeResult) == 0x00000A, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::ErrorCodeResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, JsonWasValidResult) == 0x00000B, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::JsonWasValidResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, CallFunc_GetStringField_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::CallFunc_GetStringField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, CallFunc_CommonErrorCodeFromString_ErrorCode) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::CallFunc_CommonErrorCodeFromString_ErrorCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject, CallFunc_CommonErrorCodeFromString_IsValid) == 0x000021, "Member 'B_NewMasterServerManager_C_ParseErrorCodeFromVaJsonObject::CallFunc_CommonErrorCodeFromString_IsValid' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseIntegerFromJsonResponse
// 0x0050 (0x0050 - 0x0000)
struct B_NewMasterServerManager_C_ParseIntegerFromJsonResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Key;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResultInt;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A18[0x1];                                     // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_ParseErrorCodeFromLEJsonObject_Result;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseIntegerFromJsonResponse");
static_assert(sizeof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse) == 0x000050, "Wrong size on B_NewMasterServerManager_C_ParseIntegerFromJsonResponse");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, Response) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, Key) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::Key' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, Result) == 0x000018, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, ResultInt) == 0x00001C, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::ResultInt' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000030, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000038, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_Json_ParseJsonString_Branch) == 0x000040, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, K2Node_SwitchEnum_CmpSuccess) == 0x000041, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_Object_GetInteger_Branch) == 0x000042, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_Object_GetInteger_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_Object_GetInteger_ReturnValue) == 0x000044, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_Object_GetInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_Result) == 0x000048, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid) == 0x000049, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004A, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseIntegerFromJsonResponse, K2Node_SwitchEnum_CmpSuccess_1) == 0x00004B, "Member 'B_NewMasterServerManager_C_ParseIntegerFromJsonResponse::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseStringFromJsonResponse
// 0x0078 (0x0078 - 0x0000)
struct B_NewMasterServerManager_C_ParseStringFromJsonResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Key;                                               // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Result;                                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ResultString;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A19[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_ParseErrorCodeFromLEJsonObject_Result;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid; // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseStringFromJsonResponse) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseStringFromJsonResponse");
static_assert(sizeof(B_NewMasterServerManager_C_ParseStringFromJsonResponse) == 0x000078, "Wrong size on B_NewMasterServerManager_C_ParseStringFromJsonResponse");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, Response) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, Key) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::Key' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, Result) == 0x000018, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, ResultString) == 0x000028, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::ResultString' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000038, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000048, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000050, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_Json_ParseJsonString_Branch) == 0x000058, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_Object_GetString_Branch) == 0x00005A, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_Object_GetString_ReturnValue) == 0x000060, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_Result) == 0x000070, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid) == 0x000071, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000072, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseStringFromJsonResponse, K2Node_SwitchEnum_CmpSuccess_1) == 0x000073, "Member 'B_NewMasterServerManager_C_ParseStringFromJsonResponse::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseSuccessFromJsonResponse
// 0x0038 (0x0038 - 0x0000)
struct B_NewMasterServerManager_C_ParseSuccessFromJsonResponse final
{
public:
	class UVaRestRequestJSON*                     Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetResponseContentAsString_ReturnValue;   // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetBoolean_Branch;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Object_GetBoolean_ReturnValue;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_ParseErrorCodeFromLEJsonObject_Result;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid; // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseSuccessFromJsonResponse");
static_assert(sizeof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse) == 0x000038, "Wrong size on B_NewMasterServerManager_C_ParseSuccessFromJsonResponse");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, Response) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::Response' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, Success) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, SuccessResult) == 0x000009, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_GetResponseContentAsString_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_GetResponseContentAsString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000028, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_Json_ParseJsonString_Branch) == 0x000030, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_Object_GetBoolean_Branch) == 0x000032, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_Object_GetBoolean_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_Object_GetBoolean_ReturnValue) == 0x000033, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_Object_GetBoolean_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_Result) == 0x000034, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid) == 0x000035, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_ParseErrorCodeFromLEJsonObject_ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000036, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromJsonResponse, K2Node_SwitchEnum_CmpSuccess_1) == 0x000037, "Member 'B_NewMasterServerManager_C_ParseSuccessFromJsonResponse::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseSuccessFromVaJsonObject
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject final
{
public:
	class UVaRestJsonObject*                      Response;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolField_ReturnValue;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ERestCommonError                              CallFunc_ParseErrorCodeFromVaJsonObject_Result;    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseErrorCodeFromVaJsonObject_ResultIsValid; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject");
static_assert(sizeof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject) == 0x000010, "Wrong size on B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, Response) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::Response' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, Success) == 0x000008, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, SuccessResult) == 0x000009, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, CallFunc_GetBoolField_ReturnValue) == 0x00000A, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::CallFunc_GetBoolField_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, CallFunc_ParseErrorCodeFromVaJsonObject_Result) == 0x00000B, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::CallFunc_ParseErrorCodeFromVaJsonObject_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, CallFunc_ParseErrorCodeFromVaJsonObject_ResultIsValid) == 0x00000C, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::CallFunc_ParseErrorCodeFromVaJsonObject_ResultIsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'B_NewMasterServerManager_C_ParseSuccessFromVaJsonObject::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ParseVersionNumber
// 0x03E0 (0x03E0 - 0x0000)
struct B_NewMasterServerManager_C_ParseVersionNumber final
{
public:
	class FString                                 VersionJson;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 VersionNumber;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Major;                                             // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minor;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Revision;                                          // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Build;                                             // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 OutString;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         BuildVersion;                                      // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RevisionVersion;                                   // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinorVersion;                                      // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MajorVersion;                                      // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         SplitArray;                                        // 0x0050(0x0010)(Edit, BlueprintVisible)
	class ULowEntryJsonObject*                    CallFunc_Json_ParseJsonString_ReturnJsonObjectValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULowEntryJsonArray*                     CallFunc_Json_ParseJsonString_ReturnJsonArrayValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonParseResult                      CallFunc_Json_ParseJsonString_Branch;              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1B[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1C[0x5];                                     // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0090(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1D[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00B8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_2;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_3;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0168(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01B8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0218(0x0018)()
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_4;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0248(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_5;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_6;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02A8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x02F8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0348(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0358(0x0018)()
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1E[0x4];                                     // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ParseVersionNumber) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ParseVersionNumber");
static_assert(sizeof(B_NewMasterServerManager_C_ParseVersionNumber) == 0x0003E0, "Wrong size on B_NewMasterServerManager_C_ParseVersionNumber");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, VersionJson) == 0x000000, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::VersionJson' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, VersionNumber) == 0x000010, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::VersionNumber' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, Major) == 0x000020, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::Major' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, Minor) == 0x000024, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::Minor' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, Revision) == 0x000028, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::Revision' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, Build) == 0x00002C, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::Build' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, OutString) == 0x000030, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::OutString' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, BuildVersion) == 0x000040, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::BuildVersion' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, RevisionVersion) == 0x000044, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::RevisionVersion' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, MinorVersion) == 0x000048, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::MinorVersion' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, MajorVersion) == 0x00004C, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::MajorVersion' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, SplitArray) == 0x000050, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::SplitArray' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Json_ParseJsonString_ReturnJsonObjectValue) == 0x000060, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Json_ParseJsonString_ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Json_ParseJsonString_ReturnJsonArrayValue) == 0x000068, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Json_ParseJsonString_ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Json_ParseJsonString_Branch) == 0x000070, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Json_ParseJsonString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Greater_IntInt_ReturnValue) == 0x000079, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Object_GetString_Branch) == 0x00007A, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Object_GetString_ReturnValue) == 0x000080, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_ParseIntoArray_ReturnValue) == 0x000090, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A0, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0000A8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000B0, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData) == 0x0000B8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_2) == 0x000158, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_3) == 0x000160, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_2) == 0x000168, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001B8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeArray_Array) == 0x000208, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Format_ReturnValue) == 0x000218, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_4) == 0x000230, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_TextToString_ReturnValue) == 0x000238, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_4) == 0x000248, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_5) == 0x000298, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_IntToInt64_ReturnValue_6) == 0x0002A0, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_IntToInt64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002A8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeStruct_FormatArgumentData_6) == 0x0002F8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, K2Node_MakeArray_Array_1) == 0x000348, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Format_ReturnValue_1) == 0x000358, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Get_Item) == 0x000370, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000380, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_StringToInt_ReturnValue) == 0x000390, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Get_Item_1) == 0x000398, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Get_Item_2) == 0x0003A8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x0003B8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x0003BC, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Get_Item_3) == 0x0003C0, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Array_Length_ReturnValue_1) == 0x0003D0, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x0003D4, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ParseVersionNumber, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0003D8, "Member 'B_NewMasterServerManager_C_ParseVersionNumber::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.PerformLogin
// 0x0050 (0x0050 - 0x0000)
struct B_NewMasterServerManager_C_PerformLogin final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Locale;                                            // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AuthInfo;                                          // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_PerformLogin) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_PerformLogin");
static_assert(sizeof(B_NewMasterServerManager_C_PerformLogin) == 0x000050, "Wrong size on B_NewMasterServerManager_C_PerformLogin");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLogin, UserName) == 0x000000, "Member 'B_NewMasterServerManager_C_PerformLogin::UserName' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLogin, Password) == 0x000010, "Member 'B_NewMasterServerManager_C_PerformLogin::Password' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLogin, Locale) == 0x000020, "Member 'B_NewMasterServerManager_C_PerformLogin::Locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLogin, AccountType) == 0x000030, "Member 'B_NewMasterServerManager_C_PerformLogin::AccountType' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLogin, AuthInfo) == 0x000040, "Member 'B_NewMasterServerManager_C_PerformLogin::AuthInfo' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.PerformLoginUsingRefreshToken
// 0x0030 (0x0030 - 0x0000)
struct B_NewMasterServerManager_C_PerformLoginUsingRefreshToken final
{
public:
	class FString                                 Param_RefreshToken;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Locale;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_PerformLoginUsingRefreshToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_PerformLoginUsingRefreshToken");
static_assert(sizeof(B_NewMasterServerManager_C_PerformLoginUsingRefreshToken) == 0x000030, "Wrong size on B_NewMasterServerManager_C_PerformLoginUsingRefreshToken");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLoginUsingRefreshToken, Param_RefreshToken) == 0x000000, "Member 'B_NewMasterServerManager_C_PerformLoginUsingRefreshToken::Param_RefreshToken' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLoginUsingRefreshToken, Locale) == 0x000010, "Member 'B_NewMasterServerManager_C_PerformLoginUsingRefreshToken::Locale' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_PerformLoginUsingRefreshToken, AccountType) == 0x000020, "Member 'B_NewMasterServerManager_C_PerformLoginUsingRefreshToken::AccountType' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.ProcessLoginResponse
// 0x00D0 (0x00D0 - 0x0000)
struct B_NewMasterServerManager_C_ProcessLoginResponse final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1F[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Code;                                              // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ResponseMessage;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ResponseCode;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SuccessResult;                                     // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetBoolean_Branch;                 // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Object_GetBoolean_ReturnValue;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A20[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A21[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch_1;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A22[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetInteger_Branch_2;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A23[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Object_GetInteger_ReturnValue_2;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_ServerClientConfig_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A24[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ServerClientConfig_C*                CallFunc_SpawnObject_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetJsonObject_Branch;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A25[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    CallFunc_Object_GetJsonObject_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A26[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue_1;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ELowEntryJsonValueAndTypeFound                CallFunc_Object_GetString_Branch_2;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A27[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Object_GetString_ReturnValue_2;           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_DateTimeFromIsoString_Result;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DateTimeFromIsoString_ReturnValue;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_ProcessLoginResponse) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_ProcessLoginResponse");
static_assert(sizeof(B_NewMasterServerManager_C_ProcessLoginResponse) == 0x0000D0, "Wrong size on B_NewMasterServerManager_C_ProcessLoginResponse");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, JsonObject) == 0x000000, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::JsonObject' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, Success) == 0x000008, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, Code) == 0x00000C, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::Code' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, Message) == 0x000010, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::Message' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, ResponseMessage) == 0x000020, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::ResponseMessage' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, ResponseCode) == 0x000030, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::ResponseCode' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, SuccessResult) == 0x000034, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::SuccessResult' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetBoolean_Branch) == 0x000035, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetBoolean_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetBoolean_ReturnValue) == 0x000036, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetBoolean_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess) == 0x000037, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_Branch) == 0x000038, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_ReturnValue) == 0x00003C, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_1) == 0x000040, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_Branch) == 0x000041, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_ReturnValue) == 0x000048, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_Branch_1) == 0x000058, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_Branch_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_ReturnValue_1) == 0x00005C, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_2) == 0x000060, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_3) == 0x000061, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_Branch_2) == 0x000062, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_Branch_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetInteger_ReturnValue_2) == 0x000064, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_4) == 0x000070, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_SpawnObject_ReturnValue_1) == 0x000078, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetJsonObject_Branch) == 0x000080, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetJsonObject_Branch' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetJsonObject_ReturnValue) == 0x000088, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetJsonObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_5) == 0x000090, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_Branch_1) == 0x000091, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_Branch_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_ReturnValue_1) == 0x000098, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_Branch_2) == 0x0000A8, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_Branch_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_Object_GetString_ReturnValue_2) == 0x0000B0, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_Object_GetString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_DateTimeFromIsoString_Result) == 0x0000C0, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_DateTimeFromIsoString_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, CallFunc_DateTimeFromIsoString_ReturnValue) == 0x0000C8, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::CallFunc_DateTimeFromIsoString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_6) == 0x0000C9, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_ProcessLoginResponse, K2Node_SwitchEnum_CmpSuccess_7) == 0x0000CA, "Member 'B_NewMasterServerManager_C_ProcessLoginResponse::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.RevokeAccessToken
// 0x0028 (0x0028 - 0x0000)
struct B_NewMasterServerManager_C_RevokeAccessToken final
{
public:
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Add_DateTimeTimespan_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_RevokeAccessToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_RevokeAccessToken");
static_assert(sizeof(B_NewMasterServerManager_C_RevokeAccessToken) == 0x000028, "Wrong size on B_NewMasterServerManager_C_RevokeAccessToken");
static_assert(offsetof(B_NewMasterServerManager_C_RevokeAccessToken, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000000, "Member 'B_NewMasterServerManager_C_RevokeAccessToken::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_RevokeAccessToken, CallFunc_MakeTimespan_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_RevokeAccessToken::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_RevokeAccessToken, CallFunc_UtcNow_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_RevokeAccessToken::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_RevokeAccessToken, CallFunc_MakeDateTime_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_RevokeAccessToken::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_RevokeAccessToken, CallFunc_Add_DateTimeTimespan_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_RevokeAccessToken::CallFunc_Add_DateTimeTimespan_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetAccessTokenExpiryDateTime
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         LifetimeSeconds;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime");
static_assert(sizeof(B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime) == 0x000010, "Wrong size on B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime");
static_assert(offsetof(B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime, DateTime) == 0x000000, "Member 'B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime::DateTime' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime, LifetimeSeconds) == 0x000008, "Member 'B_NewMasterServerManager_C_SetAccessTokenExpiryDateTime::LifetimeSeconds' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetRefreshTokenExpiryDateTime
// 0x0010 (0x0010 - 0x0000)
struct B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime final
{
public:
	struct FDateTime                              DateTime;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         LifetimeSeconds;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime");
static_assert(sizeof(B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime) == 0x000010, "Wrong size on B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime");
static_assert(offsetof(B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime, DateTime) == 0x000000, "Member 'B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime::DateTime' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime, LifetimeSeconds) == 0x000008, "Member 'B_NewMasterServerManager_C_SetRefreshTokenExpiryDateTime::LifetimeSeconds' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.SetRestApiConnectivityState
// 0x0001 (0x0001 - 0x0000)
struct B_NewMasterServerManager_C_SetRestApiConnectivityState final
{
public:
	bool                                          Param_IsConnected;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_SetRestApiConnectivityState) == 0x000001, "Wrong alignment on B_NewMasterServerManager_C_SetRestApiConnectivityState");
static_assert(sizeof(B_NewMasterServerManager_C_SetRestApiConnectivityState) == 0x000001, "Wrong size on B_NewMasterServerManager_C_SetRestApiConnectivityState");
static_assert(offsetof(B_NewMasterServerManager_C_SetRestApiConnectivityState, Param_IsConnected) == 0x000000, "Member 'B_NewMasterServerManager_C_SetRestApiConnectivityState::Param_IsConnected' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.Can Make Requests
// 0x0004 (0x0004 - 0x0000)
struct B_NewMasterServerManager_C_Can_Make_Requests final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidRefreshToken_IsValid;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasValidAccessToken_IsValid;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_Can_Make_Requests) == 0x000001, "Wrong alignment on B_NewMasterServerManager_C_Can_Make_Requests");
static_assert(sizeof(B_NewMasterServerManager_C_Can_Make_Requests) == 0x000004, "Wrong size on B_NewMasterServerManager_C_Can_Make_Requests");
static_assert(offsetof(B_NewMasterServerManager_C_Can_Make_Requests, Result) == 0x000000, "Member 'B_NewMasterServerManager_C_Can_Make_Requests::Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Can_Make_Requests, CallFunc_HasValidRefreshToken_IsValid) == 0x000001, "Member 'B_NewMasterServerManager_C_Can_Make_Requests::CallFunc_HasValidRefreshToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Can_Make_Requests, CallFunc_HasValidAccessToken_IsValid) == 0x000002, "Member 'B_NewMasterServerManager_C_Can_Make_Requests::CallFunc_HasValidAccessToken_IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_Can_Make_Requests, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'B_NewMasterServerManager_C_Can_Make_Requests::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallHostname
// 0x0030 (0x0030 - 0x0000)
struct B_NewMasterServerManager_C_GetRestCallHostname final
{
public:
	bool                                          bUseProdServers;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A28[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A29[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_GetRestCallHostname) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_GetRestCallHostname");
static_assert(sizeof(B_NewMasterServerManager_C_GetRestCallHostname) == 0x000030, "Wrong size on B_NewMasterServerManager_C_GetRestCallHostname");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallHostname, bUseProdServers) == 0x000000, "Member 'B_NewMasterServerManager_C_GetRestCallHostname::bUseProdServers' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallHostname, ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_GetRestCallHostname::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallHostname, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_GetRestCallHostname::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallHostname, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'B_NewMasterServerManager_C_GetRestCallHostname::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallHostname, CallFunc_SelectString_ReturnValue) == 0x000020, "Member 'B_NewMasterServerManager_C_GetRestCallHostname::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallPort
// 0x000C (0x000C - 0x0000)
struct B_NewMasterServerManager_C_GetRestCallPort final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2A[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_GetRestCallPort) == 0x000004, "Wrong alignment on B_NewMasterServerManager_C_GetRestCallPort");
static_assert(sizeof(B_NewMasterServerManager_C_GetRestCallPort) == 0x00000C, "Wrong size on B_NewMasterServerManager_C_GetRestCallPort");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallPort, ReturnValue) == 0x000000, "Member 'B_NewMasterServerManager_C_GetRestCallPort::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallPort, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000004, "Member 'B_NewMasterServerManager_C_GetRestCallPort::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallPort, CallFunc_SelectInt_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_GetRestCallPort::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.GetRestCallProtocol
// 0x0028 (0x0028 - 0x0000)
struct B_NewMasterServerManager_C_GetRestCallProtocol final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_GetRestCallProtocol) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_GetRestCallProtocol");
static_assert(sizeof(B_NewMasterServerManager_C_GetRestCallProtocol) == 0x000028, "Wrong size on B_NewMasterServerManager_C_GetRestCallProtocol");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallProtocol, ReturnValue) == 0x000000, "Member 'B_NewMasterServerManager_C_GetRestCallProtocol::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallProtocol, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_GetRestCallProtocol::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_GetRestCallProtocol, CallFunc_SelectString_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_GetRestCallProtocol::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasValidAccessToken
// 0x0030 (0x0030 - 0x0000)
struct B_NewMasterServerManager_C_HasValidAccessToken final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Subtract_DateTimeTimespan_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Parse_StringToGuid_OutGuid;               // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Parse_StringToGuid_Success;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_HasValidAccessToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_HasValidAccessToken");
static_assert(sizeof(B_NewMasterServerManager_C_HasValidAccessToken) == 0x000030, "Wrong size on B_NewMasterServerManager_C_HasValidAccessToken");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, IsValid) == 0x000000, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_Subtract_DateTimeTimespan_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_Subtract_DateTimeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_Parse_StringToGuid_OutGuid) == 0x00001C, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_Parse_StringToGuid_OutGuid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_Parse_StringToGuid_Success) == 0x00002C, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_Parse_StringToGuid_Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidAccessToken, CallFunc_BooleanAND_ReturnValue) == 0x00002D, "Member 'B_NewMasterServerManager_C_HasValidAccessToken::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasValidRefreshToken
// 0x0028 (0x0028 - 0x0000)
struct B_NewMasterServerManager_C_HasValidRefreshToken final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DateTimeDateTime_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Parse_StringToGuid_OutGuid;               // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Parse_StringToGuid_Success;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_HasValidRefreshToken) == 0x000008, "Wrong alignment on B_NewMasterServerManager_C_HasValidRefreshToken");
static_assert(sizeof(B_NewMasterServerManager_C_HasValidRefreshToken) == 0x000028, "Wrong size on B_NewMasterServerManager_C_HasValidRefreshToken");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, IsValid) == 0x000000, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::IsValid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, CallFunc_Less_DateTimeDateTime_ReturnValue) == 0x000010, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::CallFunc_Less_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, CallFunc_Parse_StringToGuid_OutGuid) == 0x000014, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::CallFunc_Parse_StringToGuid_OutGuid' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, CallFunc_Parse_StringToGuid_Success) == 0x000024, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::CallFunc_Parse_StringToGuid_Success' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasValidRefreshToken, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'B_NewMasterServerManager_C_HasValidRefreshToken::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.HasWitchItAccountId
// 0x0002 (0x0002 - 0x0000)
struct B_NewMasterServerManager_C_HasWitchItAccountId final
{
public:
	bool                                          Out;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_HasWitchItAccountId) == 0x000001, "Wrong alignment on B_NewMasterServerManager_C_HasWitchItAccountId");
static_assert(sizeof(B_NewMasterServerManager_C_HasWitchItAccountId) == 0x000002, "Wrong size on B_NewMasterServerManager_C_HasWitchItAccountId");
static_assert(offsetof(B_NewMasterServerManager_C_HasWitchItAccountId, Out) == 0x000000, "Member 'B_NewMasterServerManager_C_HasWitchItAccountId::Out' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_HasWitchItAccountId, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'B_NewMasterServerManager_C_HasWitchItAccountId::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_NewMasterServerManager.B_NewMasterServerManager_C.IsLoggedIn
// 0x0004 (0x0004 - 0x0000)
struct B_NewMasterServerManager_C_IsLoggedIn final
{
public:
	bool                                          bIsLoggedIn;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasWitchItAccountId_Out;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Make_Requests_Result;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_NewMasterServerManager_C_IsLoggedIn) == 0x000001, "Wrong alignment on B_NewMasterServerManager_C_IsLoggedIn");
static_assert(sizeof(B_NewMasterServerManager_C_IsLoggedIn) == 0x000004, "Wrong size on B_NewMasterServerManager_C_IsLoggedIn");
static_assert(offsetof(B_NewMasterServerManager_C_IsLoggedIn, bIsLoggedIn) == 0x000000, "Member 'B_NewMasterServerManager_C_IsLoggedIn::bIsLoggedIn' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_IsLoggedIn, CallFunc_HasWitchItAccountId_Out) == 0x000001, "Member 'B_NewMasterServerManager_C_IsLoggedIn::CallFunc_HasWitchItAccountId_Out' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_IsLoggedIn, CallFunc_Can_Make_Requests_Result) == 0x000002, "Member 'B_NewMasterServerManager_C_IsLoggedIn::CallFunc_Can_Make_Requests_Result' has a wrong offset!");
static_assert(offsetof(B_NewMasterServerManager_C_IsLoggedIn, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'B_NewMasterServerManager_C_IsLoggedIn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

