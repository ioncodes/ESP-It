#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_IngameUIManager

#include "Basic.hpp"

#include "ESkillCategory_structs.hpp"
#include "Engine_structs.hpp"
#include "SOpenWidgetInfo_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"
#include "ETeamID_structs.hpp"
#include "E_RememberAfterSaveLayoutAction_structs.hpp"
#include "EResultType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EChatType_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_IngameUIManager.B_IngameUIManager_C
// 0x0130 (0x0160 - 0x0030)
class UB_IngameUIManager_C final : public UBaseManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUserWidget*                            MenuWidget;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            PlayerListWidget;                                  // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            FriendsInviteWidget;                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ResultWidget;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            HelpWidget;                                        // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSOpenWidgetInfo>               OpenedWidgets;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUserWidget*                            HUDUserWidget;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_HUD_C*                              HUDWidget;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      B_GameInstance;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWB_Chat_C*                             ChatWidget;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_GameMessages_C*                     GameMessagesWidget;                                // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HUDIsVisible;                                      // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UserInterfaceIsHidden;                             // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            TeamSelectionWidget;                               // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerCustomization_C*              CustomizationWidget;                               // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            RandomSelectionWidget;                             // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            MedalsWidget;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            RewardsWidget;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LocalZOrder;                                       // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            TopMostFocusedWidget;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            VoteKickWidget;                                    // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_KickPlayerVote_C*                   KickPlayerVoteWidget;                              // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            KickReasonWidget;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSupordinateMenuOpen;                             // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TipOfTheGame;                                      // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UUserWidget*                            MutePlayerWidget;                                  // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            MapVoteWidget;                                     // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ServerInfoWidget;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ReportReasonWidget;                                // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            TeamSelectionObjectiveWidget;                      // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            TeamSelectionObjectiveCoopWidget;                  // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            ObjectiveResultWidget;                             // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SkillListPopupWidget;                              // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            SkinConfigListPopupWidget;                         // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnInputModeChanged;                                // 0x0150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnInputModeChanged__DelegateSignature();
	void ChatTextCommitted(const class FText& Text, ETextCommit CommitMethod);
	void ChatTextCommittedTeam(const class FText& Text, ETextCommit CommitMethod);
	void ClearChatAndGameMessage();
	void CloseAllScreens(bool RefreshFocus);
	void CloseScreen(class UUserWidget* UserWidget);
	void CloseScreens(TArray<class UUserWidget*>& UserWidgets);
	void CloseSubordinateMenu();
	void DevGrantAllItemsCommand();
	void ExecuteUbergraph_B_IngameUIManager(int32 EntryPoint);
	void FocusChatForTyping(EChatType ChatType);
	void GetFirstLocalPlayerController(class AB_PlayerController_C** PlayerController);
	void GetKeyBinding(class FName TypeChatMessage, class FText* Text);
	void GetOwningPlayer(class APlayerController** PlayerController);
	void GrantDropExpCommand(int32 Exp);
	void GrantItemCommand(int32 Item);
	void GrantPrestigeExpCommand(int32 Exp);
	void HandleChatCommand(const class FText& Text, ETextCommit CommitMethod, EChatType ChatType);
	void HideHUD();
	void HideOutlinesCommand();
	void HidePlayerList();
	void IncreaseLevelCommand();
	void Initialize(class UGameInstance* InGameInstance);
	void InitializeStartSpectating();
	void IsUserInterfaceHidden(bool* UserInterfaceIsHidden_0);
	void IsWidgetAlreadyOpen(class UClass* WidgetClass, bool* IsAlreadyOpen);
	void JumpAllWitchesCommand();
	void OpenScreen(class UUserWidget* UserWidget, bool HasFocus, int32 ZOrder);
	void OpenSubordinateMenu(bool HideCurrentlyOpenedWidgets);
	void ParseChatCommand(const class FString& ChatMessage, bool* IsChatCommand);
	void PickRandomTip();
	void RefreshFocus(bool Force);
	void RefreshFocusWhenChatNotOpen();
	void RefreshHUDVisibility();
	void RefreshVisibility();
	void RefreshWidgetsActive(class UUserWidget* WidgetWithFocus);
	void ResetAllStatsCommand();
	void RunCommand(const class FString& ConsoleCommand);
	void Set_Focused_Widget_Input_Mode(class UWidget* InWidgetToFocus);
	void SetWorkshopIdCommand(const class FString& WorkshopID);
	bool ShouldInputModeBeGameAndUI(const class UObject* Object);
	void ShowChat();
	void ShowCustomization(ETeamID SelectedTeam, bool OpenViaWardrobe);
	void ShowDebugMedalCommand();
	void ShowDropExpCommand();
	void ShowFriendsInvite();
	void ShowGameMessages();
	void ShowHelp();
	void ShowHUD();
	void ShowKickPlayerVote();
	void ShowKickReason(class APlayerState* PlayerToKick);
	void ShowLayoutList(bool SaveMode, E_RememberAfterSaveLayoutAction RememberAfterSaveAction);
	void ShowMapVote();
	void ShowMedals();
	void ShowMenu();
	void ShowMutePlayer();
	void ShowObjectiveResult();
	void ShowPlayerList(bool StopAction);
	void ShowPrestigeExpCommand();
	void ShowPropCollection();
	void ShowQuestionDialog(const class FText& Title, const class FText& Question, bool OkButton, bool YesButton, bool NoButton, bool CancelButton, class UWB_QuestionDialog_C** QuestionDialog);
	void ShowRandomSelection();
	void ShowReportReason(class APlayerState* PlayerToReport);
	void ShowResult(EResultType ResultType);
	void ShowRewards();
	void ShowServerInfo();
	void ShowServerInfoCommand();
	void ShowSkillListPopup(ETeamID Team, ESkillCategory SkillCategory, class UWB_SkillSelectionBlock_C* SkillSelectionBlock);
	void ShowSkinConfigListPopup(class UWB_IngameSkinConfigMenu_C* Parent);
	void ShowTeamSelection();
	void ShowTeamSelectionObjective();
	void ShowTeamSelectionObjectiveCoop();
	void ShowTournamentScore();
	void ShowUploadLayout();
	void ShowVoteKick();
	void ToggleVisibility();
	void ToggleWitchJiggleCommand(int32 Force);
	void TravelToMapCommand(const class FString& MapName);
	void UnhideHUD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_IngameUIManager_C">();
	}
	static class UB_IngameUIManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_IngameUIManager_C>();
	}
};
static_assert(alignof(UB_IngameUIManager_C) == 0x000008, "Wrong alignment on UB_IngameUIManager_C");
static_assert(sizeof(UB_IngameUIManager_C) == 0x000160, "Wrong size on UB_IngameUIManager_C");
static_assert(offsetof(UB_IngameUIManager_C, UberGraphFrame) == 0x000030, "Member 'UB_IngameUIManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, MenuWidget) == 0x000038, "Member 'UB_IngameUIManager_C::MenuWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, PlayerListWidget) == 0x000040, "Member 'UB_IngameUIManager_C::PlayerListWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, FriendsInviteWidget) == 0x000048, "Member 'UB_IngameUIManager_C::FriendsInviteWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, ResultWidget) == 0x000050, "Member 'UB_IngameUIManager_C::ResultWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, HelpWidget) == 0x000058, "Member 'UB_IngameUIManager_C::HelpWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, OpenedWidgets) == 0x000060, "Member 'UB_IngameUIManager_C::OpenedWidgets' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, HUDUserWidget) == 0x000070, "Member 'UB_IngameUIManager_C::HUDUserWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, HUDWidget) == 0x000078, "Member 'UB_IngameUIManager_C::HUDWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, B_GameInstance) == 0x000080, "Member 'UB_IngameUIManager_C::B_GameInstance' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, ChatWidget) == 0x000088, "Member 'UB_IngameUIManager_C::ChatWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, GameMessagesWidget) == 0x000090, "Member 'UB_IngameUIManager_C::GameMessagesWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, HUDIsVisible) == 0x000098, "Member 'UB_IngameUIManager_C::HUDIsVisible' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, UserInterfaceIsHidden) == 0x000099, "Member 'UB_IngameUIManager_C::UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, TeamSelectionWidget) == 0x0000A0, "Member 'UB_IngameUIManager_C::TeamSelectionWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, CustomizationWidget) == 0x0000A8, "Member 'UB_IngameUIManager_C::CustomizationWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, RandomSelectionWidget) == 0x0000B0, "Member 'UB_IngameUIManager_C::RandomSelectionWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, MedalsWidget) == 0x0000B8, "Member 'UB_IngameUIManager_C::MedalsWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, RewardsWidget) == 0x0000C0, "Member 'UB_IngameUIManager_C::RewardsWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, LocalZOrder) == 0x0000C8, "Member 'UB_IngameUIManager_C::LocalZOrder' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, TopMostFocusedWidget) == 0x0000D0, "Member 'UB_IngameUIManager_C::TopMostFocusedWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, VoteKickWidget) == 0x0000D8, "Member 'UB_IngameUIManager_C::VoteKickWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, KickPlayerVoteWidget) == 0x0000E0, "Member 'UB_IngameUIManager_C::KickPlayerVoteWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, KickReasonWidget) == 0x0000E8, "Member 'UB_IngameUIManager_C::KickReasonWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, IsSupordinateMenuOpen) == 0x0000F0, "Member 'UB_IngameUIManager_C::IsSupordinateMenuOpen' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, TipOfTheGame) == 0x0000F8, "Member 'UB_IngameUIManager_C::TipOfTheGame' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, MutePlayerWidget) == 0x000108, "Member 'UB_IngameUIManager_C::MutePlayerWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, MapVoteWidget) == 0x000110, "Member 'UB_IngameUIManager_C::MapVoteWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, ServerInfoWidget) == 0x000118, "Member 'UB_IngameUIManager_C::ServerInfoWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, ReportReasonWidget) == 0x000120, "Member 'UB_IngameUIManager_C::ReportReasonWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, TeamSelectionObjectiveWidget) == 0x000128, "Member 'UB_IngameUIManager_C::TeamSelectionObjectiveWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, TeamSelectionObjectiveCoopWidget) == 0x000130, "Member 'UB_IngameUIManager_C::TeamSelectionObjectiveCoopWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, ObjectiveResultWidget) == 0x000138, "Member 'UB_IngameUIManager_C::ObjectiveResultWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, SkillListPopupWidget) == 0x000140, "Member 'UB_IngameUIManager_C::SkillListPopupWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, SkinConfigListPopupWidget) == 0x000148, "Member 'UB_IngameUIManager_C::SkinConfigListPopupWidget' has a wrong offset!");
static_assert(offsetof(UB_IngameUIManager_C, OnInputModeChanged) == 0x000150, "Member 'UB_IngameUIManager_C::OnInputModeChanged' has a wrong offset!");

}

