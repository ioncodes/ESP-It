#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_AchievementItem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_AchievementData_structs.hpp"


namespace SDK::Params
{

// Function WB_AchievementItem.WB_AchievementItem_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_AchievementItem_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AchievementItem_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WB_AchievementItem_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WB_AchievementItem_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WB_AchievementItem_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WB_AchievementItem_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WB_AchievementItem_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WB_AchievementItem.WB_AchievementItem_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_AchievementItem_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AchievementItem_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WB_AchievementItem_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WB_AchievementItem_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WB_AchievementItem_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WB_AchievementItem_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WB_AchievementItem_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WB_AchievementItem.WB_AchievementItem_C.ExecuteUbergraph_WB_AchievementItem
// 0x0020 (0x0020 - 0x0000)
struct WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5631[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_AchievementData_C*                   K2Node_DynamicCast_AsB_Achievement_Data;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem) == 0x000008, "Wrong alignment on WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem");
static_assert(sizeof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem) == 0x000020, "Wrong size on WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, EntryPoint) == 0x000000, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, K2Node_Event_ListItemObject) == 0x000008, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, K2Node_DynamicCast_AsB_Achievement_Data) == 0x000010, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::K2Node_DynamicCast_AsB_Achievement_Data' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, K2Node_Event_bIsExpanded) == 0x000019, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem, K2Node_Event_bIsSelected) == 0x00001A, "Member 'WB_AchievementItem_C_ExecuteUbergraph_WB_AchievementItem::K2Node_Event_bIsSelected' has a wrong offset!");

// Function WB_AchievementItem.WB_AchievementItem_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WB_AchievementItem_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AchievementItem_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WB_AchievementItem_C_OnListItemObjectSet");
static_assert(sizeof(WB_AchievementItem_C_OnListItemObjectSet) == 0x000008, "Wrong size on WB_AchievementItem_C_OnListItemObjectSet");
static_assert(offsetof(WB_AchievementItem_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WB_AchievementItem_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WB_AchievementItem.WB_AchievementItem_C.SetAchievementData
// 0x0410 (0x0410 - 0x0000)
struct WB_AchievementItem_C_SetAchievementData final
{
public:
	struct FS_AchievementData                     Param_AchievementData;                             // 0x0000(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Completed;                                         // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5632[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5633[0xC];                                     // 0x0134(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0140(0x00D0)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0220(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5634[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5635[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5636[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_Select_Default;                             // 0x02A8(0x0014)()
	int32                                         CallFunc_Min_ReturnValue;                          // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x02D0(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0328(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0338(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAchievementStatus_bIsCompleted;        // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5637[0x6];                                     // 0x0362(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_GetAchievementStatus_CompletionDateTime;  // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAchievementStatus_bIsHIdden;           // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5638[0x7];                                     // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0390(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x03E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x03F0(0x0018)()
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_AchievementItem_C_SetAchievementData) == 0x000010, "Wrong alignment on WB_AchievementItem_C_SetAchievementData");
static_assert(sizeof(WB_AchievementItem_C_SetAchievementData) == 0x000410, "Wrong size on WB_AchievementItem_C_SetAchievementData");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, Param_AchievementData) == 0x000000, "Member 'WB_AchievementItem_C_SetAchievementData::Param_AchievementData' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, Completed) == 0x000120, "Member 'WB_AchievementItem_C_SetAchievementData::Completed' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_SelectColor_ReturnValue) == 0x000124, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeStruct_SlateBrush) == 0x000140, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000210, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000218, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeStruct_FormatArgumentData) == 0x000220, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000270, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetGameInstance_ReturnValue) == 0x000278, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_BooleanAND_ReturnValue) == 0x000280, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_DynamicCast_AsB_Game_Instance) == 0x000288, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_DynamicCast_bSuccess) == 0x000290, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, Temp_bool_Variable) == 0x000291, "Member 'WB_AchievementItem_C_SetAchievementData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetStat_ResultValue) == 0x000298, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetStat_ResultWasFound) == 0x0002A0, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x0002A4, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_Select_Default) == 0x0002A8, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Min_ReturnValue) == 0x0002BC, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0002C0, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0002C8, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0002D0, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000320, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeArray_Array) == 0x000328, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Format_ReturnValue) == 0x000338, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetGameInstance_ReturnValue_1) == 0x000350, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000358, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_DynamicCast_bSuccess_1) == 0x000360, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetAchievementStatus_bIsCompleted) == 0x000361, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetAchievementStatus_bIsCompleted' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetAchievementStatus_CompletionDateTime) == 0x000368, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetAchievementStatus_CompletionDateTime' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_GetAchievementStatus_bIsHIdden) == 0x000370, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_GetAchievementStatus_bIsHIdden' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_AsDate_DateTime_ReturnValue) == 0x000378, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeStruct_FormatArgumentData_2) == 0x000390, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, K2Node_MakeArray_Array_1) == 0x0003E0, "Member 'WB_AchievementItem_C_SetAchievementData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_Format_ReturnValue_1) == 0x0003F0, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_AchievementItem_C_SetAchievementData, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000408, "Member 'WB_AchievementItem_C_SetAchievementData::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

}

