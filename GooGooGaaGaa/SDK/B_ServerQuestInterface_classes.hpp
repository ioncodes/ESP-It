#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ServerQuestInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_structs.hpp"
#include "LowEntryJson_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ServerQuestInterface.B_ServerQuestInterface_C
// 0x0020 (0x0048 - 0x0028)
class UB_ServerQuestInterface_C final : public UObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0028(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_NewMasterServerManager_C*            NewMasterServerManager;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnReceivedAccountIdForAccountName;                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BuildGetUserIdRequest(const class FString& ProductUserId, const class FString& AccountType, const class FString& NativePlatformId, class UVaRestRequestJSON** Request);
	void BuildQuestProgressJsonString(int32 AccountId, int64 ObjectiveId, const class FString& Value, class FString* JsonString);
	void ExecuteUbergraph_B_ServerQuestInterface(int32 EntryPoint);
	void GetObjectiveIdFromName(class FName Param_Name, int64* ObjectiveId);
	void HandleUserIdCompleted(class UVaRestRequestJSON* Response);
	void Init(const class UB_NewMasterServerManager_C*& Param_NewMasterServerManager);
	void OnGetUserIdCompleted(class UVaRestRequestJSON* Response);
	void OnPostQuestRequestFailed(class UVaRestRequestJSON* Request);
	void OnPostQuestUpdateCompleted(class UVaRestRequestJSON* Request);
	void OnReceivedAccountIdForAccountName__DelegateSignature(int32 AccountId, const class FString& RequestedAccountName, class UB_ServerClientConfig_C* ClientConfig, int32 AccountState);
	void PostQuestProgress(int32 ForAccount, int64 ObjectiveId, const class FString& Value);
	void RequestUserIdForAccount(const class FString& ProductUserId, const class FString& AccountType, const class FString& NativePlatformId);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ServerQuestInterface_C">();
	}
	static class UB_ServerQuestInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ServerQuestInterface_C>();
	}
};
static_assert(alignof(UB_ServerQuestInterface_C) == 0x000008, "Wrong alignment on UB_ServerQuestInterface_C");
static_assert(sizeof(UB_ServerQuestInterface_C) == 0x000048, "Wrong size on UB_ServerQuestInterface_C");
static_assert(offsetof(UB_ServerQuestInterface_C, UberGraphFrame) == 0x000028, "Member 'UB_ServerQuestInterface_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_ServerQuestInterface_C, NewMasterServerManager) == 0x000030, "Member 'UB_ServerQuestInterface_C::NewMasterServerManager' has a wrong offset!");
static_assert(offsetof(UB_ServerQuestInterface_C, OnReceivedAccountIdForAccountName) == 0x000038, "Member 'UB_ServerQuestInterface_C::OnReceivedAccountIdForAccountName' has a wrong offset!");

}

