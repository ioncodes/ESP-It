#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_QuestBlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ClientQuest_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ClientQuestType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_QuestBlock.WB_QuestBlock_C
// 0x0080 (0x0340 - 0x02C0)
class UWB_QuestBlock_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInFast;                                        // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           bLock;                                             // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           DailyQuestList;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DailyRewardIcon;                                   // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WeeklyQuestList;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 WeeklyRewardIcon;                                  // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FClientQuest>                   DailyClientQuests;                                 // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UB_ClientQuestInterface_C*              ClientQuestInterface;                              // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FClientQuest>                   WeeklyClientQuests;                                // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShouldFadeIn;                                      // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_588E[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnNoQuestToFocusFound;                             // 0x0330(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnNoQuestToFocusFound__DelegateSignature();
	void SetInitialFocus(int32 WidgetToFocus);
	void DoesAnyQuestHaveFocus(bool* FocusedQuestExists, int32* FocusedIndex);
	void SetUpNavigation();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	ESlateVisibility Get_DailyRewardIcon_Visibility_0();
	ESlateVisibility Get_WeeklyRewardIcon_Visibility_0();
	void CreateQuestWidgets(int32 MaxQuests, const TArray<struct FClientQuest>& Quests, class UPanelWidget* TargetList, EClientQuestType QuestType);
	void Refresh_Quests();
	void Construct();
	void UpdateItems();
	void HandleReceiveAssignedQuests(TArray<struct FClientQuest>& Quests);
	void ExecuteUbergraph_WB_QuestBlock(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_QuestBlock_C">();
	}
	static class UWB_QuestBlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_QuestBlock_C>();
	}
};
static_assert(alignof(UWB_QuestBlock_C) == 0x000008, "Wrong alignment on UWB_QuestBlock_C");
static_assert(sizeof(UWB_QuestBlock_C) == 0x000340, "Wrong size on UWB_QuestBlock_C");
static_assert(offsetof(UWB_QuestBlock_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_QuestBlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, FadeIn) == 0x0002C8, "Member 'UWB_QuestBlock_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, FadeInFast) == 0x0002D0, "Member 'UWB_QuestBlock_C::FadeInFast' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, bLock) == 0x0002D8, "Member 'UWB_QuestBlock_C::bLock' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, DailyQuestList) == 0x0002E0, "Member 'UWB_QuestBlock_C::DailyQuestList' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, DailyRewardIcon) == 0x0002E8, "Member 'UWB_QuestBlock_C::DailyRewardIcon' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, WeeklyQuestList) == 0x0002F0, "Member 'UWB_QuestBlock_C::WeeklyQuestList' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, WeeklyRewardIcon) == 0x0002F8, "Member 'UWB_QuestBlock_C::WeeklyRewardIcon' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, DailyClientQuests) == 0x000300, "Member 'UWB_QuestBlock_C::DailyClientQuests' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, ClientQuestInterface) == 0x000310, "Member 'UWB_QuestBlock_C::ClientQuestInterface' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, WeeklyClientQuests) == 0x000318, "Member 'UWB_QuestBlock_C::WeeklyClientQuests' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, ShouldFadeIn) == 0x000328, "Member 'UWB_QuestBlock_C::ShouldFadeIn' has a wrong offset!");
static_assert(offsetof(UWB_QuestBlock_C, OnNoQuestToFocusFound) == 0x000330, "Member 'UWB_QuestBlock_C::OnNoQuestToFocusFound' has a wrong offset!");

}

