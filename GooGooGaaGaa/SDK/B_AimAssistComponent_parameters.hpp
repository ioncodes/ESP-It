#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AimAssistComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_AimAssistComponent.B_AimAssistComponent_C.DevModeValueChanged
// 0x0048 (0x0048 - 0x0000)
struct B_AimAssistComponent_C_DevModeValueChanged final
{
public:
	class FName                                   SettingName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_KeepInfluenceTime_ImplicitCast; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FindTargetDistance_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_DevModeValueChanged) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_DevModeValueChanged");
static_assert(sizeof(B_AimAssistComponent_C_DevModeValueChanged) == 0x000048, "Wrong size on B_AimAssistComponent_C_DevModeValueChanged");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, SettingName) == 0x000000, "Member 'B_AimAssistComponent_C_DevModeValueChanged::SettingName' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, Value) == 0x000008, "Member 'B_AimAssistComponent_C_DevModeValueChanged::Value' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_SwitchName_CmpSuccess) == 0x00000C, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast) == 0x000010, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_KeepInfluenceTime_ImplicitCast) == 0x000018, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_KeepInfluenceTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast) == 0x000020, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast) == 0x000028, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast) == 0x000030, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast) == 0x000038, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_DevModeValueChanged, K2Node_VariableSet_FindTargetDistance_ImplicitCast) == 0x000040, "Member 'B_AimAssistComponent_C_DevModeValueChanged::K2Node_VariableSet_FindTargetDistance_ImplicitCast' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.InitializeDevModeDefaultValues
// 0x0140 (0x0140 - 0x0000)
struct B_AimAssistComponent_C_InitializeDevModeDefaultValues final
{
public:
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolSetting_bHasValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBoolSetting_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_2;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_3;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_4;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_5;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_6;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_7;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_8;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_9;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_10;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_11;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_12;        // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_1;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_13;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_2;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_14;        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_3;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_3;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_15;        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_16;        // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_4;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_4;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_5;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_5;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_17;        // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_6;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_6;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue_18;        // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatSetting_bHasValue_7;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatSetting_ReturnValue_7;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_1;     // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_2;     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_3;     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_4;     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_FindTargetDistance_ImplicitCast; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_5;     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatSetting_Value_ImplicitCast_6;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_KeepInfluenceTime_ImplicitCast; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_InitializeDevModeDefaultValues) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_InitializeDevModeDefaultValues");
static_assert(sizeof(B_AimAssistComponent_C_InitializeDevModeDefaultValues) == 0x000140, "Wrong size on B_AimAssistComponent_C_InitializeDevModeDefaultValues");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000000, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000008, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetBoolSetting_bHasValue) == 0x000010, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetBoolSetting_bHasValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetBoolSetting_ReturnValue) == 0x000011, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetBoolSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_2) == 0x000018, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_3) == 0x000020, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_4) == 0x000028, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_5) == 0x000030, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_6) == 0x000038, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_7) == 0x000040, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_8) == 0x000048, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_9) == 0x000050, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_10) == 0x000058, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_11) == 0x000060, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue) == 0x000068, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue) == 0x00006C, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_12) == 0x000070, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_1) == 0x000078, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_1) == 0x00007C, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_13) == 0x000080, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_2) == 0x000088, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_2) == 0x00008C, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_14) == 0x000090, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_3) == 0x000098, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_3) == 0x00009C, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_15) == 0x0000A0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_16) == 0x0000A8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_4) == 0x0000B0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_4' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_4) == 0x0000B4, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_5) == 0x0000B8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_5' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_5) == 0x0000BC, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_17) == 0x0000C0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_6) == 0x0000C8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_6' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_6) == 0x0000CC, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetEngineSubsystem_ReturnValue_18) == 0x0000D0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetEngineSubsystem_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_bHasValue_7) == 0x0000D8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_bHasValue_7' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_GetFloatSetting_ReturnValue_7) == 0x0000DC, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_GetFloatSetting_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast) == 0x0000E0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_1) == 0x0000E4, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_2) == 0x0000E8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_3) == 0x0000EC, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_4) == 0x0000F0, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_FindTargetDistance_ImplicitCast) == 0x0000F8, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_FindTargetDistance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_5) == 0x000100, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast) == 0x000108, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_SecondsUntilAimLoose_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast) == 0x000110, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_AimAssistActorInterpolationSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, CallFunc_SetFloatSetting_Value_ImplicitCast_6) == 0x000118, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::CallFunc_SetFloatSetting_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_KeepInfluenceTime_ImplicitCast) == 0x000120, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_KeepInfluenceTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast) == 0x000128, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_DisconnectedFromTargetDecreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast) == 0x000130, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_NoStickInputDecreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_InitializeDevModeDefaultValues, K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast) == 0x000138, "Member 'B_AimAssistComponent_C_InitializeDevModeDefaultValues::K2Node_VariableSet_StickInputIncreaseInfluenceSpeed_ImplicitCast' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.IsCurrentAimTargetVisible
// 0x0160 (0x0160 - 0x0000)
struct B_AimAssistComponent_C_IsCurrentAimTargetVisible final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0050(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0060(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_IsCurrentAimTargetVisible) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_IsCurrentAimTargetVisible");
static_assert(sizeof(B_AimAssistComponent_C_IsCurrentAimTargetVisible) == 0x000160, "Wrong size on B_AimAssistComponent_C_IsCurrentAimTargetVisible");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, ReturnValue) == 0x000000, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, K2Node_MakeArray_Array) == 0x000020, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, K2Node_MakeArray_Array_1) == 0x000050, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000060, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000158, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsCurrentAimTargetVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000159, "Member 'B_AimAssistComponent_C_IsCurrentAimTargetVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.GetCurrentRayRotation
// 0x0038 (0x0038 - 0x0000)
struct B_AimAssistComponent_C_GetCurrentRayRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(B_AimAssistComponent_C_GetCurrentRayRotation) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_GetCurrentRayRotation");
static_assert(sizeof(B_AimAssistComponent_C_GetCurrentRayRotation) == 0x000038, "Wrong size on B_AimAssistComponent_C_GetCurrentRayRotation");
static_assert(offsetof(B_AimAssistComponent_C_GetCurrentRayRotation, ReturnValue) == 0x000000, "Member 'B_AimAssistComponent_C_GetCurrentRayRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_GetCurrentRayRotation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_AimAssistComponent_C_GetCurrentRayRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_GetCurrentRayRotation, CallFunc_GetControlRotation_ReturnValue) == 0x000020, "Member 'B_AimAssistComponent_C_GetCurrentRayRotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.AddControllerInput
// 0x0120 (0x0120 - 0x0000)
struct B_AimAssistComponent_C_AddControllerInput final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AxisValue;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsYawInput;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeprecatedInputPitchScale_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDeprecatedInputYawScale_ReturnValue;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_AddControllerInput) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_AddControllerInput");
static_assert(sizeof(B_AimAssistComponent_C_AddControllerInput) == 0x000120, "Wrong size on B_AimAssistComponent_C_AddControllerInput");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, Pawn) == 0x000000, "Member 'B_AimAssistComponent_C_AddControllerInput::Pawn' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, AxisValue) == 0x000008, "Member 'B_AimAssistComponent_C_AddControllerInput::AxisValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, IsYawInput) == 0x000010, "Member 'B_AimAssistComponent_C_AddControllerInput::IsYawInput' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000018, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetDeprecatedInputPitchScale_ReturnValue) == 0x000028, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetDeprecatedInputPitchScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetDeprecatedInputYawScale_ReturnValue) == 0x00002C, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetDeprecatedInputYawScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000030, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000038, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_MakeRotator_ReturnValue) == 0x000070, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Roll_1) == 0x000088, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Pitch_1) == 0x00008C, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_BreakRotator_Yaw_1) == 0x000090, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_MakeRotator_ReturnValue_1) == 0x0000A0, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000B8, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_FInterpTo_ReturnValue_1) == 0x0000C8, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0000D0, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_FInterpTo_ReturnValue_2) == 0x0000D8, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000E8, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x0000F0, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000F8, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000100, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000108, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000110, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x000114, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_AddControllerInput, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x000118, "Member 'B_AimAssistComponent_C_AddControllerInput::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.IsWitchActorMoving
// 0x0048 (0x0048 - 0x0000)
struct B_AimAssistComponent_C_IsWitchActorMoving final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorFromWitch_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetActorFromWitchAsPawn_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_IsWitchActorMoving) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_IsWitchActorMoving");
static_assert(sizeof(B_AimAssistComponent_C_IsWitchActorMoving) == 0x000048, "Wrong size on B_AimAssistComponent_C_IsWitchActorMoving");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, Actor) == 0x000000, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::Actor' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, ReturnValue) == 0x000008, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_IsActorFromWitch_ReturnValue) == 0x000009, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_IsActorFromWitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_GetActorFromWitchAsPawn_ReturnValue) == 0x000010, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_GetActorFromWitchAsPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Witch) == 0x000018, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000028, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Player_State) == 0x000038, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.TickFunction
// 0x09A0 (0x09A0 - 0x0000)
struct B_AimAssistComponent_C_TickFunction final
{
public:
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentRayRotation_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCurrentRayRotation_ReturnValue_1;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCurrentAimTargetVisible_ReturnValue;    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHunter_C>            K2Node_DynamicCast_AsIHunter;                      // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsConfused_ReturnValue;                // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AB[0x5];                                      // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasWitchInvisiblePowerup_ReturnValue;     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x02C0(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x0418(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0518(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0528(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0623(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x06E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0710(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit_1;       // 0x0728(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue_1;  // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0822(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0823(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82C[0x4];                                      // 0x082C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0898(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F8[0x8];                                      // 0x08F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0900(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasWitchInvisiblePowerup_ReturnValue_1;   // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_AimAssistActor_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWitchActorMoving_ReturnValue;           // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x097A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97B[0x5];                                      // 0x097B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_InterpSpeed_ImplicitCast;       // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_TickFunction) == 0x000010, "Wrong alignment on B_AimAssistComponent_C_TickFunction");
static_assert(sizeof(B_AimAssistComponent_C_TickFunction) == 0x0009A0, "Wrong size on B_AimAssistComponent_C_TickFunction");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000000, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetCameraLocation_ReturnValue) == 0x000008, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000020, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetCurrentRayRotation_ReturnValue) == 0x000038, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetCurrentRayRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000068, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000080, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetCurrentRayRotation_ReturnValue_1) == 0x0000B0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetCurrentRayRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x0000C8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000D0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0000E8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000100, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000118, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000130, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000148, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000160, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_SelectFloat_ReturnValue) == 0x000178, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_VSizeSquared_ReturnValue) == 0x000180, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000188, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_SelectFloat_ReturnValue_1) == 0x000190, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetPawn_ReturnValue) == 0x000198, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsCurrentAimTargetVisible_ReturnValue) == 0x0001A0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsCurrentAimTargetVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_DynamicCast_AsIHunter) == 0x0001A8, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_DynamicCast_AsIHunter' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_DynamicCast_bSuccess) == 0x0001B8, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Not_PreBool_ReturnValue) == 0x0001B9, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetIsConfused_ReturnValue) == 0x0001BA, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetIsConfused_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001BB, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetControlRotation_ReturnValue) == 0x0001C0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001D8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x0001F0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000208, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_FindLookAtRotation_ReturnValue) == 0x000210, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000228, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000230, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetControlRotation_ReturnValue_1) == 0x000238, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000250, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_RInterpTo_ReturnValue) == 0x000258, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_SelectFloat_ReturnValue_2) == 0x000278, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000280, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000288, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_FInterpTo_ReturnValue) == 0x000290, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsValid_ReturnValue) == 0x000298, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_DynamicCast_AsB_Player_State) == 0x0002A0, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_DynamicCast_bSuccess_1) == 0x0002A8, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A9, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsValid_ReturnValue_1) == 0x0002AA, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetOwner_ReturnValue) == 0x0002B0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_HasWitchInvisiblePowerup_ReturnValue) == 0x0002B8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_HasWitchInvisiblePowerup_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsValid_ReturnValue_2) == 0x0002B9, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0002C0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0003B8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsGamepadMode_ReturnValue) == 0x0003B9, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0003C0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0003C8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003D0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0003D8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0003E0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_VInterpTo_ReturnValue) == 0x0003F8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000410, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x000418, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000510, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_MakeArray_Array) == 0x000518, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000528, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000620, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsValid_ReturnValue_3) == 0x000621, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_bBlockingHit) == 0x000622, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_bInitialOverlap) == 0x000623, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Time) == 0x000624, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Distance) == 0x000628, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Location) == 0x000630, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ImpactPoint) == 0x000648, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Normal) == 0x000660, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ImpactNormal) == 0x000678, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_PhysMat) == 0x000690, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitActor) == 0x000698, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitComponent) == 0x0006A0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitBoneName) == 0x0006A8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_BoneName) == 0x0006B0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitItem) == 0x0006B8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ElementIndex) == 0x0006BC, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_FaceIndex) == 0x0006C0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_TraceStart) == 0x0006C8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_TraceEnd) == 0x0006E0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0006F8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000700, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsLocalController_ReturnValue) == 0x000708, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, K2Node_MakeArray_Array_1) == 0x000710, "Member 'B_AimAssistComponent_C_TickFunction::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BooleanAND_ReturnValue) == 0x000720, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_LineTraceSingleForObjects_OutHit_1) == 0x000728, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_LineTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_LineTraceSingleForObjects_ReturnValue_1) == 0x000820, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_LineTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BooleanAND_ReturnValue_1) == 0x000821, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000822, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000823, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Time_1) == 0x000824, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Distance_1) == 0x000828, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Location_1) == 0x000830, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000848, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_Normal_1) == 0x000860, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000878, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_PhysMat_1) == 0x000890, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitActor_1) == 0x000898, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitComponent_1) == 0x0008A0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitBoneName_1) == 0x0008A8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_BoneName_1) == 0x0008B0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_HitItem_1) == 0x0008B8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_ElementIndex_1) == 0x0008BC, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_FaceIndex_1) == 0x0008C0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_TraceStart_1) == 0x0008C8, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BreakHitResult_TraceEnd_1) == 0x0008E0, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_MakeTransform_ReturnValue) == 0x000900, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000960, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_HasWitchInvisiblePowerup_ReturnValue_1) == 0x000968, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_HasWitchInvisiblePowerup_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_FinishSpawningActor_ReturnValue) == 0x000970, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Not_PreBool_ReturnValue_1) == 0x000978, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_IsWitchActorMoving_ReturnValue) == 0x000979, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_IsWitchActorMoving_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_BooleanAND_ReturnValue_2) == 0x00097A, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000980, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000988, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x00098C, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_VInterpTo_InterpSpeed_ImplicitCast) == 0x000990, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_VInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_TickFunction, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000994, "Member 'B_AimAssistComponent_C_TickFunction::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_AimAssistComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on B_AimAssistComponent_C_ReceiveTick");
static_assert(sizeof(B_AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong size on B_AimAssistComponent_C_ReceiveTick");
static_assert(offsetof(B_AimAssistComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_AimAssistComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.ExecuteUbergraph_B_AimAssistComponent
// 0x0050 (0x0050 - 0x0000)
struct B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName SettingName, float Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDeveloperModeSubsystem*                CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent");
static_assert(sizeof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent) == 0x000050, "Wrong size on B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, EntryPoint) == 0x000000, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000018, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_AsB_Player_Controller) == 0x000030, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

