#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AimAssistComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_AimAssistComponent.B_AimAssistComponent_C.HasAimInput
// 0x0028 (0x0028 - 0x0000)
struct B_AimAssistComponent_C_HasAimInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D86[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_HasAimInput) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_HasAimInput");
static_assert(sizeof(B_AimAssistComponent_C_HasAimInput) == 0x000028, "Wrong size on B_AimAssistComponent_C_HasAimInput");
static_assert(offsetof(B_AimAssistComponent_C_HasAimInput, ReturnValue) == 0x000000, "Member 'B_AimAssistComponent_C_HasAimInput::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_HasAimInput, CallFunc_GetControlRotation_ReturnValue) == 0x000008, "Member 'B_AimAssistComponent_C_HasAimInput::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_HasAimInput, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000020, "Member 'B_AimAssistComponent_C_HasAimInput::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.IsWitchActorMoving
// 0x0048 (0x0048 - 0x0000)
struct B_AimAssistComponent_C_IsWitchActorMoving final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActorFromWitch_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D87[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetActorFromWitchAsPawn_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D88[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D89[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_IsWitchActorMoving) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_IsWitchActorMoving");
static_assert(sizeof(B_AimAssistComponent_C_IsWitchActorMoving) == 0x000048, "Wrong size on B_AimAssistComponent_C_IsWitchActorMoving");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, Actor) == 0x000000, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::Actor' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, ReturnValue) == 0x000008, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_IsActorFromWitch_ReturnValue) == 0x000009, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_IsActorFromWitch_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_GetActorFromWitchAsPawn_ReturnValue) == 0x000010, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_GetActorFromWitchAsPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Witch) == 0x000018, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000028, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_AsB_Player_State) == 0x000038, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_IsWitchActorMoving, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_AimAssistComponent_C_IsWitchActorMoving::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_AimAssistComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on B_AimAssistComponent_C_ReceiveTick");
static_assert(sizeof(B_AimAssistComponent_C_ReceiveTick) == 0x000004, "Wrong size on B_AimAssistComponent_C_ReceiveTick");
static_assert(offsetof(B_AimAssistComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_AimAssistComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_AimAssistComponent.B_AimAssistComponent_C.ExecuteUbergraph_B_AimAssistComponent
// 0x0030 (0x0030 - 0x0000)
struct B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D8A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D8B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent) == 0x000008, "Wrong alignment on B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent");
static_assert(sizeof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent) == 0x000030, "Wrong size on B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, EntryPoint) == 0x000000, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_AsB_Player_State) == 0x000008, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_AsB_Player_Controller) == 0x000020, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_AimAssistComponent_C_ExecuteUbergraph_B_AimAssistComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

