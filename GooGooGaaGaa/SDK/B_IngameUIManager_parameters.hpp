#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_IngameUIManager

#include "Basic.hpp"

#include "ETeamID_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "EResultType_structs.hpp"
#include "ESkillCategory_structs.hpp"
#include "E_RememberAfterSaveLayoutAction_structs.hpp"
#include "SOpenWidgetInfo_structs.hpp"
#include "EChatType_structs.hpp"
#include "UMG_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function B_IngameUIManager.B_IngameUIManager_C.ChatTextCommitted
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ChatTextCommitted final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ChatTextCommitted) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ChatTextCommitted");
static_assert(sizeof(B_IngameUIManager_C_ChatTextCommitted) == 0x000020, "Wrong size on B_IngameUIManager_C_ChatTextCommitted");
static_assert(offsetof(B_IngameUIManager_C_ChatTextCommitted, Text) == 0x000000, "Member 'B_IngameUIManager_C_ChatTextCommitted::Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ChatTextCommitted, CommitMethod) == 0x000018, "Member 'B_IngameUIManager_C_ChatTextCommitted::CommitMethod' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ChatTextCommittedTeam
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ChatTextCommittedTeam final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ChatTextCommittedTeam) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ChatTextCommittedTeam");
static_assert(sizeof(B_IngameUIManager_C_ChatTextCommittedTeam) == 0x000020, "Wrong size on B_IngameUIManager_C_ChatTextCommittedTeam");
static_assert(offsetof(B_IngameUIManager_C_ChatTextCommittedTeam, Text) == 0x000000, "Member 'B_IngameUIManager_C_ChatTextCommittedTeam::Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ChatTextCommittedTeam, CommitMethod) == 0x000018, "Member 'B_IngameUIManager_C_ChatTextCommittedTeam::CommitMethod' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ClearChatAndGameMessage
// 0x0002 (0x0002 - 0x0000)
struct B_IngameUIManager_C_ClearChatAndGameMessage final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ClearChatAndGameMessage) == 0x000001, "Wrong alignment on B_IngameUIManager_C_ClearChatAndGameMessage");
static_assert(sizeof(B_IngameUIManager_C_ClearChatAndGameMessage) == 0x000002, "Wrong size on B_IngameUIManager_C_ClearChatAndGameMessage");
static_assert(offsetof(B_IngameUIManager_C_ClearChatAndGameMessage, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_ClearChatAndGameMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ClearChatAndGameMessage, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_IngameUIManager_C_ClearChatAndGameMessage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.CloseAllScreens
// 0x0038 (0x0038 - 0x0000)
struct B_IngameUIManager_C_CloseAllScreens final
{
public:
	bool                                          RefreshFocus;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D66[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D67[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_CloseAllScreens) == 0x000008, "Wrong alignment on B_IngameUIManager_C_CloseAllScreens");
static_assert(sizeof(B_IngameUIManager_C_CloseAllScreens) == 0x000038, "Wrong size on B_IngameUIManager_C_CloseAllScreens");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, RefreshFocus) == 0x000000, "Member 'B_IngameUIManager_C_CloseAllScreens::RefreshFocus' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_IngameUIManager_C_CloseAllScreens::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_IngameUIManager_C_CloseAllScreens::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_IngameUIManager_C_CloseAllScreens::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_CloseAllScreens::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_IngameUIManager_C_CloseAllScreens::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseAllScreens, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'B_IngameUIManager_C_CloseAllScreens::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.CloseScreen
// 0x0050 (0x0050 - 0x0000)
struct B_IngameUIManager_C_CloseScreen final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D68[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_CloseScreen) == 0x000008, "Wrong alignment on B_IngameUIManager_C_CloseScreen");
static_assert(sizeof(B_IngameUIManager_C_CloseScreen) == 0x000050, "Wrong size on B_IngameUIManager_C_CloseScreen");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_CloseScreen::UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_IngameUIManager_C_CloseScreen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_IngameUIManager_C_CloseScreen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000020, "Member 'B_IngameUIManager_C_CloseScreen::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_IngameUIManager_C_CloseScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00004D, "Member 'B_IngameUIManager_C_CloseScreen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.CloseScreens
// 0x0030 (0x0030 - 0x0000)
struct B_IngameUIManager_C_CloseScreens final
{
public:
	TArray<class UUserWidget*>                    UserWidgets;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_CloseScreens) == 0x000008, "Wrong alignment on B_IngameUIManager_C_CloseScreens");
static_assert(sizeof(B_IngameUIManager_C_CloseScreens) == 0x000030, "Wrong size on B_IngameUIManager_C_CloseScreens");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, UserWidgets) == 0x000000, "Member 'B_IngameUIManager_C_CloseScreens::UserWidgets' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_CloseScreens::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, Temp_int_Array_Index_Variable) == 0x000014, "Member 'B_IngameUIManager_C_CloseScreens::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_IngameUIManager_C_CloseScreens::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_IngameUIManager_C_CloseScreens::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_CloseScreens::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseScreens, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'B_IngameUIManager_C_CloseScreens::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.CloseSubordinateMenu
// 0x0030 (0x0030 - 0x0000)
struct B_IngameUIManager_C_CloseSubordinateMenu final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_CloseSubordinateMenu) == 0x000008, "Wrong alignment on B_IngameUIManager_C_CloseSubordinateMenu");
static_assert(sizeof(B_IngameUIManager_C_CloseSubordinateMenu) == 0x000030, "Wrong size on B_IngameUIManager_C_CloseSubordinateMenu");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_CloseSubordinateMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'B_IngameUIManager_C_CloseSubordinateMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.DevGrantAllItemsCommand
// 0x0030 (0x0030 - 0x0000)
struct B_IngameUIManager_C_DevGrantAllItemsCommand final
{
public:
	TArray<int32>                                 CallFunc_GetUnownedItemIDs_Unowned_Item_IDs;       // 0x0000(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6D[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_DevGrantAllItemsCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_DevGrantAllItemsCommand");
static_assert(sizeof(B_IngameUIManager_C_DevGrantAllItemsCommand) == 0x000030, "Wrong size on B_IngameUIManager_C_DevGrantAllItemsCommand");
static_assert(offsetof(B_IngameUIManager_C_DevGrantAllItemsCommand, CallFunc_GetUnownedItemIDs_Unowned_Item_IDs) == 0x000000, "Member 'B_IngameUIManager_C_DevGrantAllItemsCommand::CallFunc_GetUnownedItemIDs_Unowned_Item_IDs' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_DevGrantAllItemsCommand, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_DevGrantAllItemsCommand::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_DevGrantAllItemsCommand, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'B_IngameUIManager_C_DevGrantAllItemsCommand::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ExecuteUbergraph_B_IngameUIManager
// 0x0060 (0x0060 - 0x0000)
struct B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_CustomEvent_CommitMethod;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x0028(0x0018)(ConstParm)
	ETextCommit                                   K2Node_CustomEvent_CommitMethod_1;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D70[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager");
static_assert(sizeof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager) == 0x000060, "Wrong size on B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, EntryPoint) == 0x000000, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_CustomEvent_Text) == 0x000008, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_CustomEvent_CommitMethod) == 0x000020, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_CustomEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_CustomEvent_Text_1) == 0x000028, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_CustomEvent_Text_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_CustomEvent_CommitMethod_1) == 0x000040, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_CustomEvent_CommitMethod_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_Event_InGameInstance) == 0x000048, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_Event_InGameInstance' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000050, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'B_IngameUIManager_C_ExecuteUbergraph_B_IngameUIManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.FocusChatForTyping
// 0x0001 (0x0001 - 0x0000)
struct B_IngameUIManager_C_FocusChatForTyping final
{
public:
	EChatType                                     ChatType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_FocusChatForTyping) == 0x000001, "Wrong alignment on B_IngameUIManager_C_FocusChatForTyping");
static_assert(sizeof(B_IngameUIManager_C_FocusChatForTyping) == 0x000001, "Wrong size on B_IngameUIManager_C_FocusChatForTyping");
static_assert(offsetof(B_IngameUIManager_C_FocusChatForTyping, ChatType) == 0x000000, "Member 'B_IngameUIManager_C_FocusChatForTyping::ChatType' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GetFirstLocalPlayerController
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_GetFirstLocalPlayerController final
{
public:
	class AB_PlayerController_C*                  PlayerController;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_GetFirstLocalPlayerController) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GetFirstLocalPlayerController");
static_assert(sizeof(B_IngameUIManager_C_GetFirstLocalPlayerController) == 0x000020, "Wrong size on B_IngameUIManager_C_GetFirstLocalPlayerController");
static_assert(offsetof(B_IngameUIManager_C_GetFirstLocalPlayerController, PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_GetFirstLocalPlayerController::PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetFirstLocalPlayerController, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_GetFirstLocalPlayerController::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetFirstLocalPlayerController, K2Node_DynamicCast_AsB_Player_Controller) == 0x000010, "Member 'B_IngameUIManager_C_GetFirstLocalPlayerController::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetFirstLocalPlayerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_GetFirstLocalPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GetKeyBinding
// 0x00C8 (0x00C8 - 0x0000)
struct B_IngameUIManager_C_GetKeyBinding final
{
public:
	class FName                                   TypeChatMessage;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0028(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_GetKeyBinding) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GetKeyBinding");
static_assert(sizeof(B_IngameUIManager_C_GetKeyBinding) == 0x0000C8, "Wrong size on B_IngameUIManager_C_GetKeyBinding");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, TypeChatMessage) == 0x000000, "Member 'B_IngameUIManager_C_GetKeyBinding::TypeChatMessage' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, Text) == 0x000008, "Member 'B_IngameUIManager_C_GetKeyBinding::Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'B_IngameUIManager_C_GetKeyBinding::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000028, "Member 'B_IngameUIManager_C_GetKeyBinding::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000038, "Member 'B_IngameUIManager_C_GetKeyBinding::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'B_IngameUIManager_C_GetKeyBinding::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, K2Node_MakeArray_Array) == 0x0000A0, "Member 'B_IngameUIManager_C_GetKeyBinding::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetKeyBinding, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'B_IngameUIManager_C_GetKeyBinding::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GetOwningPlayer
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_GetOwningPlayer final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_GetOwningPlayer) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GetOwningPlayer");
static_assert(sizeof(B_IngameUIManager_C_GetOwningPlayer) == 0x000010, "Wrong size on B_IngameUIManager_C_GetOwningPlayer");
static_assert(offsetof(B_IngameUIManager_C_GetOwningPlayer, PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_GetOwningPlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GetOwningPlayer, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000008, "Member 'B_IngameUIManager_C_GetOwningPlayer::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GrantDropExpCommand
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_GrantDropExpCommand final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D71[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_GrantDropExpCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GrantDropExpCommand");
static_assert(sizeof(B_IngameUIManager_C_GrantDropExpCommand) == 0x000028, "Wrong size on B_IngameUIManager_C_GrantDropExpCommand");
static_assert(offsetof(B_IngameUIManager_C_GrantDropExpCommand, Exp) == 0x000000, "Member 'B_IngameUIManager_C_GrantDropExpCommand::Exp' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantDropExpCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000008, "Member 'B_IngameUIManager_C_GrantDropExpCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantDropExpCommand, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_GrantDropExpCommand::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GrantItemCommand
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_GrantItemCommand final
{
public:
	int32                                         Item;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D72[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_GrantItemCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GrantItemCommand");
static_assert(sizeof(B_IngameUIManager_C_GrantItemCommand) == 0x000028, "Wrong size on B_IngameUIManager_C_GrantItemCommand");
static_assert(offsetof(B_IngameUIManager_C_GrantItemCommand, Item) == 0x000000, "Member 'B_IngameUIManager_C_GrantItemCommand::Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantItemCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000008, "Member 'B_IngameUIManager_C_GrantItemCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantItemCommand, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_GrantItemCommand::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.GrantPrestigeExpCommand
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_GrantPrestigeExpCommand final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D73[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_GrantPrestigeExpCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_GrantPrestigeExpCommand");
static_assert(sizeof(B_IngameUIManager_C_GrantPrestigeExpCommand) == 0x000028, "Wrong size on B_IngameUIManager_C_GrantPrestigeExpCommand");
static_assert(offsetof(B_IngameUIManager_C_GrantPrestigeExpCommand, Exp) == 0x000000, "Member 'B_IngameUIManager_C_GrantPrestigeExpCommand::Exp' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantPrestigeExpCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000008, "Member 'B_IngameUIManager_C_GrantPrestigeExpCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_GrantPrestigeExpCommand, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_GrantPrestigeExpCommand::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.HandleChatCommand
// 0x00F8 (0x00F8 - 0x0000)
struct B_IngameUIManager_C_HandleChatCommand final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EChatType                                     ChatType;                                          // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D74[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D75[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D76[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParseChatCommand_IsChatCommand;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D77[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00E0(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_HandleChatCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_HandleChatCommand");
static_assert(sizeof(B_IngameUIManager_C_HandleChatCommand) == 0x0000F8, "Wrong size on B_IngameUIManager_C_HandleChatCommand");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, Text) == 0x000000, "Member 'B_IngameUIManager_C_HandleChatCommand::Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CommitMethod) == 0x000018, "Member 'B_IngameUIManager_C_HandleChatCommand::CommitMethod' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, ChatType) == 0x000019, "Member 'B_IngameUIManager_C_HandleChatCommand::ChatType' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000020, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_FCeil_ReturnValue) == 0x00002C, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'B_IngameUIManager_C_HandleChatCommand::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, K2Node_MakeArray_Array) == 0x000090, "Member 'B_IngameUIManager_C_HandleChatCommand::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_ParseChatCommand_IsChatCommand) == 0x0000C8, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_ParseChatCommand_IsChatCommand' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_TextIsEmpty_ReturnValue) == 0x0000C9, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, K2Node_MakeArray_Array_1) == 0x0000D0, "Member 'B_IngameUIManager_C_HandleChatCommand::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_HandleChatCommand, CallFunc_Format_ReturnValue_1) == 0x0000E0, "Member 'B_IngameUIManager_C_HandleChatCommand::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.HidePlayerList
// 0x0001 (0x0001 - 0x0000)
struct B_IngameUIManager_C_HidePlayerList final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_HidePlayerList) == 0x000001, "Wrong alignment on B_IngameUIManager_C_HidePlayerList");
static_assert(sizeof(B_IngameUIManager_C_HidePlayerList) == 0x000001, "Wrong size on B_IngameUIManager_C_HidePlayerList");
static_assert(offsetof(B_IngameUIManager_C_HidePlayerList, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_HidePlayerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.IncreaseLevelCommand
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_IncreaseLevelCommand final
{
public:
	int32                                         CallFunc_GetExp_Exp;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExp_MaxExp;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GrantExp_LevelUps;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_IncreaseLevelCommand) == 0x000004, "Wrong alignment on B_IngameUIManager_C_IncreaseLevelCommand");
static_assert(sizeof(B_IngameUIManager_C_IncreaseLevelCommand) == 0x000010, "Wrong size on B_IngameUIManager_C_IncreaseLevelCommand");
static_assert(offsetof(B_IngameUIManager_C_IncreaseLevelCommand, CallFunc_GetExp_Exp) == 0x000000, "Member 'B_IngameUIManager_C_IncreaseLevelCommand::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IncreaseLevelCommand, CallFunc_GetMaxExp_MaxExp) == 0x000004, "Member 'B_IngameUIManager_C_IncreaseLevelCommand::CallFunc_GetMaxExp_MaxExp' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IncreaseLevelCommand, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_IncreaseLevelCommand::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IncreaseLevelCommand, CallFunc_GrantExp_LevelUps) == 0x00000C, "Member 'B_IngameUIManager_C_IncreaseLevelCommand::CallFunc_GrantExp_LevelUps' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_Initialize) == 0x000008, "Wrong alignment on B_IngameUIManager_C_Initialize");
static_assert(sizeof(B_IngameUIManager_C_Initialize) == 0x000008, "Wrong size on B_IngameUIManager_C_Initialize");
static_assert(offsetof(B_IngameUIManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_IngameUIManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.IsUserInterfaceHidden
// 0x0001 (0x0001 - 0x0000)
struct B_IngameUIManager_C_IsUserInterfaceHidden final
{
public:
	bool                                          Param_UserInterfaceIsHidden;                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_IsUserInterfaceHidden) == 0x000001, "Wrong alignment on B_IngameUIManager_C_IsUserInterfaceHidden");
static_assert(sizeof(B_IngameUIManager_C_IsUserInterfaceHidden) == 0x000001, "Wrong size on B_IngameUIManager_C_IsUserInterfaceHidden");
static_assert(offsetof(B_IngameUIManager_C_IsUserInterfaceHidden, Param_UserInterfaceIsHidden) == 0x000000, "Member 'B_IngameUIManager_C_IsUserInterfaceHidden::Param_UserInterfaceIsHidden' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.IsWidgetAlreadyOpen
// 0x0048 (0x0048 - 0x0000)
struct B_IngameUIManager_C_IsWidgetAlreadyOpen final
{
public:
	class UClass*                                 WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAlreadyOpen;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D78[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D79[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_IsWidgetAlreadyOpen) == 0x000008, "Wrong alignment on B_IngameUIManager_C_IsWidgetAlreadyOpen");
static_assert(sizeof(B_IngameUIManager_C_IsWidgetAlreadyOpen) == 0x000048, "Wrong size on B_IngameUIManager_C_IsWidgetAlreadyOpen");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, WidgetClass) == 0x000000, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::WidgetClass' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, IsAlreadyOpen) == 0x000008, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::IsAlreadyOpen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_IsWidgetAlreadyOpen, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000040, "Member 'B_IngameUIManager_C_IsWidgetAlreadyOpen::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.JumpAllWitchesCommand
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_JumpAllWitchesCommand final
{
public:
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_JumpAllWitchesCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_JumpAllWitchesCommand");
static_assert(sizeof(B_IngameUIManager_C_JumpAllWitchesCommand) == 0x000008, "Wrong size on B_IngameUIManager_C_JumpAllWitchesCommand");
static_assert(offsetof(B_IngameUIManager_C_JumpAllWitchesCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_JumpAllWitchesCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.OpenScreen
// 0x00A8 (0x00A8 - 0x0000)
struct B_IngameUIManager_C_OpenScreen final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFocus;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZOrder;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            WidgetToOpen;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7D[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7E[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSOpenWidgetInfo                       K2Node_MakeStruct_SOpenWidgetInfo;                 // 0x0058(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0080(0x0020)(NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_OpenScreen) == 0x000008, "Wrong alignment on B_IngameUIManager_C_OpenScreen");
static_assert(sizeof(B_IngameUIManager_C_OpenScreen) == 0x0000A8, "Wrong size on B_IngameUIManager_C_OpenScreen");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_OpenScreen::UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, HasFocus) == 0x000008, "Member 'B_IngameUIManager_C_OpenScreen::HasFocus' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, ZOrder) == 0x00000C, "Member 'B_IngameUIManager_C_OpenScreen::ZOrder' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, WidgetToOpen) == 0x000010, "Member 'B_IngameUIManager_C_OpenScreen::WidgetToOpen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000020, "Member 'B_IngameUIManager_C_OpenScreen::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_IngameUIManager_C_OpenScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen) == 0x000038, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_IsWidgetAlreadyOpen_IsAlreadyOpen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_Conv_BoolToInt_ReturnValue) == 0x00004C, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_GetVisibility_ReturnValue) == 0x000054, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, K2Node_MakeStruct_SOpenWidgetInfo) == 0x000058, "Member 'B_IngameUIManager_C_OpenScreen::K2Node_MakeStruct_SOpenWidgetInfo' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, K2Node_MakeStruct_Margin) == 0x000070, "Member 'B_IngameUIManager_C_OpenScreen::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, K2Node_MakeStruct_Anchors) == 0x000080, "Member 'B_IngameUIManager_C_OpenScreen::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenScreen, CallFunc_AddChild_ReturnValue) == 0x0000A0, "Member 'B_IngameUIManager_C_OpenScreen::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.OpenSubordinateMenu
// 0x0030 (0x0030 - 0x0000)
struct B_IngameUIManager_C_OpenSubordinateMenu final
{
public:
	bool                                          HideCurrentlyOpenedWidgets;                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D7F[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_OpenSubordinateMenu) == 0x000008, "Wrong alignment on B_IngameUIManager_C_OpenSubordinateMenu");
static_assert(sizeof(B_IngameUIManager_C_OpenSubordinateMenu) == 0x000030, "Wrong size on B_IngameUIManager_C_OpenSubordinateMenu");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, HideCurrentlyOpenedWidgets) == 0x000000, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::HideCurrentlyOpenedWidgets' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_OpenSubordinateMenu, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'B_IngameUIManager_C_OpenSubordinateMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ParseChatCommand
// 0x0088 (0x0088 - 0x0000)
struct B_IngameUIManager_C_ParseChatCommand final
{
public:
	class FString                                 ChatMessage;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsChatCommand;                                     // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D80[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Parameter;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Command;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D81[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D82[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D83[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ParseChatCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ParseChatCommand");
static_assert(sizeof(B_IngameUIManager_C_ParseChatCommand) == 0x000088, "Wrong size on B_IngameUIManager_C_ParseChatCommand");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, ChatMessage) == 0x000000, "Member 'B_IngameUIManager_C_ParseChatCommand::ChatMessage' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, IsChatCommand) == 0x000010, "Member 'B_IngameUIManager_C_ParseChatCommand::IsChatCommand' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, Parameter) == 0x000018, "Member 'B_IngameUIManager_C_ParseChatCommand::Parameter' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, Command) == 0x000028, "Member 'B_IngameUIManager_C_ParseChatCommand::Command' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_StartsWith_ReturnValue) == 0x000038, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Conv_StringToInt_ReturnValue) == 0x00003C, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000040, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x000044, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x000048, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, K2Node_SwitchString_CmpSuccess) == 0x00004C, "Member 'B_IngameUIManager_C_ParseChatCommand::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Split_LeftS) == 0x000050, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Split_RightS) == 0x000060, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_Split_ReturnValue) == 0x000070, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ParseChatCommand, CallFunc_SelectString_ReturnValue) == 0x000078, "Member 'B_IngameUIManager_C_ParseChatCommand::CallFunc_SelectString_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.PickRandomTip
// 0x0458 (0x0458 - 0x0000)
struct B_IngameUIManager_C_PickRandomTip final
{
public:
	class FText                                   CallFunc_GetKeyBinding_Text;                       // 0x0000(0x0018)()
	class FText                                   CallFunc_GetKeyBinding_Text_1;                     // 0x0018(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0030(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x00D0(0x0018)()
	class FText                                   CallFunc_GetKeyBinding_Text_2;                     // 0x00E8(0x0018)()
	class FName                                   CallFunc_StringTableIdAndKeyFromText_OutTableId;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_StringTableIdAndKeyFromText_OutKey;       // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StringTableIdAndKeyFromText_ReturnValue;  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D84[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0050)(HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetKeysFromStringTable_ReturnValue;       // 0x0170(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetKeyBinding_Text_3;                     // 0x0180(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D85[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D86[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetKeyBinding_Text_4;                     // 0x01F8(0x0018)()
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0220(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_FindTextInLocalizationTable_OutText;      // 0x0270(0x0018)()
	bool                                          CallFunc_FindTextInLocalizationTable_ReturnValue;  // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D87[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetKeyBinding_Text_5;                     // 0x0290(0x0018)()
	class FText                                   CallFunc_GetKeyBinding_Text_6;                     // 0x02A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x02C0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0310(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetKeyBinding_Text_7;                     // 0x0360(0x0018)()
	class FText                                   CallFunc_GetKeyBinding_Text_8;                     // 0x0378(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0390(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_8;            // 0x03E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0430(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0440(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_PickRandomTip) == 0x000008, "Wrong alignment on B_IngameUIManager_C_PickRandomTip");
static_assert(sizeof(B_IngameUIManager_C_PickRandomTip) == 0x000458, "Wrong size on B_IngameUIManager_C_PickRandomTip");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text) == 0x000000, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_1) == 0x000018, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData) == 0x000030, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_MakeLiteralText_ReturnValue) == 0x0000D0, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_2) == 0x0000E8, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_StringTableIdAndKeyFromText_OutTableId) == 0x000100, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_StringTableIdAndKeyFromText_OutTableId' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_StringTableIdAndKeyFromText_OutKey) == 0x000108, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_StringTableIdAndKeyFromText_OutKey' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_StringTableIdAndKeyFromText_ReturnValue) == 0x000118, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_StringTableIdAndKeyFromText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeysFromStringTable_ReturnValue) == 0x000170, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeysFromStringTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_3) == 0x000180, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_3' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_RandomInteger_ReturnValue) == 0x0001F0, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_4) == 0x0001F8, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_4' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_Array_Get_Item) == 0x000210, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_4) == 0x000220, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_FindTextInLocalizationTable_OutText) == 0x000270, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_FindTextInLocalizationTable_OutText' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_FindTextInLocalizationTable_ReturnValue) == 0x000288, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_FindTextInLocalizationTable_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_5) == 0x000290, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_5' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_6) == 0x0002A8, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_6' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_5) == 0x0002C0, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_6) == 0x000310, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_7) == 0x000360, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_7' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_GetKeyBinding_Text_8) == 0x000378, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_GetKeyBinding_Text_8' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_7) == 0x000390, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeStruct_FormatArgumentData_8) == 0x0003E0, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeStruct_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, K2Node_MakeArray_Array) == 0x000430, "Member 'B_IngameUIManager_C_PickRandomTip::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_PickRandomTip, CallFunc_Format_ReturnValue) == 0x000440, "Member 'B_IngameUIManager_C_PickRandomTip::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RefreshFocus
// 0x0060 (0x0060 - 0x0000)
struct B_IngameUIManager_C_RefreshFocus final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D88[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      FirstPlayerController;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D89[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0030(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetInputMode_ReturnValue;                 // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8B[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RefreshFocus) == 0x000008, "Wrong alignment on B_IngameUIManager_C_RefreshFocus");
static_assert(sizeof(B_IngameUIManager_C_RefreshFocus) == 0x000060, "Wrong size on B_IngameUIManager_C_RefreshFocus");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, Force) == 0x000000, "Member 'B_IngameUIManager_C_RefreshFocus::Force' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, FirstPlayerController) == 0x000008, "Member 'B_IngameUIManager_C_RefreshFocus::FirstPlayerController' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_ClassIsChildOf_ReturnValue) == 0x00001C, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'B_IngameUIManager_C_RefreshFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'B_IngameUIManager_C_RefreshFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_IsValid_ReturnValue_2) == 0x00004A, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_GetInputMode_ReturnValue) == 0x00004B, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_GetInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000050, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocus, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'B_IngameUIManager_C_RefreshFocus::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RefreshFocusWhenChatNotOpen
// 0x0002 (0x0002 - 0x0000)
struct B_IngameUIManager_C_RefreshFocusWhenChatNotOpen final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RefreshFocusWhenChatNotOpen) == 0x000001, "Wrong alignment on B_IngameUIManager_C_RefreshFocusWhenChatNotOpen");
static_assert(sizeof(B_IngameUIManager_C_RefreshFocusWhenChatNotOpen) == 0x000002, "Wrong size on B_IngameUIManager_C_RefreshFocusWhenChatNotOpen");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocusWhenChatNotOpen, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_RefreshFocusWhenChatNotOpen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshFocusWhenChatNotOpen, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'B_IngameUIManager_C_RefreshFocusWhenChatNotOpen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RefreshHUDVisibility
// 0x0005 (0x0005 - 0x0000)
struct B_IngameUIManager_C_RefreshHUDVisibility final
{
public:
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RefreshHUDVisibility) == 0x000001, "Wrong alignment on B_IngameUIManager_C_RefreshHUDVisibility");
static_assert(sizeof(B_IngameUIManager_C_RefreshHUDVisibility) == 0x000005, "Wrong size on B_IngameUIManager_C_RefreshHUDVisibility");
static_assert(offsetof(B_IngameUIManager_C_RefreshHUDVisibility, CallFunc_IsInViewport_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_RefreshHUDVisibility::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshHUDVisibility, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x000001, "Member 'B_IngameUIManager_C_RefreshHUDVisibility::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshHUDVisibility, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'B_IngameUIManager_C_RefreshHUDVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshHUDVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'B_IngameUIManager_C_RefreshHUDVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshHUDVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'B_IngameUIManager_C_RefreshHUDVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RefreshVisibility
// 0x0078 (0x0078 - 0x0000)
struct B_IngameUIManager_C_RefreshVisibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden_1; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8E[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D90[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_PlayerName_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWB_EarlyVersionWatermark_C*>    CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWB_PlayerName_C*                       CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_EarlyVersionWatermark_C*            CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D91[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D92[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RefreshVisibility) == 0x000008, "Wrong alignment on B_IngameUIManager_C_RefreshVisibility");
static_assert(sizeof(B_IngameUIManager_C_RefreshVisibility) == 0x000078, "Wrong size on B_IngameUIManager_C_RefreshVisibility");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_byte_Variable) == 0x000000, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_bool_Variable) == 0x000002, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_byte_Variable_2) == 0x000003, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_byte_Variable_3) == 0x000004, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_bool_Variable_1) == 0x00000C, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x00001C, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden_1) == 0x00001D, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'B_IngameUIManager_C_RefreshVisibility::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, K2Node_Select_Default) == 0x000024, "Member 'B_IngameUIManager_C_RefreshVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000030, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000040, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, K2Node_Select_Default_1) == 0x000069, "Member 'B_IngameUIManager_C_RefreshVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Array_Length_ReturnValue_1) == 0x00006C, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshVisibility, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'B_IngameUIManager_C_RefreshVisibility::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RefreshWidgetsActive
// 0x0038 (0x0038 - 0x0000)
struct B_IngameUIManager_C_RefreshWidgetsActive final
{
public:
	class UUserWidget*                            WidgetWithFocus;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSOpenWidgetInfo                       CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RefreshWidgetsActive) == 0x000008, "Wrong alignment on B_IngameUIManager_C_RefreshWidgetsActive");
static_assert(sizeof(B_IngameUIManager_C_RefreshWidgetsActive) == 0x000038, "Wrong size on B_IngameUIManager_C_RefreshWidgetsActive");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, WidgetWithFocus) == 0x000000, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::WidgetWithFocus' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RefreshWidgetsActive, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'B_IngameUIManager_C_RefreshWidgetsActive::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.RunCommand
// 0x0018 (0x0018 - 0x0000)
struct B_IngameUIManager_C_RunCommand final
{
public:
	class FString                                 ConsoleCommand;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_RunCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_RunCommand");
static_assert(sizeof(B_IngameUIManager_C_RunCommand) == 0x000018, "Wrong size on B_IngameUIManager_C_RunCommand");
static_assert(offsetof(B_IngameUIManager_C_RunCommand, ConsoleCommand) == 0x000000, "Member 'B_IngameUIManager_C_RunCommand::ConsoleCommand' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_RunCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000010, "Member 'B_IngameUIManager_C_RunCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.Set Focused Widget Input Mode
// 0x0018 (0x0018 - 0x0000)
struct B_IngameUIManager_C_Set_Focused_Widget_Input_Mode final
{
public:
	class UWidget*                                InWidgetToFocus;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldInputModeBeGameAndUI_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_Set_Focused_Widget_Input_Mode) == 0x000008, "Wrong alignment on B_IngameUIManager_C_Set_Focused_Widget_Input_Mode");
static_assert(sizeof(B_IngameUIManager_C_Set_Focused_Widget_Input_Mode) == 0x000018, "Wrong size on B_IngameUIManager_C_Set_Focused_Widget_Input_Mode");
static_assert(offsetof(B_IngameUIManager_C_Set_Focused_Widget_Input_Mode, InWidgetToFocus) == 0x000000, "Member 'B_IngameUIManager_C_Set_Focused_Widget_Input_Mode::InWidgetToFocus' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_Set_Focused_Widget_Input_Mode, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_Set_Focused_Widget_Input_Mode::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_Set_Focused_Widget_Input_Mode, CallFunc_ShouldInputModeBeGameAndUI_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_Set_Focused_Widget_Input_Mode::CallFunc_ShouldInputModeBeGameAndUI_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.SetWorkshopIdCommand
// 0x0040 (0x0040 - 0x0000)
struct B_IngameUIManager_C_SetWorkshopIdCommand final
{
public:
	class FString                                 WorkshopId;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameMode_C*                  K2Node_DynamicCast_AsB_Creative_Game_Mode;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_SetWorkshopIdCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_SetWorkshopIdCommand");
static_assert(sizeof(B_IngameUIManager_C_SetWorkshopIdCommand) == 0x000040, "Wrong size on B_IngameUIManager_C_SetWorkshopIdCommand");
static_assert(offsetof(B_IngameUIManager_C_SetWorkshopIdCommand, WorkshopId) == 0x000000, "Member 'B_IngameUIManager_C_SetWorkshopIdCommand::WorkshopId' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_SetWorkshopIdCommand, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_SetWorkshopIdCommand::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_SetWorkshopIdCommand, CallFunc_GetGameMode_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_SetWorkshopIdCommand::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_SetWorkshopIdCommand, K2Node_DynamicCast_AsB_Creative_Game_Mode) == 0x000030, "Member 'B_IngameUIManager_C_SetWorkshopIdCommand::K2Node_DynamicCast_AsB_Creative_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_SetWorkshopIdCommand, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_IngameUIManager_C_SetWorkshopIdCommand::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShouldInputModeBeGameAndUI
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShouldInputModeBeGameAndUI final
{
public:
	const class UObject*                          Object;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D93[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShouldInputModeBeGameAndUI");
static_assert(sizeof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI) == 0x000020, "Wrong size on B_IngameUIManager_C_ShouldInputModeBeGameAndUI");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, Object) == 0x000000, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::Object' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, CallFunc_IsGamepadMode_ReturnValue) == 0x000009, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000019, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShouldInputModeBeGameAndUI, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'B_IngameUIManager_C_ShouldInputModeBeGameAndUI::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowChat
// 0x0040 (0x0040 - 0x0000)
struct B_IngameUIManager_C_ShowChat final
{
public:
	TDelegate<void(class FText& Text, ETextCommit CommitMethod)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FText& Text, ETextCommit CommitMethod)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D94[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_Chat_C*                             K2Node_DynamicCast_AsWB_Chat;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowChat) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowChat");
static_assert(sizeof(B_IngameUIManager_C_ShowChat) == 0x000040, "Wrong size on B_IngameUIManager_C_ShowChat");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'B_IngameUIManager_C_ShowChat::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'B_IngameUIManager_C_ShowChat::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, CallFunc_IsInViewport_ReturnValue) == 0x000020, "Member 'B_IngameUIManager_C_ShowChat::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_IngameUIManager_C_ShowChat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, CallFunc_CreateWidget_UserWidget) == 0x000028, "Member 'B_IngameUIManager_C_ShowChat::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, K2Node_DynamicCast_AsWB_Chat) == 0x000030, "Member 'B_IngameUIManager_C_ShowChat::K2Node_DynamicCast_AsWB_Chat' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_IngameUIManager_C_ShowChat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowChat, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'B_IngameUIManager_C_ShowChat::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowCustomization
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowCustomization final
{
public:
	ETeamID                                       SelectedTeam;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenViaWardrobe;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D95[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerCustomization_C*              K2Node_DynamicCast_AsWB_Player_Customization;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowCustomization) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowCustomization");
static_assert(sizeof(B_IngameUIManager_C_ShowCustomization) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowCustomization");
static_assert(offsetof(B_IngameUIManager_C_ShowCustomization, SelectedTeam) == 0x000000, "Member 'B_IngameUIManager_C_ShowCustomization::SelectedTeam' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowCustomization, OpenViaWardrobe) == 0x000001, "Member 'B_IngameUIManager_C_ShowCustomization::OpenViaWardrobe' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowCustomization, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowCustomization::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowCustomization, K2Node_DynamicCast_AsWB_Player_Customization) == 0x000010, "Member 'B_IngameUIManager_C_ShowCustomization::K2Node_DynamicCast_AsWB_Player_Customization' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowCustomization, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowCustomization::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowDebugMedalCommand
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowDebugMedalCommand final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D96[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0008(0x0018)()
};
static_assert(alignof(B_IngameUIManager_C_ShowDebugMedalCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowDebugMedalCommand");
static_assert(sizeof(B_IngameUIManager_C_ShowDebugMedalCommand) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowDebugMedalCommand");
static_assert(offsetof(B_IngameUIManager_C_ShowDebugMedalCommand, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_ShowDebugMedalCommand::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowDebugMedalCommand, CallFunc_Conv_BoolToText_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowDebugMedalCommand::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowDropExpCommand
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowDropExpCommand final
{
public:
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowDropExpCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowDropExpCommand");
static_assert(sizeof(B_IngameUIManager_C_ShowDropExpCommand) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowDropExpCommand");
static_assert(offsetof(B_IngameUIManager_C_ShowDropExpCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_ShowDropExpCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowFriendsInvite
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowFriendsInvite final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowFriendsInvite) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowFriendsInvite");
static_assert(sizeof(B_IngameUIManager_C_ShowFriendsInvite) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowFriendsInvite");
static_assert(offsetof(B_IngameUIManager_C_ShowFriendsInvite, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowFriendsInvite::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowGameMessages
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_ShowGameMessages final
{
public:
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D97[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D98[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_GameMessages_C*                     K2Node_DynamicCast_AsWB_Game_Messages;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowGameMessages) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowGameMessages");
static_assert(sizeof(B_IngameUIManager_C_ShowGameMessages) == 0x000028, "Wrong size on B_IngameUIManager_C_ShowGameMessages");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, CallFunc_IsInViewport_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_ShowGameMessages::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowGameMessages::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_ShowGameMessages::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, K2Node_DynamicCast_AsWB_Game_Messages) == 0x000018, "Member 'B_IngameUIManager_C_ShowGameMessages::K2Node_DynamicCast_AsWB_Game_Messages' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_IngameUIManager_C_ShowGameMessages::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowGameMessages, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'B_IngameUIManager_C_ShowGameMessages::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowHelp
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowHelp final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowHelp) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowHelp");
static_assert(sizeof(B_IngameUIManager_C_ShowHelp) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowHelp");
static_assert(offsetof(B_IngameUIManager_C_ShowHelp, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowHelp::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHelp, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowHelp::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowHUD
// 0x0070 (0x0070 - 0x0000)
struct B_IngameUIManager_C_ShowHUD final
{
public:
	class UClass*                                 Temp_class_Variable;                               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D99[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9C[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowHUD) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowHUD");
static_assert(sizeof(B_IngameUIManager_C_ShowHUD) == 0x000070, "Wrong size on B_IngameUIManager_C_ShowHUD");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, Temp_class_Variable) == 0x000000, "Member 'B_IngameUIManager_C_ShowHUD::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, Temp_bool_Variable) == 0x000008, "Member 'B_IngameUIManager_C_ShowHUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, Temp_class_Variable_1) == 0x000010, "Member 'B_IngameUIManager_C_ShowHUD::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, Temp_class_Variable_2) == 0x000018, "Member 'B_IngameUIManager_C_ShowHUD::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_GetGameState_ReturnValue_1) == 0x000030, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000038, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_GetObjectClass_ReturnValue_1) == 0x000040, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000048, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, K2Node_Select_Default) == 0x000050, "Member 'B_IngameUIManager_C_ShowHUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, Temp_bool_Variable_1) == 0x000059, "Member 'B_IngameUIManager_C_ShowHUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, K2Node_Select_Default_1) == 0x000060, "Member 'B_IngameUIManager_C_ShowHUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowHUD, CallFunc_CreateWidget_UserWidget) == 0x000068, "Member 'B_IngameUIManager_C_ShowHUD::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowKickPlayerVote
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowKickPlayerVote final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9D[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KickPlayerVote_C*                   K2Node_DynamicCast_AsWB_Kick_Player_Vote;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowKickPlayerVote) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowKickPlayerVote");
static_assert(sizeof(B_IngameUIManager_C_ShowKickPlayerVote) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowKickPlayerVote");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, CallFunc_IsInViewport_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, K2Node_DynamicCast_AsWB_Kick_Player_Vote) == 0x000010, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::K2Node_DynamicCast_AsWB_Kick_Player_Vote' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickPlayerVote, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'B_IngameUIManager_C_ShowKickPlayerVote::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowKickReason
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowKickReason final
{
public:
	class APlayerState*                           PlayerToKick;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_KickReason_C*                       K2Node_DynamicCast_AsWB_Kick_Reason;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9E[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowKickReason) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowKickReason");
static_assert(sizeof(B_IngameUIManager_C_ShowKickReason) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowKickReason");
static_assert(offsetof(B_IngameUIManager_C_ShowKickReason, PlayerToKick) == 0x000000, "Member 'B_IngameUIManager_C_ShowKickReason::PlayerToKick' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickReason, K2Node_DynamicCast_AsWB_Kick_Reason) == 0x000008, "Member 'B_IngameUIManager_C_ShowKickReason::K2Node_DynamicCast_AsWB_Kick_Reason' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickReason, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_IngameUIManager_C_ShowKickReason::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickReason, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_IngameUIManager_C_ShowKickReason::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowKickReason, CallFunc_CreateWidget_UserWidget) == 0x000018, "Member 'B_IngameUIManager_C_ShowKickReason::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowLayoutList
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowLayoutList final
{
public:
	bool                                          SaveMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_RememberAfterSaveLayoutAction               RememberAfterSaveAction;                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SaveLoadLayout_C*                   K2Node_DynamicCast_AsWB_Save_Load_Layout;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowLayoutList) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowLayoutList");
static_assert(sizeof(B_IngameUIManager_C_ShowLayoutList) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowLayoutList");
static_assert(offsetof(B_IngameUIManager_C_ShowLayoutList, SaveMode) == 0x000000, "Member 'B_IngameUIManager_C_ShowLayoutList::SaveMode' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowLayoutList, RememberAfterSaveAction) == 0x000001, "Member 'B_IngameUIManager_C_ShowLayoutList::RememberAfterSaveAction' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowLayoutList, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowLayoutList::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowLayoutList, K2Node_DynamicCast_AsWB_Save_Load_Layout) == 0x000010, "Member 'B_IngameUIManager_C_ShowLayoutList::K2Node_DynamicCast_AsWB_Save_Load_Layout' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowLayoutList, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowLayoutList::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowMapVote
// 0x0018 (0x0018 - 0x0000)
struct B_IngameUIManager_C_ShowMapVote final
{
public:
	class UWB_MapVoteScreen_C*                    K2Node_DynamicCast_AsWB_Map_Vote_Screen;           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA0[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowMapVote) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowMapVote");
static_assert(sizeof(B_IngameUIManager_C_ShowMapVote) == 0x000018, "Wrong size on B_IngameUIManager_C_ShowMapVote");
static_assert(offsetof(B_IngameUIManager_C_ShowMapVote, K2Node_DynamicCast_AsWB_Map_Vote_Screen) == 0x000000, "Member 'B_IngameUIManager_C_ShowMapVote::K2Node_DynamicCast_AsWB_Map_Vote_Screen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMapVote, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'B_IngameUIManager_C_ShowMapVote::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMapVote, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'B_IngameUIManager_C_ShowMapVote::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMapVote, CallFunc_CreateWidget_UserWidget) == 0x000010, "Member 'B_IngameUIManager_C_ShowMapVote::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowMedals
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowMedals final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowMedals) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowMedals");
static_assert(sizeof(B_IngameUIManager_C_ShowMedals) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowMedals");
static_assert(offsetof(B_IngameUIManager_C_ShowMedals, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowMedals::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowMenu
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_ShowMenu final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget_1;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowMenu) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowMenu");
static_assert(sizeof(B_IngameUIManager_C_ShowMenu) == 0x000028, "Wrong size on B_IngameUIManager_C_ShowMenu");
static_assert(offsetof(B_IngameUIManager_C_ShowMenu, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowMenu::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMenu, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowMenu::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMenu, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_ShowMenu::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMenu, CallFunc_CreateWidget_UserWidget_1) == 0x000018, "Member 'B_IngameUIManager_C_ShowMenu::CallFunc_CreateWidget_UserWidget_1' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMenu, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'B_IngameUIManager_C_ShowMenu::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowMutePlayer final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowMutePlayer) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowMutePlayer");
static_assert(sizeof(B_IngameUIManager_C_ShowMutePlayer) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowMutePlayer");
static_assert(offsetof(B_IngameUIManager_C_ShowMutePlayer, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_ShowMutePlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowMutePlayer, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowMutePlayer::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowObjectiveResult
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowObjectiveResult final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowObjectiveResult) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowObjectiveResult");
static_assert(sizeof(B_IngameUIManager_C_ShowObjectiveResult) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowObjectiveResult");
static_assert(offsetof(B_IngameUIManager_C_ShowObjectiveResult, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowObjectiveResult::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowObjectiveResult, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowObjectiveResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowPlayerList
// 0x0030 (0x0030 - 0x0000)
struct B_IngameUIManager_C_ShowPlayerList final
{
public:
	bool                                          StopAction;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget_1;                // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowPlayerList) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowPlayerList");
static_assert(sizeof(B_IngameUIManager_C_ShowPlayerList) == 0x000030, "Wrong size on B_IngameUIManager_C_ShowPlayerList");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, StopAction) == 0x000000, "Member 'B_IngameUIManager_C_ShowPlayerList::StopAction' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowPlayerList::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_IngameUIManager_C_ShowPlayerList::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000018, "Member 'B_IngameUIManager_C_ShowPlayerList::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_IngameUIManager_C_ShowPlayerList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowPlayerList, CallFunc_CreateWidget_UserWidget_1) == 0x000028, "Member 'B_IngameUIManager_C_ShowPlayerList::CallFunc_CreateWidget_UserWidget_1' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowPrestigeExpCommand
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowPrestigeExpCommand final
{
public:
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowPrestigeExpCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowPrestigeExpCommand");
static_assert(sizeof(B_IngameUIManager_C_ShowPrestigeExpCommand) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowPrestigeExpCommand");
static_assert(offsetof(B_IngameUIManager_C_ShowPrestigeExpCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_ShowPrestigeExpCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowPropCollection
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowPropCollection final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowPropCollection) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowPropCollection");
static_assert(sizeof(B_IngameUIManager_C_ShowPropCollection) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowPropCollection");
static_assert(offsetof(B_IngameUIManager_C_ShowPropCollection, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowPropCollection::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowQuestionDialog
// 0x0058 (0x0058 - 0x0000)
struct B_IngameUIManager_C_ShowQuestionDialog final
{
public:
	class FText                                   Title;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Question;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          OkButton;                                          // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          YesButton;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoButton;                                          // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CancelButton;                                      // 0x0033(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA4[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_QuestionDialog_C*                   QuestionDialog;                                    // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_QuestionDialog_C*                   K2Node_DynamicCast_AsWB_Question_Dialog;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowQuestionDialog) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowQuestionDialog");
static_assert(sizeof(B_IngameUIManager_C_ShowQuestionDialog) == 0x000058, "Wrong size on B_IngameUIManager_C_ShowQuestionDialog");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, Title) == 0x000000, "Member 'B_IngameUIManager_C_ShowQuestionDialog::Title' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, Question) == 0x000018, "Member 'B_IngameUIManager_C_ShowQuestionDialog::Question' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, OkButton) == 0x000030, "Member 'B_IngameUIManager_C_ShowQuestionDialog::OkButton' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, YesButton) == 0x000031, "Member 'B_IngameUIManager_C_ShowQuestionDialog::YesButton' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, NoButton) == 0x000032, "Member 'B_IngameUIManager_C_ShowQuestionDialog::NoButton' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, CancelButton) == 0x000033, "Member 'B_IngameUIManager_C_ShowQuestionDialog::CancelButton' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, QuestionDialog) == 0x000038, "Member 'B_IngameUIManager_C_ShowQuestionDialog::QuestionDialog' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, CallFunc_CreateWidget_UserWidget) == 0x000040, "Member 'B_IngameUIManager_C_ShowQuestionDialog::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, K2Node_DynamicCast_AsWB_Question_Dialog) == 0x000048, "Member 'B_IngameUIManager_C_ShowQuestionDialog::K2Node_DynamicCast_AsWB_Question_Dialog' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowQuestionDialog, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'B_IngameUIManager_C_ShowQuestionDialog::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowRandomSelection
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowRandomSelection final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowRandomSelection) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowRandomSelection");
static_assert(sizeof(B_IngameUIManager_C_ShowRandomSelection) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowRandomSelection");
static_assert(offsetof(B_IngameUIManager_C_ShowRandomSelection, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowRandomSelection::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowReportReason
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_ShowReportReason final
{
public:
	class APlayerState*                           PlayerToReport;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_ReportReason_C*                     K2Node_DynamicCast_AsWB_Report_Reason;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA5[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowReportReason) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowReportReason");
static_assert(sizeof(B_IngameUIManager_C_ShowReportReason) == 0x000028, "Wrong size on B_IngameUIManager_C_ShowReportReason");
static_assert(offsetof(B_IngameUIManager_C_ShowReportReason, PlayerToReport) == 0x000000, "Member 'B_IngameUIManager_C_ShowReportReason::PlayerToReport' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowReportReason, K2Node_DynamicCast_AsWB_Report_Reason) == 0x000008, "Member 'B_IngameUIManager_C_ShowReportReason::K2Node_DynamicCast_AsWB_Report_Reason' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowReportReason, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_IngameUIManager_C_ShowReportReason::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowReportReason, CallFunc_CreateWidget_UserWidget) == 0x000018, "Member 'B_IngameUIManager_C_ShowReportReason::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowReportReason, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'B_IngameUIManager_C_ShowReportReason::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowResult
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowResult final
{
public:
	EResultType                                   ResultType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_ResultScreen_C*                     K2Node_DynamicCast_AsWB_Result_Screen;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowResult) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowResult");
static_assert(sizeof(B_IngameUIManager_C_ShowResult) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowResult");
static_assert(offsetof(B_IngameUIManager_C_ShowResult, ResultType) == 0x000000, "Member 'B_IngameUIManager_C_ShowResult::ResultType' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowResult, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowResult::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowResult, K2Node_DynamicCast_AsWB_Result_Screen) == 0x000010, "Member 'B_IngameUIManager_C_ShowResult::K2Node_DynamicCast_AsWB_Result_Screen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowResult, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowRewards
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowRewards final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowRewards) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowRewards");
static_assert(sizeof(B_IngameUIManager_C_ShowRewards) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowRewards");
static_assert(offsetof(B_IngameUIManager_C_ShowRewards, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowRewards::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowServerInfo
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowServerInfo final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowServerInfo) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowServerInfo");
static_assert(sizeof(B_IngameUIManager_C_ShowServerInfo) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowServerInfo");
static_assert(offsetof(B_IngameUIManager_C_ShowServerInfo, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowServerInfo::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowServerInfo, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowServerInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowServerInfoCommand
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowServerInfoCommand final
{
public:
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowServerInfoCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowServerInfoCommand");
static_assert(sizeof(B_IngameUIManager_C_ShowServerInfoCommand) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowServerInfoCommand");
static_assert(offsetof(B_IngameUIManager_C_ShowServerInfoCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000000, "Member 'B_IngameUIManager_C_ShowServerInfoCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowSkillListPopup
// 0x0028 (0x0028 - 0x0000)
struct B_IngameUIManager_C_ShowSkillListPopup final
{
public:
	ETeamID                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                SkillCategory;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA7[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_SkillSelectionBlock_C*              SkillSelectionBlock;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SkillListPopup_C*                   K2Node_DynamicCast_AsWB_Skill_List_Popup;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA8[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowSkillListPopup) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowSkillListPopup");
static_assert(sizeof(B_IngameUIManager_C_ShowSkillListPopup) == 0x000028, "Wrong size on B_IngameUIManager_C_ShowSkillListPopup");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, Team) == 0x000000, "Member 'B_IngameUIManager_C_ShowSkillListPopup::Team' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, SkillCategory) == 0x000001, "Member 'B_IngameUIManager_C_ShowSkillListPopup::SkillCategory' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, SkillSelectionBlock) == 0x000008, "Member 'B_IngameUIManager_C_ShowSkillListPopup::SkillSelectionBlock' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, K2Node_DynamicCast_AsWB_Skill_List_Popup) == 0x000010, "Member 'B_IngameUIManager_C_ShowSkillListPopup::K2Node_DynamicCast_AsWB_Skill_List_Popup' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowSkillListPopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkillListPopup, CallFunc_CreateWidget_UserWidget) == 0x000020, "Member 'B_IngameUIManager_C_ShowSkillListPopup::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowSkinConfigListPopup
// 0x0020 (0x0020 - 0x0000)
struct B_IngameUIManager_C_ShowSkinConfigListPopup final
{
public:
	class UWB_IngameSkinConfigMenu_C*             Parent;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_SkinConfigPopup_C*                  K2Node_DynamicCast_AsWB_Skin_Config_Popup;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DA9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowSkinConfigListPopup) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowSkinConfigListPopup");
static_assert(sizeof(B_IngameUIManager_C_ShowSkinConfigListPopup) == 0x000020, "Wrong size on B_IngameUIManager_C_ShowSkinConfigListPopup");
static_assert(offsetof(B_IngameUIManager_C_ShowSkinConfigListPopup, Parent) == 0x000000, "Member 'B_IngameUIManager_C_ShowSkinConfigListPopup::Parent' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkinConfigListPopup, K2Node_DynamicCast_AsWB_Skin_Config_Popup) == 0x000008, "Member 'B_IngameUIManager_C_ShowSkinConfigListPopup::K2Node_DynamicCast_AsWB_Skin_Config_Popup' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkinConfigListPopup, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_IngameUIManager_C_ShowSkinConfigListPopup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowSkinConfigListPopup, CallFunc_CreateWidget_UserWidget) == 0x000018, "Member 'B_IngameUIManager_C_ShowSkinConfigListPopup::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowTeamSelection
// 0x0038 (0x0038 - 0x0000)
struct B_IngameUIManager_C_ShowTeamSelection final
{
public:
	class UClass*                                 SelectionScreenClass;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowTeamSelection) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowTeamSelection");
static_assert(sizeof(B_IngameUIManager_C_ShowTeamSelection) == 0x000038, "Wrong size on B_IngameUIManager_C_ShowTeamSelection");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, SelectionScreenClass) == 0x000000, "Member 'B_IngameUIManager_C_ShowTeamSelection::SelectionScreenClass' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowTeamSelection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'B_IngameUIManager_C_ShowTeamSelection::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_IngameUIManager_C_ShowTeamSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, CallFunc_CreateWidget_UserWidget) == 0x000020, "Member 'B_IngameUIManager_C_ShowTeamSelection::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000028, "Member 'B_IngameUIManager_C_ShowTeamSelection::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelection, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_IngameUIManager_C_ShowTeamSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowTeamSelectionObjective
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowTeamSelectionObjective final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowTeamSelectionObjective) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowTeamSelectionObjective");
static_assert(sizeof(B_IngameUIManager_C_ShowTeamSelectionObjective) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowTeamSelectionObjective");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelectionObjective, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowTeamSelectionObjective::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelectionObjective, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowTeamSelectionObjective::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowTeamSelectionObjectiveCoop
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop");
static_assert(sizeof(B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop::CallFunc_CreateWidget_UserWidget' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_IngameUIManager_C_ShowTeamSelectionObjectiveCoop::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowTournamentScore
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowTournamentScore final
{
public:
	class UUserWidget*                            TournamentScreen;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowTournamentScore) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowTournamentScore");
static_assert(sizeof(B_IngameUIManager_C_ShowTournamentScore) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowTournamentScore");
static_assert(offsetof(B_IngameUIManager_C_ShowTournamentScore, TournamentScreen) == 0x000000, "Member 'B_IngameUIManager_C_ShowTournamentScore::TournamentScreen' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowTournamentScore, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowTournamentScore::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowUploadLayout
// 0x0008 (0x0008 - 0x0000)
struct B_IngameUIManager_C_ShowUploadLayout final
{
public:
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowUploadLayout) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowUploadLayout");
static_assert(sizeof(B_IngameUIManager_C_ShowUploadLayout) == 0x000008, "Wrong size on B_IngameUIManager_C_ShowUploadLayout");
static_assert(offsetof(B_IngameUIManager_C_ShowUploadLayout, CallFunc_CreateWidget_UserWidget) == 0x000000, "Member 'B_IngameUIManager_C_ShowUploadLayout::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ShowVoteKick
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ShowVoteKick final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_CreateWidget_UserWidget;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ShowVoteKick) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ShowVoteKick");
static_assert(sizeof(B_IngameUIManager_C_ShowVoteKick) == 0x000010, "Wrong size on B_IngameUIManager_C_ShowVoteKick");
static_assert(offsetof(B_IngameUIManager_C_ShowVoteKick, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_IngameUIManager_C_ShowVoteKick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ShowVoteKick, CallFunc_CreateWidget_UserWidget) == 0x000008, "Member 'B_IngameUIManager_C_ShowVoteKick::CallFunc_CreateWidget_UserWidget' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.ToggleWitchJiggleCommand
// 0x0010 (0x0010 - 0x0000)
struct B_IngameUIManager_C_ToggleWitchJiggleCommand final
{
public:
	int32                                         Force;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DAC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_ToggleWitchJiggleCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_ToggleWitchJiggleCommand");
static_assert(sizeof(B_IngameUIManager_C_ToggleWitchJiggleCommand) == 0x000010, "Wrong size on B_IngameUIManager_C_ToggleWitchJiggleCommand");
static_assert(offsetof(B_IngameUIManager_C_ToggleWitchJiggleCommand, Force) == 0x000000, "Member 'B_IngameUIManager_C_ToggleWitchJiggleCommand::Force' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_ToggleWitchJiggleCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000008, "Member 'B_IngameUIManager_C_ToggleWitchJiggleCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

// Function B_IngameUIManager.B_IngameUIManager_C.TravelToMapCommand
// 0x0018 (0x0018 - 0x0000)
struct B_IngameUIManager_C_TravelToMapCommand final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_IngameUIManager_C_TravelToMapCommand) == 0x000008, "Wrong alignment on B_IngameUIManager_C_TravelToMapCommand");
static_assert(sizeof(B_IngameUIManager_C_TravelToMapCommand) == 0x000018, "Wrong size on B_IngameUIManager_C_TravelToMapCommand");
static_assert(offsetof(B_IngameUIManager_C_TravelToMapCommand, MapName) == 0x000000, "Member 'B_IngameUIManager_C_TravelToMapCommand::MapName' has a wrong offset!");
static_assert(offsetof(B_IngameUIManager_C_TravelToMapCommand, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000010, "Member 'B_IngameUIManager_C_TravelToMapCommand::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");

}

