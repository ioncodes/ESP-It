#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkinSelection

#include "Basic.hpp"

#include "PropWitchHuntModule_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SkinSelection.B_SkinSelection_C
// 0x0148 (0x0170 - 0x0028)
class UB_SkinSelection_C final : public USaveGame
{
public:
	struct FWitchSkin                             ActiveWitchSkin;                                   // 0x0028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FHunterSkin                            ActiveHunterSkin;                                  // 0x0050(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	int32                                         ActiveWitchSkinConfigNr;                           // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C0[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SelectedWitchUtilitySkill;                         // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedHunterUtilitySkill;                        // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedWitchMovementSkill;                        // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedHunterMovementSkill;                       // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedHunterObjectiveMovementSkill;              // 0x00D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedHunterObjectiveUtilitySkill;               // 0x00E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedWitchObjectiveMovementSkill;               // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SelectedWitchObjectiveUtilitySkill;                // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         ActiveHunterSkinConfigNr;                          // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C1[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWitchSkin>                     SavedWitchSkinConfigs;                             // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         SavedWitchImageOrder;                              // 0x0128(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FHunterSkin>                    SavedHunterSkinConfigs;                            // 0x0138(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         SavedHunterImageOrder;                             // 0x0148(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WantsRandomWitchSkin;                              // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsRandomHunterSkin;                             // 0x0159(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C2[0x6];                                     // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 PlayerIcon;                                        // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerIconItemDefId;                               // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsRandomWitchSkills;                            // 0x016C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WantsRandomHunterSkills;                           // 0x016D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetSelectedPlayerIcon(class UClass* IconClass, class UB_InventoryManager_C* InventoryManager);

	void GetSelectedPlayerIcon(class UClass** OutClass, int32* OutItemDefId) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SkinSelection_C">();
	}
	static class UB_SkinSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_SkinSelection_C>();
	}
};
static_assert(alignof(UB_SkinSelection_C) == 0x000008, "Wrong alignment on UB_SkinSelection_C");
static_assert(sizeof(UB_SkinSelection_C) == 0x000170, "Wrong size on UB_SkinSelection_C");
static_assert(offsetof(UB_SkinSelection_C, ActiveWitchSkin) == 0x000028, "Member 'UB_SkinSelection_C::ActiveWitchSkin' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, ActiveHunterSkin) == 0x000050, "Member 'UB_SkinSelection_C::ActiveHunterSkin' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, ActiveWitchSkinConfigNr) == 0x000088, "Member 'UB_SkinSelection_C::ActiveWitchSkinConfigNr' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedWitchUtilitySkill) == 0x000090, "Member 'UB_SkinSelection_C::SelectedWitchUtilitySkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedHunterUtilitySkill) == 0x0000A0, "Member 'UB_SkinSelection_C::SelectedHunterUtilitySkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedWitchMovementSkill) == 0x0000B0, "Member 'UB_SkinSelection_C::SelectedWitchMovementSkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedHunterMovementSkill) == 0x0000C0, "Member 'UB_SkinSelection_C::SelectedHunterMovementSkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedHunterObjectiveMovementSkill) == 0x0000D0, "Member 'UB_SkinSelection_C::SelectedHunterObjectiveMovementSkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedHunterObjectiveUtilitySkill) == 0x0000E0, "Member 'UB_SkinSelection_C::SelectedHunterObjectiveUtilitySkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedWitchObjectiveMovementSkill) == 0x0000F0, "Member 'UB_SkinSelection_C::SelectedWitchObjectiveMovementSkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SelectedWitchObjectiveUtilitySkill) == 0x000100, "Member 'UB_SkinSelection_C::SelectedWitchObjectiveUtilitySkill' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, ActiveHunterSkinConfigNr) == 0x000110, "Member 'UB_SkinSelection_C::ActiveHunterSkinConfigNr' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SavedWitchSkinConfigs) == 0x000118, "Member 'UB_SkinSelection_C::SavedWitchSkinConfigs' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SavedWitchImageOrder) == 0x000128, "Member 'UB_SkinSelection_C::SavedWitchImageOrder' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SavedHunterSkinConfigs) == 0x000138, "Member 'UB_SkinSelection_C::SavedHunterSkinConfigs' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, SavedHunterImageOrder) == 0x000148, "Member 'UB_SkinSelection_C::SavedHunterImageOrder' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, WantsRandomWitchSkin) == 0x000158, "Member 'UB_SkinSelection_C::WantsRandomWitchSkin' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, WantsRandomHunterSkin) == 0x000159, "Member 'UB_SkinSelection_C::WantsRandomHunterSkin' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, PlayerIcon) == 0x000160, "Member 'UB_SkinSelection_C::PlayerIcon' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, PlayerIconItemDefId) == 0x000168, "Member 'UB_SkinSelection_C::PlayerIconItemDefId' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, WantsRandomWitchSkills) == 0x00016C, "Member 'UB_SkinSelection_C::WantsRandomWitchSkills' has a wrong offset!");
static_assert(offsetof(UB_SkinSelection_C, WantsRandomHunterSkills) == 0x00016D, "Member 'UB_SkinSelection_C::WantsRandomHunterSkills' has a wrong offset!");

}

