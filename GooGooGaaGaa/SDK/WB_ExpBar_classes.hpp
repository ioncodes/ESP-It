#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ExpBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ExpBar.WB_ExpBar_C
// 0x0048 (0x0328 - 0x02E0)
class UWB_ExpBar_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             MaxLevelText;                                      // 0x02E8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_XPBar_C*                            XPBar;                                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAudioComponent*                        LoopSound;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentPitch;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          BaseExpGranted;                                    // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WinBonusExpGranted;                                // 0x0311(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InitializeExp;                                     // 0x0312(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313[0x5];                                      // 0x0313(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ExpProgressionCounter_C*             ExpProgressionCounter;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          CatchXPGranted;                                    // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPrestige;                                        // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastWitchXPGranted;                                // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WidgetIsHidden;                                    // 0x0323(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_WB_ExpBar(int32 EntryPoint);
	ESlateVisibility Get_MaxLevelText_Visibility_0();
	void GrantFinished(bool NoValueGranted);
	void SetupProgressionCounterEvents();
	void SetupVisibility();
	void StartGranting(const class FText& ValueName, int32 TotalAmount);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateCurrentValue();
	void UpdateSoundPitch();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ExpBar_C">();
	}
	static class UWB_ExpBar_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ExpBar_C>();
	}
};
static_assert(alignof(UWB_ExpBar_C) == 0x000008, "Wrong alignment on UWB_ExpBar_C");
static_assert(sizeof(UWB_ExpBar_C) == 0x000328, "Wrong size on UWB_ExpBar_C");
static_assert(offsetof(UWB_ExpBar_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_ExpBar_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, MaxLevelText) == 0x0002E8, "Member 'UWB_ExpBar_C::MaxLevelText' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, XPBar) == 0x0002F0, "Member 'UWB_ExpBar_C::XPBar' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, LoopSound) == 0x0002F8, "Member 'UWB_ExpBar_C::LoopSound' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, CurrentPitch) == 0x000300, "Member 'UWB_ExpBar_C::CurrentPitch' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, PlayerState) == 0x000308, "Member 'UWB_ExpBar_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, BaseExpGranted) == 0x000310, "Member 'UWB_ExpBar_C::BaseExpGranted' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, WinBonusExpGranted) == 0x000311, "Member 'UWB_ExpBar_C::WinBonusExpGranted' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, InitializeExp) == 0x000312, "Member 'UWB_ExpBar_C::InitializeExp' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, ExpProgressionCounter) == 0x000318, "Member 'UWB_ExpBar_C::ExpProgressionCounter' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, CatchXPGranted) == 0x000320, "Member 'UWB_ExpBar_C::CatchXPGranted' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, IsPrestige) == 0x000321, "Member 'UWB_ExpBar_C::IsPrestige' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, LastWitchXPGranted) == 0x000322, "Member 'UWB_ExpBar_C::LastWitchXPGranted' has a wrong offset!");
static_assert(offsetof(UWB_ExpBar_C, WidgetIsHidden) == 0x000323, "Member 'UWB_ExpBar_C::WidgetIsHidden' has a wrong offset!");

}

