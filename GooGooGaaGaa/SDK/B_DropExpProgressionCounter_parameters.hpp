#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DropExpProgressionCounter

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_DropExpProgressionCounter.B_DropExpProgressionCounter_C.ExecuteUbergraph_B_DropExpProgressionCounter
// 0x0004 (0x0004 - 0x0000)
struct B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter) == 0x000004, "Wrong alignment on B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter");
static_assert(sizeof(B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter) == 0x000004, "Wrong size on B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter");
static_assert(offsetof(B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter, EntryPoint) == 0x000000, "Member 'B_DropExpProgressionCounter_C_ExecuteUbergraph_B_DropExpProgressionCounter::EntryPoint' has a wrong offset!");

// Function B_DropExpProgressionCounter.B_DropExpProgressionCounter_C.GetCurrentPercentValue
// 0x0020 (0x0020 - 0x0000)
struct B_DropExpProgressionCounter_C_GetCurrentPercentValue final
{
public:
	double                                        Percent;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DropExpProgressionCounter_C_GetCurrentPercentValue) == 0x000008, "Wrong alignment on B_DropExpProgressionCounter_C_GetCurrentPercentValue");
static_assert(sizeof(B_DropExpProgressionCounter_C_GetCurrentPercentValue) == 0x000020, "Wrong size on B_DropExpProgressionCounter_C_GetCurrentPercentValue");
static_assert(offsetof(B_DropExpProgressionCounter_C_GetCurrentPercentValue, Percent) == 0x000000, "Member 'B_DropExpProgressionCounter_C_GetCurrentPercentValue::Percent' has a wrong offset!");
static_assert(offsetof(B_DropExpProgressionCounter_C_GetCurrentPercentValue, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'B_DropExpProgressionCounter_C_GetCurrentPercentValue::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DropExpProgressionCounter_C_GetCurrentPercentValue, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_DropExpProgressionCounter_C_GetCurrentPercentValue::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DropExpProgressionCounter_C_GetCurrentPercentValue, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'B_DropExpProgressionCounter_C_GetCurrentPercentValue::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function B_DropExpProgressionCounter.B_DropExpProgressionCounter_C.IsValueExceedingProgressionTarget
// 0x0018 (0x0018 - 0x0000)
struct B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget final
{
public:
	bool                                          ValueEceedsProgressionTarget;                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5059[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget) == 0x000008, "Wrong alignment on B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget");
static_assert(sizeof(B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget) == 0x000018, "Wrong size on B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget");
static_assert(offsetof(B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget, ValueEceedsProgressionTarget) == 0x000000, "Member 'B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget::ValueEceedsProgressionTarget' has a wrong offset!");
static_assert(offsetof(B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_DropExpProgressionCounter_C_IsValueExceedingProgressionTarget::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

