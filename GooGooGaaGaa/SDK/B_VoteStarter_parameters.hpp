#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_VoteStarter

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_VoteStarter.B_VoteStarter_C.ExecuteUbergraph_B_VoteStarter
// 0x0030 (0x0030 - 0x0000)
struct B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F13[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F14[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F15[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter) == 0x000008, "Wrong alignment on B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter");
static_assert(sizeof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter) == 0x000030, "Wrong size on B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, EntryPoint) == 0x000000, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000020, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'B_VoteStarter_C_ExecuteUbergraph_B_VoteStarter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_VoteStarter.B_VoteStarter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_VoteStarter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_VoteStarter_C_ReceiveTick) == 0x000004, "Wrong alignment on B_VoteStarter_C_ReceiveTick");
static_assert(sizeof(B_VoteStarter_C_ReceiveTick) == 0x000004, "Wrong size on B_VoteStarter_C_ReceiveTick");
static_assert(offsetof(B_VoteStarter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_VoteStarter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

