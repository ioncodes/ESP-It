#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TaskField

#include "Basic.hpp"

#include "B_TaskField_classes.hpp"
#include "B_TaskField_parameters.hpp"


namespace SDK
{

// Function B_TaskField.B_TaskField_C.InitializeTaskField
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_TaskField_C::InitializeTaskField()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "InitializeTaskField");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TaskField.B_TaskField_C.GetRotatedTransform
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       DummyTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       RotatedTransform                                       (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::GetRotatedTransform(const struct FTransform& DummyTransform, struct FTransform* RotatedTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "GetRotatedTransform");

	Params::B_TaskField_C_GetRotatedTransform Parms{};

	Parms.DummyTransform = std::move(DummyTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (RotatedTransform != nullptr)
		*RotatedTransform = std::move(Parms.RotatedTransform);
}


// Function B_TaskField.B_TaskField_C.UpdateFieldParameters
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_TaskField_C::UpdateFieldParameters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "UpdateFieldParameters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TaskField.B_TaskField_C.GetHeight
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Width_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Spawn_Height                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::GetHeight(int32 Width_Index, double* Spawn_Height)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "GetHeight");

	Params::B_TaskField_C_GetHeight Parms{};

	Parms.Width_Index = Width_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawn_Height != nullptr)
		*Spawn_Height = Parms.Spawn_Height;
}


// Function B_TaskField.B_TaskField_C.GetSpawnTransformByIndices
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   LengthIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WidthIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Spawn_Transform                                        (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::GetSpawnTransformByIndices(int32 LengthIndex, int32 WidthIndex, struct FTransform* Spawn_Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "GetSpawnTransformByIndices");

	Params::B_TaskField_C_GetSpawnTransformByIndices Parms{};

	Parms.LengthIndex = LengthIndex;
	Parms.WidthIndex = WidthIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Spawn_Transform != nullptr)
		*Spawn_Transform = std::move(Parms.Spawn_Transform);
}


// Function B_TaskField.B_TaskField_C.SpawnTile
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Tile_Transform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::SpawnTile(const struct FTransform& Tile_Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "SpawnTile");

	Params::B_TaskField_C_SpawnTile Parms{};

	Parms.Tile_Transform = std::move(Tile_Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TaskField.B_TaskField_C.SpawnDummy
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       DummyTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::SpawnDummy(const struct FTransform& DummyTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "SpawnDummy");

	Params::B_TaskField_C_SpawnDummy Parms{};

	Parms.DummyTransform = std::move(DummyTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TaskField.B_TaskField_C.ActOnSpawnTransform
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Spawn_Transform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsPossibleTargetIndex                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::ActOnSpawnTransform(const struct FTransform& Spawn_Transform, bool IsPossibleTargetIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "ActOnSpawnTransform");

	Params::B_TaskField_C_ActOnSpawnTransform Parms{};

	Parms.Spawn_Transform = std::move(Spawn_Transform);
	Parms.IsPossibleTargetIndex = IsPossibleTargetIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TaskField.B_TaskField_C.Get RandomTargetIndices
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<int32>                           Indices                                                (Parm, OutParm)

void AB_TaskField_C::Get_RandomTargetIndices(TArray<int32>* Indices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "Get RandomTargetIndices");

	Params::B_TaskField_C_Get_RandomTargetIndices Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Indices != nullptr)
		*Indices = std::move(Parms.Indices);
}


// Function B_TaskField.B_TaskField_C.InitializeByTag
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::InitializeByTag(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "InitializeByTag");

	Params::B_TaskField_C_InitializeByTag Parms{};

	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_TaskField.B_TaskField_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_TaskField_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TaskField.B_TaskField_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_TaskField_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_TaskField.B_TaskField_C.ExecuteUbergraph_B_TaskField
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_TaskField_C::ExecuteUbergraph_B_TaskField(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_TaskField_C", "ExecuteUbergraph_B_TaskField");

	Params::B_TaskField_C_ExecuteUbergraph_B_TaskField Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

