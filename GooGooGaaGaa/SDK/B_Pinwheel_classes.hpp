#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Pinwheel

#include "Basic.hpp"

#include "B_MultiStaticMeshProp_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Pinwheel.B_Pinwheel_C
// 0x0060 (0x0610 - 0x05B0)
class AB_Pinwheel_C : public AB_MultiStaticMeshProp_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Pinwheel_C;                       // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Wheel;                                             // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Velocity;                                          // 0x05C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WindVelocity;                                      // 0x05C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementVelocity;                                  // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindDirection;                                     // 0x05D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldPosition;                                       // 0x05F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdatePinWheelRotation(double DeltaTime);
	void InitializeWindForceDirection();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_B_Pinwheel(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Pinwheel_C">();
	}
	static class AB_Pinwheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Pinwheel_C>();
	}
};
static_assert(alignof(AB_Pinwheel_C) == 0x000010, "Wrong alignment on AB_Pinwheel_C");
static_assert(sizeof(AB_Pinwheel_C) == 0x000610, "Wrong size on AB_Pinwheel_C");
static_assert(offsetof(AB_Pinwheel_C, UberGraphFrame_B_Pinwheel_C) == 0x0005B0, "Member 'AB_Pinwheel_C::UberGraphFrame_B_Pinwheel_C' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, Wheel) == 0x0005B8, "Member 'AB_Pinwheel_C::Wheel' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, Velocity) == 0x0005C0, "Member 'AB_Pinwheel_C::Velocity' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, WindVelocity) == 0x0005C8, "Member 'AB_Pinwheel_C::WindVelocity' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, MovementVelocity) == 0x0005D0, "Member 'AB_Pinwheel_C::MovementVelocity' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, WindDirection) == 0x0005D8, "Member 'AB_Pinwheel_C::WindDirection' has a wrong offset!");
static_assert(offsetof(AB_Pinwheel_C, OldPosition) == 0x0005F0, "Member 'AB_Pinwheel_C::OldPosition' has a wrong offset!");

}

