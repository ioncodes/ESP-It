#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BasicCharacter

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_BasicCharacter.B_BasicCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(sizeof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(offsetof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(sizeof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0");
static_assert(offsetof(B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'B_BasicCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_79::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_90::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_14::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21
// 0x0004 (0x0004 - 0x0000)
struct B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21) == 0x000004, "Wrong alignment on B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21");
static_assert(sizeof(B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21) == 0x000004, "Wrong size on B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21");
static_assert(offsetof(B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21, AxisValue) == 0x000000, "Member 'B_BasicCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_21::AxisValue' has a wrong offset!");

// Function B_BasicCharacter.B_BasicCharacter_C.ExecuteUbergraph_B_BasicCharacter
// 0x01F8 (0x01F8 - 0x0000)
struct B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA6[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller_1;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_1; // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA8[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller_2;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA9[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller_3;        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_2; // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_3; // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EAA[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EAB[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EAC[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                   Temp_struct_Variable;                              // 0x00E8(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EAD[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0170(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EAE[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0190(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TempAxisValue_ImplicitCast;     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_TempAxisValue_ImplicitCast_1;   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1; // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter) == 0x000008, "Wrong alignment on B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter");
static_assert(sizeof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter) == 0x0001F8, "Wrong size on B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, EntryPoint) == 0x000000, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Player_Controller) == 0x000028, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue) == 0x000031, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetController_ReturnValue_1) == 0x000038, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetGameInstance_ReturnValue_1) == 0x000040, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Player_Controller_1) == 0x000048, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000058, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_1) == 0x000061, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetController_ReturnValue_2) == 0x000068, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetController_ReturnValue_3) == 0x000070, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Player_Controller_2) == 0x000078, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Player_Controller_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_AsB_Player_Controller_3) == 0x000088, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_AsB_Player_Controller_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_2) == 0x000091, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_3) == 0x000092, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_IsUsingPlayerControllerMovementInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue_5) == 0x000094, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue_4) == 0x000098, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00009C, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x00009D, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue_3) == 0x0000A0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue_2) == 0x0000A4, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x0000A8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_BreakRotator_Roll) == 0x0000C0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_BreakRotator_Pitch) == 0x0000C4, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_BreakRotator_Yaw) == 0x0000C8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_MakeRotator_ReturnValue) == 0x0000D0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, Temp_struct_Variable) == 0x0000E8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetRightVector_ReturnValue) == 0x000100, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x000118, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000130, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000138, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue_1) == 0x000140, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputAxisEvent_AxisValue) == 0x000144, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000148, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000160, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000169, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputActionEvent_Key) == 0x000170, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000188, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000189, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_InputActionEvent_Key_1) == 0x000190, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x0001B0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_VariableSet_TempAxisValue_ImplicitCast) == 0x0001B8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_VariableSet_TempAxisValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, K2Node_VariableSet_TempAxisValue_ImplicitCast_1) == 0x0001C0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::K2Node_VariableSet_TempAxisValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x0001C8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1) == 0x0001CC, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x0001D0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001D8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x0001E0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0001E8, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x0001F0, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x0001F4, "Member 'B_BasicCharacter_C_ExecuteUbergraph_B_BasicCharacter::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");

}

