#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Trading

#include "Basic.hpp"

#include "WB_Trading_classes.hpp"
#include "WB_Trading_parameters.hpp"


namespace SDK
{

// Function WB_Trading.WB_Trading_C.BndEvt__WB_Trading_Back_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_Trading_C::BndEvt__WB_Trading_Back_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "BndEvt__WB_Trading_Back_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.BndEvt__WB_Trading_CreateRequest_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_Trading_C::BndEvt__WB_Trading_CreateRequest_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "BndEvt__WB_Trading_CreateRequest_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.BndEvt__WB_Trading_PendingRequests_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_Trading_C::BndEvt__WB_Trading_PendingRequests_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "BndEvt__WB_Trading_PendingRequests_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.BndEvt__WB_Trading_TradeHistory_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_Trading_C::BndEvt__WB_Trading_TradeHistory_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "BndEvt__WB_Trading_TradeHistory_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.CheckNotify
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Trading_C::CheckNotify()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "CheckNotify");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_Trading_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.ExecuteUbergraph_WB_Trading
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::ExecuteUbergraph_WB_Trading(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "ExecuteUbergraph_WB_Trading");

	Params::WB_Trading_C_ExecuteUbergraph_WB_Trading Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Trading.WB_Trading_C.GetInitialFocusWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      InitialFocusWidget                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::GetInitialFocusWidget(class UUserWidget** InitialFocusWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "GetInitialFocusWidget");

	Params::WB_Trading_C_GetInitialFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InitialFocusWidget != nullptr)
		*InitialFocusWidget = Parms.InitialFocusWidget;
}


// Function WB_Trading.WB_Trading_C.HandleInventoryPublic
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPublic                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::HandleInventoryPublic(bool IsPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "HandleInventoryPublic");

	Params::WB_Trading_C_HandleInventoryPublic Parms{};

	Parms.IsPublic = IsPublic;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Trading.WB_Trading_C.HasIncomingTradeRequestsEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasIncomingTradeRequests                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::HasIncomingTradeRequestsEvent(bool HasIncomingTradeRequests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "HasIncomingTradeRequestsEvent");

	Params::WB_Trading_C_HasIncomingTradeRequestsEvent Parms{};

	Parms.HasIncomingTradeRequests = HasIncomingTradeRequests;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Trading.WB_Trading_C.IsInventoryPublic
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAccountSetting>          Settings                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    IsPublic                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::IsInventoryPublic(TArray<struct FAccountSetting>& Settings, bool* IsPublic)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "IsInventoryPublic");

	Params::WB_Trading_C_IsInventoryPublic Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);

	Settings = std::move(Parms.Settings);

	if (IsPublic != nullptr)
		*IsPublic = Parms.IsPublic;
}


// Function WB_Trading.WB_Trading_C.OnApply
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Trading_C::OnApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "OnApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.OnBack
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Trading_C::OnBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "OnBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.OnDialogAnswer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_QuestionAnswer                        Answer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Trading_C::OnDialogAnswer(E_QuestionAnswer Answer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "OnDialogAnswer");

	Params::WB_Trading_C_OnDialogAnswer Parms{};

	Parms.Answer = Answer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Trading.WB_Trading_C.OnReceiveAccountSettings
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FAccountSetting>          Settings                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWB_Trading_C::OnReceiveAccountSettings(const TArray<struct FAccountSetting>& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "OnReceiveAccountSettings");

	Params::WB_Trading_C_OnReceiveAccountSettings Parms{};

	Parms.Settings = std::move(Settings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Trading.WB_Trading_C.OnSpecialAction
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Trading_C::OnSpecialAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "OnSpecialAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Trading.WB_Trading_C.ShowInventoryPrivate
// (BlueprintCallable, BlueprintEvent)

void UWB_Trading_C::ShowInventoryPrivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Trading_C", "ShowInventoryPrivate");

	UObject::ProcessEvent(Func, nullptr);
}

}

