#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SeekGameMode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_JoinAsHunterStates_structs.hpp"
#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function B_SeekGameMode.B_SeekGameMode_C.GetRoundEndTimerUntilRestart
// 0x0048 (0x0048 - 0x0000)
struct B_SeekGameMode_C_GetRoundEndTimerUntilRestart final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MapVoteTimeNeeded;                                 // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart) == 0x000008, "Wrong alignment on B_SeekGameMode_C_GetRoundEndTimerUntilRestart");
static_assert(sizeof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart) == 0x000048, "Wrong size on B_SeekGameMode_C_GetRoundEndTimerUntilRestart");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, Seconds) == 0x000000, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::Seconds' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, MapVoteTimeNeeded) == 0x000004, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::MapVoteTimeNeeded' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, Temp_int_Variable) == 0x000010, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, CallFunc_GetGameInstance_ReturnValue_1) == 0x000028, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000030, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, Temp_int_Variable_1) == 0x00003C, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000041, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, Temp_bool_Variable) == 0x000042, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_GetRoundEndTimerUntilRestart, K2Node_Select_Default) == 0x000044, "Member 'B_SeekGameMode_C_GetRoundEndTimerUntilRestart::K2Node_Select_Default' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.HandleEndMatch
// 0x0002 (0x0002 - 0x0000)
struct B_SeekGameMode_C_HandleEndMatch final
{
public:
	ETeamID                                       WinnerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceRegardlessOfEnd;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_HandleEndMatch) == 0x000001, "Wrong alignment on B_SeekGameMode_C_HandleEndMatch");
static_assert(sizeof(B_SeekGameMode_C_HandleEndMatch) == 0x000002, "Wrong size on B_SeekGameMode_C_HandleEndMatch");
static_assert(offsetof(B_SeekGameMode_C_HandleEndMatch, WinnerTeam) == 0x000000, "Member 'B_SeekGameMode_C_HandleEndMatch::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleEndMatch, ForceRegardlessOfEnd) == 0x000001, "Member 'B_SeekGameMode_C_HandleEndMatch::ForceRegardlessOfEnd' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.HandleStartSeek
// 0x0050 (0x0050 - 0x0000)
struct B_SeekGameMode_C_HandleStartSeek final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetPickupSpawnDelay_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State_1;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_HandleStartSeek) == 0x000008, "Wrong alignment on B_SeekGameMode_C_HandleStartSeek");
static_assert(sizeof(B_SeekGameMode_C_HandleStartSeek) == 0x000050, "Wrong size on B_SeekGameMode_C_HandleStartSeek");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_SeekGameMode_C_HandleStartSeek::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000008, "Member 'B_SeekGameMode_C_HandleStartSeek::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_SeekGameMode_C_HandleStartSeek::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'B_SeekGameMode_C_HandleStartSeek::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, CallFunc_GetPickupSpawnDelay_ReturnValue) == 0x000028, "Member 'B_SeekGameMode_C_HandleStartSeek::CallFunc_GetPickupSpawnDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, CallFunc_GetGameState_ReturnValue_1) == 0x000030, "Member 'B_SeekGameMode_C_HandleStartSeek::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'B_SeekGameMode_C_HandleStartSeek::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, K2Node_DynamicCast_AsB_Seek_Game_State_1) == 0x000040, "Member 'B_SeekGameMode_C_HandleStartSeek::K2Node_DynamicCast_AsB_Seek_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_SeekGameMode_C_HandleStartSeek::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_HandleStartSeek, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00004C, "Member 'B_SeekGameMode_C_HandleStartSeek::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.ExecuteUbergraph_B_SeekGameMode
// 0x0130 (0x0130 - 0x0000)
struct B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd_1;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State_1;          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Event_WinnerTeam;                           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ForceRegardlessOfEnd;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State_2;          // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetRoundEndTimerUntilRestart_Seconds;     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_Witch_C*>                     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00F0(0x0010)(ReferenceParm)
	class AB_Witch_C*                             CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_PropPawnPhysics_C*>           CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0110(0x0010)(ReferenceParm)
	class AB_PropPawnPhysics_C*                   CallFunc_Array_Get_Item_2;                         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode) == 0x000008, "Wrong alignment on B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode");
static_assert(sizeof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode) == 0x000130, "Wrong size on B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, EntryPoint) == 0x000000, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue_1) == 0x000010, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000028, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000031, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue_2) == 0x000038, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Game_State_1) == 0x000048, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000058, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_IsRoundEnd_RoundIsEnd_1) == 0x000061, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_IsRoundEnd_RoundIsEnd_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Not_PreBool_ReturnValue_1) == 0x000062, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue_3) == 0x000068, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Seek_Game_State_1) == 0x000070, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Seek_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Array_Index_Variable) == 0x000084, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue_4) == 0x000090, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_HasAuthority_ReturnValue) == 0x000098, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Player_State) == 0x0000B0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Array_Index_Variable_2) == 0x0000C4, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, Temp_int_Loop_Counter_Variable_2) == 0x0000C8, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000D0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_Event_WinnerTeam) == 0x0000D4, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_Event_WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_Event_ForceRegardlessOfEnd) == 0x0000D5, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_Event_ForceRegardlessOfEnd' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_BooleanOR_ReturnValue) == 0x0000D6, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D7, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetGameState_ReturnValue_5) == 0x0000D8, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_AsB_Seek_Game_State_2) == 0x0000E0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_AsB_Seek_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_DynamicCast_bSuccess_6) == 0x0000E8, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, K2Node_SwitchEnum_CmpSuccess) == 0x0000E9, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetRoundEndTimerUntilRestart_Seconds) == 0x0000EC, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetRoundEndTimerUntilRestart_Seconds' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000F0, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Less_IntInt_ReturnValue_1) == 0x00010C, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000110, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode, CallFunc_Less_IntInt_ReturnValue_2) == 0x00012C, "Member 'B_SeekGameMode_C_ExecuteUbergraph_B_SeekGameMode::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.PlayerIDReceived
// 0x0028 (0x0028 - 0x0000)
struct B_SeekGameMode_C_PlayerIDReceived final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_JoinAsHunterStates                          Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_JoinAsHunterStates                          Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanJoinAsMidgameHunter_JoinAsHunter;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_JoinAsHunterStates                          K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F[0x1];                                        // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Spectator_C*                         K2Node_DynamicCast_AsB_Spectator;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_PlayerIDReceived) == 0x000008, "Wrong alignment on B_SeekGameMode_C_PlayerIDReceived");
static_assert(sizeof(B_SeekGameMode_C_PlayerIDReceived) == 0x000028, "Wrong size on B_SeekGameMode_C_PlayerIDReceived");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, PlayerState) == 0x000000, "Member 'B_SeekGameMode_C_PlayerIDReceived::PlayerState' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, Temp_bool_Variable) == 0x000008, "Member 'B_SeekGameMode_C_PlayerIDReceived::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, Temp_byte_Variable) == 0x000009, "Member 'B_SeekGameMode_C_PlayerIDReceived::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, Temp_byte_Variable_1) == 0x00000A, "Member 'B_SeekGameMode_C_PlayerIDReceived::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, CallFunc_CanJoinAsMidgameHunter_JoinAsHunter) == 0x00000B, "Member 'B_SeekGameMode_C_PlayerIDReceived::CallFunc_CanJoinAsMidgameHunter_JoinAsHunter' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, CallFunc_Array_Contains_ReturnValue) == 0x00000C, "Member 'B_SeekGameMode_C_PlayerIDReceived::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000D, "Member 'B_SeekGameMode_C_PlayerIDReceived::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, K2Node_Select_Default) == 0x00000E, "Member 'B_SeekGameMode_C_PlayerIDReceived::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'B_SeekGameMode_C_PlayerIDReceived::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, K2Node_DynamicCast_AsB_Spectator) == 0x000018, "Member 'B_SeekGameMode_C_PlayerIDReceived::K2Node_DynamicCast_AsB_Spectator' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_PlayerIDReceived, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_SeekGameMode_C_PlayerIDReceived::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.MidgameJoiningPlayerReady
// 0x0058 (0x0058 - 0x0000)
struct B_SeekGameMode_C_MidgameJoiningPlayerReady final
{
public:
	class AB_PlayerState_C*                       ReadyPlayer;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPawn_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Spectator_C*                         K2Node_DynamicCast_AsB_Spectator;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_SpawnNewPlayerPawn_PlayerPawn;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_MidgameJoiningPlayerReady) == 0x000008, "Wrong alignment on B_SeekGameMode_C_MidgameJoiningPlayerReady");
static_assert(sizeof(B_SeekGameMode_C_MidgameJoiningPlayerReady) == 0x000058, "Wrong size on B_SeekGameMode_C_MidgameJoiningPlayerReady");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, ReadyPlayer) == 0x000000, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::ReadyPlayer' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_GetPawn_ReturnValue) == 0x000020, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000028, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, K2Node_DynamicCast_AsB_Spectator) == 0x000030, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::K2Node_DynamicCast_AsB_Spectator' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_BooleanAND_ReturnValue_1) == 0x00003A, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_SpawnNewPlayerPawn_PlayerPawn) == 0x000040, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_SpawnNewPlayerPawn_PlayerPawn' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_Now_ReturnValue) == 0x000048, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_MidgameJoiningPlayerReady, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000050, "Member 'B_SeekGameMode_C_MidgameJoiningPlayerReady::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.InitMatchTimeForSession
// 0x0060 (0x0060 - 0x0000)
struct B_SeekGameMode_C_InitMatchTimeForSession final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_InitMatchTimeForSession) == 0x000008, "Wrong alignment on B_SeekGameMode_C_InitMatchTimeForSession");
static_assert(sizeof(B_SeekGameMode_C_InitMatchTimeForSession) == 0x000060, "Wrong size on B_SeekGameMode_C_InitMatchTimeForSession");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_GetGameInstance_ReturnValue_1) == 0x000008, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000020, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_GetGameInstance_ReturnValue_2) == 0x000038, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000040, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000050, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchTimeForSession, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'B_SeekGameMode_C_InitMatchTimeForSession::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.InitMatchStartedFlagForSession
// 0x0030 (0x0030 - 0x0000)
struct B_SeekGameMode_C_InitMatchStartedFlagForSession final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_DateTime_ToIso8601_String;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_InitMatchStartedFlagForSession) == 0x000008, "Wrong alignment on B_SeekGameMode_C_InitMatchStartedFlagForSession");
static_assert(sizeof(B_SeekGameMode_C_InitMatchStartedFlagForSession) == 0x000030, "Wrong size on B_SeekGameMode_C_InitMatchStartedFlagForSession");
static_assert(offsetof(B_SeekGameMode_C_InitMatchStartedFlagForSession, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_SeekGameMode_C_InitMatchStartedFlagForSession::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchStartedFlagForSession, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_SeekGameMode_C_InitMatchStartedFlagForSession::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchStartedFlagForSession, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_SeekGameMode_C_InitMatchStartedFlagForSession::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchStartedFlagForSession, CallFunc_UtcNow_ReturnValue) == 0x000018, "Member 'B_SeekGameMode_C_InitMatchStartedFlagForSession::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitMatchStartedFlagForSession, CallFunc_DateTime_ToIso8601_String) == 0x000020, "Member 'B_SeekGameMode_C_InitMatchStartedFlagForSession::CallFunc_DateTime_ToIso8601_String' has a wrong offset!");

// Function B_SeekGameMode.B_SeekGameMode_C.InitializeSeekTime
// 0x0058 (0x0058 - 0x0000)
struct B_SeekGameMode_C_InitializeSeekTime final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SeekGameMode_C_InitializeSeekTime) == 0x000008, "Wrong alignment on B_SeekGameMode_C_InitializeSeekTime");
static_assert(sizeof(B_SeekGameMode_C_InitializeSeekTime) == 0x000058, "Wrong size on B_SeekGameMode_C_InitializeSeekTime");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000020, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_GetGameInstance_ReturnValue_1) == 0x000030, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, Temp_int_Variable) == 0x000038, "Member 'B_SeekGameMode_C_InitializeSeekTime::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000040, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, Temp_bool_Variable) == 0x000049, "Member 'B_SeekGameMode_C_InitializeSeekTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, K2Node_Select_Default) == 0x00004C, "Member 'B_SeekGameMode_C_InitializeSeekTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SeekGameMode_C_InitializeSeekTime, CallFunc_Max_ReturnValue) == 0x000054, "Member 'B_SeekGameMode_C_InitializeSeekTime::CallFunc_Max_ReturnValue' has a wrong offset!");

}

