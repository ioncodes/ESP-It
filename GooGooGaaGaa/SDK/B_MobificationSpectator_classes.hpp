#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MobificationSpectator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Spectator_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MobificationSpectator.B_MobificationSpectator_C
// 0x0010 (0x0490 - 0x0480)
class AB_MobificationSpectator_C final : public AB_Spectator_C
{
public:
	uint8                                         Pad_472[0x6];                                      // 0x0472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_B_MobificationSpectator_C;          // 0x0478(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_Timer_C*                             B_Timer;                                           // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__B_Timer_K2Node_ComponentBoundEvent_0_OnFinished__DelegateSignature();
	void ExecuteUbergraph_B_MobificationSpectator(int32 EntryPoint);
	void HandleClientProcessed(class APlayerController* PlayerController);
	void ReceiveBeginPlay();
	void TickHUD();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MobificationSpectator_C">();
	}
	static class AB_MobificationSpectator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_MobificationSpectator_C>();
	}
};
static_assert(alignof(AB_MobificationSpectator_C) == 0x000010, "Wrong alignment on AB_MobificationSpectator_C");
static_assert(sizeof(AB_MobificationSpectator_C) == 0x000490, "Wrong size on AB_MobificationSpectator_C");
static_assert(offsetof(AB_MobificationSpectator_C, UberGraphFrame_B_MobificationSpectator_C) == 0x000478, "Member 'AB_MobificationSpectator_C::UberGraphFrame_B_MobificationSpectator_C' has a wrong offset!");
static_assert(offsetof(AB_MobificationSpectator_C, B_Timer) == 0x000480, "Member 'AB_MobificationSpectator_C::B_Timer' has a wrong offset!");

}

