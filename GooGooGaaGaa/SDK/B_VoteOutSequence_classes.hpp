#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_VoteOutSequence

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_VoteOutSequence.B_VoteOutSequence_C
// 0x0038 (0x02D0 - 0x0298)
class AB_VoteOutSequence_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 PreviewMesh;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SequenceFinished;                                  // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ULevelSequence*                         VoteOutSequence;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         NoVoteOutSequence;                                 // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void DoSequence();
	void ExecuteUbergraph_B_VoteOutSequence(int32 EntryPoint);
	void OnSequenceFinished();
	void ReceiveBeginPlay();
	void SequenceFinished__DelegateSignature();
	void StartSequence();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_VoteOutSequence_C">();
	}
	static class AB_VoteOutSequence_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_VoteOutSequence_C>();
	}
};
static_assert(alignof(AB_VoteOutSequence_C) == 0x000008, "Wrong alignment on AB_VoteOutSequence_C");
static_assert(sizeof(AB_VoteOutSequence_C) == 0x0002D0, "Wrong size on AB_VoteOutSequence_C");
static_assert(offsetof(AB_VoteOutSequence_C, UberGraphFrame) == 0x000298, "Member 'AB_VoteOutSequence_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_VoteOutSequence_C, PreviewMesh) == 0x0002A0, "Member 'AB_VoteOutSequence_C::PreviewMesh' has a wrong offset!");
static_assert(offsetof(AB_VoteOutSequence_C, DefaultSceneRoot) == 0x0002A8, "Member 'AB_VoteOutSequence_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_VoteOutSequence_C, SequenceFinished) == 0x0002B0, "Member 'AB_VoteOutSequence_C::SequenceFinished' has a wrong offset!");
static_assert(offsetof(AB_VoteOutSequence_C, VoteOutSequence) == 0x0002C0, "Member 'AB_VoteOutSequence_C::VoteOutSequence' has a wrong offset!");
static_assert(offsetof(AB_VoteOutSequence_C, NoVoteOutSequence) == 0x0002C8, "Member 'AB_VoteOutSequence_C::NoVoteOutSequence' has a wrong offset!");

}

