#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FriendManager

#include "Basic.hpp"

#include "B_FriendManager_classes.hpp"
#include "B_FriendManager_parameters.hpp"


namespace SDK
{

// Function B_FriendManager.B_FriendManager_C.OnHasIncomingTradeRequestsCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasIncomingTradeRequests_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnHasIncomingTradeRequestsCompleted__DelegateSignature(bool HasIncomingTradeRequests_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnHasIncomingTradeRequestsCompleted__DelegateSignature");

	Params::B_FriendManager_C_OnHasIncomingTradeRequestsCompleted__DelegateSignature Parms{};

	Parms.HasIncomingTradeRequests_0 = HasIncomingTradeRequests_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnFriendListReceived__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::OnFriendListReceived__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnFriendListReceived__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.OnUserInfosReceived__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FUniqueNetIdRepl>         UserIds                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnUserInfosReceived__DelegateSignature(TArray<struct FUniqueNetIdRepl>& UserIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnUserInfosReceived__DelegateSignature");

	Params::B_FriendManager_C_OnUserInfosReceived__DelegateSignature Parms{};

	Parms.UserIds = std::move(UserIds);

	UObject::ProcessEvent(Func, &Parms);

	UserIds = std::move(Parms.UserIds);
}


// Function B_FriendManager.B_FriendManager_C.AcceptFriendRequest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    InitialSuccess                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::AcceptFriendRequest(const struct FUniqueNetIdRepl& FriendId, bool* InitialSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "AcceptFriendRequest");

	Params::B_FriendManager_C_AcceptFriendRequest Parms{};

	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);

	if (InitialSuccess != nullptr)
		*InitialSuccess = Parms.InitialSuccess;
}


// Function B_FriendManager.B_FriendManager_C.AcceptFriendRequestQueued
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::AcceptFriendRequestQueued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "AcceptFriendRequestQueued");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.AnyPendingFriendOrSessionInvitesExist
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ThereArePendingInvites                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::AnyPendingFriendOrSessionInvitesExist(bool* ThereArePendingInvites)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "AnyPendingFriendOrSessionInvitesExist");

	Params::B_FriendManager_C_AnyPendingFriendOrSessionInvitesExist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ThereArePendingInvites != nullptr)
		*ThereArePendingInvites = Parms.ThereArePendingInvites;
}


// Function B_FriendManager.B_FriendManager_C.CheckForPendingTradeRequests
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::CheckForPendingTradeRequests()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "CheckForPendingTradeRequests");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.CheckForTooManyFriendsAndPending
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TooManyFriends                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TooManyPending                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::CheckForTooManyFriendsAndPending(bool* TooManyFriends, bool* TooManyPending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "CheckForTooManyFriendsAndPending");

	Params::B_FriendManager_C_CheckForTooManyFriendsAndPending Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TooManyFriends != nullptr)
		*TooManyFriends = Parms.TooManyFriends;

	if (TooManyPending != nullptr)
		*TooManyPending = Parms.TooManyPending;
}


// Function B_FriendManager.B_FriendManager_C.CheckIncomingTradeRequests
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTradeRequest>            Requests                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::CheckIncomingTradeRequests(TArray<struct FTradeRequest>& Requests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "CheckIncomingTradeRequests");

	Params::B_FriendManager_C_CheckIncomingTradeRequests Parms{};

	Parms.Requests = std::move(Requests);

	UObject::ProcessEvent(Func, &Parms);

	Requests = std::move(Parms.Requests);
}


// Function B_FriendManager.B_FriendManager_C.CreateNecerssaryInvitationPopups
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::CreateNecerssaryInvitationPopups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "CreateNecerssaryInvitationPopups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.CreateNewPopup
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::CreateNewPopup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "CreateNewPopup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.DeleteFriend
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_FriendManager_C::DeleteFriend(const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "DeleteFriend");

	Params::B_FriendManager_C_DeleteFriend Parms{};

	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.DeleteFriendQueued
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::DeleteFriendQueued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "DeleteFriendQueued");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.ExecuteUbergraph_B_FriendManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::ExecuteUbergraph_B_FriendManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "ExecuteUbergraph_B_FriendManager");

	Params::B_FriendManager_C_ExecuteUbergraph_B_FriendManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.GetDisplayNamesFromUsers
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UOnlineUserRef*>           Users                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class FString>                   DisplayNames                                           (Parm, OutParm)

void UB_FriendManager_C::GetDisplayNamesFromUsers(TArray<class UOnlineUserRef*>& Users, TArray<class FString>* DisplayNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetDisplayNamesFromUsers");

	Params::B_FriendManager_C_GetDisplayNamesFromUsers Parms{};

	Parms.Users = std::move(Users);

	UObject::ProcessEvent(Func, &Parms);

	Users = std::move(Parms.Users);

	if (DisplayNames != nullptr)
		*DisplayNames = std::move(Parms.DisplayNames);
}


// Function B_FriendManager.B_FriendManager_C.GetHasIncomingTradeRequests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    HasIncomingTradeRequests_0                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::GetHasIncomingTradeRequests(bool* HasIncomingTradeRequests_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetHasIncomingTradeRequests");

	Params::B_FriendManager_C_GetHasIncomingTradeRequests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasIncomingTradeRequests_0 != nullptr)
		*HasIncomingTradeRequests_0 = Parms.HasIncomingTradeRequests_0;
}


// Function B_FriendManager.B_FriendManager_C.GetIsFriendListRetrieved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    FriendListRetrieved_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::GetIsFriendListRetrieved(bool* FriendListRetrieved_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetIsFriendListRetrieved");

	Params::B_FriendManager_C_GetIsFriendListRetrieved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FriendListRetrieved_0 != nullptr)
		*FriendListRetrieved_0 = Parms.FriendListRetrieved_0;
}


// Function B_FriendManager.B_FriendManager_C.GetIsRecentPlayersRetrieved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RecentPlayersRetrieved_0                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::GetIsRecentPlayersRetrieved(bool* RecentPlayersRetrieved_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetIsRecentPlayersRetrieved");

	Params::B_FriendManager_C_GetIsRecentPlayersRetrieved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RecentPlayersRetrieved_0 != nullptr)
		*RecentPlayersRetrieved_0 = Parms.RecentPlayersRetrieved_0;
}


// Function B_FriendManager.B_FriendManager_C.GetMaximumFriendRequests
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaximumFriendRequests_0                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::GetMaximumFriendRequests(int32* MaximumFriendRequests_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetMaximumFriendRequests");

	Params::B_FriendManager_C_GetMaximumFriendRequests Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaximumFriendRequests_0 != nullptr)
		*MaximumFriendRequests_0 = Parms.MaximumFriendRequests_0;
}


// Function B_FriendManager.B_FriendManager_C.GetMaximumFriends
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   MaximumFriends_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::GetMaximumFriends(int32* MaximumFriends_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "GetMaximumFriends");

	Params::B_FriendManager_C_GetMaximumFriends Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaximumFriends_0 != nullptr)
		*MaximumFriends_0 = Parms.MaximumFriends_0;
}


// Function B_FriendManager.B_FriendManager_C.Initialize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    InGameInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::Initialize(class UGameInstance* InGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "Initialize");

	Params::B_FriendManager_C_Initialize Parms{};

	Parms.InGameInstance = InGameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.InitializeFriendsAndPlayers
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::InitializeFriendsAndPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "InitializeFriendsAndPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.OnAcceptInviteComplete_35A41B484B6CFFB9578A52A5BD3155FF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnAcceptInviteComplete_35A41B484B6CFFB9578A52A5BD3155FF(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnAcceptInviteComplete_35A41B484B6CFFB9578A52A5BD3155FF");

	Params::B_FriendManager_C_OnAcceptInviteComplete_35A41B484B6CFFB9578A52A5BD3155FF Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_0905DDA04E51AF50B20F78A1FAAC3F6C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_0905DDA04E51AF50B20F78A1FAAC3F6C(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_0905DDA04E51AF50B20F78A1FAAC3F6C");

	Params::B_FriendManager_C_OnCallFailed_0905DDA04E51AF50B20F78A1FAAC3F6C Parms{};

	Parms.UserId = std::move(UserId);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_2564B7FD4AA17ABFFBFE3CA98D34953C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_2564B7FD4AA17ABFFBFE3CA98D34953C(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_2564B7FD4AA17ABFFBFE3CA98D34953C");

	Params::B_FriendManager_C_OnCallFailed_2564B7FD4AA17ABFFBFE3CA98D34953C Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_35A41B484B6CFFB9578A52A5BD3155FF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_35A41B484B6CFFB9578A52A5BD3155FF(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_35A41B484B6CFFB9578A52A5BD3155FF");

	Params::B_FriendManager_C_OnCallFailed_35A41B484B6CFFB9578A52A5BD3155FF Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_3ADB22B24A96F6453AEA11A8FEA28B30
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_3ADB22B24A96F6453AEA11A8FEA28B30(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_3ADB22B24A96F6453AEA11A8FEA28B30");

	Params::B_FriendManager_C_OnCallFailed_3ADB22B24A96F6453AEA11A8FEA28B30 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_53851A804A830E61AFB854AB13BB6C79
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         UserIds                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_53851A804A830E61AFB854AB13BB6C79(bool bWasSuccessful, const TArray<struct FUniqueNetIdRepl>& UserIds, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_53851A804A830E61AFB854AB13BB6C79");

	Params::B_FriendManager_C_OnCallFailed_53851A804A830E61AFB854AB13BB6C79 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserIds = std::move(UserIds);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_58E39F564E6C2711062EE58CCD7FE7CA
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnCallFailed_58E39F564E6C2711062EE58CCD7FE7CA(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_58E39F564E6C2711062EE58CCD7FE7CA");

	Params::B_FriendManager_C_OnCallFailed_58E39F564E6C2711062EE58CCD7FE7CA Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_652B7B3045DC0C028A2E38958D67868C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnCallFailed_652B7B3045DC0C028A2E38958D67868C(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_652B7B3045DC0C028A2E38958D67868C");

	Params::B_FriendManager_C_OnCallFailed_652B7B3045DC0C028A2E38958D67868C Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_9163A3F940C5996E0C84719EFCC9D6CC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_9163A3F940C5996E0C84719EFCC9D6CC(int32 LocalUserNum, bool bWasSuccessful, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_9163A3F940C5996E0C84719EFCC9D6CC");

	Params::B_FriendManager_C_OnCallFailed_9163A3F940C5996E0C84719EFCC9D6CC Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_B33D6C834A0A27D7DA8F8F82F18E25A2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_B33D6C834A0A27D7DA8F8F82F18E25A2(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_B33D6C834A0A27D7DA8F8F82F18E25A2");

	Params::B_FriendManager_C_OnCallFailed_B33D6C834A0A27D7DA8F8F82F18E25A2 Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_C6AF14174F5F3FA5A72F6B94079D59F1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           NameSpace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnCallFailed_C6AF14174F5F3FA5A72F6B94079D59F1(const struct FUniqueNetIdRepl& UserId, const class FString& NameSpace, bool bWasSuccessful, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_C6AF14174F5F3FA5A72F6B94079D59F1");

	Params::B_FriendManager_C_OnCallFailed_C6AF14174F5F3FA5A72F6B94079D59F1 Parms{};

	Parms.UserId = std::move(UserId);
	Parms.NameSpace = std::move(NameSpace);
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnCallFailed_D598B6AB4EEDD82BCA41F199F4178D65
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnCallFailed_D598B6AB4EEDD82BCA41F199F4178D65(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnCallFailed_D598B6AB4EEDD82BCA41F199F4178D65");

	Params::B_FriendManager_C_OnCallFailed_D598B6AB4EEDD82BCA41F199F4178D65 Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnDeleteFriendComplete_3ADB22B24A96F6453AEA11A8FEA28B30
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnDeleteFriendComplete_3ADB22B24A96F6453AEA11A8FEA28B30(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnDeleteFriendComplete_3ADB22B24A96F6453AEA11A8FEA28B30");

	Params::B_FriendManager_C_OnDeleteFriendComplete_3ADB22B24A96F6453AEA11A8FEA28B30 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnFailure_2BDD73BC4F7A4C29B5381C82D68320BC
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTradeRequest>            Requests                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnFailure_2BDD73BC4F7A4C29B5381C82D68320BC(const TArray<struct FTradeRequest>& Requests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnFailure_2BDD73BC4F7A4C29B5381C82D68320BC");

	Params::B_FriendManager_C_OnFailure_2BDD73BC4F7A4C29B5381C82D68320BC Parms{};

	Parms.Requests = std::move(Requests);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnFriendInviteReceived
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_FriendManager_C::OnFriendInviteReceived(const struct FUniqueNetIdRepl& UserId, const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnFriendInviteReceived");

	Params::B_FriendManager_C_OnFriendInviteReceived Parms{};

	Parms.UserId = std::move(UserId);
	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnFriendSessionInviteReceived
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FromId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           AppId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FOnlineSessionSearchResultBP     InviteResult                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UB_FriendManager_C::OnFriendSessionInviteReceived(const struct FUniqueNetIdRepl& UserId, const struct FUniqueNetIdRepl& FromId, const class FString& AppId, const struct FOnlineSessionSearchResultBP& InviteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnFriendSessionInviteReceived");

	Params::B_FriendManager_C_OnFriendSessionInviteReceived Parms{};

	Parms.UserId = std::move(UserId);
	Parms.FromId = std::move(FromId);
	Parms.AppId = std::move(AppId);
	Parms.InviteResult = std::move(InviteResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnMessageArrayProcessed_58E39F564E6C2711062EE58CCD7FE7CA
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnMessageArrayProcessed_58E39F564E6C2711062EE58CCD7FE7CA(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnMessageArrayProcessed_58E39F564E6C2711062EE58CCD7FE7CA");

	Params::B_FriendManager_C_OnMessageArrayProcessed_58E39F564E6C2711062EE58CCD7FE7CA Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnMessageArrayProcessed_652B7B3045DC0C028A2E38958D67868C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnMessageArrayProcessed_652B7B3045DC0C028A2E38958D67868C(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnMessageArrayProcessed_652B7B3045DC0C028A2E38958D67868C");

	Params::B_FriendManager_C_OnMessageArrayProcessed_652B7B3045DC0C028A2E38958D67868C Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnMessageArrayProcessed_D598B6AB4EEDD82BCA41F199F4178D65
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FString>                   SanitizedMessages                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnMessageArrayProcessed_D598B6AB4EEDD82BCA41F199F4178D65(bool bSuccess, const TArray<class FString>& SanitizedMessages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnMessageArrayProcessed_D598B6AB4EEDD82BCA41F199F4178D65");

	Params::B_FriendManager_C_OnMessageArrayProcessed_D598B6AB4EEDD82BCA41F199F4178D65 Parms{};

	Parms.bSuccess = bSuccess;
	Parms.SanitizedMessages = std::move(SanitizedMessages);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnNewRecentPlayersAdded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// TArray<class UOnlineRecentPlayerRef*>   AddedPlayers                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnNewRecentPlayersAdded(const struct FUniqueNetIdRepl& UserId, const TArray<class UOnlineRecentPlayerRef*>& AddedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnNewRecentPlayersAdded");

	Params::B_FriendManager_C_OnNewRecentPlayersAdded Parms{};

	Parms.UserId = std::move(UserId);
	Parms.AddedPlayers = std::move(AddedPlayers);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnPopupAnimationFinished
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::OnPopupAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnPopupAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.OnPresenceReceived
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::OnPresenceReceived()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnPresenceReceived");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.OnPresenceTaskComplete_0905DDA04E51AF50B20F78A1FAAC3F6C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnPresenceTaskComplete_0905DDA04E51AF50B20F78A1FAAC3F6C(const struct FUniqueNetIdRepl& UserId, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnPresenceTaskComplete_0905DDA04E51AF50B20F78A1FAAC3F6C");

	Params::B_FriendManager_C_OnPresenceTaskComplete_0905DDA04E51AF50B20F78A1FAAC3F6C Parms{};

	Parms.UserId = std::move(UserId);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnQueryRecentPlayersComplete_C6AF14174F5F3FA5A72F6B94079D59F1
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           NameSpace                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnQueryRecentPlayersComplete_C6AF14174F5F3FA5A72F6B94079D59F1(const struct FUniqueNetIdRepl& UserId, const class FString& NameSpace, bool bWasSuccessful, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnQueryRecentPlayersComplete_C6AF14174F5F3FA5A72F6B94079D59F1");

	Params::B_FriendManager_C_OnQueryRecentPlayersComplete_C6AF14174F5F3FA5A72F6B94079D59F1 Parms{};

	Parms.UserId = std::move(UserId);
	Parms.NameSpace = std::move(NameSpace);
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnQueryUserInfoComplete_53851A804A830E61AFB854AB13BB6C79
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         UserIds                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnQueryUserInfoComplete_53851A804A830E61AFB854AB13BB6C79(bool bWasSuccessful, const TArray<struct FUniqueNetIdRepl>& UserIds, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnQueryUserInfoComplete_53851A804A830E61AFB854AB13BB6C79");

	Params::B_FriendManager_C_OnQueryUserInfoComplete_53851A804A830E61AFB854AB13BB6C79 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserIds = std::move(UserIds);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnReadFriendsListComplete_9163A3F940C5996E0C84719EFCC9D6CC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnReadFriendsListComplete_9163A3F940C5996E0C84719EFCC9D6CC(int32 LocalUserNum, bool bWasSuccessful, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnReadFriendsListComplete_9163A3F940C5996E0C84719EFCC9D6CC");

	Params::B_FriendManager_C_OnReadFriendsListComplete_9163A3F940C5996E0C84719EFCC9D6CC Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnRecentPlayersReceived__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::OnRecentPlayersReceived__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnRecentPlayersReceived__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.OnRejectInviteComplete_2564B7FD4AA17ABFFBFE3CA98D34953C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnRejectInviteComplete_2564B7FD4AA17ABFFBFE3CA98D34953C(bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnRejectInviteComplete_2564B7FD4AA17ABFFBFE3CA98D34953C");

	Params::B_FriendManager_C_OnRejectInviteComplete_2564B7FD4AA17ABFFBFE3CA98D34953C Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnSendInviteComplete_B33D6C834A0A27D7DA8F8F82F18E25A2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   LocalUserNum                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           ListName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorStr                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::OnSendInviteComplete_B33D6C834A0A27D7DA8F8F82F18E25A2(int32 LocalUserNum, bool bWasSuccessful, const struct FUniqueNetIdRepl& FriendId, const class FString& ListName, const class FString& ErrorStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnSendInviteComplete_B33D6C834A0A27D7DA8F8F82F18E25A2");

	Params::B_FriendManager_C_OnSendInviteComplete_B33D6C834A0A27D7DA8F8F82F18E25A2 Parms{};

	Parms.LocalUserNum = LocalUserNum;
	Parms.bWasSuccessful = bWasSuccessful;
	Parms.FriendId = std::move(FriendId);
	Parms.ListName = std::move(ListName);
	Parms.ErrorStr = std::move(ErrorStr);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.OnSuccess_2BDD73BC4F7A4C29B5381C82D68320BC
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FTradeRequest>            Requests                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::OnSuccess_2BDD73BC4F7A4C29B5381C82D68320BC(const TArray<struct FTradeRequest>& Requests)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "OnSuccess_2BDD73BC4F7A4C29B5381C82D68320BC");

	Params::B_FriendManager_C_OnSuccess_2BDD73BC4F7A4C29B5381C82D68320BC Parms{};

	Parms.Requests = std::move(Requests);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.QueryUserInfoQueued
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::QueryUserInfoQueued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "QueryUserInfoQueued");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.RejectFriendRequest
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_FriendManager_C::RejectFriendRequest(const struct FUniqueNetIdRepl& FriendId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RejectFriendRequest");

	Params::B_FriendManager_C_RejectFriendRequest Parms{};

	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.RejectFriendRequestQueued
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::RejectFriendRequestQueued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RejectFriendRequestQueued");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.RequestFriendsPresence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::RequestFriendsPresence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RequestFriendsPresence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.RequestPresenceForIds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FUniqueNetIdRepl>         UserIds                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::RequestPresenceForIds(TArray<struct FUniqueNetIdRepl>& UserIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RequestPresenceForIds");

	Params::B_FriendManager_C_RequestPresenceForIds Parms{};

	Parms.UserIds = std::move(UserIds);

	UObject::ProcessEvent(Func, &Parms);

	UserIds = std::move(Parms.UserIds);
}


// Function B_FriendManager.B_FriendManager_C.RequestRecentPlayersPresence
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::RequestRecentPlayersPresence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RequestRecentPlayersPresence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.RequestUserInfo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 NetId                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_FriendManager_C::RequestUserInfo(const struct FUniqueNetIdRepl& NetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "RequestUserInfo");

	Params::B_FriendManager_C_RequestUserInfo Parms{};

	Parms.NetId = std::move(NetId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.SanitizeFriendNames
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::SanitizeFriendNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SanitizeFriendNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.SanitizePlayerNames
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UOnlineUserRef*>           Users                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_FriendManager_C::SanitizePlayerNames(TArray<class UOnlineUserRef*>& Users)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SanitizePlayerNames");

	Params::B_FriendManager_C_SanitizePlayerNames Parms{};

	Parms.Users = std::move(Users);

	UObject::ProcessEvent(Func, &Parms);

	Users = std::move(Parms.Users);
}


// Function B_FriendManager.B_FriendManager_C.SanitizeRecentPlayerNames
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::SanitizeRecentPlayerNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SanitizeRecentPlayerNames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.SendFriendInvite
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 FriendId                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    InitialSuccess                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::SendFriendInvite(const struct FUniqueNetIdRepl& FriendId, bool* InitialSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SendFriendInvite");

	Params::B_FriendManager_C_SendFriendInvite Parms{};

	Parms.FriendId = std::move(FriendId);

	UObject::ProcessEvent(Func, &Parms);

	if (InitialSuccess != nullptr)
		*InitialSuccess = Parms.InitialSuccess;
}


// Function B_FriendManager.B_FriendManager_C.SendFriendInviteQueued
// (BlueprintCallable, BlueprintEvent)

void UB_FriendManager_C::SendFriendInviteQueued()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SendFriendInviteQueued");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FriendManager.B_FriendManager_C.SendSessionInvite
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 Friend                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_FriendManager_C::SendSessionInvite(const struct FUniqueNetIdRepl& Friend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SendSessionInvite");

	Params::B_FriendManager_C_SendSessionInvite Parms{};

	Parms.Friend = std::move(Friend);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.SetHasIncomingTradeRequests
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasIncomingTradeRequests_0                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FriendManager_C::SetHasIncomingTradeRequests(bool HasIncomingTradeRequests_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "SetHasIncomingTradeRequests");

	Params::B_FriendManager_C_SetHasIncomingTradeRequests Parms{};

	Parms.HasIncomingTradeRequests_0 = HasIncomingTradeRequests_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FriendManager.B_FriendManager_C.TradeNotifyReceived
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETradeReason                            Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   PendingTradeId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SourcePlayerId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           TargetPlayerId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_FriendManager_C::TradeNotifyReceived(ETradeReason Reason, int64 PendingTradeId, const class FString& SourcePlayerId, const class FString& TargetPlayerId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FriendManager_C", "TradeNotifyReceived");

	Params::B_FriendManager_C_TradeNotifyReceived Parms{};

	Parms.Reason = Reason;
	Parms.PendingTradeId = PendingTradeId;
	Parms.SourcePlayerId = std::move(SourcePlayerId);
	Parms.TargetPlayerId = std::move(TargetPlayerId);

	UObject::ProcessEvent(Func, &Parms);
}

}

