#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CookingField

#include "Basic.hpp"

#include "B_TaskField_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_CookingField.B_CookingField_C
// 0x0038 (0x0370 - 0x0338)
class AB_CookingField_C final : public AB_TaskField_C
{
public:
	class UStaticMeshComponent*                   Sign2;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sign1;                                             // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sign;                                              // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Button2;                                           // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Button1;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Button;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cauldron;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeTaskField();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_CookingField_C">();
	}
	static class AB_CookingField_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_CookingField_C>();
	}
};
static_assert(alignof(AB_CookingField_C) == 0x000008, "Wrong alignment on AB_CookingField_C");
static_assert(sizeof(AB_CookingField_C) == 0x000370, "Wrong size on AB_CookingField_C");
static_assert(offsetof(AB_CookingField_C, Sign2) == 0x000338, "Member 'AB_CookingField_C::Sign2' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Sign1) == 0x000340, "Member 'AB_CookingField_C::Sign1' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Sign) == 0x000348, "Member 'AB_CookingField_C::Sign' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Button2) == 0x000350, "Member 'AB_CookingField_C::Button2' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Button1) == 0x000358, "Member 'AB_CookingField_C::Button1' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Button) == 0x000360, "Member 'AB_CookingField_C::Button' has a wrong offset!");
static_assert(offsetof(AB_CookingField_C, Cauldron) == 0x000368, "Member 'AB_CookingField_C::Cauldron' has a wrong offset!");

}

