#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AnvilInteractionActor

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.ActOnAnimationFinished
// 0x0020 (0x0020 - 0x0000)
struct B_AnvilInteractionActor_C_ActOnAnimationFinished final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CollectTask_C*                       K2Node_DynamicCast_AsB_Collect_Task;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35FF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_ActOnAnimationFinished) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_ActOnAnimationFinished");
static_assert(sizeof(B_AnvilInteractionActor_C_ActOnAnimationFinished) == 0x000020, "Wrong size on B_AnvilInteractionActor_C_ActOnAnimationFinished");
static_assert(offsetof(B_AnvilInteractionActor_C_ActOnAnimationFinished, Temp_int_Variable) == 0x000000, "Member 'B_AnvilInteractionActor_C_ActOnAnimationFinished::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ActOnAnimationFinished, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_AnvilInteractionActor_C_ActOnAnimationFinished::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ActOnAnimationFinished, K2Node_DynamicCast_AsB_Collect_Task) == 0x000010, "Member 'B_AnvilInteractionActor_C_ActOnAnimationFinished::K2Node_DynamicCast_AsB_Collect_Task' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ActOnAnimationFinished, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_AnvilInteractionActor_C_ActOnAnimationFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ActOnAnimationFinished, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'B_AnvilInteractionActor_C_ActOnAnimationFinished::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.CloseWaitTaskScreen
// 0x0018 (0x0018 - 0x0000)
struct B_AnvilInteractionActor_C_CloseWaitTaskScreen final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_CloseWaitTaskScreen) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_CloseWaitTaskScreen");
static_assert(sizeof(B_AnvilInteractionActor_C_CloseWaitTaskScreen) == 0x000018, "Wrong size on B_AnvilInteractionActor_C_CloseWaitTaskScreen");
static_assert(offsetof(B_AnvilInteractionActor_C_CloseWaitTaskScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_AnvilInteractionActor_C_CloseWaitTaskScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_CloseWaitTaskScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_AnvilInteractionActor_C_CloseWaitTaskScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_CloseWaitTaskScreen, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_AnvilInteractionActor_C_CloseWaitTaskScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.ExecuteUbergraph_B_AnvilInteractionActor
// 0x0030 (0x0030 - 0x0000)
struct B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3600[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3601[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_AnvilDummy_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	class AB_AnvilDummy_C*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor");
static_assert(sizeof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor) == 0x000030, "Wrong size on B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, EntryPoint) == 0x000000, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, Temp_int_Variable) == 0x000028, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_IsPlaying_ReturnValue) == 0x00002C, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002D, "Member 'B_AnvilInteractionActor_C_ExecuteUbergraph_B_AnvilInteractionActor::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.OpenWaitTaskScreen
// 0x0040 (0x0040 - 0x0000)
struct B_AnvilInteractionActor_C_OpenWaitTaskScreen final
{
public:
	bool                                          WithProgressBar;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3602[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3603[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CollectTask_C*                       K2Node_DynamicCast_AsB_Collect_Task;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3604[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_AnvilTaskOverlay_C*                 CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_OpenWaitTaskScreen) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_OpenWaitTaskScreen");
static_assert(sizeof(B_AnvilInteractionActor_C_OpenWaitTaskScreen) == 0x000040, "Wrong size on B_AnvilInteractionActor_C_OpenWaitTaskScreen");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, WithProgressBar) == 0x000000, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::WithProgressBar' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, K2Node_DynamicCast_AsB_Collect_Task) == 0x000028, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::K2Node_DynamicCast_AsB_Collect_Task' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_OpenWaitTaskScreen, CallFunc_Create_ReturnValue) == 0x000038, "Member 'B_AnvilInteractionActor_C_OpenWaitTaskScreen::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.React
// 0x0003 (0x0003 - 0x0000)
struct B_AnvilInteractionActor_C_React final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_React) == 0x000001, "Wrong alignment on B_AnvilInteractionActor_C_React");
static_assert(sizeof(B_AnvilInteractionActor_C_React) == 0x000003, "Wrong size on B_AnvilInteractionActor_C_React");
static_assert(offsetof(B_AnvilInteractionActor_C_React, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'B_AnvilInteractionActor_C_React::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_React, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'B_AnvilInteractionActor_C_React::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_React, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'B_AnvilInteractionActor_C_React::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.SetAnvilToolTip
// 0x0018 (0x0018 - 0x0000)
struct B_AnvilInteractionActor_C_SetAnvilToolTip final
{
public:
	class FText                                   ToolTip_Text;                                      // 0x0000(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(B_AnvilInteractionActor_C_SetAnvilToolTip) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_SetAnvilToolTip");
static_assert(sizeof(B_AnvilInteractionActor_C_SetAnvilToolTip) == 0x000018, "Wrong size on B_AnvilInteractionActor_C_SetAnvilToolTip");
static_assert(offsetof(B_AnvilInteractionActor_C_SetAnvilToolTip, ToolTip_Text) == 0x000000, "Member 'B_AnvilInteractionActor_C_SetAnvilToolTip::ToolTip_Text' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.UpdateTootlipWithDummy
// 0x0018 (0x0018 - 0x0000)
struct B_AnvilInteractionActor_C_UpdateTootlipWithDummy final
{
public:
	class FText                                   ToolTip_Text;                                      // 0x0000(0x0018)(Edit, BlueprintVisible)
};
static_assert(alignof(B_AnvilInteractionActor_C_UpdateTootlipWithDummy) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_UpdateTootlipWithDummy");
static_assert(sizeof(B_AnvilInteractionActor_C_UpdateTootlipWithDummy) == 0x000018, "Wrong size on B_AnvilInteractionActor_C_UpdateTootlipWithDummy");
static_assert(offsetof(B_AnvilInteractionActor_C_UpdateTootlipWithDummy, ToolTip_Text) == 0x000000, "Member 'B_AnvilInteractionActor_C_UpdateTootlipWithDummy::ToolTip_Text' has a wrong offset!");

// Function B_AnvilInteractionActor.B_AnvilInteractionActor_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct B_AnvilInteractionActor_C_UserConstructionScript final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CollectTask_C*                       K2Node_DynamicCast_AsB_Collect_Task;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnvilInteractionActor_C_UserConstructionScript) == 0x000008, "Wrong alignment on B_AnvilInteractionActor_C_UserConstructionScript");
static_assert(sizeof(B_AnvilInteractionActor_C_UserConstructionScript) == 0x000018, "Wrong size on B_AnvilInteractionActor_C_UserConstructionScript");
static_assert(offsetof(B_AnvilInteractionActor_C_UserConstructionScript, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'B_AnvilInteractionActor_C_UserConstructionScript::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_UserConstructionScript, K2Node_DynamicCast_AsB_Collect_Task) == 0x000008, "Member 'B_AnvilInteractionActor_C_UserConstructionScript::K2Node_DynamicCast_AsB_Collect_Task' has a wrong offset!");
static_assert(offsetof(B_AnvilInteractionActor_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_AnvilInteractionActor_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

