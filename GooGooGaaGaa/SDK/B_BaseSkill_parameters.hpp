#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_BaseSkill.B_BaseSkill_C.CanActivate
// 0x0003 (0x0003 - 0x0000)
struct B_BaseSkill_C_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseSkill_C_CanActivate) == 0x000001, "Wrong alignment on B_BaseSkill_C_CanActivate");
static_assert(sizeof(B_BaseSkill_C_CanActivate) == 0x000003, "Wrong size on B_BaseSkill_C_CanActivate");
static_assert(offsetof(B_BaseSkill_C_CanActivate, ReturnValue) == 0x000000, "Member 'B_BaseSkill_C_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_CanActivate, CallFunc_CanActivate_ReturnValue) == 0x000001, "Member 'B_BaseSkill_C_CanActivate::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'B_BaseSkill_C_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_BaseSkill.B_BaseSkill_C.HasAuthority
// 0x0020 (0x0020 - 0x0000)
struct B_BaseSkill_C_HasAuthority final
{
public:
	bool                                          HasAuthority_0;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseSkill_C_HasAuthority) == 0x000008, "Wrong alignment on B_BaseSkill_C_HasAuthority");
static_assert(sizeof(B_BaseSkill_C_HasAuthority) == 0x000020, "Wrong size on B_BaseSkill_C_HasAuthority");
static_assert(offsetof(B_BaseSkill_C_HasAuthority, HasAuthority_0) == 0x000000, "Member 'B_BaseSkill_C_HasAuthority::HasAuthority_0' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_HasAuthority, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_BaseSkill_C_HasAuthority::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_HasAuthority, K2Node_DynamicCast_AsPawn) == 0x000010, "Member 'B_BaseSkill_C_HasAuthority::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_HasAuthority, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_BaseSkill_C_HasAuthority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_HasAuthority, CallFunc_HasAuthority_ReturnValue) == 0x000019, "Member 'B_BaseSkill_C_HasAuthority::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_BaseSkill.B_BaseSkill_C.ExecuteUbergraph_B_BaseSkill
// 0x0028 (0x0028 - 0x0000)
struct B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill) == 0x000008, "Wrong alignment on B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill");
static_assert(sizeof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill) == 0x000028, "Wrong size on B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill");
static_assert(offsetof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill, EntryPoint) == 0x000000, "Member 'B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000020, "Member 'B_BaseSkill_C_ExecuteUbergraph_B_BaseSkill::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");

}

