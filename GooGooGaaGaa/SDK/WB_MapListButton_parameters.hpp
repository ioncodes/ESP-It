#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapListButton

#include "Basic.hpp"


namespace SDK::Params
{

// Function WB_MapListButton.WB_MapListButton_C.Clicked
// 0x0048 (0x0048 - 0x0000)
struct WB_MapListButton_C_Clicked final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapList_C*                          K2Node_DynamicCast_AsWB_Map_List;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapCyclePreview_C*                  K2Node_DynamicCast_AsWB_Map_Cycle_Preview;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapList_C*                          K2Node_DynamicCast_AsWB_Map_List_1;                // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddSelectedMapToCycle_Success;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_Clicked) == 0x000008, "Wrong alignment on WB_MapListButton_C_Clicked");
static_assert(sizeof(WB_MapListButton_C_Clicked) == 0x000048, "Wrong size on WB_MapListButton_C_Clicked");
static_assert(offsetof(WB_MapListButton_C_Clicked, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_MapListButton_C_Clicked::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_AsWB_Map_List) == 0x000018, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_AsWB_Map_List' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'WB_MapListButton_C_Clicked::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_AsWB_Map_Cycle_Preview) == 0x000028, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_AsWB_Map_Cycle_Preview' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_AsWB_Map_List_1) == 0x000038, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_AsWB_Map_List_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'WB_MapListButton_C_Clicked::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_Clicked, CallFunc_TryAddSelectedMapToCycle_Success) == 0x000041, "Member 'WB_MapListButton_C_Clicked::CallFunc_TryAddSelectedMapToCycle_Success' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.ExecuteUbergraph_WB_MapListButton
// 0x0004 (0x0004 - 0x0000)
struct WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton) == 0x000004, "Wrong alignment on WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton");
static_assert(sizeof(WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton) == 0x000004, "Wrong size on WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton");
static_assert(offsetof(WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton, EntryPoint) == 0x000000, "Member 'WB_MapListButton_C_ExecuteUbergraph_WB_MapListButton::EntryPoint' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetIcon
// 0x00B0 (0x00B0 - 0x0000)
struct WB_MapListButton_C_GetIcon final
{
public:
	TSoftObjectPtr<class UObject>                 ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_GetIcon_ReturnValue;                      // 0x0060(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 K2Node_Select_Default;                             // 0x0088(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetIcon) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetIcon");
static_assert(sizeof(WB_MapListButton_C_GetIcon) == 0x0000B0, "Wrong size on WB_MapListButton_C_GetIcon");
static_assert(offsetof(WB_MapListButton_C_GetIcon, ReturnValue) == 0x000000, "Member 'WB_MapListButton_C_GetIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIcon, Temp_bool_Variable) == 0x000028, "Member 'WB_MapListButton_C_GetIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIcon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000030, "Member 'WB_MapListButton_C_GetIcon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIcon, CallFunc_IsEmpty_ReturnValue) == 0x000058, "Member 'WB_MapListButton_C_GetIcon::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIcon, CallFunc_GetIcon_ReturnValue) == 0x000060, "Member 'WB_MapListButton_C_GetIcon::CallFunc_GetIcon_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIcon, K2Node_Select_Default) == 0x000088, "Member 'WB_MapListButton_C_GetIcon::K2Node_Select_Default' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetIsSelected
// 0x0018 (0x0018 - 0x0000)
struct WB_MapListButton_C_GetIsSelected final
{
public:
	bool                                          Is_Selected;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSelected_Is_Selected;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapList_C*                          K2Node_DynamicCast_AsWB_Map_List;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetIsSelected) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetIsSelected");
static_assert(sizeof(WB_MapListButton_C_GetIsSelected) == 0x000018, "Wrong size on WB_MapListButton_C_GetIsSelected");
static_assert(offsetof(WB_MapListButton_C_GetIsSelected, Is_Selected) == 0x000000, "Member 'WB_MapListButton_C_GetIsSelected::Is_Selected' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIsSelected, CallFunc_GetIsSelected_Is_Selected) == 0x000001, "Member 'WB_MapListButton_C_GetIsSelected::CallFunc_GetIsSelected_Is_Selected' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIsSelected, K2Node_DynamicCast_AsWB_Map_List) == 0x000008, "Member 'WB_MapListButton_C_GetIsSelected::K2Node_DynamicCast_AsWB_Map_List' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIsSelected, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_MapListButton_C_GetIsSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetIsSelected, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'WB_MapListButton_C_GetIsSelected::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetMapFileName
// 0x0050 (0x0050 - 0x0000)
struct WB_MapListButton_C_GetMapFileName final
{
public:
	bool                                          FileNameIsValid;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename_0;                                        // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 MapFileName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UB_MapButtonData_C*                     K2Node_DynamicCast_AsB_Map_Button_Data;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetMapFileName) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetMapFileName");
static_assert(sizeof(WB_MapListButton_C_GetMapFileName) == 0x000050, "Wrong size on WB_MapListButton_C_GetMapFileName");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, FileNameIsValid) == 0x000000, "Member 'WB_MapListButton_C_GetMapFileName::FileNameIsValid' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, Filename_0) == 0x000008, "Member 'WB_MapListButton_C_GetMapFileName::Filename_0' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, MapFileName) == 0x000018, "Member 'WB_MapListButton_C_GetMapFileName::MapFileName' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, K2Node_DynamicCast_AsB_Map_Button_Data) == 0x000028, "Member 'WB_MapListButton_C_GetMapFileName::K2Node_DynamicCast_AsB_Map_Button_Data' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_MapListButton_C_GetMapFileName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, CallFunc_IsEmpty_ReturnValue) == 0x000031, "Member 'WB_MapListButton_C_GetMapFileName::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'WB_MapListButton_C_GetMapFileName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'WB_MapListButton_C_GetMapFileName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetMapFileName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000048, "Member 'WB_MapListButton_C_GetMapFileName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetNotifyButtonVisibility
// 0x0040 (0x0040 - 0x0000)
struct WB_MapListButton_C_GetNotifyButtonVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapCyclePreview_C*                  MapCyclePreview;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapList_C*                          K2Node_DynamicCast_AsWB_Map_List;                  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MapCycleContainsItem_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MapCycleContainsItem_Index;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetNotifyButtonVisibility) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetNotifyButtonVisibility");
static_assert(sizeof(WB_MapListButton_C_GetNotifyButtonVisibility) == 0x000040, "Wrong size on WB_MapListButton_C_GetNotifyButtonVisibility");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, IsVisible_0) == 0x000000, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, MapCyclePreview) == 0x000008, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::MapCyclePreview' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, K2Node_DynamicCast_AsWB_Map_List) == 0x000028, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::K2Node_DynamicCast_AsWB_Map_List' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, CallFunc_MapCycleContainsItem_ReturnValue) == 0x000031, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::CallFunc_MapCycleContainsItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, CallFunc_MapCycleContainsItem_Index) == 0x000034, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::CallFunc_MapCycleContainsItem_Index' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetNotifyButtonVisibility, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'WB_MapListButton_C_GetNotifyButtonVisibility::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetQuantityVisibility
// 0x0005 (0x0005 - 0x0000)
struct WB_MapListButton_C_GetQuantityVisibility final
{
public:
	bool                                          ShowQuantity;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetQuantityVisibility_ShowQuantity;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetQuantityVisibility) == 0x000001, "Wrong alignment on WB_MapListButton_C_GetQuantityVisibility");
static_assert(sizeof(WB_MapListButton_C_GetQuantityVisibility) == 0x000005, "Wrong size on WB_MapListButton_C_GetQuantityVisibility");
static_assert(offsetof(WB_MapListButton_C_GetQuantityVisibility, ShowQuantity) == 0x000000, "Member 'WB_MapListButton_C_GetQuantityVisibility::ShowQuantity' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetQuantityVisibility, CallFunc_GetQuantityVisibility_ShowQuantity) == 0x000001, "Member 'WB_MapListButton_C_GetQuantityVisibility::CallFunc_GetQuantityVisibility_ShowQuantity' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetQuantityVisibility, CallFunc_IsEmpty_ReturnValue) == 0x000002, "Member 'WB_MapListButton_C_GetQuantityVisibility::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetQuantityVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'WB_MapListButton_C_GetQuantityVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetQuantityVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'WB_MapListButton_C_GetQuantityVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetTooltip
// 0x0080 (0x0080 - 0x0000)
struct WB_MapListButton_C_GetTooltip final
{
public:
	class UUserWidget*                            ToolTip_0;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          MapIsInvalid;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0010(0x0010)()
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapTooltipContent_C*                CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTooltipInstructionsText_Instructions;  // 0x0030(0x0010)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0010)()
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlayernumberText_ReturnValue;          // 0x0058(0x0010)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0010)()
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetTooltip) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetTooltip");
static_assert(sizeof(WB_MapListButton_C_GetTooltip) == 0x000080, "Wrong size on WB_MapListButton_C_GetTooltip");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, ToolTip_0) == 0x000000, "Member 'WB_MapListButton_C_GetTooltip::ToolTip_0' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, MapIsInvalid) == 0x000008, "Member 'WB_MapListButton_C_GetTooltip::MapIsInvalid' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, Temp_text_Variable) == 0x000010, "Member 'WB_MapListButton_C_GetTooltip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, Temp_bool_Variable) == 0x000020, "Member 'WB_MapListButton_C_GetTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, CallFunc_Create_ReturnValue) == 0x000028, "Member 'WB_MapListButton_C_GetTooltip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, CallFunc_GetTooltipInstructionsText_Instructions) == 0x000030, "Member 'WB_MapListButton_C_GetTooltip::CallFunc_GetTooltipInstructionsText_Instructions' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WB_MapListButton_C_GetTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, Temp_bool_Variable_1) == 0x000050, "Member 'WB_MapListButton_C_GetTooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, CallFunc_IsEmpty_ReturnValue) == 0x000051, "Member 'WB_MapListButton_C_GetTooltip::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, CallFunc_GetPlayernumberText_ReturnValue) == 0x000058, "Member 'WB_MapListButton_C_GetTooltip::CallFunc_GetPlayernumberText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, K2Node_Select_Default) == 0x000068, "Member 'WB_MapListButton_C_GetTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltip, K2Node_Select_Default_1) == 0x000078, "Member 'WB_MapListButton_C_GetTooltip::K2Node_Select_Default_1' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.GetTooltipInstructionsText
// 0x0040 (0x0040 - 0x0000)
struct WB_MapListButton_C_GetTooltipInstructionsText final
{
public:
	class FText                                   Instructions;                                      // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   TooltipInstruction;                                // 0x0010(0x0010)(Edit, BlueprintVisible)
	class UWB_MapList_C*                          K2Node_DynamicCast_AsWB_Map_List;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_MapCyclePreview_C*                  K2Node_DynamicCast_AsWB_Map_Cycle_Preview;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_GetTooltipInstructionsText) == 0x000008, "Wrong alignment on WB_MapListButton_C_GetTooltipInstructionsText");
static_assert(sizeof(WB_MapListButton_C_GetTooltipInstructionsText) == 0x000040, "Wrong size on WB_MapListButton_C_GetTooltipInstructionsText");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, Instructions) == 0x000000, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::Instructions' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, TooltipInstruction) == 0x000010, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::TooltipInstruction' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, K2Node_DynamicCast_AsWB_Map_List) == 0x000020, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::K2Node_DynamicCast_AsWB_Map_List' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, K2Node_DynamicCast_AsWB_Map_Cycle_Preview) == 0x000030, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::K2Node_DynamicCast_AsWB_Map_Cycle_Preview' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_GetTooltipInstructionsText, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'WB_MapListButton_C_GetTooltipInstructionsText::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.SetIndividualParameters
// 0x0030 (0x0030 - 0x0000)
struct WB_MapListButton_C_SetIndividualParameters final
{
public:
	class UB_MapButtonData_C*                     MapButtonData;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMapFileName_FileNameIsValid;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetMapFileName_FileName;                  // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_MapButtonData_C*                     K2Node_DynamicCast_AsB_Map_Button_Data;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_SetIndividualParameters) == 0x000008, "Wrong alignment on WB_MapListButton_C_SetIndividualParameters");
static_assert(sizeof(WB_MapListButton_C_SetIndividualParameters) == 0x000030, "Wrong size on WB_MapListButton_C_SetIndividualParameters");
static_assert(offsetof(WB_MapListButton_C_SetIndividualParameters, MapButtonData) == 0x000000, "Member 'WB_MapListButton_C_SetIndividualParameters::MapButtonData' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetIndividualParameters, CallFunc_GetMapFileName_FileNameIsValid) == 0x000008, "Member 'WB_MapListButton_C_SetIndividualParameters::CallFunc_GetMapFileName_FileNameIsValid' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetIndividualParameters, CallFunc_GetMapFileName_FileName) == 0x000010, "Member 'WB_MapListButton_C_SetIndividualParameters::CallFunc_GetMapFileName_FileName' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetIndividualParameters, K2Node_DynamicCast_AsB_Map_Button_Data) == 0x000020, "Member 'WB_MapListButton_C_SetIndividualParameters::K2Node_DynamicCast_AsB_Map_Button_Data' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetIndividualParameters, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_MapListButton_C_SetIndividualParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_MapListButton.WB_MapListButton_C.SetSingleMapForNextMatch
// 0x0120 (0x0120 - 0x0000)
struct WB_MapListButton_C_SetSingleMapForNextMatch final
{
public:
	class AB_GameMode_C*                          BGameMode;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   OpenedMapName;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OfficialRandomMapCycleName;                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_9;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapListButton_C_SetSingleMapForNextMatch) == 0x000008, "Wrong alignment on WB_MapListButton_C_SetSingleMapForNextMatch");
static_assert(sizeof(WB_MapListButton_C_SetSingleMapForNextMatch) == 0x000120, "Wrong size on WB_MapListButton_C_SetSingleMapForNextMatch");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, BGameMode) == 0x000000, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::BGameMode' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, OpenedMapName) == 0x000008, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::OpenedMapName' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, OfficialRandomMapCycleName) == 0x000010, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::OfficialRandomMapCycleName' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000038, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_2) == 0x000048, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_3) == 0x000050, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000058, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000068, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000071, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_4) == 0x000078, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000080, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000089, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameMode_ReturnValue) == 0x000090, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Mode) == 0x000098, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_5) == 0x0000A0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_5) == 0x0000A8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0000B0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_6) == 0x0000B8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B9, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000BA, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_BooleanAND_ReturnValue) == 0x0000BB, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0000BC, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_6) == 0x0000C0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x0000C8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_7) == 0x0000D0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000D1, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D2, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_MakeLiteralByte_ReturnValue) == 0x0000D3, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0000D5, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_7) == 0x0000D8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x0000E0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_8) == 0x0000E8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_8) == 0x0000F0, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x0000F8, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_9) == 0x000100, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, CallFunc_GetGameInstance_ReturnValue_9) == 0x000108, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_AsB_Game_Instance_9) == 0x000110, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_AsB_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(WB_MapListButton_C_SetSingleMapForNextMatch, K2Node_DynamicCast_bSuccess_10) == 0x000118, "Member 'WB_MapListButton_C_SetSingleMapForNextMatch::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");

}

