#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Wagon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Wagon.B_Wagon_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_Wagon_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Wagon_C_ReceiveTick) == 0x000004, "Wrong alignment on B_Wagon_C_ReceiveTick");
static_assert(sizeof(B_Wagon_C_ReceiveTick) == 0x000004, "Wrong size on B_Wagon_C_ReceiveTick");
static_assert(offsetof(B_Wagon_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_Wagon_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_Wagon.B_Wagon_C.ExecuteUbergraph_B_Wagon
// 0x0180 (0x0180 - 0x0000)
struct B_Wagon_C_ExecuteUbergraph_B_Wagon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A8[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A9[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AA[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_K2_GetVectorParameterValue_ReturnValue;   // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x00C0(0x0010)(ReferenceParm)
	class UMaterialInterface*                     CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesMaterialHaveParameter_ReturnValue;    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AB[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35AC[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Wagon_C_ExecuteUbergraph_B_Wagon) == 0x000008, "Wrong alignment on B_Wagon_C_ExecuteUbergraph_B_Wagon");
static_assert(sizeof(B_Wagon_C_ExecuteUbergraph_B_Wagon) == 0x000180, "Wrong size on B_Wagon_C_ExecuteUbergraph_B_Wagon");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, EntryPoint) == 0x000000, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, Temp_int_Variable) == 0x000004, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_GetVelocity_ReturnValue) == 0x000028, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_VSizeSquared_ReturnValue) == 0x000048, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_VLerp_ReturnValue) == 0x000090, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_K2_GetVectorParameterValue_ReturnValue) == 0x0000B0, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_K2_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_GetMaterials_ReturnValue) == 0x0000C0, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_DoesMaterialHaveParameter_ReturnValue) == 0x0000F0, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_DoesMaterialHaveParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_VInterpTo_Constant_ReturnValue) == 0x0000F8, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_VInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_BreakVector_X) == 0x000110, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_BreakVector_Y) == 0x000118, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_BreakVector_Z) == 0x000120, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Length_ReturnValue_1) == 0x000128, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, K2Node_MakeStruct_LinearColor) == 0x00012C, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000140, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000144, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000148, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000154, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_MakeVector_X_ImplicitCast) == 0x000158, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_MakeVector_Y_ImplicitCast) == 0x000160, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, CallFunc_MakeVector_Z_ImplicitCast) == 0x000168, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, K2Node_MakeStruct_R_ImplicitCast) == 0x000170, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, K2Node_MakeStruct_G_ImplicitCast) == 0x000174, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Wagon_C_ExecuteUbergraph_B_Wagon, K2Node_MakeStruct_B_ImplicitCast) == 0x000178, "Member 'B_Wagon_C_ExecuteUbergraph_B_Wagon::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

}

