#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_KillSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_KillSkill.B_KillSkill_C.CanActivate
// 0x0004 (0x0004 - 0x0000)
struct B_KillSkill_C_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_KillSkill_C_CanActivate) == 0x000001, "Wrong alignment on B_KillSkill_C_CanActivate");
static_assert(sizeof(B_KillSkill_C_CanActivate) == 0x000004, "Wrong size on B_KillSkill_C_CanActivate");
static_assert(offsetof(B_KillSkill_C_CanActivate, ReturnValue) == 0x000000, "Member 'B_KillSkill_C_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_CanActivate, CallFunc_CanActivate_ReturnValue) == 0x000001, "Member 'B_KillSkill_C_CanActivate::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_CanActivate, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'B_KillSkill_C_CanActivate::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'B_KillSkill_C_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_KillSkill.B_KillSkill_C.ExecuteUbergraph_B_KillSkill
// 0x0020 (0x0020 - 0x0000)
struct B_KillSkill_C_ExecuteUbergraph_B_KillSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA4[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA5[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_currentCooldown_ImplicitCast;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill) == 0x000008, "Wrong alignment on B_KillSkill_C_ExecuteUbergraph_B_KillSkill");
static_assert(sizeof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill) == 0x000020, "Wrong size on B_KillSkill_C_ExecuteUbergraph_B_KillSkill");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, EntryPoint) == 0x000000, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, CallFunc_CanActivate_ReturnValue) == 0x000004, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_ExecuteUbergraph_B_KillSkill, K2Node_VariableSet_currentCooldown_ImplicitCast) == 0x000018, "Member 'B_KillSkill_C_ExecuteUbergraph_B_KillSkill::K2Node_VariableSet_currentCooldown_ImplicitCast' has a wrong offset!");

// Function B_KillSkill.B_KillSkill_C.Initialize
// 0x0058 (0x0058 - 0x0000)
struct B_KillSkill_C_Initialize final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA7[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BA8[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_KillSkill_C_Initialize) == 0x000008, "Wrong alignment on B_KillSkill_C_Initialize");
static_assert(sizeof(B_KillSkill_C_Initialize) == 0x000058, "Wrong size on B_KillSkill_C_Initialize");
static_assert(offsetof(B_KillSkill_C_Initialize, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_KillSkill_C_Initialize::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'B_KillSkill_C_Initialize::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_AsB_Player_Controller) == 0x000020, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'B_KillSkill_C_Initialize::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_AsPawn) == 0x000038, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000048, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_Initialize, K2Node_DynamicCast_bSuccess_3) == 0x000050, "Member 'B_KillSkill_C_Initialize::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function B_KillSkill.B_KillSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_KillSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_KillSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on B_KillSkill_C_ReceiveTick");
static_assert(sizeof(B_KillSkill_C_ReceiveTick) == 0x000004, "Wrong size on B_KillSkill_C_ReceiveTick");
static_assert(offsetof(B_KillSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_KillSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_KillSkill.B_KillSkill_C.TickMode
// 0x0005 (0x0005 - 0x0000)
struct B_KillSkill_C_TickMode final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_KillSkill_C_TickMode) == 0x000001, "Wrong alignment on B_KillSkill_C_TickMode");
static_assert(sizeof(B_KillSkill_C_TickMode) == 0x000005, "Wrong size on B_KillSkill_C_TickMode");
static_assert(offsetof(B_KillSkill_C_TickMode, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_KillSkill_C_TickMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_TickMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'B_KillSkill_C_TickMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_TickMode, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'B_KillSkill_C_TickMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_TickMode, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'B_KillSkill_C_TickMode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_KillSkill_C_TickMode, CallFunc_IsLocalController_ReturnValue) == 0x000004, "Member 'B_KillSkill_C_TickMode::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

}

