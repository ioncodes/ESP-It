#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TournamentScoreScreen

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_TournamentScoreScreen.WB_TournamentScoreScreen_C.WB_TournamentScoreScreen_AutoGenFunc
// 0x0038 (0x0038 - 0x0000)
struct WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc final
{
public:
	class UObject*                                ObjectA;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ObjectB;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A8[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TournamentPlayer_C*                  K2Node_DynamicCast_AsB_Tournament_Player;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59A9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TournamentPlayer_C*                  K2Node_DynamicCast_AsB_Tournament_Player_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc) == 0x000008, "Wrong alignment on WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc");
static_assert(sizeof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc) == 0x000038, "Wrong size on WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, ObjectA) == 0x000000, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::ObjectA' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, ObjectB) == 0x000008, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::ObjectB' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, Result) == 0x000010, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::Result' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, K2Node_DynamicCast_AsB_Tournament_Player) == 0x000018, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::K2Node_DynamicCast_AsB_Tournament_Player' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, K2Node_DynamicCast_AsB_Tournament_Player_1) == 0x000028, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::K2Node_DynamicCast_AsB_Tournament_Player_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WB_TournamentScoreScreen_C_WB_TournamentScoreScreen_AutoGenFunc::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_TournamentScoreScreen.WB_TournamentScoreScreen_C.Get_Round_Text_0
// 0x0098 (0x0098 - 0x0000)
struct WB_TournamentScoreScreen_C_Get_Round_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
};
static_assert(alignof(WB_TournamentScoreScreen_C_Get_Round_Text_0) == 0x000008, "Wrong alignment on WB_TournamentScoreScreen_C_Get_Round_Text_0");
static_assert(sizeof(WB_TournamentScoreScreen_C_Get_Round_Text_0) == 0x000098, "Wrong size on WB_TournamentScoreScreen_C_Get_Round_Text_0");
static_assert(offsetof(WB_TournamentScoreScreen_C_Get_Round_Text_0, ReturnValue) == 0x000000, "Member 'WB_TournamentScoreScreen_C_Get_Round_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_Get_Round_Text_0, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'WB_TournamentScoreScreen_C_Get_Round_Text_0::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_Get_Round_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WB_TournamentScoreScreen_C_Get_Round_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_Get_Round_Text_0, K2Node_MakeArray_Array) == 0x000070, "Member 'WB_TournamentScoreScreen_C_Get_Round_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_Get_Round_Text_0, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WB_TournamentScoreScreen_C_Get_Round_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_TournamentScoreScreen.WB_TournamentScoreScreen_C.RefreshPlayerList
// 0x00E8 (0x00E8 - 0x0000)
struct WB_TournamentScoreScreen_C_RefreshPlayerList final
{
public:
	class UWB_PlayerScore_C*                      CurrentPlayerScore;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TournamentPlayer_C*                  CurrentTournamentPlayer;                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_TournamentPlayer_C*>          TournamentPlayers;                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FString                                 PlayerName;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TournamentPlayer_C*>          CallFunc_Map_Values_Values;                        // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AD[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AE[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59AF[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           K2Node_Select_Default_1;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           K2Node_Select_Default_2;                           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B0[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TournamentPlayer_C*                  CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B1[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B2[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerScore_C*                      K2Node_DynamicCast_AsWB_Player_Score;              // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59B3[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* ObjectA, class UObject* ObjectB, bool* Result)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScoreScreen_C_RefreshPlayerList) == 0x000008, "Wrong alignment on WB_TournamentScoreScreen_C_RefreshPlayerList");
static_assert(sizeof(WB_TournamentScoreScreen_C_RefreshPlayerList) == 0x0000E8, "Wrong size on WB_TournamentScoreScreen_C_RefreshPlayerList");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CurrentPlayerScore) == 0x000000, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CurrentPlayerScore' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CurrentIndex) == 0x000008, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CurrentTournamentPlayer) == 0x000010, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CurrentTournamentPlayer' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, TournamentPlayers) == 0x000018, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::TournamentPlayers' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, PlayerName) == 0x000028, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::PlayerName' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_bool_Variable) == 0x000038, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_DynamicCast_AsB_Game_State) == 0x000048, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Map_Values_Values) == 0x000058, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_bool_Variable_1) == 0x000074, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000080, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_Select_Default) == 0x000084, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000089, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00008A, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_bool_Variable_2) == 0x00008B, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_Select_Default_1) == 0x000090, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_Select_Default_2) == 0x000098, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, Temp_bool_Variable_3) == 0x0000A4, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_Select_Default_3) == 0x0000B0, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_GetChildAt_ReturnValue) == 0x0000B8, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_DynamicCast_AsWB_Player_Score) == 0x0000C8, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_DynamicCast_AsWB_Player_Score' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, CallFunc_Less_IntInt_ReturnValue) == 0x0000D1, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_RefreshPlayerList, K2Node_CreateDelegate_OutputDelegate) == 0x0000D4, "Member 'WB_TournamentScoreScreen_C_RefreshPlayerList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WB_TournamentScoreScreen.WB_TournamentScoreScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_TournamentScoreScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScoreScreen_C_Tick) == 0x000004, "Wrong alignment on WB_TournamentScoreScreen_C_Tick");
static_assert(sizeof(WB_TournamentScoreScreen_C_Tick) == 0x00003C, "Wrong size on WB_TournamentScoreScreen_C_Tick");
static_assert(offsetof(WB_TournamentScoreScreen_C_Tick, MyGeometry) == 0x000000, "Member 'WB_TournamentScoreScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_TournamentScoreScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_TournamentScoreScreen.WB_TournamentScoreScreen_C.ExecuteUbergraph_WB_TournamentScoreScreen
// 0x0040 (0x0040 - 0x0000)
struct WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen) == 0x000004, "Wrong alignment on WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen");
static_assert(sizeof(WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen) == 0x000040, "Wrong size on WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen");
static_assert(offsetof(WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen, EntryPoint) == 0x000000, "Member 'WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_TournamentScoreScreen_C_ExecuteUbergraph_WB_TournamentScoreScreen::K2Node_Event_InDeltaTime' has a wrong offset!");

}

