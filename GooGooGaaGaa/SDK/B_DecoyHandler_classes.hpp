#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_DecoyHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_DecoyHandler.B_DecoyHandler_C
// 0x0010 (0x00B0 - 0x00A0)
class UB_DecoyHandler_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        Health;                                            // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddDecoyHitStat(class AController* DecoyController);
	void RecieveDamage(double Damage, class AController* Instigator);
	void ReceiveBeginPlay();
	void DamageEffectMulti(const struct FVector& Location, const struct FRotator& Rotation);
	void AnyDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void PointDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser);
	void ExecuteUbergraph_B_DecoyHandler(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_DecoyHandler_C">();
	}
	static class UB_DecoyHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_DecoyHandler_C>();
	}
};
static_assert(alignof(UB_DecoyHandler_C) == 0x000008, "Wrong alignment on UB_DecoyHandler_C");
static_assert(sizeof(UB_DecoyHandler_C) == 0x0000B0, "Wrong size on UB_DecoyHandler_C");
static_assert(offsetof(UB_DecoyHandler_C, UberGraphFrame) == 0x0000A0, "Member 'UB_DecoyHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_DecoyHandler_C, Health) == 0x0000A8, "Member 'UB_DecoyHandler_C::Health' has a wrong offset!");

}

