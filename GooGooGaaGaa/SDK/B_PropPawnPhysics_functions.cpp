#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PropPawnPhysics

#include "Basic.hpp"

#include "B_PropPawnPhysics_classes.hpp"
#include "B_PropPawnPhysics_parameters.hpp"


namespace SDK
{

// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ClientPossessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ClientPossessed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ClientPossessed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetCameraSettings
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::SetCameraSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetCameraSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetSpringArmProperties
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstPerson                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SetSpringArmProperties(bool FirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetSpringArmProperties");

	Params::B_PropPawnPhysics_C_SetSpringArmProperties Parms{};

	Parms.FirstPerson = FirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetWitch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SetWitch(const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetWitch");

	Params::B_PropPawnPhysics_C_SetWitch Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TransformEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSRuntimePropData                LastRuntimePropData                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSRuntimePropData                CurrentRuntimePropData                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::TransformEffect(const struct FSRuntimePropData& LastRuntimePropData, const struct FSRuntimePropData& CurrentRuntimePropData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TransformEffect");

	Params::B_PropPawnPhysics_C_TransformEffect Parms{};

	Parms.LastRuntimePropData = std::move(LastRuntimePropData);
	Parms.CurrentRuntimePropData = std::move(CurrentRuntimePropData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ExecuteUbergraph_B_PropPawnPhysics
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ExecuteUbergraph_B_PropPawnPhysics(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ExecuteUbergraph_B_PropPawnPhysics");

	Params::B_PropPawnPhysics_C_ExecuteUbergraph_B_PropPawnPhysics Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.GetCurrentController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Param_Controller                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::GetCurrentController(class AController** Param_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "GetCurrentController");

	Params::B_PropPawnPhysics_C_GetCurrentController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Controller != nullptr)
		*Param_Controller = Parms.Param_Controller;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.GetAttachComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Component                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::GetAttachComponent(class USceneComponent** Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "GetAttachComponent");

	Params::B_PropPawnPhysics_C_GetAttachComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Component != nullptr)
		*Component = Parms.Component;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.OnControllingPropSleep
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              SleepingComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::OnControllingPropSleep(class UPrimitiveComponent* SleepingComponent, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "OnControllingPropSleep");

	Params::B_PropPawnPhysics_C_OnControllingPropSleep Parms{};

	Parms.SleepingComponent = SleepingComponent;
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.UnhideFromOtherPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::UnhideFromOtherPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "UnhideFromOtherPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.HideToOtherPlayers
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::HideToOtherPlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "HideToOtherPlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetMeshVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::SetMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetMeshVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.RulesUpdated
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::RulesUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "RulesUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.StartZoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MouseWheelAxis                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::StartZoom(double MouseWheelAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "StartZoom");

	Params::B_PropPawnPhysics_C_StartZoom Parms{};

	Parms.MouseWheelAxis = MouseWheelAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.UpdateTPArmLength
// (Private, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::UpdateTPArmLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "UpdateTPArmLength");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetOriginalTPArmLength
// (Private, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::SetOriginalTPArmLength()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetOriginalTPArmLength");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.GetMenuUIManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UB_MenuUIManager_C*               Param_MenuUIManager                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::GetMenuUIManager(class UB_MenuUIManager_C** Param_MenuUIManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "GetMenuUIManager");

	Params::B_PropPawnPhysics_C_GetMenuUIManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MenuUIManager != nullptr)
		*Param_MenuUIManager = Parms.Param_MenuUIManager;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.GetSettingsSave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UB_SettingsSave_C*                Param_SettingsSave                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::GetSettingsSave(class UB_SettingsSave_C** Param_SettingsSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "GetSettingsSave");

	Params::B_PropPawnPhysics_C_GetSettingsSave Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SettingsSave != nullptr)
		*Param_SettingsSave = Parms.Param_SettingsSave;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.StopStabilize
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::StopStabilize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "StopStabilize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.StartStabilize
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::StartStabilize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "StartStabilize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickManaDrainDebuff
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickManaDrainDebuff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickManaDrainDebuff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetVisualChildVisibility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstPerson                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DetectedInvalidChildren                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SetVisualChildVisibility(bool FirstPerson, bool* DetectedInvalidChildren)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetVisualChildVisibility");

	Params::B_PropPawnPhysics_C_SetVisualChildVisibility Parms{};

	Parms.FirstPerson = FirstPerson;

	UObject::ProcessEvent(Func, &Parms);

	if (DetectedInvalidChildren != nullptr)
		*DetectedInvalidChildren = Parms.DetectedInvalidChildren;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetControllingPropVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FirstPerson                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SetControllingPropVisibility(bool FirstPerson)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetControllingPropVisibility");

	Params::B_PropPawnPhysics_C_SetControllingPropVisibility Parms{};

	Parms.FirstPerson = FirstPerson;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ToggleCameraView
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ToggleCameraView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ToggleCameraView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PostProcessTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PostProcessTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PostProcessTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ProcessTeleport
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ProcessTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ProcessTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickTransformBack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickTransformBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickTransformBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.RecalculateHP
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::RecalculateHP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "RecalculateHP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SwitchPropBack
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::SwitchPropBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SwitchPropBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TransformTest
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ValidTransform                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::TransformTest(const struct FTransform& SpawnTransform, TArray<class AActor*>& IgnoreActors, bool* ValidTransform, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TransformTest");

	Params::B_PropPawnPhysics_C_TransformTest Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);

	if (ValidTransform != nullptr)
		*ValidTransform = Parms.ValidTransform;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.OffsetPosition
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       WantedSpawnTransform                                   (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>                   IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ValidTransform                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::OffsetPosition(const struct FTransform& WantedSpawnTransform, TArray<class AActor*>& IgnoreActors, bool* ValidTransform, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "OffsetPosition");

	Params::B_PropPawnPhysics_C_OffsetPosition Parms{};

	Parms.WantedSpawnTransform = std::move(WantedSpawnTransform);
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);

	if (ValidTransform != nullptr)
		*ValidTransform = Parms.ValidTransform;

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.Slow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::Slow(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "Slow");

	Params::B_PropPawnPhysics_C_Slow Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.IsAnySkillActive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    AnySkillActive                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::IsAnySkillActive(bool* AnySkillActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "IsAnySkillActive");

	Params::B_PropPawnPhysics_C_IsAnySkillActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AnySkillActive != nullptr)
		*AnySkillActive = Parms.AnySkillActive;
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickSurvivalTime
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickSurvivalTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickSurvivalTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.DecreaseTauntBudget
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::DecreaseTauntBudget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "DecreaseTauntBudget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlayCommunicationSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        SoundToPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::PlayCommunicationSound(class USoundCue* SoundToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlayCommunicationSound");

	Params::B_PropPawnPhysics_C_PlayCommunicationSound Parms{};

	Parms.SoundToPlay = SoundToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ShowScoreStats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ShowScoreStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ShowScoreStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.UpdateTravelDistance
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::UpdateTravelDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "UpdateTravelDistance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.UpdateAveragePropSize
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::UpdateAveragePropSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "UpdateAveragePropSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.UpdateAverageDistanceToHunters
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::UpdateAverageDistanceToHunters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "UpdateAverageDistanceToHunters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.DestroyVisualChild
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_VisualIntepolator_C*           VisualChild                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::DestroyVisualChild(class AB_VisualIntepolator_C* VisualChild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "DestroyVisualChild");

	Params::B_PropPawnPhysics_C_DestroyVisualChild Parms{};

	Parms.VisualChild = VisualChild;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.NoValidTransformUX
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::NoValidTransformUX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "NoValidTransformUX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.LoadSkills
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Param_Controller                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::LoadSkills(class AController* Param_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "LoadSkills");

	Params::B_PropPawnPhysics_C_LoadSkills Parms{};

	Parms.Param_Controller = Param_Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InitializePlayername
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::InitializePlayername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InitializePlayername");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.Fire
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::Fire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "Fire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SwitchProp
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SwitchProp(class AActor* Prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SwitchProp");

	Params::B_PropPawnPhysics_C_SwitchProp Parms{};

	Parms.Prop = Prop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickStabilize
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickStabilize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickStabilize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.TickMovement
// (Public, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::TickMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "TickMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.GetWantedSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::GetWantedSpawnTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "GetWantedSpawnTransform");

	Params::B_PropPawnPhysics_C_GetWantedSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.OnRep_ControllingProp
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::OnRep_ControllingProp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "OnRep_ControllingProp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SpawnProp
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SpawnedProp                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FSRuntimePropData                LastRuntimePropData                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::SpawnProp(class AActor* Template, const struct FTransform& SpawnTransform, class AActor** SpawnedProp, struct FSRuntimePropData* LastRuntimePropData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SpawnProp");

	Params::B_PropPawnPhysics_C_SpawnProp Parms{};

	Parms.Template = Template;
	Parms.SpawnTransform = std::move(SpawnTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnedProp != nullptr)
		*SpawnedProp = Parms.SpawnedProp;

	if (LastRuntimePropData != nullptr)
		*LastRuntimePropData = std::move(Parms.LastRuntimePropData);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Jump_K2Node_InputActionEvent_22
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Jump_K2Node_InputActionEvent_22(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Jump_K2Node_InputActionEvent_22");

	Params::B_PropPawnPhysics_C_InpActEvt_Jump_K2Node_InputActionEvent_22 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Fire_K2Node_InputActionEvent_21
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Fire_K2Node_InputActionEvent_21(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Fire_K2Node_InputActionEvent_21");

	Params::B_PropPawnPhysics_C_InpActEvt_Fire_K2Node_InputActionEvent_21 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Fire_K2Node_InputActionEvent_20
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Fire_K2Node_InputActionEvent_20(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Fire_K2Node_InputActionEvent_20");

	Params::B_PropPawnPhysics_C_InpActEvt_Fire_K2Node_InputActionEvent_20 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Four_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Four_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Four_K2Node_InputKeyEvent_0");

	Params::B_PropPawnPhysics_C_InpActEvt_Four_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Action_K2Node_InputActionEvent_19
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Action_K2Node_InputActionEvent_19(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Action_K2Node_InputActionEvent_19");

	Params::B_PropPawnPhysics_C_InpActEvt_Action_K2Node_InputActionEvent_19 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_QuestionSound_K2Node_InputActionEvent_18
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_QuestionSound_K2Node_InputActionEvent_18(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_QuestionSound_K2Node_InputActionEvent_18");

	Params::B_PropPawnPhysics_C_InpActEvt_QuestionSound_K2Node_InputActionEvent_18 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_SpeakSound_K2Node_InputActionEvent_17
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_SpeakSound_K2Node_InputActionEvent_17(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_SpeakSound_K2Node_InputActionEvent_17");

	Params::B_PropPawnPhysics_C_InpActEvt_SpeakSound_K2Node_InputActionEvent_17 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Stabilize_K2Node_InputActionEvent_16
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Stabilize_K2Node_InputActionEvent_16(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Stabilize_K2Node_InputActionEvent_16");

	Params::B_PropPawnPhysics_C_InpActEvt_Stabilize_K2Node_InputActionEvent_16 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_Stabilize_K2Node_InputActionEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_Stabilize_K2Node_InputActionEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_Stabilize_K2Node_InputActionEvent_15");

	Params::B_PropPawnPhysics_C_InpActEvt_Stabilize_K2Node_InputActionEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActivateSkill_K2Node_InputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActivateSkill_K2Node_InputActionEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActivateSkill_K2Node_InputActionEvent_14");

	Params::B_PropPawnPhysics_C_InpActEvt_ActivateSkill_K2Node_InputActionEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActivateSkill_K2Node_InputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActivateSkill_K2Node_InputActionEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActivateSkill_K2Node_InputActionEvent_13");

	Params::B_PropPawnPhysics_C_InpActEvt_ActivateSkill_K2Node_InputActionEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_12");

	Params::B_PropPawnPhysics_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_11");

	Params::B_PropPawnPhysics_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionUp_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionUp_K2Node_InputActionEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionUp_K2Node_InputActionEvent_10");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionUp_K2Node_InputActionEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionUp_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionUp_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionUp_K2Node_InputActionEvent_9");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionUp_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionDown_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionDown_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionDown_K2Node_InputActionEvent_8");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionDown_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionDown_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionDown_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionDown_K2Node_InputActionEvent_7");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionDown_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionLeft_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionLeft_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionLeft_K2Node_InputActionEvent_6");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionLeft_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionLeft_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionLeft_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionLeft_K2Node_InputActionEvent_5");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionLeft_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionRight_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionRight_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionRight_K2Node_InputActionEvent_4");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionRight_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionRight_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionRight_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionRight_K2Node_InputActionEvent_3");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionRight_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionUse_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionUse_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionUse_K2Node_InputActionEvent_2");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionUse_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_ActionUse_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_ActionUse_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_ActionUse_K2Node_InputActionEvent_1");

	Params::B_PropPawnPhysics_C_InpActEvt_ActionUse_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpActEvt_SwitchCamera_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpActEvt_SwitchCamera_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpActEvt_SwitchCamera_K2Node_InputActionEvent_0");

	Params::B_PropPawnPhysics_C_InpActEvt_SwitchCamera_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_40
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_40(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_40");

	Params::B_PropPawnPhysics_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_40 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_47
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_47(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_47");

	Params::B_PropPawnPhysics_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_47 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38");

	Params::B_PropPawnPhysics_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_38 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53");

	Params::B_PropPawnPhysics_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_53 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerJump
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ServerJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerStop
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_PropPawnPhysics_C::ServerStop(bool Start, const struct FRotator& WantedRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerStop");

	Params::B_PropPawnPhysics_C_ServerStop Parms{};

	Parms.Start = Start;
	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ReceivePossessed");

	Params::B_PropPawnPhysics_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.DebugServerDamage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::DebugServerDamage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "DebugServerDamage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerSwitchProp
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ServerSwitchProp(class AActor* Prop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerSwitchProp");

	Params::B_PropPawnPhysics_C_ServerSwitchProp Parms{};

	Parms.Prop = Prop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ControllingPropDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ControllingPropDamage(class AActor* DamagedActor, float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ControllingPropDamage");

	Params::B_PropPawnPhysics_C_ControllingPropDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_PropPawnPhysics_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.RemoveControllingProp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::RemoveControllingProp(class AController* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "RemoveControllingProp");

	Params::B_PropPawnPhysics_C_RemoveControllingProp Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ReceiveTick");

	Params::B_PropPawnPhysics_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerAction
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ServerAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.MultiAction
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::MultiAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "MultiAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.NoValidTransform
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::NoValidTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "NoValidTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerSetWantedRotation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_PropPawnPhysics_C::ServerSetWantedRotation(const struct FRotator& WantedRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerSetWantedRotation");

	Params::B_PropPawnPhysics_C_ServerSetWantedRotation Parms{};

	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.MultiStop
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Start                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         WantedRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_PropPawnPhysics_C::MultiStop(bool Start, const struct FRotator& WantedRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "MultiStop");

	Params::B_PropPawnPhysics_C_MultiStop Parms{};

	Parms.Start = Start;
	Parms.WantedRotation = std::move(WantedRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_0_OnKilled__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AController*                      Killer                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_0_OnKilled__DelegateSignature(class AController* Killer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_0_OnKilled__DelegateSignature");

	Params::B_PropPawnPhysics_C_BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_0_OnKilled__DelegateSignature Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ControllingPropPointDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DamagedActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              FHitComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ControllingPropPointDamage(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& ShotFromDirection, const class UDamageType* DamageType, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ControllingPropPointDamage");

	Params::B_PropPawnPhysics_C_ControllingPropPointDamage Parms{};

	Parms.DamagedActor = DamagedActor;
	Parms.Damage = Damage;
	Parms.InstigatedBy = InstigatedBy;
	Parms.HitLocation = std::move(HitLocation);
	Parms.FHitComponent = FHitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.DamageType = DamageType;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.OnKilledMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::OnKilledMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "OnKilledMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_4_OnDispelDebuffStart__DelegateSignature
// (BlueprintEvent)

void AB_PropPawnPhysics_C::BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_4_OnDispelDebuffStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_4_OnDispelDebuffStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_5_OnDispelDebuffEnd__DelegateSignature
// (BlueprintEvent)

void AB_PropPawnPhysics_C::BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_5_OnDispelDebuffEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_5_OnDispelDebuffEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlayDispelSoundMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlayDispelSoundMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlayDispelSoundMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlayDispelSoundServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlayDispelSoundServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlayDispelSoundServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.MultiJump
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::MultiJump()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "MultiJump");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AB_PropPawnPhysics_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlayQuestionSound
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlayQuestionSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlayQuestionSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlaySpeakSound
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlaySpeakSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlaySpeakSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlayQuestionSoundMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlayQuestionSoundMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlayQuestionSoundMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PlaySpeakSoundMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::PlaySpeakSoundMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PlaySpeakSoundMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.SetControllerRotation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AB_PropPawnPhysics_C::SetControllerRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "SetControllerRotation");

	Params::B_PropPawnPhysics_C_SetControllerRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ActionUpServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Release                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ActionUpServer(bool Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ActionUpServer");

	Params::B_PropPawnPhysics_C_ActionUpServer Parms{};

	Parms.Release = Release;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ActionDownServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Release                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ActionDownServer(bool Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ActionDownServer");

	Params::B_PropPawnPhysics_C_ActionDownServer Parms{};

	Parms.Release = Release;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ActionLeftServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Release                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ActionLeftServer(bool Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ActionLeftServer");

	Params::B_PropPawnPhysics_C_ActionLeftServer Parms{};

	Parms.Release = Release;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ActionRightServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Release                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ActionRightServer(bool Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ActionRightServer");

	Params::B_PropPawnPhysics_C_ActionRightServer Parms{};

	Parms.Release = Release;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ActionUseServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Release                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ActionUseServer(bool Release)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ActionUseServer");

	Params::B_PropPawnPhysics_C_ActionUseServer Parms{};

	Parms.Release = Release;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerSwitchBack
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ServerSwitchBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerSwitchBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.MultiSwitchBack
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::MultiSwitchBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "MultiSwitchBack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ProcessTeleportEvent
// (BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::ProcessTeleportEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ProcessTeleportEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.AssignOnKilled
// (BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::AssignOnKilled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "AssignOnKilled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_2_OnManaDrainDebuffStart__DelegateSignature
// (BlueprintEvent)

void AB_PropPawnPhysics_C::BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_2_OnManaDrainDebuffStart__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_2_OnManaDrainDebuffStart__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_3_OnManaDrainDebuffEnd__DelegateSignature
// (BlueprintEvent)

void AB_PropPawnPhysics_C::BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_3_OnManaDrainDebuffEnd__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "BndEvt__WhichHuntActorEvents_K2Node_ComponentBoundEvent_3_OnManaDrainDebuffEnd__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.PropPossessed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_PossessedProp                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::PropPossessed(class AActor* Param_PossessedProp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "PropPossessed");

	Params::B_PropPawnPhysics_C_PropPossessed Parms{};

	Parms.Param_PossessedProp = Param_PossessedProp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.Test
// (BlueprintCallable, BlueprintEvent)

void AB_PropPawnPhysics_C::Test()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "Test");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PropPawnPhysics.B_PropPawnPhysics_C.ServerToggleMovementAllowed
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_MovementAllowed                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PropPawnPhysics_C::ServerToggleMovementAllowed(bool Param_MovementAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PropPawnPhysics_C", "ServerToggleMovementAllowed");

	Params::B_PropPawnPhysics_C_ServerToggleMovementAllowed Parms{};

	Parms.Param_MovementAllowed = Param_MovementAllowed;

	UObject::ProcessEvent(Func, &Parms);
}

}

