#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CheckBoxWithLabelSmall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C
// 0x0088 (0x0348 - 0x02C0)
class UWB_CheckBoxWithLabelSmall_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        GamePadSwitcher;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label;                                             // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              LabelWithoutIcon;                                  // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              MyCheckBox;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIconWithLabel_C*          WB_ControllerIconWithLabel;                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FKey                                   BoundKey;                                          // 0x02F0(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FKey                                   KeyNone;                                           // 0x0308(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCheckStateChanged;                               // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   LabelText;                                         // 0x0330(0x0018)(Edit, BlueprintVisible)

public:
	void ChangeActiveWidget(class UWidget* Widget);
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnGamePadModeChanged_Event(bool bGamePadMode);
	void InitControllerLayout();
	void ChangeControllerLayout(bool GamePadMode);
	void BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void OnCheckStateChanged__DelegateSignature(bool bIsChecked);
	void ExecuteUbergraph_WB_CheckBoxWithLabelSmall(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CheckBoxWithLabelSmall_C">();
	}
	static class UWB_CheckBoxWithLabelSmall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CheckBoxWithLabelSmall_C>();
	}
};
static_assert(alignof(UWB_CheckBoxWithLabelSmall_C) == 0x000008, "Wrong alignment on UWB_CheckBoxWithLabelSmall_C");
static_assert(sizeof(UWB_CheckBoxWithLabelSmall_C) == 0x000348, "Wrong size on UWB_CheckBoxWithLabelSmall_C");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_CheckBoxWithLabelSmall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, GamePadSwitcher) == 0x0002C8, "Member 'UWB_CheckBoxWithLabelSmall_C::GamePadSwitcher' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, Label) == 0x0002D0, "Member 'UWB_CheckBoxWithLabelSmall_C::Label' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, LabelWithoutIcon) == 0x0002D8, "Member 'UWB_CheckBoxWithLabelSmall_C::LabelWithoutIcon' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, MyCheckBox) == 0x0002E0, "Member 'UWB_CheckBoxWithLabelSmall_C::MyCheckBox' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, WB_ControllerIconWithLabel) == 0x0002E8, "Member 'UWB_CheckBoxWithLabelSmall_C::WB_ControllerIconWithLabel' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, BoundKey) == 0x0002F0, "Member 'UWB_CheckBoxWithLabelSmall_C::BoundKey' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, KeyNone) == 0x000308, "Member 'UWB_CheckBoxWithLabelSmall_C::KeyNone' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, OnCheckStateChanged) == 0x000320, "Member 'UWB_CheckBoxWithLabelSmall_C::OnCheckStateChanged' has a wrong offset!");
static_assert(offsetof(UWB_CheckBoxWithLabelSmall_C, LabelText) == 0x000330, "Member 'UWB_CheckBoxWithLabelSmall_C::LabelText' has a wrong offset!");

}

