#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PoolManager

#include "Basic.hpp"

#include "PropWitchHuntModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_PoolManager.B_PoolManager_C
// 0x0060 (0x0090 - 0x0030)
class UB_PoolManager_C final : public UBaseManager
{
public:
	TArray<class UB_Pool_C*>                      Pools;                                             // 0x0030(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class UClass*, class UB_Pool_C*>         PoolMap;                                           // 0x0040(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddActorToPool(class UB_Pool_C* Pool, class AActor* ActorToAdd);
	void AddPoolIfNewClass(const class UClass*& Pool_Class_To_Add);
	void EmptyPools();
	void GetPoolByClass(class UClass* Param_Class, class UB_Pool_C** Pool);
	void MoveActorToPoolAndTearDown(class AActor* Actor);
	void PoolHasActorReady(class UClass* Param_Class, bool* PoolFilled);
	bool PoolOfClassExists(const class UClass*& ClassToFind);
	void RemoveActorFromPool(class UB_Pool_C* Pool, class AActor* ActorToRemove);
	class AActor* SpawnActorAndTearUp(class UClass* Param_Class, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigator);
	class AActor* TakeActorFromPoolAndTearUp(class UClass* Param_Class, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigator);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_PoolManager_C">();
	}
	static class UB_PoolManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_PoolManager_C>();
	}
};
static_assert(alignof(UB_PoolManager_C) == 0x000008, "Wrong alignment on UB_PoolManager_C");
static_assert(sizeof(UB_PoolManager_C) == 0x000090, "Wrong size on UB_PoolManager_C");
static_assert(offsetof(UB_PoolManager_C, Pools) == 0x000030, "Member 'UB_PoolManager_C::Pools' has a wrong offset!");
static_assert(offsetof(UB_PoolManager_C, PoolMap) == 0x000040, "Member 'UB_PoolManager_C::PoolMap' has a wrong offset!");

}

