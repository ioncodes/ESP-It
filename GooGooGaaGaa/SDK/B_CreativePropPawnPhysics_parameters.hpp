#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativePropPawnPhysics

#include "Basic.hpp"

#include "SRuntimePropData_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.ExecuteUbergraph_B_CreativePropPawnPhysics
// 0x0080 (0x0080 - 0x0000)
struct B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D30[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_FieldOfViewComponent_C*              CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics) == 0x000010, "Wrong alignment on B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics");
static_assert(sizeof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics) == 0x000080, "Wrong size on B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics, EntryPoint) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics, Temp_struct_Variable) == 0x000010, "Member 'B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics, K2Node_Event_OldController) == 0x000078, "Member 'B_CreativePropPawnPhysics_C_ExecuteUbergraph_B_CreativePropPawnPhysics::K2Node_Event_OldController' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct B_CreativePropPawnPhysics_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on B_CreativePropPawnPhysics_C_ReceiveUnpossessed");
static_assert(sizeof(B_CreativePropPawnPhysics_C_ReceiveUnpossessed) == 0x000008, "Wrong size on B_CreativePropPawnPhysics_C_ReceiveUnpossessed");
static_assert(offsetof(B_CreativePropPawnPhysics_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.SetCameraSettings
// 0x0010 (0x0010 - 0x0000)
struct B_CreativePropPawnPhysics_C_SetCameraSettings final
{
public:
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_SetCameraSettings) == 0x000008, "Wrong alignment on B_CreativePropPawnPhysics_C_SetCameraSettings");
static_assert(sizeof(B_CreativePropPawnPhysics_C_SetCameraSettings) == 0x000010, "Wrong size on B_CreativePropPawnPhysics_C_SetCameraSettings");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetCameraSettings, K2Node_DynamicCast_AsB_Player_State) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_SetCameraSettings::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetCameraSettings, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'B_CreativePropPawnPhysics_C_SetCameraSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.SetSpringArmProperties
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePropPawnPhysics_C_SetSpringArmProperties final
{
public:
	bool                                          FirstPerson;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D31[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_TargetArmLength_ImplicitCast;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_SetSpringArmProperties) == 0x000008, "Wrong alignment on B_CreativePropPawnPhysics_C_SetSpringArmProperties");
static_assert(sizeof(B_CreativePropPawnPhysics_C_SetSpringArmProperties) == 0x000028, "Wrong size on B_CreativePropPawnPhysics_C_SetSpringArmProperties");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetSpringArmProperties, FirstPerson) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_SetSpringArmProperties::FirstPerson' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetSpringArmProperties, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'B_CreativePropPawnPhysics_C_SetSpringArmProperties::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetSpringArmProperties, K2Node_VariableSet_TargetArmLength_ImplicitCast) == 0x000020, "Member 'B_CreativePropPawnPhysics_C_SetSpringArmProperties::K2Node_VariableSet_TargetArmLength_ImplicitCast' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.SetupHealthAndMana
// 0x0028 (0x0028 - 0x0000)
struct B_CreativePropPawnPhysics_C_SetupHealthAndMana final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D32[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CreativeHUD_C*                      K2Node_DynamicCast_AsWB_Creative_HUD;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_SetupHealthAndMana) == 0x000008, "Wrong alignment on B_CreativePropPawnPhysics_C_SetupHealthAndMana");
static_assert(sizeof(B_CreativePropPawnPhysics_C_SetupHealthAndMana) == 0x000028, "Wrong size on B_CreativePropPawnPhysics_C_SetupHealthAndMana");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetupHealthAndMana, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_SetupHealthAndMana::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetupHealthAndMana, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_CreativePropPawnPhysics_C_SetupHealthAndMana::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetupHealthAndMana, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_CreativePropPawnPhysics_C_SetupHealthAndMana::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetupHealthAndMana, K2Node_DynamicCast_AsWB_Creative_HUD) == 0x000018, "Member 'B_CreativePropPawnPhysics_C_SetupHealthAndMana::K2Node_DynamicCast_AsWB_Creative_HUD' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetupHealthAndMana, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'B_CreativePropPawnPhysics_C_SetupHealthAndMana::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.SetWitch
// 0x00D0 (0x00D0 - 0x0000)
struct B_CreativePropPawnPhysics_C_SetWitch final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeWitch_C*                     TempWitch;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D33[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeWitch_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D34[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetValues_MaximumMana;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetValues_CurrentMana;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetValues_CurrentManaRegenPerSecond;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_SetWitch) == 0x000010, "Wrong alignment on B_CreativePropPawnPhysics_C_SetWitch");
static_assert(sizeof(B_CreativePropPawnPhysics_C_SetWitch) == 0x0000D0, "Wrong size on B_CreativePropPawnPhysics_C_SetWitch");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, Transform) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_SetWitch::Transform' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, TempWitch) == 0x000060, "Member 'B_CreativePropPawnPhysics_C_SetWitch::TempWitch' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_HasAuthority_ReturnValue) == 0x000068, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_GetController_ReturnValue) == 0x000080, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, K2Node_DynamicCast_AsPlayer_Controller) == 0x000088, "Member 'B_CreativePropPawnPhysics_C_SetWitch::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'B_CreativePropPawnPhysics_C_SetWitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_GetValues_MaximumMana) == 0x000098, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_GetValues_MaximumMana' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_GetValues_CurrentMana) == 0x0000A0, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_GetValues_CurrentMana' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_GetValues_CurrentManaRegenPerSecond) == 0x0000A8, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_GetValues_CurrentManaRegenPerSecond' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_SetWitch, CallFunc_GetVelocity_ReturnValue) == 0x0000B0, "Member 'B_CreativePropPawnPhysics_C_SetWitch::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.TickVisuals
// 0x0003 (0x0003 - 0x0000)
struct B_CreativePropPawnPhysics_C_TickVisuals final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_TickVisuals) == 0x000001, "Wrong alignment on B_CreativePropPawnPhysics_C_TickVisuals");
static_assert(sizeof(B_CreativePropPawnPhysics_C_TickVisuals) == 0x000003, "Wrong size on B_CreativePropPawnPhysics_C_TickVisuals");
static_assert(offsetof(B_CreativePropPawnPhysics_C_TickVisuals, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_TickVisuals::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_TickVisuals, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'B_CreativePropPawnPhysics_C_TickVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_TickVisuals, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'B_CreativePropPawnPhysics_C_TickVisuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_CreativePropPawnPhysics.B_CreativePropPawnPhysics_C.TransformEffect
// 0x0070 (0x0070 - 0x0000)
struct B_CreativePropPawnPhysics_C_TransformEffect final
{
public:
	struct FSRuntimePropData                      LastRuntimePropData;                               // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSRuntimePropData                      CurrentRuntimePropData;                            // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativePropPawnPhysics_C_TransformEffect) == 0x000008, "Wrong alignment on B_CreativePropPawnPhysics_C_TransformEffect");
static_assert(sizeof(B_CreativePropPawnPhysics_C_TransformEffect) == 0x000070, "Wrong size on B_CreativePropPawnPhysics_C_TransformEffect");
static_assert(offsetof(B_CreativePropPawnPhysics_C_TransformEffect, LastRuntimePropData) == 0x000000, "Member 'B_CreativePropPawnPhysics_C_TransformEffect::LastRuntimePropData' has a wrong offset!");
static_assert(offsetof(B_CreativePropPawnPhysics_C_TransformEffect, CurrentRuntimePropData) == 0x000038, "Member 'B_CreativePropPawnPhysics_C_TransformEffect::CurrentRuntimePropData' has a wrong offset!");

}

