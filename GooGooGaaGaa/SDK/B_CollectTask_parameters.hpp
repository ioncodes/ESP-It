#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CollectTask

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_CollectTask.B_CollectTask_C.CheckCompletionConditions
// 0x0002 (0x0002 - 0x0000)
struct B_CollectTask_C_CheckCompletionConditions final
{
public:
	bool                                          ReadyForCompletion;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_CheckCompletionConditions) == 0x000001, "Wrong alignment on B_CollectTask_C_CheckCompletionConditions");
static_assert(sizeof(B_CollectTask_C_CheckCompletionConditions) == 0x000002, "Wrong size on B_CollectTask_C_CheckCompletionConditions");
static_assert(offsetof(B_CollectTask_C_CheckCompletionConditions, ReadyForCompletion) == 0x000000, "Member 'B_CollectTask_C_CheckCompletionConditions::ReadyForCompletion' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_CheckCompletionConditions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000001, "Member 'B_CollectTask_C_CheckCompletionConditions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_CollectTask_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_ReceiveTick) == 0x000004, "Wrong alignment on B_CollectTask_C_ReceiveTick");
static_assert(sizeof(B_CollectTask_C_ReceiveTick) == 0x000004, "Wrong size on B_CollectTask_C_ReceiveTick");
static_assert(offsetof(B_CollectTask_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_CollectTask_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.SpawnTargets
// 0x01C0 (0x01C0 - 0x0000)
struct B_CollectTask_C_SpawnTargets final
{
public:
	struct FRandomStream                          Param_RandomStream;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C07[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnPosition;                                     // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CurrentTaskTargetActor;                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Target_Class;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnLocation;                                     // 0x0080(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C08[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TaskTargetActor_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_3;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C09[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TaskTargetActor_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0A[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0B[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_4;                         // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_SpawnTargets) == 0x000010, "Wrong alignment on B_CollectTask_C_SpawnTargets");
static_assert(sizeof(B_CollectTask_C_SpawnTargets) == 0x0001C0, "Wrong size on B_CollectTask_C_SpawnTargets");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, Param_RandomStream) == 0x000000, "Member 'B_CollectTask_C_SpawnTargets::Param_RandomStream' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, Param_Index) == 0x000008, "Member 'B_CollectTask_C_SpawnTargets::Param_Index' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, SpawnPosition) == 0x000010, "Member 'B_CollectTask_C_SpawnTargets::SpawnPosition' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CurrentTaskTargetActor) == 0x000070, "Member 'B_CollectTask_C_SpawnTargets::CurrentTaskTargetActor' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, Target_Class) == 0x000078, "Member 'B_CollectTask_C_SpawnTargets::Target_Class' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, SpawnLocation) == 0x000080, "Member 'B_CollectTask_C_SpawnTargets::SpawnLocation' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, Temp_int_Variable) == 0x000098, "Member 'B_CollectTask_C_SpawnTargets::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000110, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_FinishSpawningActor_ReturnValue) == 0x000120, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Get_Item_3) == 0x000128, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000130, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_RemoveItem_ReturnValue) == 0x000138, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000140, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Subtract_IntInt_ReturnValue) == 0x000148, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Length_ReturnValue_1) == 0x00014C, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000150, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_RandomInteger_ReturnValue) == 0x000154, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_SpawnTargets, CallFunc_Array_Get_Item_4) == 0x000160, "Member 'B_CollectTask_C_SpawnTargets::CallFunc_Array_Get_Item_4' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.ExecuteUbergraph_B_CollectTask
// 0x0030 (0x0030 - 0x0000)
struct B_CollectTask_C_ExecuteUbergraph_B_CollectTask final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCompletionConditions_ReadyForCompletion; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0D[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCompletionConditions_ReadyForCompletion_1; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask) == 0x000008, "Wrong alignment on B_CollectTask_C_ExecuteUbergraph_B_CollectTask");
static_assert(sizeof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask) == 0x000030, "Wrong size on B_CollectTask_C_ExecuteUbergraph_B_CollectTask");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, EntryPoint) == 0x000000, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_CheckCompletionConditions_ReadyForCompletion) == 0x00000C, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_CheckCompletionConditions_ReadyForCompletion' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000010, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, K2Node_ComponentBoundEvent_OtherActor) == 0x000018, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, K2Node_ComponentBoundEvent_OtherComp) == 0x000020, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000028, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_CheckCompletionConditions_ReadyForCompletion_1) == 0x00002C, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_CheckCompletionConditions_ReadyForCompletion_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002E, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_ExecuteUbergraph_B_CollectTask, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'B_CollectTask_C_ExecuteUbergraph_B_CollectTask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.CompleteTask
// 0x0001 (0x0001 - 0x0000)
struct B_CollectTask_C_CompleteTask final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_CompleteTask) == 0x000001, "Wrong alignment on B_CollectTask_C_CompleteTask");
static_assert(sizeof(B_CollectTask_C_CompleteTask) == 0x000001, "Wrong size on B_CollectTask_C_CompleteTask");
static_assert(offsetof(B_CollectTask_C_CompleteTask, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_CollectTask_C_CompleteTask::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.StopTask
// 0x0068 (0x0068 - 0x0000)
struct B_CollectTask_C_StopTask final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C0F[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C10[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_TaskTargetActor_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C11[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TaskTargetActor_C*                   CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_StopTask) == 0x000008, "Wrong alignment on B_CollectTask_C_StopTask");
static_assert(sizeof(B_CollectTask_C_StopTask) == 0x000068, "Wrong size on B_CollectTask_C_StopTask");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_CollectTask_C_StopTask::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_CollectTask_C_StopTask::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_CollectTask_C_StopTask::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_CollectTask_C_StopTask::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'B_CollectTask_C_StopTask::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'B_CollectTask_C_StopTask::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'B_CollectTask_C_StopTask::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, Temp_int_Array_Index_Variable) == 0x000028, "Member 'B_CollectTask_C_StopTask::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'B_CollectTask_C_StopTask::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_CollectTask_C_StopTask::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_CollectTask_C_StopTask::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'B_CollectTask_C_StopTask::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_CollectTask_C_StopTask::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'B_CollectTask_C_StopTask::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'B_CollectTask_C_StopTask::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_StopTask, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'B_CollectTask_C_StopTask::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.Initialize
// 0x0110 (0x0110 - 0x0000)
struct B_CollectTask_C_Initialize final
{
public:
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C12[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CollectTask_C_Initialize) == 0x000008, "Wrong alignment on B_CollectTask_C_Initialize");
static_assert(sizeof(B_CollectTask_C_Initialize) == 0x000110, "Wrong size on B_CollectTask_C_Initialize");
static_assert(offsetof(B_CollectTask_C_Initialize, CallFunc_RandomInteger_ReturnValue) == 0x000000, "Member 'B_CollectTask_C_Initialize::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_Initialize, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'B_CollectTask_C_Initialize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_Initialize, CallFunc_MakeRandomStream_ReturnValue) == 0x000008, "Member 'B_CollectTask_C_Initialize::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_Initialize, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'B_CollectTask_C_Initialize::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_Initialize, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000028, "Member 'B_CollectTask_C_Initialize::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function B_CollectTask.B_CollectTask_C.BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_CollectTask_C_BndEvt__TaskArea_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

}

