#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ConnectivityIndicator

#include "Basic.hpp"

#include "E_ConnectivityType_structs.hpp"
#include "E_ConnectivityState_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_ConnectivityIndicator.WB_ConnectivityIndicator_C.ExecuteUbergraph_WB_ConnectivityIndicator
// 0x0030 (0x0030 - 0x0000)
struct WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityType                            K2Node_CustomEvent_type;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           K2Node_CustomEvent_OldState;                       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           K2Node_CustomEvent_NewState;                       // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           CallFunc_GetConnectivityState_State;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           CallFunc_GetConnectivityState_State_1;             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5840[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(E_ConnectivityType Type, E_ConnectivityState OldState, E_ConnectivityState NewState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator) == 0x000008, "Wrong alignment on WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator");
static_assert(sizeof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator) == 0x000030, "Wrong size on WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, EntryPoint) == 0x000000, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_CustomEvent_type) == 0x000019, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_CustomEvent_type' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_CustomEvent_OldState) == 0x00001A, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_CustomEvent_OldState' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_CustomEvent_NewState) == 0x00001B, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, CallFunc_GetConnectivityState_State) == 0x00001C, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::CallFunc_GetConnectivityState_State' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_SwitchEnum_CmpSuccess) == 0x00001D, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, CallFunc_GetConnectivityState_State_1) == 0x00001E, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::CallFunc_GetConnectivityState_State_1' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WB_ConnectivityIndicator_C_ExecuteUbergraph_WB_ConnectivityIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WB_ConnectivityIndicator.WB_ConnectivityIndicator_C.OnConnectivityChanged
// 0x0003 (0x0003 - 0x0000)
struct WB_ConnectivityIndicator_C_OnConnectivityChanged final
{
public:
	E_ConnectivityType                            Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           OldState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ConnectivityState                           NewState;                                          // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_ConnectivityIndicator_C_OnConnectivityChanged) == 0x000001, "Wrong alignment on WB_ConnectivityIndicator_C_OnConnectivityChanged");
static_assert(sizeof(WB_ConnectivityIndicator_C_OnConnectivityChanged) == 0x000003, "Wrong size on WB_ConnectivityIndicator_C_OnConnectivityChanged");
static_assert(offsetof(WB_ConnectivityIndicator_C_OnConnectivityChanged, Type) == 0x000000, "Member 'WB_ConnectivityIndicator_C_OnConnectivityChanged::Type' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_OnConnectivityChanged, OldState) == 0x000001, "Member 'WB_ConnectivityIndicator_C_OnConnectivityChanged::OldState' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_OnConnectivityChanged, NewState) == 0x000002, "Member 'WB_ConnectivityIndicator_C_OnConnectivityChanged::NewState' has a wrong offset!");

// Function WB_ConnectivityIndicator.WB_ConnectivityIndicator_C.UpdateMasterServerConnectionState
// 0x0040 (0x0040 - 0x0000)
struct WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState final
{
public:
	E_ConnectivityState                           NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5841[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x002C(0x0014)()
};
static_assert(alignof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState) == 0x000004, "Wrong alignment on WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState");
static_assert(sizeof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState) == 0x000040, "Wrong size on WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState, NewState) == 0x000000, "Member 'WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState::NewState' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState, K2Node_MakeStruct_SlateColor_2) == 0x00002C, "Member 'WB_ConnectivityIndicator_C_UpdateMasterServerConnectionState::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

// Function WB_ConnectivityIndicator.WB_ConnectivityIndicator_C.UpdateRestApiConnectionState
// 0x0040 (0x0040 - 0x0000)
struct WB_ConnectivityIndicator_C_UpdateRestApiConnectionState final
{
public:
	E_ConnectivityState                           NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5842[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_2;                    // 0x002C(0x0014)()
};
static_assert(alignof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState) == 0x000004, "Wrong alignment on WB_ConnectivityIndicator_C_UpdateRestApiConnectionState");
static_assert(sizeof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState) == 0x000040, "Wrong size on WB_ConnectivityIndicator_C_UpdateRestApiConnectionState");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState, NewState) == 0x000000, "Member 'WB_ConnectivityIndicator_C_UpdateRestApiConnectionState::NewState' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_ConnectivityIndicator_C_UpdateRestApiConnectionState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WB_ConnectivityIndicator_C_UpdateRestApiConnectionState::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WB_ConnectivityIndicator_C_UpdateRestApiConnectionState::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_ConnectivityIndicator_C_UpdateRestApiConnectionState, K2Node_MakeStruct_SlateColor_2) == 0x00002C, "Member 'WB_ConnectivityIndicator_C_UpdateRestApiConnectionState::K2Node_MakeStruct_SlateColor_2' has a wrong offset!");

}

