#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_NewWitch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AB_NewWitch.AB_NewWitch_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AB_NewWitch_C_AnimGraph final
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AB_NewWitch_C_AnimGraph) == 0x000008, "Wrong alignment on AB_NewWitch_C_AnimGraph");
static_assert(sizeof(AB_NewWitch_C_AnimGraph) == 0x000010, "Wrong size on AB_NewWitch_C_AnimGraph");
static_assert(offsetof(AB_NewWitch_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'AB_NewWitch_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

// Function AB_NewWitch.AB_NewWitch_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AB_NewWitch_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_NewWitch_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AB_NewWitch_C_BlueprintUpdateAnimation");
static_assert(sizeof(AB_NewWitch_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AB_NewWitch_C_BlueprintUpdateAnimation");
static_assert(offsetof(AB_NewWitch_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AB_NewWitch_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AB_NewWitch.AB_NewWitch_C.ExecuteUbergraph_AB_NewWitch
// 0x0098 (0x0098 - 0x0000)
struct AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D48[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D49[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4B[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_Velocity;                     // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4C[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_FlySkill_C*                          CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCrouching_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4D[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4E[0x2];                                     // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch) == 0x000008, "Wrong alignment on AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch");
static_assert(sizeof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch) == 0x000098, "Wrong size on AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, EntryPoint) == 0x000000, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue) == 0x000018, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, K2Node_DynamicCast_AsCharacter) == 0x000020, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_GetVelocity_Velocity) == 0x000030, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_GetVelocity_Velocity' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_BreakVector_X) == 0x000048, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_BreakVector_Y) == 0x000050, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_BreakVector_Z) == 0x000058, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_VSize_ReturnValue) == 0x000060, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000068, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00007A, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_IsCrouching_ReturnValue) == 0x00007C, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_IsCrouching_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1) == 0x000080, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_GetInstanceAssetPlayerTimeFromEnd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x000084, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_BooleanAND_ReturnValue_1) == 0x000085, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000090, "Member 'AB_NewWitch_C_ExecuteUbergraph_AB_NewWitch::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function AB_NewWitch.AB_NewWitch_C.GetVelocity
// 0x0100 (0x0100 - 0x0000)
struct AB_NewWitch_C_GetVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D50[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D51[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D52[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AB_NewWitch_C_GetVelocity) == 0x000008, "Wrong alignment on AB_NewWitch_C_GetVelocity");
static_assert(sizeof(AB_NewWitch_C_GetVelocity) == 0x000100, "Wrong size on AB_NewWitch_C_GetVelocity");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, Velocity) == 0x000000, "Member 'AB_NewWitch_C_GetVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, Temp_bool_Variable) == 0x000018, "Member 'AB_NewWitch_C_GetVelocity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, Temp_struct_Variable) == 0x000020, "Member 'AB_NewWitch_C_GetVelocity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000048, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, K2Node_DynamicCast_AsB_Witch) == 0x000050, "Member 'AB_NewWitch_C_GetVelocity::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'AB_NewWitch_C_GetVelocity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, K2Node_DynamicCast_AsCharacter) == 0x000060, "Member 'AB_NewWitch_C_GetVelocity::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'AB_NewWitch_C_GetVelocity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_GetVelocity_ReturnValue) == 0x000070, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_GetVelocity_ReturnValue_1) == 0x000088, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_VInterpTo_ReturnValue) == 0x0000A0, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_VSize_ReturnValue) == 0x0000B8, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, K2Node_Select_Default) == 0x0000C8, "Member 'AB_NewWitch_C_GetVelocity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_VInterpTo_ReturnValue_1) == 0x0000E0, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0000F8, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(AB_NewWitch_C_GetVelocity, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x0000FC, "Member 'AB_NewWitch_C_GetVelocity::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");

}

