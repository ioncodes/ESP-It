#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorPlayerController

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_PlayerController_classes.hpp"
#include "EChatType_structs.hpp"
#include "E_TaskType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ImpostorPlayerController.B_ImpostorPlayerController_C
// 0x0010 (0x0B38 - 0x0B28)
class AB_ImpostorPlayerController_C final : public AB_PlayerController_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_ImpostorPlayerController_C;       // 0x0B28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AB_ImpostorPlayerState_C*               ImpostorPlayerState;                               // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_ImpostorPlayerController(int32 EntryPoint);
	void InpActEvt_Action_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_Action_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_U_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SendChatMessageServerFunc(EChatType ChatType, const class FText& InText);
	void SetReadyServer(bool WantsToSpectate, bool Ready);
	void ShowPlayerListMenu(bool WasRelease);
	void TraceForTask();
	void TraceForTransform();
	void TraceForVoteStart();
	void TypeChatMessage(EChatType ChatType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ImpostorPlayerController_C">();
	}
	static class AB_ImpostorPlayerController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_ImpostorPlayerController_C>();
	}
};
static_assert(alignof(AB_ImpostorPlayerController_C) == 0x000008, "Wrong alignment on AB_ImpostorPlayerController_C");
static_assert(sizeof(AB_ImpostorPlayerController_C) == 0x000B38, "Wrong size on AB_ImpostorPlayerController_C");
static_assert(offsetof(AB_ImpostorPlayerController_C, UberGraphFrame_B_ImpostorPlayerController_C) == 0x000B28, "Member 'AB_ImpostorPlayerController_C::UberGraphFrame_B_ImpostorPlayerController_C' has a wrong offset!");
static_assert(offsetof(AB_ImpostorPlayerController_C, ImpostorPlayerState) == 0x000B30, "Member 'AB_ImpostorPlayerController_C::ImpostorPlayerState' has a wrong offset!");

}

