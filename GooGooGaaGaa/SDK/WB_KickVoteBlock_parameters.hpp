#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KickVoteBlock

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_KickVoteBlock.WB_KickVoteBlock_C.Get_Vote_Brush_0
// 0x0350 (0x0350 - 0x0000)
struct WB_KickVoteBlock_C_Get_Vote_Brush_0 final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB9[0xF];                                     // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00E0(0x00D0)()
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x01B0(0x00D0)()
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0280(0x00D0)()
};
static_assert(alignof(WB_KickVoteBlock_C_Get_Vote_Brush_0) == 0x000010, "Wrong alignment on WB_KickVoteBlock_C_Get_Vote_Brush_0");
static_assert(sizeof(WB_KickVoteBlock_C_Get_Vote_Brush_0) == 0x000350, "Wrong size on WB_KickVoteBlock_C_Get_Vote_Brush_0");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Brush_0, ReturnValue) == 0x000000, "Member 'WB_KickVoteBlock_C_Get_Vote_Brush_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Brush_0, Temp_bool_Variable) == 0x0000D0, "Member 'WB_KickVoteBlock_C_Get_Vote_Brush_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Brush_0, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000E0, "Member 'WB_KickVoteBlock_C_Get_Vote_Brush_0::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Brush_0, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x0001B0, "Member 'WB_KickVoteBlock_C_Get_Vote_Brush_0::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Brush_0, K2Node_Select_Default) == 0x000280, "Member 'WB_KickVoteBlock_C_Get_Vote_Brush_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_KickVoteBlock.WB_KickVoteBlock_C.Get_Vote_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_KickVoteBlock_C_Get_Vote_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KickVoteBlock_C_Get_Vote_Visibility_0) == 0x000001, "Wrong alignment on WB_KickVoteBlock_C_Get_Vote_Visibility_0");
static_assert(sizeof(WB_KickVoteBlock_C_Get_Vote_Visibility_0) == 0x000005, "Wrong size on WB_KickVoteBlock_C_Get_Vote_Visibility_0");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_KickVoteBlock_C_Get_Vote_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_KickVoteBlock_C_Get_Vote_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_KickVoteBlock_C_Get_Vote_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_KickVoteBlock_C_Get_Vote_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_Get_Vote_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_KickVoteBlock_C_Get_Vote_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_KickVoteBlock.WB_KickVoteBlock_C.GetVisibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_KickVoteBlock_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KickVoteBlock_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_KickVoteBlock_C_GetVisibility_0");
static_assert(sizeof(WB_KickVoteBlock_C_GetVisibility_0) == 0x000006, "Wrong size on WB_KickVoteBlock_C_GetVisibility_0");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_KickVoteBlock_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_KickVoteBlock_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_KickVoteBlock_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_KickVoteBlock_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WB_KickVoteBlock_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KickVoteBlock_C_GetVisibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_KickVoteBlock_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

}

