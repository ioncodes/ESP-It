#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlaceAndEditUI

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "ESalvageCategory_structs.hpp"


namespace SDK::Params
{

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.ExecuteUbergraph_WB_PlaceAndEditUI
// 0x0004 (0x0004 - 0x0000)
struct WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI) == 0x000004, "Wrong alignment on WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI");
static_assert(sizeof(WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI) == 0x000004, "Wrong size on WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI");
static_assert(offsetof(WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI, EntryPoint) == 0x000000, "Member 'WB_PlaceAndEditUI_C_ExecuteUbergraph_WB_PlaceAndEditUI::EntryPoint' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.GetIndividualItemDataAndFocus
// 0x0050 (0x0050 - 0x0000)
struct WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus final
{
public:
	class UUserWidget*                            CategoryButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESalvageCategory                              SalvageCategory;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              Data;                                              // 0x0010(0x0010)(Parm, OutParm)
	TArray<bool>                                  FocusNeeded;                                       // 0x0020(0x0010)(Parm, OutParm)
	TArray<bool>                                  FocusNeededArray;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class UB_TileViewData_C*>              DataArray;                                         // 0x0040(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus");
static_assert(sizeof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus) == 0x000050, "Wrong size on WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, CategoryButton) == 0x000000, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::CategoryButton' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, SalvageCategory) == 0x000008, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::SalvageCategory' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, Data) == 0x000010, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::Data' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, FocusNeeded) == 0x000020, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::FocusNeeded' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, FocusNeededArray) == 0x000030, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::FocusNeededArray' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus, DataArray) == 0x000040, "Member 'WB_PlaceAndEditUI_C_GetIndividualItemDataAndFocus::DataArray' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.GetTileView
// 0x0010 (0x0010 - 0x0000)
struct WB_PlaceAndEditUI_C_GetTileView final
{
public:
	class UTileView*                              TileView;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTileView*                              ActiveTileview;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_GetTileView) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_GetTileView");
static_assert(sizeof(WB_PlaceAndEditUI_C_GetTileView) == 0x000010, "Wrong size on WB_PlaceAndEditUI_C_GetTileView");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetTileView, TileView) == 0x000000, "Member 'WB_PlaceAndEditUI_C_GetTileView::TileView' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_GetTileView, ActiveTileview) == 0x000008, "Member 'WB_PlaceAndEditUI_C_GetTileView::ActiveTileview' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Initialize
// 0x0058 (0x0058 - 0x0000)
struct WB_PlaceAndEditUI_C_Initialize final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_Initialize) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_Initialize");
static_assert(sizeof(WB_PlaceAndEditUI_C_Initialize) == 0x000058, "Wrong size on WB_PlaceAndEditUI_C_Initialize");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'WB_PlaceAndEditUI_C_Initialize::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000048, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_Initialize, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WB_PlaceAndEditUI_C_Initialize::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Maximize
// 0x0001 (0x0001 - 0x0000)
struct WB_PlaceAndEditUI_C_Maximize final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_Maximize) == 0x000001, "Wrong alignment on WB_PlaceAndEditUI_C_Maximize");
static_assert(sizeof(WB_PlaceAndEditUI_C_Maximize) == 0x000001, "Wrong size on WB_PlaceAndEditUI_C_Maximize");
static_assert(offsetof(WB_PlaceAndEditUI_C_Maximize, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'WB_PlaceAndEditUI_C_Maximize::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.Minimize
// 0x0001 (0x0001 - 0x0000)
struct WB_PlaceAndEditUI_C_Minimize final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_Minimize) == 0x000001, "Wrong alignment on WB_PlaceAndEditUI_C_Minimize");
static_assert(sizeof(WB_PlaceAndEditUI_C_Minimize) == 0x000001, "Wrong size on WB_PlaceAndEditUI_C_Minimize");
static_assert(offsetof(WB_PlaceAndEditUI_C_Minimize, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'WB_PlaceAndEditUI_C_Minimize::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.On_InnerBorder_MouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
};
static_assert(alignof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown");
static_assert(sizeof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown) == 0x000220, "Wrong size on WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown, MyGeometry) == 0x000000, "Member 'WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown, MouseEvent) == 0x000038, "Member 'WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'WB_PlaceAndEditUI_C_On_InnerBorder_MouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.On_OuterBorder_MouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0168(0x00B8)()
};
static_assert(alignof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown");
static_assert(sizeof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown) == 0x000220, "Wrong size on WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown, MyGeometry) == 0x000000, "Member 'WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown, MouseEvent) == 0x000038, "Member 'WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000168, "Member 'WB_PlaceAndEditUI_C_On_OuterBorder_MouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WB_PlaceAndEditUI_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00F8(0x00B8)()
};
static_assert(alignof(WB_PlaceAndEditUI_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_OnFocusReceived");
static_assert(sizeof(WB_PlaceAndEditUI_C_OnFocusReceived) == 0x0001B0, "Wrong size on WB_PlaceAndEditUI_C_OnFocusReceived");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_PlaceAndEditUI_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_PlaceAndEditUI_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_PlaceAndEditUI_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnFocusReceived, CallFunc_Unhandled_ReturnValue) == 0x0000F8, "Member 'WB_PlaceAndEditUI_C_OnFocusReceived::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnMouseWheel
// 0x0230 (0x0230 - 0x0000)
struct WB_PlaceAndEditUI_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnMouseWheel_ReturnValue;                 // 0x0170(0x00B8)()
	double                                        CallFunc_HandleMouseWheelAxis_Axis_ImplicitCast;   // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_OnMouseWheel) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_OnMouseWheel");
static_assert(sizeof(WB_PlaceAndEditUI_C_OnMouseWheel) == 0x000230, "Wrong size on WB_PlaceAndEditUI_C_OnMouseWheel");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000168, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, CallFunc_OnMouseWheel_ReturnValue) == 0x000170, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::CallFunc_OnMouseWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnMouseWheel, CallFunc_HandleMouseWheelAxis_Axis_ImplicitCast) == 0x000228, "Member 'WB_PlaceAndEditUI_C_OnMouseWheel::CallFunc_HandleMouseWheelAxis_Axis_ImplicitCast' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.OnPreviewKeyDown
// 0x0378 (0x0378 - 0x0000)
struct WB_PlaceAndEditUI_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0148(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0208(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02C0(0x00B8)()
};
static_assert(alignof(WB_PlaceAndEditUI_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_OnPreviewKeyDown");
static_assert(sizeof(WB_PlaceAndEditUI_C_OnPreviewKeyDown) == 0x000378, "Wrong size on WB_PlaceAndEditUI_C_OnPreviewKeyDown");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000148, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000201, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x000202, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000203, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x000204, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000208, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_1) == 0x0002C0, "Member 'WB_PlaceAndEditUI_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.ToggleMaximizedItemCollection
// 0x0068 (0x0068 - 0x0000)
struct WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PropCollectionWidgetCreative_C*     CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection");
static_assert(sizeof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection) == 0x000068, "Wrong size on WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, Show) == 0x000000, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::Show' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, CallFunc_GetGameInstance_ReturnValue_1) == 0x000020, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000028, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, CallFunc_GetGameInstance_ReturnValue_2) == 0x000038, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000040, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, CallFunc_IsValid_ReturnValue) == 0x00005C, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WB_PlaceAndEditUI_C_ToggleMaximizedItemCollection::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.TogglePawnCameraUsage
// 0x0030 (0x0030 - 0x0000)
struct WB_PlaceAndEditUI_C_TogglePawnCameraUsage final
{
public:
	bool                                          Use_Pawn_Control_Rotation;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CreativeSpectator_C*                 K2Node_DynamicCast_AsB_Creative_Spectator;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_TogglePawnCameraUsage");
static_assert(sizeof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage) == 0x000030, "Wrong size on WB_PlaceAndEditUI_C_TogglePawnCameraUsage");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, Use_Pawn_Control_Rotation) == 0x000000, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::Use_Pawn_Control_Rotation' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000010, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, K2Node_DynamicCast_AsB_Creative_Spectator) == 0x000020, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::K2Node_DynamicCast_AsB_Creative_Spectator' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_TogglePawnCameraUsage, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WB_PlaceAndEditUI_C_TogglePawnCameraUsage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.UpdateByPlayMode
// 0x0010 (0x0010 - 0x0000)
struct WB_PlaceAndEditUI_C_UpdateByPlayMode final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_UpdateByPlayMode) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_UpdateByPlayMode");
static_assert(sizeof(WB_PlaceAndEditUI_C_UpdateByPlayMode) == 0x000010, "Wrong size on WB_PlaceAndEditUI_C_UpdateByPlayMode");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateByPlayMode, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WB_PlaceAndEditUI_C_UpdateByPlayMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateByPlayMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'WB_PlaceAndEditUI_C_UpdateByPlayMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateByPlayMode, CallFunc_GetAnchorActor_AnchorActor) == 0x000008, "Member 'WB_PlaceAndEditUI_C_UpdateByPlayMode::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");

// Function WB_PlaceAndEditUI.WB_PlaceAndEditUI_C.UpdateNonCollapsedUI
// 0x0028 (0x0028 - 0x0000)
struct WB_PlaceAndEditUI_C_UpdateNonCollapsedUI final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI) == 0x000008, "Wrong alignment on WB_PlaceAndEditUI_C_UpdateNonCollapsedUI");
static_assert(sizeof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI) == 0x000028, "Wrong size on WB_PlaceAndEditUI_C_UpdateNonCollapsedUI");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, CallFunc_GetAnchorActor_AnchorActor) == 0x000010, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, CallFunc_Array_Get_Item) == 0x000018, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlaceAndEditUI_C_UpdateNonCollapsedUI, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_PlaceAndEditUI_C_UpdateNonCollapsedUI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

