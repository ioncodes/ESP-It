#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Items

#include "Basic.hpp"

#include "SClientItemUnlock_structs.hpp"
#include "S_ItemInfo_structs.hpp"
#include "EItemUnlockType_structs.hpp"
#include "SGrantedItem_structs.hpp"
#include "S_RecipeInfo_structs.hpp"


namespace SDK::Params
{

// Function BFL_Items.BFL_Items_C.GetClientItemUnlocks
// 0x00F8 (0x00F8 - 0x0000)
struct BFL_Items_C_GetClientItemUnlocks final
{
public:
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UB_InventoryManager_C*                  InventoryManager;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FromCauldron;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSClientItemUnlock>             ClientItemUnlocks;                                 // 0x0028(0x0010)(Parm, OutParm)
	int32                                         CurrentRecipeOriginalItemDefId;                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentQuantity;                                   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentItemDefID;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSClientItemUnlock>             ReturnClientItemUnlocks;                           // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSGrantedItem                          CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RecipeInfo                          CallFunc_GetRecipe_ReturnValue;                    // 0x0078(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded_1; // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRecipeIdValid_ReturnValue;              // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Items_C_GetClientItemUnlocks) == 0x000008, "Wrong alignment on BFL_Items_C_GetClientItemUnlocks");
static_assert(sizeof(BFL_Items_C_GetClientItemUnlocks) == 0x0000F8, "Wrong size on BFL_Items_C_GetClientItemUnlocks");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, GrantedItems) == 0x000000, "Member 'BFL_Items_C_GetClientItemUnlocks::GrantedItems' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, InventoryManager) == 0x000010, "Member 'BFL_Items_C_GetClientItemUnlocks::InventoryManager' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, FromCauldron) == 0x000018, "Member 'BFL_Items_C_GetClientItemUnlocks::FromCauldron' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, __WorldContext) == 0x000020, "Member 'BFL_Items_C_GetClientItemUnlocks::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, ClientItemUnlocks) == 0x000028, "Member 'BFL_Items_C_GetClientItemUnlocks::ClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CurrentRecipeOriginalItemDefId) == 0x000038, "Member 'BFL_Items_C_GetClientItemUnlocks::CurrentRecipeOriginalItemDefId' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CurrentQuantity) == 0x00003C, "Member 'BFL_Items_C_GetClientItemUnlocks::CurrentQuantity' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CurrentItemDefID) == 0x000040, "Member 'BFL_Items_C_GetClientItemUnlocks::CurrentItemDefID' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, ReturnClientItemUnlocks) == 0x000048, "Member 'BFL_Items_C_GetClientItemUnlocks::ReturnClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BFL_Items_C_GetClientItemUnlocks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BFL_Items_C_GetClientItemUnlocks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_Array_Get_Item) == 0x000064, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_GetRecipe_ReturnValue) == 0x000078, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_GetRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded) == 0x0000F0, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded_1) == 0x0000F1, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_TryAddItemToClientItemUnlockList_HasBeenAdded_1' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_IsRecipeIdValid_ReturnValue) == 0x0000F2, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_IsRecipeIdValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_GetClientItemUnlocks, CallFunc_Not_PreBool_ReturnValue) == 0x0000F3, "Member 'BFL_Items_C_GetClientItemUnlocks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BFL_Items.BFL_Items_C.TryAddItemToClientItemUnlockList
// 0x00D8 (0x00D8 - 0x0000)
struct BFL_Items_C_TryAddItemToClientItemUnlockList final
{
public:
	TArray<struct FSClientItemUnlock>             InClientItemUnlocks;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UB_InventoryManager_C*                  InventoryManager;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemDefId;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemQuantity;                                      // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FromCauldron;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRecipe;                                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenAdded;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUnlockType                               Temp_byte_Variable;                                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUnlockType                               Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUnlockType                               Temp_byte_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemInfo                            CallFunc_GetSkinItem_ReturnValue;                  // 0x0038(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetSkinItem_Found;                        // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUnlockType                               K2Node_Select_Default;                             // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EItemUnlockType                               K2Node_Select_Default_1;                           // 0x00B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemIdValid_ReturnValue;                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSClientItemUnlock                     K2Node_MakeStruct_SClientItemUnlock;               // 0x00B8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Items_C_TryAddItemToClientItemUnlockList) == 0x000008, "Wrong alignment on BFL_Items_C_TryAddItemToClientItemUnlockList");
static_assert(sizeof(BFL_Items_C_TryAddItemToClientItemUnlockList) == 0x0000D8, "Wrong size on BFL_Items_C_TryAddItemToClientItemUnlockList");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, InClientItemUnlocks) == 0x000000, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::InClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, InventoryManager) == 0x000010, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::InventoryManager' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, ItemDefId) == 0x000018, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::ItemDefId' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, ItemQuantity) == 0x00001C, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::ItemQuantity' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, FromCauldron) == 0x000020, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::FromCauldron' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, IsRecipe) == 0x000021, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::IsRecipe' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, __WorldContext) == 0x000028, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, HasBeenAdded) == 0x000030, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::HasBeenAdded' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, Temp_byte_Variable) == 0x000031, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, Temp_bool_Variable) == 0x000032, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, Temp_byte_Variable_1) == 0x000033, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, Temp_byte_Variable_2) == 0x000034, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, Temp_bool_Variable_1) == 0x000035, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, CallFunc_GetSkinItem_ReturnValue) == 0x000038, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::CallFunc_GetSkinItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, CallFunc_GetSkinItem_Found) == 0x0000B0, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::CallFunc_GetSkinItem_Found' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, K2Node_Select_Default) == 0x0000B2, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, K2Node_Select_Default_1) == 0x0000B3, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, CallFunc_IsItemIdValid_ReturnValue) == 0x0000B4, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::CallFunc_IsItemIdValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, K2Node_MakeStruct_SClientItemUnlock) == 0x0000B8, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::K2Node_MakeStruct_SClientItemUnlock' has a wrong offset!");
static_assert(offsetof(BFL_Items_C_TryAddItemToClientItemUnlockList, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BFL_Items_C_TryAddItemToClientItemUnlockList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

