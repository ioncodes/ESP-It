#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LowEntryJson

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "LowEntryJson_structs.hpp"


namespace SDK::Params
{

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintBoolean
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintBoolean final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Boolean;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintBoolean) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintBoolean");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintBoolean) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintBoolean");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, Boolean) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::Boolean' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBoolean, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintBoolean::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintBooleanArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintBooleanArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  BooleanArray;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintBooleanArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintBooleanArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintBooleanArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintBooleanArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, BooleanArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::BooleanArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintBooleanArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintBooleanArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintByte
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintByte final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Byte;                                              // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintByte) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintByte");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintByte) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintByte");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintByte::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, Byte) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintByte::Byte' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintByte::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintByte::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintByte::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintByte::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByte, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintByte::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintByteArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintByteArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ByteArray;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintByteArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintByteArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintByteArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintByteArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, ByteArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::ByteArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintByteArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintByteArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintDoubleArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintDoubleArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<double>                                DoubleArray;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintDoubleArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintDoubleArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintDoubleArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintDoubleArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, DoubleArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::DoubleArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintDoubleArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintDoubleArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintFloat
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintFloat final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Float;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintFloat) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintFloat");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintFloat) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintFloat");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintFloat::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, Float) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintFloat::Float' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintFloat::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintFloat::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintFloat::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintFloat::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloat, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintFloat::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintFloatArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintFloatArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 FloatArray;                                        // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintFloatArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintFloatArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintFloatArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintFloatArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, FloatArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::FloatArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintFloatArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintFloatArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintInteger
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintInteger final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Integer;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintInteger) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintInteger");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintInteger) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintInteger");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintInteger::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, Integer) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintInteger::Integer' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintInteger::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintInteger::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintInteger::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintInteger::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintInteger, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintInteger::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintIntegerArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintIntegerArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 IntegerArray;                                      // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintIntegerArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintIntegerArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintIntegerArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintIntegerArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, IntegerArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::IntegerArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintIntegerArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintIntegerArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonArray
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonArray) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, JsonArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArray, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonArrayArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonArrayArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULowEntryJsonArray*>             JsonArrayArray;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonArrayArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonArrayArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonArrayArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonArrayArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, JsonArrayArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::JsonArrayArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonArrayArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintJsonArrayArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonObject
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonObject final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonObject");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonObject) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonObject");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, JsonObject) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObject, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonObject::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonObjectArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonObjectArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULowEntryJsonObject*>            JsonObjectArray;                                   // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonObjectArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonObjectArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonObjectArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonObjectArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, JsonObjectArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::JsonObjectArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonObjectArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintJsonObjectArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonValue
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonValue final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonValue");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonValue) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonValue");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, JsonValue) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValue, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonValue::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintJsonValueArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintJsonValueArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ULowEntryJsonValue*>             JsonValueArray;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintJsonValueArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintJsonValueArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintJsonValueArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintJsonValueArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, JsonValueArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::JsonValueArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintJsonValueArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintJsonValueArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintLong
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintLong final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Long;                                              // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0020(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x0024(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x0025(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0028(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintLong) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintLong");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintLong) == 0x000038, "Wrong size on LowEntryJsonDebugLibrary_PrintLong");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintLong::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, Long) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintLong::Long' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, Label) == 0x000010, "Member 'LowEntryJsonDebugLibrary_PrintLong::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, ScreenDurationTime) == 0x000020, "Member 'LowEntryJsonDebugLibrary_PrintLong::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, bPrintToScreen) == 0x000024, "Member 'LowEntryJsonDebugLibrary_PrintLong::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, bPrintToLog) == 0x000025, "Member 'LowEntryJsonDebugLibrary_PrintLong::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLong, TextColor) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintLong::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintLongArray
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintLongArray final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 LongArray;                                         // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintLongArray) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintLongArray");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintLongArray) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintLongArray");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, LongArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::LongArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintLongArray, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintLongArray::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintStringArrayEscaped
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintStringArrayEscaped final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StringArray;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintStringArrayEscaped");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintStringArrayEscaped");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, StringArray) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::StringArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringArrayEscaped, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintStringArrayEscaped::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonDebugLibrary.PrintStringEscaped
// 0x0040 (0x0040 - 0x0000)
struct LowEntryJsonDebugLibrary_PrintStringEscaped final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 String;                                            // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Label;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScreenDurationTime;                                // 0x0028(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToScreen;                                    // 0x002C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPrintToLog;                                       // 0x002D(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TextColor;                                         // 0x0030(0x0010)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonDebugLibrary_PrintStringEscaped) == 0x000008, "Wrong alignment on LowEntryJsonDebugLibrary_PrintStringEscaped");
static_assert(sizeof(LowEntryJsonDebugLibrary_PrintStringEscaped) == 0x000040, "Wrong size on LowEntryJsonDebugLibrary_PrintStringEscaped");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, WorldContextObject) == 0x000000, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::WorldContextObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, String) == 0x000008, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::String' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, Label) == 0x000018, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::Label' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, ScreenDurationTime) == 0x000028, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::ScreenDurationTime' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, bPrintToScreen) == 0x00002C, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::bPrintToScreen' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, bPrintToLog) == 0x00002D, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::bPrintToLog' has a wrong offset!");
static_assert(offsetof(LowEntryJsonDebugLibrary_PrintStringEscaped, TextColor) == 0x000030, "Member 'LowEntryJsonDebugLibrary_PrintStringEscaped::TextColor' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_AddBoolean final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_AddBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddBoolean, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddBoolean::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddBoolean, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddBoolean::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_AddByte final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddByte");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_AddByte");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddByte, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddByte::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddByte, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddByte::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddFloat
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_AddFloat final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddFloat");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddFloat) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_AddFloat");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddFloat, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddFloat::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddFloat, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddFloat::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_AddInteger final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddInteger");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_AddInteger");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddInteger, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddInteger::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddInteger, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddInteger::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_AddJsonArray final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_AddJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonArray, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddJsonArray::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonArray, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_AddJsonArray::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_AddJsonObject final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_AddJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonObject, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddJsonObject::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonObject, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonObject, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_AddJsonObject::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddJsonValue
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_AddJsonValue final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddJsonValue) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_AddJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonValue, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddJsonValue::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonValue, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddJsonValue::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddJsonValue, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_AddJsonValue::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddLong
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_AddLong final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddLong");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddLong) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_AddLong");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddLong, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddLong::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddLong, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddLong::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddNull
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Array_AddNull final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddNull");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddNull) == 0x000008, "Wrong size on LowEntryJsonLibrary_Array_AddNull");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddNull, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddNull::JsonArray' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_AddString
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_AddString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_AddString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_AddString");
static_assert(sizeof(LowEntryJsonLibrary_Array_AddString) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_AddString");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_AddString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_AddString, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Array_AddString::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Append
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Append final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     AppendJsonArray;                                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Append) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Append");
static_assert(sizeof(LowEntryJsonLibrary_Array_Append) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Append");
static_assert(offsetof(LowEntryJsonLibrary_Array_Append, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Append::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Append, AppendJsonArray) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Append::AppendJsonArray' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Clear
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Array_Clear final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Clear) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Clear");
static_assert(sizeof(LowEntryJsonLibrary_Array_Clear) == 0x000008, "Wrong size on LowEntryJsonLibrary_Array_Clear");
static_assert(offsetof(LowEntryJsonLibrary_Array_Clear, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Clear::JsonArray' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Clone final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Array_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Array_Clone, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Clone::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromBooleanArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromBooleanArray final
{
public:
	TArray<bool>                                  Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromBooleanArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromBooleanArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromBooleanArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromBooleanArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromBooleanArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromBooleanArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromBooleanArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromBooleanArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromByteArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromByteArray final
{
public:
	TArray<uint8>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromByteArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromByteArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromByteArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromByteArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromByteArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromByteArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromByteArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromByteArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromFloatArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromFloatArray final
{
public:
	TArray<double>                                Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromFloatArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromFloatArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromFloatArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromFloatArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromFloatArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromFloatArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromFloatArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromFloatArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromIntegerArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromIntegerArray final
{
public:
	TArray<int32>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromIntegerArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromIntegerArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromIntegerArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromIntegerArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromIntegerArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromIntegerArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromIntegerArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromIntegerArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromJsonArrayArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromJsonArrayArray final
{
public:
	TArray<class ULowEntryJsonArray*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromJsonArrayArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromJsonArrayArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromJsonArrayArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_CreateFromJsonArrayArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonArrayArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonArrayArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonArrayArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonArrayArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonArrayArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonArrayArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromJsonObjectArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromJsonObjectArray final
{
public:
	TArray<class ULowEntryJsonObject*>            Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromJsonObjectArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromJsonObjectArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromJsonObjectArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_CreateFromJsonObjectArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonObjectArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonObjectArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonObjectArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonObjectArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonObjectArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonObjectArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromJsonValueArray final
{
public:
	TArray<class ULowEntryJsonValue*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromJsonValueArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromJsonValueArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromJsonValueArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_CreateFromJsonValueArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonValueArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonValueArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonValueArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonValueArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromJsonValueArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_CreateFromJsonValueArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromLongArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromLongArray final
{
public:
	TArray<int64>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromLongArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromLongArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromLongArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromLongArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromLongArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromLongArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromLongArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromLongArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_CreateFromStringArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_CreateFromStringArray final
{
public:
	TArray<class FString>                         Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_CreateFromStringArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_CreateFromStringArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_CreateFromStringArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_CreateFromStringArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromStringArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_CreateFromStringArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_CreateFromStringArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_CreateFromStringArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Equals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Equals final
{
public:
	class ULowEntryJsonArray*                     JsonArrayA;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     JsonArrayB;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_Equals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Equals");
static_assert(sizeof(LowEntryJsonLibrary_Array_Equals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Equals");
static_assert(offsetof(LowEntryJsonLibrary_Array_Equals, JsonArrayA) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Equals::JsonArrayA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Equals, JsonArrayB) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Equals::JsonArrayB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Equals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Equals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Expand
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Expand final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_Expand) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Expand");
static_assert(sizeof(LowEntryJsonLibrary_Array_Expand) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Expand");
static_assert(offsetof(LowEntryJsonLibrary_Array_Expand, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Expand::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Expand, Size) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Expand::Size' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Get
// 0x0050 (0x0050 - 0x0000)
struct LowEntryJsonLibrary_Array_Get final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonType                             Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnStringValue;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnLongValue;                                   // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnIntegerValue;                                // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnFloatValue;                                  // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnByteValue;                                   // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnBooleanValue;                                // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnJsonObjectValue;                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnJsonArrayValue;                              // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Get) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Get");
static_assert(sizeof(LowEntryJsonLibrary_Array_Get) == 0x000050, "Wrong size on LowEntryJsonLibrary_Array_Get");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Get::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Get::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_Get::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnStringValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Get::ReturnStringValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnLongValue) == 0x000020, "Member 'LowEntryJsonLibrary_Array_Get::ReturnLongValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnIntegerValue) == 0x000028, "Member 'LowEntryJsonLibrary_Array_Get::ReturnIntegerValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnFloatValue) == 0x000030, "Member 'LowEntryJsonLibrary_Array_Get::ReturnFloatValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnByteValue) == 0x000038, "Member 'LowEntryJsonLibrary_Array_Get::ReturnByteValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnBooleanValue) == 0x000039, "Member 'LowEntryJsonLibrary_Array_Get::ReturnBooleanValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnJsonObjectValue) == 0x000040, "Member 'LowEntryJsonLibrary_Array_Get::ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Get, ReturnJsonArrayValue) == 0x000048, "Member 'LowEntryJsonLibrary_Array_Get::ReturnJsonArrayValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsBooleanOrDefault
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsBooleanOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Default;                                           // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsBooleanOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_GetAsBooleanOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsBooleanOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsBooleanOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault, Default) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetAsBooleanOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsBooleanOrDefault, ReturnValue) == 0x00000D, "Member 'LowEntryJsonLibrary_Array_GetAsBooleanOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsByteOrDefault
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsByteOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Default;                                           // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsByteOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsByteOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsByteOrDefault) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_GetAsByteOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsByteOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsByteOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsByteOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsByteOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsByteOrDefault, Default) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetAsByteOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsByteOrDefault, ReturnValue) == 0x00000D, "Member 'LowEntryJsonLibrary_Array_GetAsByteOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsFloatOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsFloatOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Default;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsFloatOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetAsFloatOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsFloatOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsFloatOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsFloatOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsFloatOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_GetAsFloatOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsIntegerOrDefault
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsIntegerOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Default;                                           // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsIntegerOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetAsIntegerOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsIntegerOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsIntegerOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault, Default) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetAsIntegerOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsIntegerOrDefault, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsIntegerOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsJsonArrayOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     Default;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_GetAsJsonArrayOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsJsonObjectOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    Default;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_GetAsJsonObjectOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsJsonValueOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     Default;                                           // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_GetAsJsonValueOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsLongOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsLongOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Default;                                           // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsLongOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsLongOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsLongOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetAsLongOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsLongOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsLongOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsLongOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsLongOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsLongOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsLongOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsLongOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_GetAsLongOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetAsStringOrDefault
// 0x0030 (0x0030 - 0x0000)
struct LowEntryJsonLibrary_Array_GetAsStringOrDefault final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Default;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetAsStringOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetAsStringOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetAsStringOrDefault) == 0x000030, "Wrong size on LowEntryJsonLibrary_Array_GetAsStringOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsStringOrDefault, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetAsStringOrDefault::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsStringOrDefault, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetAsStringOrDefault::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsStringOrDefault, Default) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetAsStringOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetAsStringOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Array_GetAsStringOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_GetBoolean final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_GetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetBoolean, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetBoolean::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetBoolean, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetBoolean::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetBoolean, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetBoolean::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetBoolean, ReturnValue) == 0x00000D, "Member 'LowEntryJsonLibrary_Array_GetBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_GetByte final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetByte");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_GetByte");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetByte, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetByte::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetByte, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetByte::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetByte, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetByte::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetByte, ReturnValue) == 0x00000D, "Member 'LowEntryJsonLibrary_Array_GetByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetFloat
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetFloat final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetFloat) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetFloat, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetFloat::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetFloat, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetFloat::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetFloat, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetFloat::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetFloat, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetInteger
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetInteger final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetInteger) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetInteger, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetInteger::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetInteger, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetInteger::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetInteger, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetInteger::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetInteger, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetJsonArray final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonArray, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetJsonArray::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonArray, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetJsonArray::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonArray, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetJsonArray::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetJsonObject final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonObject, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetJsonObject::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonObject, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetJsonObject::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonObject, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetJsonObject::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonObject, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetJsonValue
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetJsonValue final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueFound                       Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetJsonValue) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonValue, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetJsonValue::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonValue, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetJsonValue::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonValue, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetJsonValue::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetJsonValue, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetJsonValue::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetLong
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_GetLong final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetLong");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetLong) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_GetLong");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetLong, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetLong::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetLong, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetLong::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetLong, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetLong::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetLong, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetNull
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_GetNull final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetNull");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetNull) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_GetNull");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetNull, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetNull::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetNull, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetNull::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetNull, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetNull::Branch' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_GetString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_GetString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_GetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_GetString");
static_assert(sizeof(LowEntryJsonLibrary_Array_GetString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_GetString");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_GetString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetString, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_GetString::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetString, Branch) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_GetString::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_GetString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_GetString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertBoolean final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_InsertBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertBoolean, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertBoolean::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertBoolean, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertBoolean::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertBoolean, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_InsertBoolean::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertByte final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertByte");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_InsertByte");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertByte, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertByte::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertByte, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertByte::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertByte, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_InsertByte::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertFloat
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertFloat final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertFloat");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertFloat) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_InsertFloat");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertFloat, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertFloat::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertFloat, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertFloat::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertFloat, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertFloat::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertInteger final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertInteger");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_InsertInteger");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertInteger, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertInteger::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertInteger, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertInteger::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertInteger, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_InsertInteger::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertJsonArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertJsonArray final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertJsonArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_InsertJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonArray, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertJsonArray::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonArray, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertJsonArray::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonArray, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonArray, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_InsertJsonArray::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertJsonObject
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertJsonObject final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertJsonObject) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_InsertJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonObject, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertJsonObject::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonObject, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertJsonObject::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonObject, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonObject, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_InsertJsonObject::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertJsonValue
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertJsonValue final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertJsonValue) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_InsertJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonValue, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertJsonValue::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonValue, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertJsonValue::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonValue, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertJsonValue::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertJsonValue, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_InsertJsonValue::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertLong
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertLong final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertLong");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertLong) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_InsertLong");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertLong, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertLong::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertLong, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertLong::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertLong, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertLong::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertNull
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertNull final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertNull");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertNull) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_InsertNull");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertNull, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertNull::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertNull, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertNull::Index_0' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_InsertString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_InsertString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_InsertString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_InsertString");
static_assert(sizeof(LowEntryJsonLibrary_Array_InsertString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_InsertString");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_InsertString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertString, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_InsertString::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_InsertString, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_InsertString::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_IsSet
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_IsSet final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_IsSet) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_IsSet");
static_assert(sizeof(LowEntryJsonLibrary_Array_IsSet) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_IsSet");
static_assert(offsetof(LowEntryJsonLibrary_Array_IsSet, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_IsSet::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_IsSet, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_IsSet::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_IsSet, ReturnValue) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_IsSet::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Length
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Length final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_Length) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Length");
static_assert(sizeof(LowEntryJsonLibrary_Array_Length) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Length");
static_assert(offsetof(LowEntryJsonLibrary_Array_Length, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Length::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Length, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Length::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Merge
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Merge final
{
public:
	class ULowEntryJsonArray*                     JsonArray1;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     JsonArray2;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Merge) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Merge");
static_assert(sizeof(LowEntryJsonLibrary_Array_Merge) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Merge");
static_assert(offsetof(LowEntryJsonLibrary_Array_Merge, JsonArray1) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Merge::JsonArray1' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Merge, JsonArray2) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Merge::JsonArray2' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Merge, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Merge::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_NotEquals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_NotEquals final
{
public:
	class ULowEntryJsonArray*                     JsonArrayA;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     JsonArrayB;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_NotEquals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_NotEquals");
static_assert(sizeof(LowEntryJsonLibrary_Array_NotEquals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_NotEquals");
static_assert(offsetof(LowEntryJsonLibrary_Array_NotEquals, JsonArrayA) == 0x000000, "Member 'LowEntryJsonLibrary_Array_NotEquals::JsonArrayA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_NotEquals, JsonArrayB) == 0x000008, "Member 'LowEntryJsonLibrary_Array_NotEquals::JsonArrayB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_NotEquals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_NotEquals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_Clone final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Pure_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_Clone, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_Clone::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Pure_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromBooleanArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray final
{
public:
	TArray<bool>                                  Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromBooleanArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromByteArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromByteArray final
{
public:
	TArray<uint8>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromByteArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromByteArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromByteArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromByteArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromByteArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromByteArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromByteArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromByteArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromFloatArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray final
{
public:
	TArray<double>                                Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromFloatArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromIntegerArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray final
{
public:
	TArray<int32>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromIntegerArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromJsonArrayArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray final
{
public:
	TArray<class ULowEntryJsonArray*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonArrayArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromJsonObjectArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray final
{
public:
	TArray<class ULowEntryJsonObject*>            Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonObjectArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromJsonValueArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray final
{
public:
	TArray<class ULowEntryJsonValue*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromJsonValueArray_Internal_Safe
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe final
{
public:
	TArray<class ULowEntryJsonValue*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Safe::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromJsonValueArray_Internal_Unsafe
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe final
{
public:
	TArray<class ULowEntryJsonValue*>             Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromJsonValueArray_Internal_Unsafe::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromLongArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromLongArray final
{
public:
	TArray<int64>                                 Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromLongArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromLongArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromLongArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromLongArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromLongArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromLongArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromLongArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromLongArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_CreateFromStringArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_CreateFromStringArray final
{
public:
	TArray<class FString>                         Value;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_CreateFromStringArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_CreateFromStringArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_CreateFromStringArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_CreateFromStringArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromStringArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromStringArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_CreateFromStringArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_CreateFromStringArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_Merge
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_Merge final
{
public:
	class ULowEntryJsonArray*                     JsonArray1;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     JsonArray2;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_Merge) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_Merge");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_Merge) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_Pure_Merge");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_Merge, JsonArray1) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_Merge::JsonArray1' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_Merge, JsonArray2) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Pure_Merge::JsonArray2' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_Merge, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_Merge::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Pure_ToJsonString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_Pure_ToJsonString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrettyPrint;                                       // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Pure_ToJsonString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Pure_ToJsonString");
static_assert(sizeof(LowEntryJsonLibrary_Array_Pure_ToJsonString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_Pure_ToJsonString");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_ToJsonString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Pure_ToJsonString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_ToJsonString, PrettyPrint) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Pure_ToJsonString::PrettyPrint' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Pure_ToJsonString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_Pure_ToJsonString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Resize
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Resize final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_Resize) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Resize");
static_assert(sizeof(LowEntryJsonLibrary_Array_Resize) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Resize");
static_assert(offsetof(LowEntryJsonLibrary_Array_Resize, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Resize::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Resize, Size) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Resize::Size' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_SetBoolean final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_SetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetBoolean, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetBoolean::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetBoolean, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetBoolean::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetBoolean, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_SetBoolean::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_SetByte final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x000C(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetByte");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_SetByte");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetByte, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetByte::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetByte, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetByte::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetByte, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_SetByte::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetFloat
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_SetFloat final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetFloat) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_SetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetFloat, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetFloat::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetFloat, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetFloat::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetFloat, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetFloat::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_SetInteger final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_SetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetInteger, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetInteger::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetInteger, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetInteger::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetInteger, Value) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_SetInteger::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetJsonArray
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_SetJsonArray final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetJsonArray) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_SetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonArray, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetJsonArray::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonArray, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetJsonArray::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonArray, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonArray, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_SetJsonArray::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetJsonObject
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_SetJsonObject final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetJsonObject) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_SetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonObject, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetJsonObject::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonObject, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetJsonObject::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonObject, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonObject, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_SetJsonObject::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetJsonValue
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_SetJsonValue final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetJsonValue) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_SetJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonValue, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetJsonValue::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonValue, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetJsonValue::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonValue, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetJsonValue::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetJsonValue, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_Array_SetJsonValue::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetLong
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Array_SetLong final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetLong");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetLong) == 0x000018, "Wrong size on LowEntryJsonLibrary_Array_SetLong");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetLong, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetLong::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetLong, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetLong::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetLong, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetLong::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetNull
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_SetNull final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetNull");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetNull) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_SetNull");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetNull, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetNull::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetNull, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetNull::Index_0' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_SetString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_SetString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_SetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_SetString");
static_assert(sizeof(LowEntryJsonLibrary_Array_SetString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_SetString");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_SetString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetString, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_SetString::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_SetString, Value) == 0x000010, "Member 'LowEntryJsonLibrary_Array_SetString::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Shorten
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Shorten final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Size;                                              // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Array_Shorten) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Shorten");
static_assert(sizeof(LowEntryJsonLibrary_Array_Shorten) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Shorten");
static_assert(offsetof(LowEntryJsonLibrary_Array_Shorten, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Shorten::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Shorten, Size) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Shorten::Size' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_ToJsonString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Array_ToJsonString final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrettyPrint;                                       // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_ToJsonString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_ToJsonString");
static_assert(sizeof(LowEntryJsonLibrary_Array_ToJsonString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Array_ToJsonString");
static_assert(offsetof(LowEntryJsonLibrary_Array_ToJsonString, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_ToJsonString::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_ToJsonString, PrettyPrint) == 0x000008, "Member 'LowEntryJsonLibrary_Array_ToJsonString::PrettyPrint' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_ToJsonString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Array_ToJsonString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Array_Unset
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Array_Unset final
{
public:
	class ULowEntryJsonArray*                     JsonArray;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x000C(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Array_Unset) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Array_Unset");
static_assert(sizeof(LowEntryJsonLibrary_Array_Unset) == 0x000010, "Wrong size on LowEntryJsonLibrary_Array_Unset");
static_assert(offsetof(LowEntryJsonLibrary_Array_Unset, JsonArray) == 0x000000, "Member 'LowEntryJsonLibrary_Array_Unset::JsonArray' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Unset, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_Array_Unset::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Array_Unset, Count) == 0x00000C, "Member 'LowEntryJsonLibrary_Array_Unset::Count' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Json_ParseJsonString
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Json_ParseJsonString final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnJsonObjectValue;                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnJsonArrayValue;                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonParseResult                      Branch;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Json_ParseJsonString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Json_ParseJsonString");
static_assert(sizeof(LowEntryJsonLibrary_Json_ParseJsonString) == 0x000028, "Wrong size on LowEntryJsonLibrary_Json_ParseJsonString");
static_assert(offsetof(LowEntryJsonLibrary_Json_ParseJsonString, JsonString) == 0x000000, "Member 'LowEntryJsonLibrary_Json_ParseJsonString::JsonString' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Json_ParseJsonString, ReturnJsonObjectValue) == 0x000010, "Member 'LowEntryJsonLibrary_Json_ParseJsonString::ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Json_ParseJsonString, ReturnJsonArrayValue) == 0x000018, "Member 'LowEntryJsonLibrary_Json_ParseJsonString::ReturnJsonArrayValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Json_ParseJsonString, Branch) == 0x000020, "Member 'LowEntryJsonLibrary_Json_ParseJsonString::Branch' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Append
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Append final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    AppendJsonObject;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          OverrideDuplicates;                                // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_Append) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Append");
static_assert(sizeof(LowEntryJsonLibrary_Object_Append) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Append");
static_assert(offsetof(LowEntryJsonLibrary_Object_Append, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Append::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Append, AppendJsonObject) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Append::AppendJsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Append, OverrideDuplicates) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Append::OverrideDuplicates' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Clear
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Object_Clear final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Clear) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Clear");
static_assert(sizeof(LowEntryJsonLibrary_Object_Clear) == 0x000008, "Wrong size on LowEntryJsonLibrary_Object_Clear");
static_assert(offsetof(LowEntryJsonLibrary_Object_Clear, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Clear::JsonObject' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Object_Clone final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Object_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Object_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Object_Clone, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Clone::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_CreateFromObjectEntryArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_CreateFromObjectEntryArray final
{
public:
	TArray<class ULowEntryJsonObjectEntry*>       Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_CreateFromObjectEntryArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_CreateFromObjectEntryArray");
static_assert(sizeof(LowEntryJsonLibrary_Object_CreateFromObjectEntryArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_CreateFromObjectEntryArray");
static_assert(offsetof(LowEntryJsonLibrary_Object_CreateFromObjectEntryArray, Array) == 0x000000, "Member 'LowEntryJsonLibrary_Object_CreateFromObjectEntryArray::Array' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_CreateFromObjectEntryArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_CreateFromObjectEntryArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Equals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Equals final
{
public:
	class ULowEntryJsonObject*                    JsonObjectA;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    JsonObjectB;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_Equals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Equals");
static_assert(sizeof(LowEntryJsonLibrary_Object_Equals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Equals");
static_assert(offsetof(LowEntryJsonLibrary_Object_Equals, JsonObjectA) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Equals::JsonObjectA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Equals, JsonObjectB) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Equals::JsonObjectB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Equals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Equals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Get
// 0x0060 (0x0060 - 0x0000)
struct LowEntryJsonLibrary_Object_Get final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonType                             Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnStringValue;                                 // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnLongValue;                                   // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnIntegerValue;                                // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnFloatValue;                                  // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnByteValue;                                   // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnBooleanValue;                                // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnJsonObjectValue;                             // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnJsonArrayValue;                              // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Get) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Get");
static_assert(sizeof(LowEntryJsonLibrary_Object_Get) == 0x000060, "Wrong size on LowEntryJsonLibrary_Object_Get");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Get::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Get::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_Get::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnStringValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_Get::ReturnStringValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnLongValue) == 0x000030, "Member 'LowEntryJsonLibrary_Object_Get::ReturnLongValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnIntegerValue) == 0x000038, "Member 'LowEntryJsonLibrary_Object_Get::ReturnIntegerValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnFloatValue) == 0x000040, "Member 'LowEntryJsonLibrary_Object_Get::ReturnFloatValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnByteValue) == 0x000048, "Member 'LowEntryJsonLibrary_Object_Get::ReturnByteValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnBooleanValue) == 0x000049, "Member 'LowEntryJsonLibrary_Object_Get::ReturnBooleanValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnJsonObjectValue) == 0x000050, "Member 'LowEntryJsonLibrary_Object_Get::ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Get, ReturnJsonArrayValue) == 0x000058, "Member 'LowEntryJsonLibrary_Object_Get::ReturnJsonArrayValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsBooleanOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsBooleanOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Default;                                           // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsBooleanOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetAsBooleanOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsBooleanOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsBooleanOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsBooleanOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsBooleanOrDefault, ReturnValue) == 0x000019, "Member 'LowEntryJsonLibrary_Object_GetAsBooleanOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsByteOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsByteOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Default;                                           // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsByteOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsByteOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsByteOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetAsByteOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsByteOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsByteOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsByteOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsByteOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsByteOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsByteOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsByteOrDefault, ReturnValue) == 0x000019, "Member 'LowEntryJsonLibrary_Object_GetAsByteOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsFloatOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsFloatOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Default;                                           // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsFloatOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetAsFloatOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsFloatOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsFloatOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsFloatOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsFloatOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetAsFloatOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsIntegerOrDefault
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsIntegerOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Default;                                           // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsIntegerOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetAsIntegerOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsIntegerOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsIntegerOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsIntegerOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsIntegerOrDefault, ReturnValue) == 0x00001C, "Member 'LowEntryJsonLibrary_Object_GetAsIntegerOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsJsonArrayOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Default;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetAsJsonArrayOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsJsonObjectOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Default;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetAsJsonObjectOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsJsonValueOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Default;                                           // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetAsJsonValueOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsLongOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsLongOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Default;                                           // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsLongOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsLongOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsLongOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetAsLongOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsLongOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsLongOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsLongOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsLongOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsLongOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsLongOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsLongOrDefault, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetAsLongOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetAsStringOrDefault
// 0x0038 (0x0038 - 0x0000)
struct LowEntryJsonLibrary_Object_GetAsStringOrDefault final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Default;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetAsStringOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetAsStringOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetAsStringOrDefault) == 0x000038, "Wrong size on LowEntryJsonLibrary_Object_GetAsStringOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsStringOrDefault, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetAsStringOrDefault::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsStringOrDefault, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetAsStringOrDefault::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsStringOrDefault, Default) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetAsStringOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetAsStringOrDefault, ReturnValue) == 0x000028, "Member 'LowEntryJsonLibrary_Object_GetAsStringOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetBoolean
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetBoolean final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetBoolean) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetBoolean, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetBoolean::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetBoolean, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetBoolean::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetBoolean, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetBoolean::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetBoolean, ReturnValue) == 0x000019, "Member 'LowEntryJsonLibrary_Object_GetBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetByte
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetByte final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetByte");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetByte) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetByte");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetByte, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetByte::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetByte, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetByte::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetByte, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetByte::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetByte, ReturnValue) == 0x000019, "Member 'LowEntryJsonLibrary_Object_GetByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetFloat
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetFloat final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetFloat) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetFloat, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetFloat::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetFloat, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetFloat::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetFloat, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetFloat::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetFloat, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetInteger
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetInteger final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetInteger) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetInteger, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetInteger::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetInteger, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetInteger::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetInteger, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetInteger::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetInteger, ReturnValue) == 0x00001C, "Member 'LowEntryJsonLibrary_Object_GetInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetJsonArray
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetJsonArray final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetJsonArray) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonArray, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetJsonArray::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonArray, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetJsonArray::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonArray, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetJsonArray::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonArray, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetJsonObject
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetJsonObject final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetJsonObject) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonObject, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetJsonObject::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonObject, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetJsonObject::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonObject, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetJsonObject::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonObject, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetJsonValue
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetJsonValue final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueFound                       Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetJsonValue) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonValue, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetJsonValue::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonValue, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetJsonValue::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonValue, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetJsonValue::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetJsonValue, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetJsonValue::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetKeys
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_GetKeys final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetKeys) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetKeys");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetKeys) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_GetKeys");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetKeys, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetKeys::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetKeys, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetKeys::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetLong
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_GetLong final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetLong");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetLong) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_GetLong");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetLong, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetLong::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetLong, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetLong::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetLong, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetLong::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetLong, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetNull
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_GetNull final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetNull");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetNull) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_GetNull");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetNull, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetNull::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetNull, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetNull::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetNull, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetNull::Branch' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetString
// 0x0030 (0x0030 - 0x0000)
struct LowEntryJsonLibrary_Object_GetString final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueAndTypeFound                Branch;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetString");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetString) == 0x000030, "Wrong size on LowEntryJsonLibrary_Object_GetString");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetString, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetString::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetString, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetString::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetString, Branch) == 0x000018, "Member 'LowEntryJsonLibrary_Object_GetString::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetString, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_Object_GetString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_GetValues
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Object_GetValues final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_GetValues) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_GetValues");
static_assert(sizeof(LowEntryJsonLibrary_Object_GetValues) == 0x000010, "Wrong size on LowEntryJsonLibrary_Object_GetValues");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetValues, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_GetValues::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_GetValues, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Object_GetValues::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_IsSet
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_IsSet final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_IsSet) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_IsSet");
static_assert(sizeof(LowEntryJsonLibrary_Object_IsSet) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_IsSet");
static_assert(offsetof(LowEntryJsonLibrary_Object_IsSet, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_IsSet::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_IsSet, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_IsSet::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_IsSet, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Object_IsSet::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Length
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Object_Length final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_Length) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Length");
static_assert(sizeof(LowEntryJsonLibrary_Object_Length) == 0x000010, "Wrong size on LowEntryJsonLibrary_Object_Length");
static_assert(offsetof(LowEntryJsonLibrary_Object_Length, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Length::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Length, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Length::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Merge
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Merge final
{
public:
	class ULowEntryJsonObject*                    JsonObject1;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    JsonObject2;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Merge) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Merge");
static_assert(sizeof(LowEntryJsonLibrary_Object_Merge) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Merge");
static_assert(offsetof(LowEntryJsonLibrary_Object_Merge, JsonObject1) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Merge::JsonObject1' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Merge, JsonObject2) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Merge::JsonObject2' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Merge, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Merge::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_NotEquals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_NotEquals final
{
public:
	class ULowEntryJsonObject*                    JsonObjectA;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    JsonObjectB;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_NotEquals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_NotEquals");
static_assert(sizeof(LowEntryJsonLibrary_Object_NotEquals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_NotEquals");
static_assert(offsetof(LowEntryJsonLibrary_Object_NotEquals, JsonObjectA) == 0x000000, "Member 'LowEntryJsonLibrary_Object_NotEquals::JsonObjectA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_NotEquals, JsonObjectB) == 0x000008, "Member 'LowEntryJsonLibrary_Object_NotEquals::JsonObjectB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_NotEquals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_NotEquals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_Clone final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Object_Pure_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_Clone, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_Clone::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Pure_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_CreateFromObjectEntryArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray final
{
public:
	TArray<class ULowEntryJsonObjectEntry*>       Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray, Array) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray::Array' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_CreateFromObjectEntryArray_Internal_Safe
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe final
{
public:
	TArray<class ULowEntryJsonObjectEntry*>       Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe, Array) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe::Array' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Safe::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe final
{
public:
	TArray<class ULowEntryJsonObjectEntry*>       Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe, Array) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe::Array' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Pure_CreateFromObjectEntryArray_Internal_Unsafe::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_Merge
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_Merge final
{
public:
	class ULowEntryJsonObject*                    JsonObject1;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    JsonObject2;                                       // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_Merge) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_Merge");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_Merge) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Pure_Merge");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_Merge, JsonObject1) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_Merge::JsonObject1' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_Merge, JsonObject2) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Pure_Merge::JsonObject2' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_Merge, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Pure_Merge::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Pure_ToJsonString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_Pure_ToJsonString final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrettyPrint;                                       // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Pure_ToJsonString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Pure_ToJsonString");
static_assert(sizeof(LowEntryJsonLibrary_Object_Pure_ToJsonString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_Pure_ToJsonString");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_ToJsonString, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Pure_ToJsonString::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_ToJsonString, PrettyPrint) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Pure_ToJsonString::PrettyPrint' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Pure_ToJsonString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_Pure_ToJsonString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetBoolean
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_SetBoolean final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetBoolean) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_SetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetBoolean, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetBoolean::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetBoolean, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetBoolean::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetBoolean, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetBoolean::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetByte
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_SetByte final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetByte");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetByte) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_SetByte");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetByte, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetByte::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetByte, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetByte::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetByte, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetByte::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetFloat
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_SetFloat final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetFloat) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_SetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetFloat, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetFloat::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetFloat, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetFloat::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetFloat, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetFloat::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetInteger
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_SetInteger final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetInteger) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_SetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetInteger, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetInteger::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetInteger, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetInteger::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetInteger, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetInteger::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetJsonArray
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_SetJsonArray final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Value;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetJsonArray) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_SetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonArray, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetJsonArray::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonArray, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetJsonArray::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonArray, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonArray, Unsafe) == 0x000020, "Member 'LowEntryJsonLibrary_Object_SetJsonArray::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetJsonObject
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_SetJsonObject final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Value;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetJsonObject) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_SetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonObject, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetJsonObject::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonObject, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetJsonObject::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonObject, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonObject, Unsafe) == 0x000020, "Member 'LowEntryJsonLibrary_Object_SetJsonObject::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetJsonValue
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_SetJsonValue final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Value;                                             // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetJsonValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetJsonValue");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetJsonValue) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_SetJsonValue");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonValue, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetJsonValue::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonValue, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetJsonValue::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonValue, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetJsonValue::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetJsonValue, Unsafe) == 0x000020, "Member 'LowEntryJsonLibrary_Object_SetJsonValue::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetLong
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_SetLong final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0018(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetLong");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetLong) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_SetLong");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetLong, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetLong::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetLong, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetLong::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetLong, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetLong::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetNull
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_SetNull final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetNull");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetNull) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_SetNull");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetNull, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetNull::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetNull, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetNull::Key' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_SetString
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Object_SetString final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_SetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_SetString");
static_assert(sizeof(LowEntryJsonLibrary_Object_SetString) == 0x000028, "Wrong size on LowEntryJsonLibrary_Object_SetString");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetString, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_SetString::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetString, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_SetString::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_SetString, Value) == 0x000018, "Member 'LowEntryJsonLibrary_Object_SetString::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Sort
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Object_Sort final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Reversed;                                          // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Object_Sort) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Sort");
static_assert(sizeof(LowEntryJsonLibrary_Object_Sort) == 0x000010, "Wrong size on LowEntryJsonLibrary_Object_Sort");
static_assert(offsetof(LowEntryJsonLibrary_Object_Sort, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Sort::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Sort, Reversed) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Sort::Reversed' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_ToJsonString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Object_ToJsonString final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PrettyPrint;                                       // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_ToJsonString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_ToJsonString");
static_assert(sizeof(LowEntryJsonLibrary_Object_ToJsonString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Object_ToJsonString");
static_assert(offsetof(LowEntryJsonLibrary_Object_ToJsonString, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_ToJsonString::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_ToJsonString, PrettyPrint) == 0x000008, "Member 'LowEntryJsonLibrary_Object_ToJsonString::PrettyPrint' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_ToJsonString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Object_ToJsonString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Object_Unset
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Object_Unset final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Key;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Object_Unset) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Object_Unset");
static_assert(sizeof(LowEntryJsonLibrary_Object_Unset) == 0x000018, "Wrong size on LowEntryJsonLibrary_Object_Unset");
static_assert(offsetof(LowEntryJsonLibrary_Object_Unset, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_Object_Unset::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Object_Unset, Key) == 0x000008, "Member 'LowEntryJsonLibrary_Object_Unset::Key' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_GetKey
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_GetKey final
{
public:
	class ULowEntryJsonObjectEntry*               JsonObjectEntry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_GetKey) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_GetKey");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_GetKey) == 0x000018, "Wrong size on LowEntryJsonLibrary_ObjectEntry_GetKey");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_GetKey, JsonObjectEntry) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_GetKey::JsonObjectEntry' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_GetKey, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectEntry_GetKey::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_GetValue
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_GetValue final
{
public:
	class ULowEntryJsonObjectEntry*               JsonObjectEntry;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_GetValue) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_GetValue");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_GetValue) == 0x000010, "Wrong size on LowEntryJsonLibrary_ObjectEntry_GetValue");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_GetValue, JsonObjectEntry) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_GetValue::JsonObjectEntry' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_GetValue, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectEntry_GetValue::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_Create
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_Create final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_Create) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_Create");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_Create) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_Create");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_Create, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_Create::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_Create, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_Create::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_Create, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_Create::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromBoolean
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromByte
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromFloat
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromInteger
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0010(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromJsonArray
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray) == 0x000028, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromJsonObject
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Value;                                             // 0x0010(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0018(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject) == 0x000028, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject, Unsafe) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromLong
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0010(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong) == 0x000020, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromNull
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull) == 0x000018, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromNull::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectEntry_Pure_CreateFromString
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectEntry*               ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString");
static_assert(sizeof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString) == 0x000028, "Wrong size on LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString, Key) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString, Value) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString, ReturnValue) == 0x000020, "Member 'LowEntryJsonLibrary_ObjectEntry_Pure_CreateFromString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_Clone final
{
public:
	class ULowEntryJsonObjectIterator*            JsonObjectIterator;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectIterator*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_Clone");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_ObjectIterator_Clone");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Clone, JsonObjectIterator) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_Clone::JsonObjectIterator' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_Create
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_Create final
{
public:
	class ULowEntryJsonObject*                    JsonObject;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObjectIterator*            ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_Create) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_Create");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_Create) == 0x000010, "Wrong size on LowEntryJsonLibrary_ObjectIterator_Create");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Create, JsonObject) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_Create::JsonObject' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Create, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_Create::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_Get
// 0x0030 (0x0030 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_Get final
{
public:
	class ULowEntryJsonObjectIterator*            JsonObjectIterator;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Index_0;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonValueFound                       Branch;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_Get) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_Get");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_Get) == 0x000030, "Wrong size on LowEntryJsonLibrary_ObjectIterator_Get");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Get, JsonObjectIterator) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_Get::JsonObjectIterator' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Get, Index_0) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_Get::Index_0' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Get, Key) == 0x000010, "Member 'LowEntryJsonLibrary_ObjectIterator_Get::Key' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Get, JsonValue) == 0x000020, "Member 'LowEntryJsonLibrary_ObjectIterator_Get::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Get, Branch) == 0x000028, "Member 'LowEntryJsonLibrary_ObjectIterator_Get::Branch' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_GetKeys
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_GetKeys final
{
public:
	class ULowEntryJsonObjectIterator*            JsonObjectIterator;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_GetKeys) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_GetKeys");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_GetKeys) == 0x000018, "Wrong size on LowEntryJsonLibrary_ObjectIterator_GetKeys");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_GetKeys, JsonObjectIterator) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_GetKeys::JsonObjectIterator' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_GetKeys, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_GetKeys::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_GetValues
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_GetValues final
{
public:
	class ULowEntryJsonObjectIterator*            JsonObjectIterator;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_GetValues) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_GetValues");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_GetValues) == 0x000010, "Wrong size on LowEntryJsonLibrary_ObjectIterator_GetValues");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_GetValues, JsonObjectIterator) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_GetValues::JsonObjectIterator' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_GetValues, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_GetValues::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.ObjectIterator_Length
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_ObjectIterator_Length final
{
public:
	class ULowEntryJsonObjectIterator*            JsonObjectIterator;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_ObjectIterator_Length) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_ObjectIterator_Length");
static_assert(sizeof(LowEntryJsonLibrary_ObjectIterator_Length) == 0x000010, "Wrong size on LowEntryJsonLibrary_ObjectIterator_Length");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Length, JsonObjectIterator) == 0x000000, "Member 'LowEntryJsonLibrary_ObjectIterator_Length::JsonObjectIterator' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_ObjectIterator_Length, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_ObjectIterator_Length::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Clone final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Value_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Value_Clone, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Clone::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Create
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Value_Create final
{
public:
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Create) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Create");
static_assert(sizeof(LowEntryJsonLibrary_Value_Create) == 0x000008, "Wrong size on LowEntryJsonLibrary_Value_Create");
static_assert(offsetof(LowEntryJsonLibrary_Value_Create, ReturnValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Create::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromBoolean final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_CreateFromBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromBoolean, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromBoolean::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromBoolean, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromByte final
{
public:
	uint8                                         Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromByte");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_CreateFromByte");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromByte, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromByte::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromByte, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromFloat
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromFloat final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromFloat");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromFloat) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_CreateFromFloat");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromFloat, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromFloat::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromFloat, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromInteger final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromInteger");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_CreateFromInteger");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromInteger, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromInteger::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromInteger, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromJsonArray final
{
public:
	class ULowEntryJsonArray*                     Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_CreateFromJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonArray, Unsafe) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromJsonObject final
{
public:
	class ULowEntryJsonObject*                    Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_CreateFromJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonObject, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonObject, Unsafe) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonObject::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromJsonObject, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_CreateFromJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromLong
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromLong final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromLong");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromLong) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_CreateFromLong");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromLong, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromLong::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromLong, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_CreateFromLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromNull
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromNull final
{
public:
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromNull");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromNull) == 0x000008, "Wrong size on LowEntryJsonLibrary_Value_CreateFromNull");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromNull, ReturnValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromNull::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_CreateFromString
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_CreateFromString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_CreateFromString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_CreateFromString");
static_assert(sizeof(LowEntryJsonLibrary_Value_CreateFromString) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_CreateFromString");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromString, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_CreateFromString::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_CreateFromString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_CreateFromString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Equals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_Equals final
{
public:
	class ULowEntryJsonValue*                     JsonValueA;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     JsonValueB;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_Equals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Equals");
static_assert(sizeof(LowEntryJsonLibrary_Value_Equals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_Equals");
static_assert(offsetof(LowEntryJsonLibrary_Value_Equals, JsonValueA) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Equals::JsonValueA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Equals, JsonValueB) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Equals::JsonValueB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Equals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Equals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Get
// 0x0050 (0x0050 - 0x0000)
struct LowEntryJsonLibrary_Value_Get final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonType                             Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnStringValue;                                 // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnLongValue;                                   // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnIntegerValue;                                // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnFloatValue;                                  // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnByteValue;                                   // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnBooleanValue;                                // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnJsonObjectValue;                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnJsonArrayValue;                              // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Get) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Get");
static_assert(sizeof(LowEntryJsonLibrary_Value_Get) == 0x000050, "Wrong size on LowEntryJsonLibrary_Value_Get");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Get::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Get::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnStringValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Get::ReturnStringValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnLongValue) == 0x000020, "Member 'LowEntryJsonLibrary_Value_Get::ReturnLongValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnIntegerValue) == 0x000028, "Member 'LowEntryJsonLibrary_Value_Get::ReturnIntegerValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnFloatValue) == 0x000030, "Member 'LowEntryJsonLibrary_Value_Get::ReturnFloatValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnByteValue) == 0x000038, "Member 'LowEntryJsonLibrary_Value_Get::ReturnByteValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnBooleanValue) == 0x000039, "Member 'LowEntryJsonLibrary_Value_Get::ReturnBooleanValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnJsonObjectValue) == 0x000040, "Member 'LowEntryJsonLibrary_Value_Get::ReturnJsonObjectValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Get, ReturnJsonArrayValue) == 0x000048, "Member 'LowEntryJsonLibrary_Value_Get::ReturnJsonArrayValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsBooleanOrDefault
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsBooleanOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Default;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsBooleanOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsBooleanOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsBooleanOrDefault) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetAsBooleanOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsBooleanOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsBooleanOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsBooleanOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsBooleanOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsBooleanOrDefault, ReturnValue) == 0x000009, "Member 'LowEntryJsonLibrary_Value_GetAsBooleanOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsByteOrDefault
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsByteOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Default;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsByteOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsByteOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsByteOrDefault) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetAsByteOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsByteOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsByteOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsByteOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsByteOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsByteOrDefault, ReturnValue) == 0x000009, "Member 'LowEntryJsonLibrary_Value_GetAsByteOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsFloatOrDefault
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsFloatOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Default;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsFloatOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsFloatOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsFloatOrDefault) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetAsFloatOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsFloatOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsFloatOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsFloatOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsFloatOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsFloatOrDefault, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetAsFloatOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsIntegerOrDefault
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsIntegerOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Default;                                           // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsIntegerOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsIntegerOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsIntegerOrDefault) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetAsIntegerOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsIntegerOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsIntegerOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsIntegerOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsIntegerOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsIntegerOrDefault, ReturnValue) == 0x00000C, "Member 'LowEntryJsonLibrary_Value_GetAsIntegerOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsJsonArrayOrDefault
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Default;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetAsJsonArrayOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsJsonObjectOrDefault
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Default;                                           // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetAsJsonObjectOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsLongOrDefault
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsLongOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Default;                                           // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsLongOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsLongOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsLongOrDefault) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetAsLongOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsLongOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsLongOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsLongOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsLongOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsLongOrDefault, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetAsLongOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetAsStringOrDefault
// 0x0028 (0x0028 - 0x0000)
struct LowEntryJsonLibrary_Value_GetAsStringOrDefault final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Default;                                           // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetAsStringOrDefault) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetAsStringOrDefault");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetAsStringOrDefault) == 0x000028, "Wrong size on LowEntryJsonLibrary_Value_GetAsStringOrDefault");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsStringOrDefault, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetAsStringOrDefault::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsStringOrDefault, Default) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetAsStringOrDefault::Default' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetAsStringOrDefault, ReturnValue) == 0x000018, "Member 'LowEntryJsonLibrary_Value_GetAsStringOrDefault::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetBoolean final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetBoolean, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetBoolean::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetBoolean, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetBoolean::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetBoolean, ReturnValue) == 0x000009, "Member 'LowEntryJsonLibrary_Value_GetBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetByte final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetByte");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetByte");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetByte, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetByte::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetByte, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetByte::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetByte, ReturnValue) == 0x000009, "Member 'LowEntryJsonLibrary_Value_GetByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetFloat
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetFloat final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetFloat) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetFloat, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetFloat::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetFloat, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetFloat::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetFloat, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetInteger final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReturnValue;                                       // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetInteger, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetInteger::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetInteger, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetInteger::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetInteger, ReturnValue) == 0x00000C, "Member 'LowEntryJsonLibrary_Value_GetInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetJsonArray final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonArray*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonArray, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetJsonArray::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonArray, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetJsonArray::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetJsonObject final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonObject*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonObject, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetJsonObject::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonObject, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetJsonObject::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetJsonObject, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetLong
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_GetLong final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetLong");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetLong) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_GetLong");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetLong, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetLong::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetLong, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetLong::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetLong, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetNull
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_GetNull final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetNull");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetNull) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_GetNull");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetNull, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetNull::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetNull, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetNull::Branch' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_GetString
// 0x0020 (0x0020 - 0x0000)
struct LowEntryJsonLibrary_Value_GetString final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELowEntryJsonTypeFound                        Branch;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_GetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_GetString");
static_assert(sizeof(LowEntryJsonLibrary_Value_GetString) == 0x000020, "Wrong size on LowEntryJsonLibrary_Value_GetString");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetString, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_GetString::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetString, Branch) == 0x000008, "Member 'LowEntryJsonLibrary_Value_GetString::Branch' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_GetString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_GetString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_NotEquals
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_NotEquals final
{
public:
	class ULowEntryJsonValue*                     JsonValueA;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     JsonValueB;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_NotEquals) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_NotEquals");
static_assert(sizeof(LowEntryJsonLibrary_Value_NotEquals) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_NotEquals");
static_assert(offsetof(LowEntryJsonLibrary_Value_NotEquals, JsonValueA) == 0x000000, "Member 'LowEntryJsonLibrary_Value_NotEquals::JsonValueA' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_NotEquals, JsonValueB) == 0x000008, "Member 'LowEntryJsonLibrary_Value_NotEquals::JsonValueB' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_NotEquals, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_NotEquals::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_Clone
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_Clone final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_Clone) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_Clone");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_Clone) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_Clone");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_Clone, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_Clone::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_Clone, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_Clone::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_Create
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_Create final
{
public:
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_Create) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_Create");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_Create) == 0x000008, "Wrong size on LowEntryJsonLibrary_Value_Pure_Create");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_Create, ReturnValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_Create::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromBoolean final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromBoolean, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromBoolean::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromBoolean, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromBoolean::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromByte final
{
public:
	uint8                                         Value;                                             // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromByte");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromByte");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromByte, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromByte::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromByte, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromByte::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromFloat
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromFloat final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromFloat");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromFloat) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromFloat");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromFloat, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromFloat::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromFloat, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromFloat::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromInteger final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromInteger");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromInteger");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromInteger, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromInteger::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromInteger, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromInteger::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray final
{
public:
	class ULowEntryJsonArray*                     Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray, Unsafe) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonArray::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject final
{
public:
	class ULowEntryJsonObject*                    Value;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject, Unsafe) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject::Unsafe' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromJsonObject::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromLong
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromLong final
{
public:
	int64                                         Value;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromLong");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromLong) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromLong");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromLong, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromLong::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromLong, ReturnValue) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromLong::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromNull
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromNull final
{
public:
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromNull");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromNull) == 0x000008, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromNull");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromNull, ReturnValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromNull::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Pure_CreateFromString
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_Pure_CreateFromString final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_Pure_CreateFromString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Pure_CreateFromString");
static_assert(sizeof(LowEntryJsonLibrary_Value_Pure_CreateFromString) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_Pure_CreateFromString");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromString, Value) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromString::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Pure_CreateFromString, ReturnValue) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Pure_CreateFromString::ReturnValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_Set
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_Set final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonValue*                     Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_Set) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_Set");
static_assert(sizeof(LowEntryJsonLibrary_Value_Set) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_Set");
static_assert(offsetof(LowEntryJsonLibrary_Value_Set, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_Set::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Set, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_Set::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_Set, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Value_Set::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetBoolean
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_SetBoolean final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Value;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetBoolean) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetBoolean");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetBoolean) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_SetBoolean");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetBoolean, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetBoolean::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetBoolean, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetBoolean::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetByte
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_SetByte final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Value;                                             // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetByte) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetByte");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetByte) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_SetByte");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetByte, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetByte::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetByte, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetByte::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetFloat
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_SetFloat final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        Value;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetFloat) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetFloat");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetFloat) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_SetFloat");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetFloat, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetFloat::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetFloat, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetFloat::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetInteger
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_SetInteger final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetInteger) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetInteger");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetInteger) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_SetInteger");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetInteger, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetInteger::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetInteger, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetInteger::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetJsonArray
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_SetJsonArray final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonArray*                     Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetJsonArray) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetJsonArray");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetJsonArray) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_SetJsonArray");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonArray, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetJsonArray::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonArray, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetJsonArray::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonArray, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Value_SetJsonArray::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetJsonObject
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_SetJsonObject final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULowEntryJsonObject*                    Value;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Unsafe;                                            // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetJsonObject) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetJsonObject");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetJsonObject) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_SetJsonObject");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonObject, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetJsonObject::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonObject, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetJsonObject::Value' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetJsonObject, Unsafe) == 0x000010, "Member 'LowEntryJsonLibrary_Value_SetJsonObject::Unsafe' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetLong
// 0x0010 (0x0010 - 0x0000)
struct LowEntryJsonLibrary_Value_SetLong final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         Value;                                             // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetLong) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetLong");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetLong) == 0x000010, "Wrong size on LowEntryJsonLibrary_Value_SetLong");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetLong, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetLong::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetLong, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetLong::Value' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetNull
// 0x0008 (0x0008 - 0x0000)
struct LowEntryJsonLibrary_Value_SetNull final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetNull) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetNull");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetNull) == 0x000008, "Wrong size on LowEntryJsonLibrary_Value_SetNull");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetNull, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetNull::JsonValue' has a wrong offset!");

// Function LowEntryJson.LowEntryJsonLibrary.Value_SetString
// 0x0018 (0x0018 - 0x0000)
struct LowEntryJsonLibrary_Value_SetString final
{
public:
	class ULowEntryJsonValue*                     JsonValue;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LowEntryJsonLibrary_Value_SetString) == 0x000008, "Wrong alignment on LowEntryJsonLibrary_Value_SetString");
static_assert(sizeof(LowEntryJsonLibrary_Value_SetString) == 0x000018, "Wrong size on LowEntryJsonLibrary_Value_SetString");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetString, JsonValue) == 0x000000, "Member 'LowEntryJsonLibrary_Value_SetString::JsonValue' has a wrong offset!");
static_assert(offsetof(LowEntryJsonLibrary_Value_SetString, Value) == 0x000008, "Member 'LowEntryJsonLibrary_Value_SetString::Value' has a wrong offset!");

}

