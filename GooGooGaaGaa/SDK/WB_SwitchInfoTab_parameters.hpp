#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_SwitchInfoTab

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_ActionPropType_structs.hpp"
#include "UMG_structs.hpp"
#include "E_CreativePlayerMode_structs.hpp"


namespace SDK::Params
{

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.ActivateBreaksAfterUseForAllSwitches
// 0x0048 (0x0048 - 0x0000)
struct WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3521[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Switch_C*                           K2Node_DynamicCast_AsBP_Switch;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3522[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Switch_C*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches");
static_assert(sizeof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches) == 0x000048, "Wrong size on WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, Temp_object_Variable) == 0x000010, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, CallFunc_GetAnchorActor_AnchorActor) == 0x000020, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, K2Node_DynamicCast_AsBP_Switch) == 0x000028, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::K2Node_DynamicCast_AsBP_Switch' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WB_SwitchInfoTab_C_ActivateBreaksAfterUseForAllSwitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.DeactivateBreaksAfterUseForAllSwitches
// 0x0048 (0x0048 - 0x0000)
struct WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3523[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Switch_C*                           K2Node_DynamicCast_AsBP_Switch;                    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3524[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches");
static_assert(sizeof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches) == 0x000048, "Wrong size on WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, Temp_object_Variable) == 0x000010, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, CallFunc_GetAnchorActor_AnchorActor) == 0x000020, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, K2Node_DynamicCast_AsBP_Switch) == 0x000028, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::K2Node_DynamicCast_AsBP_Switch' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WB_SwitchInfoTab_C_DeactivateBreaksAfterUseForAllSwitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.ExecuteUbergraph_WB_SwitchInfoTab
// 0x0004 (0x0004 - 0x0000)
struct WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab) == 0x000004, "Wrong alignment on WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab");
static_assert(sizeof(WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab) == 0x000004, "Wrong size on WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab");
static_assert(offsetof(WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab, EntryPoint) == 0x000000, "Member 'WB_SwitchInfoTab_C_ExecuteUbergraph_WB_SwitchInfoTab::EntryPoint' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct WB_SwitchInfoTab_C_Initialize final
{
public:
	class UWB_WorldSettingsTab_C*                 CallFunc_FindParentWidgetOfType_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_Initialize) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_Initialize");
static_assert(sizeof(WB_SwitchInfoTab_C_Initialize) == 0x000008, "Wrong size on WB_SwitchInfoTab_C_Initialize");
static_assert(offsetof(WB_SwitchInfoTab_C_Initialize, CallFunc_FindParentWidgetOfType_ReturnValue) == 0x000000, "Member 'WB_SwitchInfoTab_C_Initialize::CallFunc_FindParentWidgetOfType_ReturnValue' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.ResetSwitchTypeTest
// 0x0030 (0x0030 - 0x0000)
struct WB_SwitchInfoTab_C_ResetSwitchTypeTest final
{
public:
	bool                                          IsStillMixed;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3525[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3526[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3527[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ActionPropType                              CallFunc_GetActionType_ActionType;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_ResetSwitchTypeTest) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_ResetSwitchTypeTest");
static_assert(sizeof(WB_SwitchInfoTab_C_ResetSwitchTypeTest) == 0x000030, "Wrong size on WB_SwitchInfoTab_C_ResetSwitchTypeTest");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, IsStillMixed) == 0x000000, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::IsStillMixed' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000C, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000028, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_GetActionType_ActionType) == 0x00002C, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_GetActionType_ActionType' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_ResetSwitchTypeTest, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'WB_SwitchInfoTab_C_ResetSwitchTypeTest::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.UpdateAllSwitchBreaksAfterUseStates
// 0x0028 (0x0028 - 0x0000)
struct WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Switch_C*                           K2Node_DynamicCast_AsBP_Switch;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                CallFunc_GetCheckBoxState_CheckedState;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates");
static_assert(sizeof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates) == 0x000028, "Wrong size on WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, Temp_object_Variable) == 0x000000, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, CallFunc_GetAnchorActor_AnchorActor) == 0x000010, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, K2Node_DynamicCast_AsBP_Switch) == 0x000018, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::K2Node_DynamicCast_AsBP_Switch' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, CallFunc_GetCheckBoxState_CheckedState) == 0x000021, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::CallFunc_GetCheckBoxState_CheckedState' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates, K2Node_SwitchEnum_CmpSuccess) == 0x000022, "Member 'WB_SwitchInfoTab_C_UpdateAllSwitchBreaksAfterUseStates::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.UpdateContent
// 0x0040 (0x0040 - 0x0000)
struct WB_SwitchInfoTab_C_UpdateContent final
{
public:
	class ABP_Switch_C*                           SwitchToTest;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Added;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3528[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3529[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ActionPropType                              CallFunc_GetActionType_ActionType;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CreativePlayerMode                          Temp_byte_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352A[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ActionPropType                              CallFunc_GetActionType_ActionType_1;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_UpdateContent) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_UpdateContent");
static_assert(sizeof(WB_SwitchInfoTab_C_UpdateContent) == 0x000040, "Wrong size on WB_SwitchInfoTab_C_UpdateContent");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, SwitchToTest) == 0x000000, "Member 'WB_SwitchInfoTab_C_UpdateContent::SwitchToTest' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Added) == 0x000008, "Member 'WB_SwitchInfoTab_C_UpdateContent::Added' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_bool_Variable) == 0x000018, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable) == 0x000019, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_1) == 0x00001A, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_GetActionType_ActionType) == 0x000028, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_GetActionType_ActionType' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000029, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_2) == 0x00002A, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, K2Node_SwitchEnum_CmpSuccess) == 0x00002B, "Member 'WB_SwitchInfoTab_C_UpdateContent::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_3) == 0x00002C, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_4) == 0x00002D, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_5) == 0x000036, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, Temp_byte_Variable_6) == 0x000037, "Member 'WB_SwitchInfoTab_C_UpdateContent::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, CallFunc_GetActionType_ActionType_1) == 0x000038, "Member 'WB_SwitchInfoTab_C_UpdateContent::CallFunc_GetActionType_ActionType_1' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, K2Node_Select_Default) == 0x000039, "Member 'WB_SwitchInfoTab_C_UpdateContent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_UpdateContent, K2Node_Select_Default_1) == 0x00003A, "Member 'WB_SwitchInfoTab_C_UpdateContent::K2Node_Select_Default_1' has a wrong offset!");

// Function WB_SwitchInfoTab.WB_SwitchInfoTab_C.GetAnchorActor
// 0x0030 (0x0030 - 0x0000)
struct WB_SwitchInfoTab_C_GetAnchorActor final
{
public:
	TArray<class AActor*>                         ActorGroup__Optionalt_;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class AActor*                                 AnchorActor;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_352B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAnchorActor_AnchorActor_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_SwitchInfoTab_C_GetAnchorActor) == 0x000008, "Wrong alignment on WB_SwitchInfoTab_C_GetAnchorActor");
static_assert(sizeof(WB_SwitchInfoTab_C_GetAnchorActor) == 0x000030, "Wrong size on WB_SwitchInfoTab_C_GetAnchorActor");
static_assert(offsetof(WB_SwitchInfoTab_C_GetAnchorActor, ActorGroup__Optionalt_) == 0x000000, "Member 'WB_SwitchInfoTab_C_GetAnchorActor::ActorGroup__Optionalt_' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_GetAnchorActor, AnchorActor) == 0x000010, "Member 'WB_SwitchInfoTab_C_GetAnchorActor::AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_GetAnchorActor, CallFunc_GetAnchorActor_AnchorActor) == 0x000018, "Member 'WB_SwitchInfoTab_C_GetAnchorActor::CallFunc_GetAnchorActor_AnchorActor' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_GetAnchorActor, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WB_SwitchInfoTab_C_GetAnchorActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_SwitchInfoTab_C_GetAnchorActor, CallFunc_GetAnchorActor_AnchorActor_1) == 0x000028, "Member 'WB_SwitchInfoTab_C_GetAnchorActor::CallFunc_GetAnchorActor_AnchorActor_1' has a wrong offset!");

}

