#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_TeamAndSkillSelection

#include "Basic.hpp"

#include "BFL_TeamAndSkillSelection_classes.hpp"
#include "BFL_TeamAndSkillSelection_parameters.hpp"


namespace SDK
{

// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.VerifySkillSelection
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::VerifySkillSelection(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "VerifySkillSelection");

	Params::BFL_TeamAndSkillSelection_C_VerifySkillSelection Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.VerifySkillSelectionForTeam
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::VerifySkillSelectionForTeam(ETeamID Team, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "VerifySkillSelectionForTeam");

	Params::BFL_TeamAndSkillSelection_C_VerifySkillSelectionForTeam Parms{};

	Parms.Team = Team;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.SaveSkillSelection
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESkillCategory                          SkillCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NoSkill                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::SaveSkillSelection(class UClass*& Skill, ETeamID& Team, ESkillCategory SkillCategory, bool NoSkill, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "SaveSkillSelection");

	Params::BFL_TeamAndSkillSelection_C_SaveSkillSelection Parms{};

	Parms.Skill = Skill;
	Parms.Team = Team;
	Parms.SkillCategory = SkillCategory;
	Parms.NoSkill = NoSkill;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Skill = Parms.Skill;
	Team = Parms.Team;
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.SelectSkill
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// ESkillCategory                          SkillCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::SelectSkill(ETeamID& Team, class AB_PlayerState_C*& PlayerState, class UClass* Skill, ESkillCategory SkillCategory, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "SelectSkill");

	Params::BFL_TeamAndSkillSelection_C_SelectSkill Parms{};

	Parms.Team = Team;
	Parms.PlayerState = PlayerState;
	Parms.Skill = Skill;
	Parms.SkillCategory = SkillCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Team = Parms.Team;
	PlayerState = Parms.PlayerState;
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.SelectRandomSkill
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_GameState_C*                   GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESkillCategory                          Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           SelectedSkill                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::SelectRandomSkill(class AB_GameState_C*& GameState, ETeamID& Team, ESkillCategory& Category, class AB_PlayerState_C*& PlayerState, class UObject* __WorldContext, class UClass** SelectedSkill)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "SelectRandomSkill");

	Params::BFL_TeamAndSkillSelection_C_SelectRandomSkill Parms{};

	Parms.GameState = GameState;
	Parms.Team = Team;
	Parms.Category = Category;
	Parms.PlayerState = PlayerState;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GameState = Parms.GameState;
	Team = Parms.Team;
	Category = Parms.Category;
	PlayerState = Parms.PlayerState;

	if (SelectedSkill != nullptr)
		*SelectedSkill = Parms.SelectedSkill;
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.GetAllowedSkills
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AB_GameState_C*                   GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESkillCategory                          Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class UClass*> UBFL_TeamAndSkillSelection_C::GetAllowedSkills(class AB_GameState_C*& GameState, ETeamID& Team, ESkillCategory& Category, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "GetAllowedSkills");

	Params::BFL_TeamAndSkillSelection_C_GetAllowedSkills Parms{};

	Parms.GameState = GameState;
	Parms.Team = Team;
	Parms.Category = Category;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GameState = Parms.GameState;
	Team = Parms.Team;
	Category = Parms.Category;

	return Parms.ReturnValue;
}


// Function BFL_TeamAndSkillSelection.BFL_TeamAndSkillSelection_C.VerifySkillSelectionForCategory
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_GameState_C*                   GameState                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ETeamID                                 Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// ESkillCategory                          SkillCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_TeamAndSkillSelection_C::VerifySkillSelectionForCategory(class AB_GameState_C*& GameState, ETeamID Team, class AB_PlayerState_C*& PlayerState, ESkillCategory SkillCategory, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_TeamAndSkillSelection_C", "VerifySkillSelectionForCategory");

	Params::BFL_TeamAndSkillSelection_C_VerifySkillSelectionForCategory Parms{};

	Parms.GameState = GameState;
	Parms.Team = Team;
	Parms.PlayerState = PlayerState;
	Parms.SkillCategory = SkillCategory;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GameState = Parms.GameState;
	PlayerState = Parms.PlayerState;
}

}

