#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveWitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Witch_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ObjectiveWitch.B_ObjectiveWitch_C
// 0x0020 (0x0990 - 0x0970)
class AB_ObjectiveWitch_C final : public AB_Witch_C
{
public:
	uint8                                         Pad_3190[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_B_ObjectiveWitch_C;                 // 0x0968(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Hidden;                                            // 0x0970(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3191[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnInvisibleTime;                                // 0x0978(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           InvisTimer;                                        // 0x0980(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AfterPossess(double Rotation);
	void ExecuteUbergraph_B_ObjectiveWitch(int32 EntryPoint);
	void InitializeSkinContent();
	void OnRep_Hidden();
	void Unhide();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ObjectiveWitch_C">();
	}
	static class AB_ObjectiveWitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_ObjectiveWitch_C>();
	}
};
static_assert(alignof(AB_ObjectiveWitch_C) == 0x000010, "Wrong alignment on AB_ObjectiveWitch_C");
static_assert(sizeof(AB_ObjectiveWitch_C) == 0x000990, "Wrong size on AB_ObjectiveWitch_C");
static_assert(offsetof(AB_ObjectiveWitch_C, UberGraphFrame_B_ObjectiveWitch_C) == 0x000968, "Member 'AB_ObjectiveWitch_C::UberGraphFrame_B_ObjectiveWitch_C' has a wrong offset!");
static_assert(offsetof(AB_ObjectiveWitch_C, Hidden) == 0x000970, "Member 'AB_ObjectiveWitch_C::Hidden' has a wrong offset!");
static_assert(offsetof(AB_ObjectiveWitch_C, SpawnInvisibleTime) == 0x000978, "Member 'AB_ObjectiveWitch_C::SpawnInvisibleTime' has a wrong offset!");
static_assert(offsetof(AB_ObjectiveWitch_C, InvisTimer) == 0x000980, "Member 'AB_ObjectiveWitch_C::InvisTimer' has a wrong offset!");

}

