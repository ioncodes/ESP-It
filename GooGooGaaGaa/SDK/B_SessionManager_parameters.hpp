#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SessionManager

#include "Basic.hpp"

#include "OnlineSubsystemBlueprints_structs.hpp"
#include "MasterServerPlugin_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_SessionManager.B_SessionManager_C.AddMatchStartedFlagForUpdate
// 0x01F8 (0x01F8 - 0x0000)
struct B_SessionManager_C_AddMatchStartedFlagForUpdate final
{
public:
	bool                                          MatchStarted;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5069[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StartTime;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0050)(HasGetValueTypeHash)
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0088(0x0028)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x00C0(0x0030)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0108(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0120(0x0050)(HasGetValueTypeHash)
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP_1;                 // 0x0170(0x0028)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0198(0x0010)(ReferenceParm)
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP_1;        // 0x01A8(0x0030)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0018)()
	class FName                                   Temp_name_Variable_1;                              // 0x01F0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_AddMatchStartedFlagForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddMatchStartedFlagForUpdate");
static_assert(sizeof(B_SessionManager_C_AddMatchStartedFlagForUpdate) == 0x0001F8, "Wrong size on B_SessionManager_C_AddMatchStartedFlagForUpdate");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, MatchStarted) == 0x000000, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::MatchStarted' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, StartTime) == 0x000008, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::StartTime' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, Temp_name_Variable) == 0x000018, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, CallFunc_Conv_StringToText_ReturnValue) == 0x000020, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000088, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeArray_Array) == 0x0000B0, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x0000C0, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, CallFunc_Conv_BoolToText_ReturnValue) == 0x000108, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_FormatArgumentData_1) == 0x000120, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_VariantDataBP_1) == 0x000170, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_VariantDataBP_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeArray_Array_1) == 0x000198, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP_1) == 0x0001A8, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchStartedFlagForUpdate, Temp_name_Variable_1) == 0x0001F0, "Member 'B_SessionManager_C_AddMatchStartedFlagForUpdate::Temp_name_Variable_1' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddMatchTimeForUpdate
// 0x0070 (0x0070 - 0x0000)
struct B_SessionManager_C_AddMatchTimeForUpdate final
{
public:
	int32                                         MatchTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0018(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x0040(0x0030)()
};
static_assert(alignof(B_SessionManager_C_AddMatchTimeForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddMatchTimeForUpdate");
static_assert(sizeof(B_SessionManager_C_AddMatchTimeForUpdate) == 0x000070, "Wrong size on B_SessionManager_C_AddMatchTimeForUpdate");
static_assert(offsetof(B_SessionManager_C_AddMatchTimeForUpdate, MatchTime) == 0x000000, "Member 'B_SessionManager_C_AddMatchTimeForUpdate::MatchTime' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchTimeForUpdate, Temp_name_Variable) == 0x000004, "Member 'B_SessionManager_C_AddMatchTimeForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchTimeForUpdate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'B_SessionManager_C_AddMatchTimeForUpdate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchTimeForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000018, "Member 'B_SessionManager_C_AddMatchTimeForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddMatchTimeForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x000040, "Member 'B_SessionManager_C_AddMatchTimeForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddObjectiveMatchGUIDForUpdate
// 0x0070 (0x0070 - 0x0000)
struct B_SessionManager_C_AddObjectiveMatchGUIDForUpdate final
{
public:
	class FString                                 Guid;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0018(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x0040(0x0030)()
};
static_assert(alignof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddObjectiveMatchGUIDForUpdate");
static_assert(sizeof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate) == 0x000070, "Wrong size on B_SessionManager_C_AddObjectiveMatchGUIDForUpdate");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate, Guid) == 0x000000, "Member 'B_SessionManager_C_AddObjectiveMatchGUIDForUpdate::Guid' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate, Temp_name_Variable) == 0x000010, "Member 'B_SessionManager_C_AddObjectiveMatchGUIDForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000018, "Member 'B_SessionManager_C_AddObjectiveMatchGUIDForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchGUIDForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x000040, "Member 'B_SessionManager_C_AddObjectiveMatchGUIDForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddObjectiveMatchStartedFlagForUpdate
// 0x0068 (0x0068 - 0x0000)
struct B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate final
{
public:
	bool                                          ObjectiveMatchStarted;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506B[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0010(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x0038(0x0030)()
};
static_assert(alignof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate");
static_assert(sizeof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate) == 0x000068, "Wrong size on B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate, ObjectiveMatchStarted) == 0x000000, "Member 'B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate::ObjectiveMatchStarted' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate, Temp_name_Variable) == 0x000004, "Member 'B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000010, "Member 'B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x000038, "Member 'B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddPlayerCountForUpdate
// 0x0070 (0x0070 - 0x0000)
struct B_SessionManager_C_AddPlayerCountForUpdate final
{
public:
	int32                                         PlayerCount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506D[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0018(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x0040(0x0030)()
};
static_assert(alignof(B_SessionManager_C_AddPlayerCountForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddPlayerCountForUpdate");
static_assert(sizeof(B_SessionManager_C_AddPlayerCountForUpdate) == 0x000070, "Wrong size on B_SessionManager_C_AddPlayerCountForUpdate");
static_assert(offsetof(B_SessionManager_C_AddPlayerCountForUpdate, PlayerCount) == 0x000000, "Member 'B_SessionManager_C_AddPlayerCountForUpdate::PlayerCount' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddPlayerCountForUpdate, Temp_name_Variable) == 0x000004, "Member 'B_SessionManager_C_AddPlayerCountForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddPlayerCountForUpdate, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'B_SessionManager_C_AddPlayerCountForUpdate::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddPlayerCountForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000018, "Member 'B_SessionManager_C_AddPlayerCountForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddPlayerCountForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x000040, "Member 'B_SessionManager_C_AddPlayerCountForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddUpdatedPropertiesToSessionSettings
// 0x0168 (0x0168 - 0x0000)
struct B_SessionManager_C_AddUpdatedPropertiesToSessionSettings final
{
public:
	TMap<class FName, struct FOnlineSessionSettingBP> SessionSettings;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FName, struct FOnlineSessionSettingBP> UpdatedSessionSettings;                            // 0x0050(0x0050)(Parm, OutParm)
	TMap<class FName, struct FOnlineSessionSettingBP> TempSettings;                                      // 0x00A0(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Values_Values;                        // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506E[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0118(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FOnlineSessionSettingBP                CallFunc_Map_Find_Value;                           // 0x0130(0x0030)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings) == 0x000008, "Wrong alignment on B_SessionManager_C_AddUpdatedPropertiesToSessionSettings");
static_assert(sizeof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings) == 0x000168, "Wrong size on B_SessionManager_C_AddUpdatedPropertiesToSessionSettings");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, SessionSettings) == 0x000000, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::SessionSettings' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, UpdatedSessionSettings) == 0x000050, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::UpdatedSessionSettings' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, TempSettings) == 0x0000A0, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::TempSettings' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Map_Length_ReturnValue) == 0x0000FC, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Map_Values_Values) == 0x000100, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Map_Keys_Keys) == 0x000118, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Array_Get_Item) == 0x000128, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Map_Find_Value) == 0x000130, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUpdatedPropertiesToSessionSettings, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'B_SessionManager_C_AddUpdatedPropertiesToSessionSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.AddUsingGameRulesForUpdate
// 0x00C8 (0x00C8 - 0x0000)
struct B_SessionManager_C_AddUsingGameRulesForUpdate final
{
public:
	bool                                          UsingCustomRules;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LiveTweakingAllowed;                               // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_506F[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5070[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP;                   // 0x0018(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP;          // 0x0040(0x0030)()
	struct FVariantDataBP                         K2Node_MakeStruct_VariantDataBP_1;                 // 0x0070(0x0028)()
	struct FOnlineSessionSettingBP                K2Node_MakeStruct_OnlineSessionSettingBP_1;        // 0x0098(0x0030)()
};
static_assert(alignof(B_SessionManager_C_AddUsingGameRulesForUpdate) == 0x000008, "Wrong alignment on B_SessionManager_C_AddUsingGameRulesForUpdate");
static_assert(sizeof(B_SessionManager_C_AddUsingGameRulesForUpdate) == 0x0000C8, "Wrong size on B_SessionManager_C_AddUsingGameRulesForUpdate");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, UsingCustomRules) == 0x000000, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::UsingCustomRules' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, LiveTweakingAllowed) == 0x000001, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::LiveTweakingAllowed' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, Temp_name_Variable) == 0x000004, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, Temp_name_Variable_1) == 0x00000C, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, K2Node_MakeStruct_VariantDataBP) == 0x000018, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::K2Node_MakeStruct_VariantDataBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP) == 0x000040, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, K2Node_MakeStruct_VariantDataBP_1) == 0x000070, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::K2Node_MakeStruct_VariantDataBP_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_AddUsingGameRulesForUpdate, K2Node_MakeStruct_OnlineSessionSettingBP_1) == 0x000098, "Member 'B_SessionManager_C_AddUsingGameRulesForUpdate::K2Node_MakeStruct_OnlineSessionSettingBP_1' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.ExecuteUbergraph_B_SessionManager
// 0x06F8 (0x06F8 - 0x0000)
struct B_SessionManager_C_ExecuteUbergraph_B_SessionManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName SessionName, TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_8;                  // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5071[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               K2Node_CustomEvent_PlayerIds_2;                    // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bWasSuccessful_8;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5072[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               Temp_struct_Variable;                              // 0x0048(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable;                                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_7;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               K2Node_CustomEvent_PlayerIds_1;                    // 0x0070(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bWasSuccessful_7;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5073[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0084(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_6;                  // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5074[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               K2Node_CustomEvent_PlayerIds;                      // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bWasSuccessful_6;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5075[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5076[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUniqueNetIdRepl>               Temp_struct_Variable_1;                            // 0x00C8(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable_1;                              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_5;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_5;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5077[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_4;                  // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_4;               // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5078[0x3];                                     // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5079[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507A[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_3;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_3;               // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507B[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_2;                  // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_2;               // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507C[0x3];                                     // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507D[0x3];                                     // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_3;                              // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507E[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_1;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_1;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_507F[0x3];                                     // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName;                    // 0x01B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5080[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5081[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x01D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5082[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5083[0x6];                                     // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_2;         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_3;         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SessionName_9;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               K2Node_CustomEvent_PlayerIds_3;                    // 0x0210(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_bWasSuccessful_9;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5084[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_SessionName_11;                 // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_11;              // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5085[0x3];                                     // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x0230(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5086[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_PlayerNetId_1;                  // 0x0250(0x0030)(HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       K2Node_CustomEvent_PlayerNetId;                    // 0x0280(0x0030)(HasGetValueTypeHash)
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_6;   // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5087[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOnlineSessionState_                          CallFunc_GetSessionState_ReturnValue;              // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5088[0x3];                                     // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5089[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystemRegisterPlayers* CallFunc_RegisterPlayers_ReturnValue;              // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508A[0x3];                                     // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_4;         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508B[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_5;         // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508C[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_7;   // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EOnlineSessionState_                          CallFunc_GetSessionState_ReturnValue_1;            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508D[0x2];                                     // 0x031A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName SessionName, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x031C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508E[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystemUnregisterPlayers* CallFunc_UnregisterPlayers_ReturnValue;            // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508F[0x2];                                     // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue_8;   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineSessionSettings*                 CallFunc_GetSessionSettings_ReturnValue;           // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5090[0x7];                                     // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineSessionSettingsBP               CallFunc_GetValue_ReturnValue;                     // 0x0358(0x0150)()
	TMap<class FName, struct FOnlineSessionSettingBP> CallFunc_AddUpdatedPropertiesToSessionSettings_UpdatedSessionSettings; // 0x04A8(0x0050)()
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x04F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5091[0x7];                                     // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FOnlineSessionSettingsBP               K2Node_MakeStruct_OnlineSessionSettingsBP;         // 0x0508(0x0150)()
	class UOnlineSessionSubsystemUpdateSession*   CallFunc_UpdateSession_ReturnValue;                // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UOnlineSessionSubsystemStartSession*    CallFunc_StartSession_ReturnValue;                 // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5092[0x2];                                     // 0x066A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_5;                              // 0x066C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5093[0x4];                                     // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5094[0x6];                                     // 0x0682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystemEndSession*      CallFunc_EndSession_ReturnValue;                   // 0x0688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x06B0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5095[0x7];                                     // 0x06C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5096[0x7];                                     // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOnlineSessionSubsystemDestroySession*  CallFunc_DestroySession_ReturnValue;               // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5097[0x3];                                     // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_SessionName_10;                 // 0x06EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bWasSuccessful_10;              // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager) == 0x000008, "Wrong alignment on B_SessionManager_C_ExecuteUbergraph_B_SessionManager");
static_assert(sizeof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager) == 0x0006F8, "Wrong size on B_SessionManager_C_ExecuteUbergraph_B_SessionManager");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, EntryPoint) == 0x000000, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_8) == 0x000024, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_8' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerIds_2) == 0x000030, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerIds_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_8) == 0x000040, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_8' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable) == 0x000041, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_struct_Variable) == 0x000048, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable) == 0x000058, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000060, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_7) == 0x000068, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_7' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerIds_1) == 0x000070, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerIds_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_7) == 0x000080, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_7' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_2) == 0x000084, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_6) == 0x000094, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_6' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerIds) == 0x0000A0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerIds' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_6) == 0x0000B0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_6' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable_1) == 0x0000C4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_struct_Variable_1) == 0x0000C8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable_1) == 0x0000D8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue) == 0x0000E0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x0000E8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000F0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_5) == 0x0000F8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_5) == 0x000100, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_4) == 0x000104, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_4) == 0x000114, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_4) == 0x00011C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_5) == 0x000120, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable_2) == 0x000130, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable_2) == 0x000134, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000140, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_3) == 0x000148, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_3) == 0x000150, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_6) == 0x000154, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_2) == 0x000164, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_2) == 0x00016C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_7) == 0x000170, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable_3) == 0x000180, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable_3) == 0x000184, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x000190, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_1) == 0x000198, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_1) == 0x0001A0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001A4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName) == 0x0001B4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful) == 0x0001BC, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001C0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable_4) == 0x0001D0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable_4) == 0x0001D4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x0001E0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x0001E8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue) == 0x0001F0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_1) == 0x0001F1, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue_2) == 0x0001F8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue_3) == 0x000200, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_9) == 0x000208, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_9' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerIds_3) == 0x000210, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerIds_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_9) == 0x000220, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_9' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_11) == 0x000224, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_11' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_11) == 0x00022C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_11' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_10) == 0x000230, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000240, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerNetId_1) == 0x000250, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerNetId_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_PlayerNetId) == 0x000280, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_PlayerNetId' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_6) == 0x0002B0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0002B8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess_1) == 0x0002C0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Array_AddUnique_ReturnValue) == 0x0002C4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetSessionState_ReturnValue) == 0x0002C8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetSessionState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0002CC, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_RegisterPlayers_ReturnValue) == 0x0002D8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_RegisterPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_2) == 0x0002E0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Array_Length_ReturnValue) == 0x0002E4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue_4) == 0x0002E8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Greater_IntInt_ReturnValue) == 0x0002F0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetEngineSubsystem_ReturnValue_5) == 0x0002F8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetEngineSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000300, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess_2) == 0x000308, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_7) == 0x000310, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetSessionState_ReturnValue_1) == 0x000318, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetSessionState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000319, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CreateDelegate_OutputDelegate_11) == 0x00031C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_UnregisterPlayers_ReturnValue) == 0x000330, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_UnregisterPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Array_Length_ReturnValue_1) == 0x000338, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00033C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_3) == 0x00033D, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetGameInstanceSubsystem_ReturnValue_8) == 0x000340, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetGameInstanceSubsystem_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetSessionSettings_ReturnValue) == 0x000348, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetSessionSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_4) == 0x000350, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_GetValue_ReturnValue) == 0x000358, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_AddUpdatedPropertiesToSessionSettings_UpdatedSessionSettings) == 0x0004A8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_AddUpdatedPropertiesToSessionSettings_UpdatedSessionSettings' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x0004F8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess_3) == 0x000500, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_MakeStruct_OnlineSessionSettingsBP) == 0x000508, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_MakeStruct_OnlineSessionSettingsBP' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_UpdateSession_ReturnValue) == 0x000658, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_UpdateSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_StartSession_ReturnValue) == 0x000660, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_StartSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_5) == 0x000668, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_6) == 0x000669, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_name_Variable_5) == 0x00066C, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000678, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess_4) == 0x000680, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, Temp_bool_Variable_5) == 0x000681, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_EndSession_ReturnValue) == 0x000688, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_EndSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Conv_BoolToString_ReturnValue) == 0x000690, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Concat_StrStr_ReturnValue) == 0x0006A0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_Conv_StringToText_ReturnValue) == 0x0006B0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_7) == 0x0006C8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0006D0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_DynamicCast_bSuccess_5) == 0x0006D8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_DestroySession_ReturnValue) == 0x0006E0, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_DestroySession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, CallFunc_IsValid_ReturnValue_8) == 0x0006E8, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_SessionName_10) == 0x0006EC, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_SessionName_10' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_ExecuteUbergraph_B_SessionManager, K2Node_CustomEvent_bWasSuccessful_10) == 0x0006F4, "Member 'B_SessionManager_C_ExecuteUbergraph_B_SessionManager::K2Node_CustomEvent_bWasSuccessful_10' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8) == 0x000004, "Wrong alignment on B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8) == 0x00000C, "Wrong size on B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB) == 0x000004, "Wrong alignment on B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB) == 0x00000C, "Wrong size on B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431) == 0x000004, "Wrong alignment on B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431) == 0x00000C, "Wrong size on B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_C27C1E6742775B044DB1C796B3FD536C
// 0x0020 (0x0020 - 0x0000)
struct B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               PlayerIds;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bWasSuccessful;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C) == 0x000008, "Wrong alignment on B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C) == 0x000020, "Wrong size on B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C, PlayerIds) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C::PlayerIds' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C, bWasSuccessful) == 0x000018, "Member 'B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9) == 0x000004, "Wrong alignment on B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9) == 0x00000C, "Wrong size on B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnCallFailed_FABFFE04433974AAC85D7A87CED7392B
// 0x0020 (0x0020 - 0x0000)
struct B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               PlayerIds;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bWasSuccessful;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B) == 0x000008, "Wrong alignment on B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B");
static_assert(sizeof(B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B) == 0x000020, "Wrong size on B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B, PlayerIds) == 0x000008, "Member 'B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B::PlayerIds' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B, bWasSuccessful) == 0x000018, "Member 'B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8) == 0x000004, "Wrong alignment on B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8");
static_assert(sizeof(B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8) == 0x00000C, "Wrong size on B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8");
static_assert(offsetof(B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB) == 0x000004, "Wrong alignment on B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB");
static_assert(sizeof(B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB) == 0x00000C, "Wrong size on B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB");
static_assert(offsetof(B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C
// 0x0020 (0x0020 - 0x0000)
struct B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               PlayerIds;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bWasSuccessful;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C) == 0x000008, "Wrong alignment on B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C");
static_assert(sizeof(B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C) == 0x000020, "Wrong size on B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C");
static_assert(offsetof(B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C, PlayerIds) == 0x000008, "Member 'B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C::PlayerIds' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C, bWasSuccessful) == 0x000018, "Member 'B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9) == 0x000004, "Wrong alignment on B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9");
static_assert(sizeof(B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9) == 0x00000C, "Wrong size on B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9");
static_assert(offsetof(B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B
// 0x0020 (0x0020 - 0x0000)
struct B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FUniqueNetIdRepl>               PlayerIds;                                         // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          bWasSuccessful;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B) == 0x000008, "Wrong alignment on B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B");
static_assert(sizeof(B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B) == 0x000020, "Wrong size on B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B");
static_assert(offsetof(B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B, PlayerIds) == 0x000008, "Member 'B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B::PlayerIds' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B, bWasSuccessful) == 0x000018, "Member 'B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431
// 0x000C (0x000C - 0x0000)
struct B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431 final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431) == 0x000004, "Wrong alignment on B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431");
static_assert(sizeof(B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431) == 0x00000C, "Wrong size on B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431");
static_assert(offsetof(B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431, SessionName) == 0x000000, "Member 'B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431::SessionName' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431, bWasSuccessful) == 0x000008, "Member 'B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431::bWasSuccessful' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.RegisterPlayerToSession
// 0x0030 (0x0030 - 0x0000)
struct B_SessionManager_C_RegisterPlayerToSession final
{
public:
	struct FUniqueNetIdRepl                       PlayerNetId;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_RegisterPlayerToSession) == 0x000008, "Wrong alignment on B_SessionManager_C_RegisterPlayerToSession");
static_assert(sizeof(B_SessionManager_C_RegisterPlayerToSession) == 0x000030, "Wrong size on B_SessionManager_C_RegisterPlayerToSession");
static_assert(offsetof(B_SessionManager_C_RegisterPlayerToSession, PlayerNetId) == 0x000000, "Member 'B_SessionManager_C_RegisterPlayerToSession::PlayerNetId' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.SendCurrentSessionInfo
// 0x02B0 (0x02B0 - 0x0000)
struct B_SessionManager_C_SendCurrentSessionInfo final
{
public:
	class UServerBrowser*                         ServerBrowserInst;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveGameSession_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5098[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USessionSubsystem*                      CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                CallFunc_GetActiveGameSession_ReturnValue;         // 0x0018(0x0120)()
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameServerInfo                        K2Node_MakeStruct_GameServerInfo;                  // 0x0140(0x0158)()
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue;    // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UServerBrowser*                         CallFunc_GetServerBrowser_ReturnValue;             // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_SendCurrentSessionInfo) == 0x000008, "Wrong alignment on B_SessionManager_C_SendCurrentSessionInfo");
static_assert(sizeof(B_SessionManager_C_SendCurrentSessionInfo) == 0x0002B0, "Wrong size on B_SessionManager_C_SendCurrentSessionInfo");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, ServerBrowserInst) == 0x000000, "Member 'B_SessionManager_C_SendCurrentSessionInfo::ServerBrowserInst' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_HasActiveGameSession_ReturnValue) == 0x000008, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_HasActiveGameSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_GetActiveGameSession_ReturnValue) == 0x000018, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_GetActiveGameSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000138, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, K2Node_MakeStruct_GameServerInfo) == 0x000140, "Member 'B_SessionManager_C_SendCurrentSessionInfo::K2Node_MakeStruct_GameServerInfo' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_GetNewMasterServerManager_ReturnValue) == 0x000298, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_GetNewMasterServerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_GetServerBrowser_ReturnValue) == 0x0002A0, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_GetServerBrowser_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendCurrentSessionInfo, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'B_SessionManager_C_SendCurrentSessionInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.SendGameServerKeepAlive
// 0x0030 (0x0030 - 0x0000)
struct B_SessionManager_C_SendGameServerKeepAlive final
{
public:
	class UServerBrowser*                         ServerBrowserInst;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveGameSession_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5099[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UServerBrowser*                         CallFunc_GetServerBrowser_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_SendGameServerKeepAlive) == 0x000008, "Wrong alignment on B_SessionManager_C_SendGameServerKeepAlive");
static_assert(sizeof(B_SessionManager_C_SendGameServerKeepAlive) == 0x000030, "Wrong size on B_SessionManager_C_SendGameServerKeepAlive");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, ServerBrowserInst) == 0x000000, "Member 'B_SessionManager_C_SendGameServerKeepAlive::ServerBrowserInst' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, CallFunc_HasActiveGameSession_ReturnValue) == 0x000008, "Member 'B_SessionManager_C_SendGameServerKeepAlive::CallFunc_HasActiveGameSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'B_SessionManager_C_SendGameServerKeepAlive::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, CallFunc_GetNewMasterServerManager_ReturnValue) == 0x000018, "Member 'B_SessionManager_C_SendGameServerKeepAlive::CallFunc_GetNewMasterServerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, CallFunc_GetServerBrowser_ReturnValue) == 0x000020, "Member 'B_SessionManager_C_SendGameServerKeepAlive::CallFunc_GetServerBrowser_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SessionManager_C_SendGameServerKeepAlive, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'B_SessionManager_C_SendGameServerKeepAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_SessionManager.B_SessionManager_C.UnregisterPlayerFromSession
// 0x0030 (0x0030 - 0x0000)
struct B_SessionManager_C_UnregisterPlayerFromSession final
{
public:
	struct FUniqueNetIdRepl                       PlayerNetId;                                       // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_SessionManager_C_UnregisterPlayerFromSession) == 0x000008, "Wrong alignment on B_SessionManager_C_UnregisterPlayerFromSession");
static_assert(sizeof(B_SessionManager_C_UnregisterPlayerFromSession) == 0x000030, "Wrong size on B_SessionManager_C_UnregisterPlayerFromSession");
static_assert(offsetof(B_SessionManager_C_UnregisterPlayerFromSession, PlayerNetId) == 0x000000, "Member 'B_SessionManager_C_UnregisterPlayerFromSession::PlayerNetId' has a wrong offset!");

}

