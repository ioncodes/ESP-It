#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectivePlayerController

#include "Basic.hpp"

#include "E_ObjectiveTeam_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ExecuteUbergraph_B_ObjectivePlayerController
// 0x01D0 (0x01D0 - 0x0000)
struct B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveGameMode_C*                 K2Node_DynamicCast_AsB_Objective_Game_Mode;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameMode_C*                 K2Node_DynamicCast_AsB_Objective_Game_Mode_1;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_2; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameMode_C*                 K2Node_DynamicCast_AsB_Objective_Game_Mode_2;      // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RespawnWitch_Success;                     // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_3; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               K2Node_CustomEvent_ObjectiveTeam;                  // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_4; // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode_1;                // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_SpawnNewPlayerPawn_PlayerPawn;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0118(0x0010)(ReferenceParm)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_5; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0140(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Spectator_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState_6; // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController) == 0x000010, "Wrong alignment on B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController");
static_assert(sizeof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController) == 0x0001D0, "Wrong size on B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, EntryPoint) == 0x000000, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState) == 0x000008, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_1) == 0x000020, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Game_Mode) == 0x000038, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Objective_Game_Mode) == 0x000048, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Objective_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameMode_ReturnValue_1) == 0x000058, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Objective_Game_Mode_1) == 0x000060, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Objective_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameMode_ReturnValue_2) == 0x000070, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_2) == 0x000078, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_2' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Objective_Game_Mode_2) == 0x000080, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Objective_Game_Mode_2' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_RespawnWitch_Success) == 0x00008A, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_RespawnWitch_Success' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000090, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Now_ReturnValue) == 0x000098, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_3) == 0x0000A0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_3' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameState_ReturnValue) == 0x0000A8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x0000B0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_HasAuthority_ReturnValue) == 0x0000B9, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameState_ReturnValue_1) == 0x0000C0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x0000C8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_6) == 0x0000D0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_CustomEvent_ObjectiveTeam) == 0x0000D1, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_CustomEvent_ObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000D2, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Not_PreBool_ReturnValue) == 0x0000D3, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_4) == 0x0000D8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_4' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetControlRotation_ReturnValue) == 0x0000E0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetGameMode_ReturnValue_3) == 0x0000F8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_AsB_Game_Mode_1) == 0x000100, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_AsB_Game_Mode_1' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, K2Node_DynamicCast_bSuccess_7) == 0x000108, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Greater_ByteByte_ReturnValue) == 0x000109, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_SpawnNewPlayerPawn_PlayerPawn) == 0x000110, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_SpawnNewPlayerPawn_PlayerPawn' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetAllActorsOfClass_OutActors) == 0x000118, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_5) == 0x000128, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_5' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_RandomInteger_ReturnValue) == 0x000134, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Array_Get_Item) == 0x000138, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetTransform_ReturnValue) == 0x000140, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0001A0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001A8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_GetObjectivePlayerState_ObjectivePlayerState_6) == 0x0001B8, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_GetObjectivePlayerState_ObjectivePlayerState_6' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0001C0, "Member 'B_ObjectivePlayerController_C_ExecuteUbergraph_B_ObjectivePlayerController::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.GetObjectivePlayerState
// 0x0018 (0x0018 - 0x0000)
struct B_ObjectivePlayerController_C_GetObjectivePlayerState final
{
public:
	class AB_ObjectivePlayerState_C*              ObjectivePlayerState_0;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_GetObjectivePlayerState) == 0x000008, "Wrong alignment on B_ObjectivePlayerController_C_GetObjectivePlayerState");
static_assert(sizeof(B_ObjectivePlayerController_C_GetObjectivePlayerState) == 0x000018, "Wrong size on B_ObjectivePlayerController_C_GetObjectivePlayerState");
static_assert(offsetof(B_ObjectivePlayerController_C_GetObjectivePlayerState, ObjectivePlayerState_0) == 0x000000, "Member 'B_ObjectivePlayerController_C_GetObjectivePlayerState::ObjectivePlayerState_0' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_GetObjectivePlayerState, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000008, "Member 'B_ObjectivePlayerController_C_GetObjectivePlayerState::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_GetObjectivePlayerState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ObjectivePlayerController_C_GetObjectivePlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_GetObjectivePlayerState, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_ObjectivePlayerController_C_GetObjectivePlayerState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectivePlayerController_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ObjectivePlayerController_C_ReceiveTick");
static_assert(sizeof(B_ObjectivePlayerController_C_ReceiveTick) == 0x000004, "Wrong size on B_ObjectivePlayerController_C_ReceiveTick");
static_assert(offsetof(B_ObjectivePlayerController_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ObjectivePlayerController_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SelectObjectiveTeam
// 0x0001 (0x0001 - 0x0000)
struct B_ObjectivePlayerController_C_SelectObjectiveTeam final
{
public:
	E_ObjectiveTeam                               ObjectiveTeam;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_SelectObjectiveTeam) == 0x000001, "Wrong alignment on B_ObjectivePlayerController_C_SelectObjectiveTeam");
static_assert(sizeof(B_ObjectivePlayerController_C_SelectObjectiveTeam) == 0x000001, "Wrong size on B_ObjectivePlayerController_C_SelectObjectiveTeam");
static_assert(offsetof(B_ObjectivePlayerController_C_SelectObjectiveTeam, ObjectiveTeam) == 0x000000, "Member 'B_ObjectivePlayerController_C_SelectObjectiveTeam::ObjectiveTeam' has a wrong offset!");

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.SetObjectiveTeam
// 0x0028 (0x0028 - 0x0000)
struct B_ObjectivePlayerController_C_SetObjectiveTeam final
{
public:
	E_ObjectiveTeam                               ObjectiveTeam;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_SetObjectiveTeam) == 0x000008, "Wrong alignment on B_ObjectivePlayerController_C_SetObjectiveTeam");
static_assert(sizeof(B_ObjectivePlayerController_C_SetObjectiveTeam) == 0x000028, "Wrong size on B_ObjectivePlayerController_C_SetObjectiveTeam");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, ObjectiveTeam) == 0x000000, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::ObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, CallFunc_GetObjectivePlayerState_ObjectivePlayerState) == 0x000010, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::CallFunc_GetObjectivePlayerState_ObjectivePlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_SetObjectiveTeam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000021, "Member 'B_ObjectivePlayerController_C_SetObjectiveTeam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ObjectivePlayerController.B_ObjectivePlayerController_C.ToggleTeamSelectionReady
// 0x0020 (0x0020 - 0x0000)
struct B_ObjectivePlayerController_C_ToggleTeamSelectionReady final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              CallFunc_GetObjectivePlayerState_ObjectivePlayerState; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady) == 0x000008, "Wrong alignment on B_ObjectivePlayerController_C_ToggleTeamSelectionReady");
static_assert(sizeof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady) == 0x000020, "Wrong size on B_ObjectivePlayerController_C_ToggleTeamSelectionReady");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, CallFunc_GetObjectivePlayerState_ObjectivePlayerState) == 0x000008, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::CallFunc_GetObjectivePlayerState_ObjectivePlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectivePlayerController_C_ToggleTeamSelectionReady, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'B_ObjectivePlayerController_C_ToggleTeamSelectionReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

