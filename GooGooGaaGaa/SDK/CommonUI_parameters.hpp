#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CommonUI

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CommonUI_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK::Params
{

// Function CommonUI.CommonBorderStyle.GetBackgroundBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonBorderStyle_GetBackgroundBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonBorderStyle_GetBackgroundBrush) == 0x000010, "Wrong alignment on CommonBorderStyle_GetBackgroundBrush");
static_assert(sizeof(CommonBorderStyle_GetBackgroundBrush) == 0x0000D0, "Wrong size on CommonBorderStyle_GetBackgroundBrush");
static_assert(offsetof(CommonBorderStyle_GetBackgroundBrush, Brush) == 0x000000, "Member 'CommonBorderStyle_GetBackgroundBrush::Brush' has a wrong offset!");

// DelegateFunction CommonUI.CommonActionWidget.OnInputMethodChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct CommonActionWidget_OnInputMethodChanged__DelegateSignature final
{
public:
	bool                                          bUsingGamepad;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong alignment on CommonActionWidget_OnInputMethodChanged__DelegateSignature");
static_assert(sizeof(CommonActionWidget_OnInputMethodChanged__DelegateSignature) == 0x000001, "Wrong size on CommonActionWidget_OnInputMethodChanged__DelegateSignature");
static_assert(offsetof(CommonActionWidget_OnInputMethodChanged__DelegateSignature, bUsingGamepad) == 0x000000, "Member 'CommonActionWidget_OnInputMethodChanged__DelegateSignature::bUsingGamepad' has a wrong offset!");

// Function CommonUI.CommonActionWidget.SetEnhancedInputAction
// 0x0008 (0x0008 - 0x0000)
struct CommonActionWidget_SetEnhancedInputAction final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_SetEnhancedInputAction) == 0x000008, "Wrong alignment on CommonActionWidget_SetEnhancedInputAction");
static_assert(sizeof(CommonActionWidget_SetEnhancedInputAction) == 0x000008, "Wrong size on CommonActionWidget_SetEnhancedInputAction");
static_assert(offsetof(CommonActionWidget_SetEnhancedInputAction, InInputAction) == 0x000000, "Member 'CommonActionWidget_SetEnhancedInputAction::InInputAction' has a wrong offset!");

// Function CommonUI.CommonActionWidget.SetIconRimBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonActionWidget_SetIconRimBrush final
{
public:
	struct FSlateBrush                            InIconRimBrush;                                    // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_SetIconRimBrush) == 0x000010, "Wrong alignment on CommonActionWidget_SetIconRimBrush");
static_assert(sizeof(CommonActionWidget_SetIconRimBrush) == 0x0000D0, "Wrong size on CommonActionWidget_SetIconRimBrush");
static_assert(offsetof(CommonActionWidget_SetIconRimBrush, InIconRimBrush) == 0x000000, "Member 'CommonActionWidget_SetIconRimBrush::InIconRimBrush' has a wrong offset!");

// Function CommonUI.CommonActionWidget.SetInputAction
// 0x0010 (0x0010 - 0x0000)
struct CommonActionWidget_SetInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_SetInputAction) == 0x000008, "Wrong alignment on CommonActionWidget_SetInputAction");
static_assert(sizeof(CommonActionWidget_SetInputAction) == 0x000010, "Wrong size on CommonActionWidget_SetInputAction");
static_assert(offsetof(CommonActionWidget_SetInputAction, InputActionRow) == 0x000000, "Member 'CommonActionWidget_SetInputAction::InputActionRow' has a wrong offset!");

// Function CommonUI.CommonActionWidget.SetInputActions
// 0x0010 (0x0010 - 0x0000)
struct CommonActionWidget_SetInputActions final
{
public:
	TArray<struct FDataTableRowHandle>            NewInputActions;                                   // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_SetInputActions) == 0x000008, "Wrong alignment on CommonActionWidget_SetInputActions");
static_assert(sizeof(CommonActionWidget_SetInputActions) == 0x000010, "Wrong size on CommonActionWidget_SetInputActions");
static_assert(offsetof(CommonActionWidget_SetInputActions, NewInputActions) == 0x000000, "Member 'CommonActionWidget_SetInputActions::NewInputActions' has a wrong offset!");

// Function CommonUI.CommonActionWidget.GetDisplayText
// 0x0018 (0x0018 - 0x0000)
struct CommonActionWidget_GetDisplayText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_GetDisplayText) == 0x000008, "Wrong alignment on CommonActionWidget_GetDisplayText");
static_assert(sizeof(CommonActionWidget_GetDisplayText) == 0x000018, "Wrong size on CommonActionWidget_GetDisplayText");
static_assert(offsetof(CommonActionWidget_GetDisplayText, ReturnValue) == 0x000000, "Member 'CommonActionWidget_GetDisplayText::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActionWidget.GetIcon
// 0x00D0 (0x00D0 - 0x0000)
struct CommonActionWidget_GetIcon final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_GetIcon) == 0x000010, "Wrong alignment on CommonActionWidget_GetIcon");
static_assert(sizeof(CommonActionWidget_GetIcon) == 0x0000D0, "Wrong size on CommonActionWidget_GetIcon");
static_assert(offsetof(CommonActionWidget_GetIcon, ReturnValue) == 0x000000, "Member 'CommonActionWidget_GetIcon::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActionWidget.IsHeldAction
// 0x0001 (0x0001 - 0x0000)
struct CommonActionWidget_IsHeldAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActionWidget_IsHeldAction) == 0x000001, "Wrong alignment on CommonActionWidget_IsHeldAction");
static_assert(sizeof(CommonActionWidget_IsHeldAction) == 0x000001, "Wrong size on CommonActionWidget_IsHeldAction");
static_assert(offsetof(CommonActionWidget_IsHeldAction, ReturnValue) == 0x000000, "Member 'CommonActionWidget_IsHeldAction::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonUserWidget.SetConsumePointerInput
// 0x0001 (0x0001 - 0x0000)
struct CommonUserWidget_SetConsumePointerInput final
{
public:
	bool                                          bInConsumePointerInput;                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUserWidget_SetConsumePointerInput) == 0x000001, "Wrong alignment on CommonUserWidget_SetConsumePointerInput");
static_assert(sizeof(CommonUserWidget_SetConsumePointerInput) == 0x000001, "Wrong size on CommonUserWidget_SetConsumePointerInput");
static_assert(offsetof(CommonUserWidget_SetConsumePointerInput, bInConsumePointerInput) == 0x000000, "Member 'CommonUserWidget_SetConsumePointerInput::bInConsumePointerInput' has a wrong offset!");

// Function CommonUI.CommonButtonBase.BP_OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_BP_OnInputMethodChanged final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_BP_OnInputMethodChanged) == 0x000001, "Wrong alignment on CommonButtonBase_BP_OnInputMethodChanged");
static_assert(sizeof(CommonButtonBase_BP_OnInputMethodChanged) == 0x000001, "Wrong size on CommonButtonBase_BP_OnInputMethodChanged");
static_assert(offsetof(CommonButtonBase_BP_OnInputMethodChanged, CurrentInputType) == 0x000000, "Member 'CommonButtonBase_BP_OnInputMethodChanged::CurrentInputType' has a wrong offset!");

// Function CommonUI.CommonButtonBase.BP_OnLockedChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_BP_OnLockedChanged final
{
public:
	bool                                          bIsLocked;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_BP_OnLockedChanged) == 0x000001, "Wrong alignment on CommonButtonBase_BP_OnLockedChanged");
static_assert(sizeof(CommonButtonBase_BP_OnLockedChanged) == 0x000001, "Wrong size on CommonButtonBase_BP_OnLockedChanged");
static_assert(offsetof(CommonButtonBase_BP_OnLockedChanged, bIsLocked) == 0x000000, "Member 'CommonButtonBase_BP_OnLockedChanged::bIsLocked' has a wrong offset!");

// Function CommonUI.CommonButtonBase.DisableButtonWithReason
// 0x0018 (0x0018 - 0x0000)
struct CommonButtonBase_DisableButtonWithReason final
{
public:
	class FText                                   DisabledReason;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_DisableButtonWithReason) == 0x000008, "Wrong alignment on CommonButtonBase_DisableButtonWithReason");
static_assert(sizeof(CommonButtonBase_DisableButtonWithReason) == 0x000018, "Wrong size on CommonButtonBase_DisableButtonWithReason");
static_assert(offsetof(CommonButtonBase_DisableButtonWithReason, DisabledReason) == 0x000000, "Member 'CommonButtonBase_DisableButtonWithReason::DisabledReason' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetConvertInputActionToHold
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_GetConvertInputActionToHold final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetConvertInputActionToHold) == 0x000001, "Wrong alignment on CommonButtonBase_GetConvertInputActionToHold");
static_assert(sizeof(CommonButtonBase_GetConvertInputActionToHold) == 0x000001, "Wrong size on CommonButtonBase_GetConvertInputActionToHold");
static_assert(offsetof(CommonButtonBase_GetConvertInputActionToHold, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetConvertInputActionToHold::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.HandleTriggeringActionCommited
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_HandleTriggeringActionCommited final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_HandleTriggeringActionCommited) == 0x000001, "Wrong alignment on CommonButtonBase_HandleTriggeringActionCommited");
static_assert(sizeof(CommonButtonBase_HandleTriggeringActionCommited) == 0x000001, "Wrong size on CommonButtonBase_HandleTriggeringActionCommited");
static_assert(offsetof(CommonButtonBase_HandleTriggeringActionCommited, bPassThrough) == 0x000000, "Member 'CommonButtonBase_HandleTriggeringActionCommited::bPassThrough' has a wrong offset!");

// Function CommonUI.CommonButtonBase.NativeOnActionProgress
// 0x0004 (0x0004 - 0x0000)
struct CommonButtonBase_NativeOnActionProgress final
{
public:
	float                                         HeldPercent;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_NativeOnActionProgress) == 0x000004, "Wrong alignment on CommonButtonBase_NativeOnActionProgress");
static_assert(sizeof(CommonButtonBase_NativeOnActionProgress) == 0x000004, "Wrong size on CommonButtonBase_NativeOnActionProgress");
static_assert(offsetof(CommonButtonBase_NativeOnActionProgress, HeldPercent) == 0x000000, "Member 'CommonButtonBase_NativeOnActionProgress::HeldPercent' has a wrong offset!");

// Function CommonUI.CommonButtonBase.NativeOnHoldProgress
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_NativeOnHoldProgress final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2334[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonBase_NativeOnHoldProgress) == 0x000004, "Wrong alignment on CommonButtonBase_NativeOnHoldProgress");
static_assert(sizeof(CommonButtonBase_NativeOnHoldProgress) == 0x000008, "Wrong size on CommonButtonBase_NativeOnHoldProgress");
static_assert(offsetof(CommonButtonBase_NativeOnHoldProgress, DeltaTime) == 0x000000, "Member 'CommonButtonBase_NativeOnHoldProgress::DeltaTime' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_NativeOnHoldProgress, ReturnValue) == 0x000004, "Member 'CommonButtonBase_NativeOnHoldProgress::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.NativeOnHoldProgressRollback
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_NativeOnHoldProgressRollback final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2335[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonBase_NativeOnHoldProgressRollback) == 0x000004, "Wrong alignment on CommonButtonBase_NativeOnHoldProgressRollback");
static_assert(sizeof(CommonButtonBase_NativeOnHoldProgressRollback) == 0x000008, "Wrong size on CommonButtonBase_NativeOnHoldProgressRollback");
static_assert(offsetof(CommonButtonBase_NativeOnHoldProgressRollback, DeltaTime) == 0x000000, "Member 'CommonButtonBase_NativeOnHoldProgressRollback::DeltaTime' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_NativeOnHoldProgressRollback, ReturnValue) == 0x000004, "Member 'CommonButtonBase_NativeOnHoldProgressRollback::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.OnActionProgress
// 0x0004 (0x0004 - 0x0000)
struct CommonButtonBase_OnActionProgress final
{
public:
	float                                         HeldPercent;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_OnActionProgress) == 0x000004, "Wrong alignment on CommonButtonBase_OnActionProgress");
static_assert(sizeof(CommonButtonBase_OnActionProgress) == 0x000004, "Wrong size on CommonButtonBase_OnActionProgress");
static_assert(offsetof(CommonButtonBase_OnActionProgress, HeldPercent) == 0x000000, "Member 'CommonButtonBase_OnActionProgress::HeldPercent' has a wrong offset!");

// Function CommonUI.CommonButtonBase.OnInputMethodChanged
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_OnInputMethodChanged final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_OnInputMethodChanged) == 0x000001, "Wrong alignment on CommonButtonBase_OnInputMethodChanged");
static_assert(sizeof(CommonButtonBase_OnInputMethodChanged) == 0x000001, "Wrong size on CommonButtonBase_OnInputMethodChanged");
static_assert(offsetof(CommonButtonBase_OnInputMethodChanged, CurrentInputType) == 0x000000, "Member 'CommonButtonBase_OnInputMethodChanged::CurrentInputType' has a wrong offset!");

// Function CommonUI.CommonButtonBase.OnTriggeredInputActionChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_OnTriggeredInputActionChanged final
{
public:
	struct FDataTableRowHandle                    NewTriggeredAction;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_OnTriggeredInputActionChanged) == 0x000008, "Wrong alignment on CommonButtonBase_OnTriggeredInputActionChanged");
static_assert(sizeof(CommonButtonBase_OnTriggeredInputActionChanged) == 0x000010, "Wrong size on CommonButtonBase_OnTriggeredInputActionChanged");
static_assert(offsetof(CommonButtonBase_OnTriggeredInputActionChanged, NewTriggeredAction) == 0x000000, "Member 'CommonButtonBase_OnTriggeredInputActionChanged::NewTriggeredAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.OnTriggeringEnhancedInputActionChanged
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_OnTriggeringEnhancedInputActionChanged final
{
public:
	const class UInputAction*                     InInputAction;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_OnTriggeringEnhancedInputActionChanged) == 0x000008, "Wrong alignment on CommonButtonBase_OnTriggeringEnhancedInputActionChanged");
static_assert(sizeof(CommonButtonBase_OnTriggeringEnhancedInputActionChanged) == 0x000008, "Wrong size on CommonButtonBase_OnTriggeringEnhancedInputActionChanged");
static_assert(offsetof(CommonButtonBase_OnTriggeringEnhancedInputActionChanged, InInputAction) == 0x000000, "Member 'CommonButtonBase_OnTriggeringEnhancedInputActionChanged::InInputAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.OnTriggeringInputActionChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_OnTriggeringInputActionChanged final
{
public:
	struct FDataTableRowHandle                    NewTriggeredAction;                                // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_OnTriggeringInputActionChanged) == 0x000008, "Wrong alignment on CommonButtonBase_OnTriggeringInputActionChanged");
static_assert(sizeof(CommonButtonBase_OnTriggeringInputActionChanged) == 0x000010, "Wrong size on CommonButtonBase_OnTriggeringInputActionChanged");
static_assert(offsetof(CommonButtonBase_OnTriggeringInputActionChanged, NewTriggeredAction) == 0x000000, "Member 'CommonButtonBase_OnTriggeringInputActionChanged::NewTriggeredAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetClickMethod
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetClickMethod final
{
public:
	EButtonClickMethod                            InClickMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetClickMethod) == 0x000001, "Wrong alignment on CommonButtonBase_SetClickMethod");
static_assert(sizeof(CommonButtonBase_SetClickMethod) == 0x000001, "Wrong size on CommonButtonBase_SetClickMethod");
static_assert(offsetof(CommonButtonBase_SetClickMethod, InClickMethod) == 0x000000, "Member 'CommonButtonBase_SetClickMethod::InClickMethod' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetHideInputAction
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetHideInputAction final
{
public:
	bool                                          bInHideInputAction;                                // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetHideInputAction) == 0x000001, "Wrong alignment on CommonButtonBase_SetHideInputAction");
static_assert(sizeof(CommonButtonBase_SetHideInputAction) == 0x000001, "Wrong size on CommonButtonBase_SetHideInputAction");
static_assert(offsetof(CommonButtonBase_SetHideInputAction, bInHideInputAction) == 0x000000, "Member 'CommonButtonBase_SetHideInputAction::bInHideInputAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetHoveredSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetHoveredSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetHoveredSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetHoveredSoundOverride");
static_assert(sizeof(CommonButtonBase_SetHoveredSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetHoveredSoundOverride");
static_assert(offsetof(CommonButtonBase_SetHoveredSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetHoveredSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetInputActionProgressMaterial
// 0x00E0 (0x00E0 - 0x0000)
struct CommonButtonBase_SetInputActionProgressMaterial final
{
public:
	struct FSlateBrush                            InProgressMaterialBrush;                           // 0x0000(0x00D0)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FName                                   InProgressMaterialParam;                           // 0x00D0(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2336[0x8];                                     // 0x00D8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonBase_SetInputActionProgressMaterial) == 0x000010, "Wrong alignment on CommonButtonBase_SetInputActionProgressMaterial");
static_assert(sizeof(CommonButtonBase_SetInputActionProgressMaterial) == 0x0000E0, "Wrong size on CommonButtonBase_SetInputActionProgressMaterial");
static_assert(offsetof(CommonButtonBase_SetInputActionProgressMaterial, InProgressMaterialBrush) == 0x000000, "Member 'CommonButtonBase_SetInputActionProgressMaterial::InProgressMaterialBrush' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_SetInputActionProgressMaterial, InProgressMaterialParam) == 0x0000D0, "Member 'CommonButtonBase_SetInputActionProgressMaterial::InProgressMaterialParam' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsFocusable
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsFocusable final
{
public:
	bool                                          bInIsFocusable;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsFocusable) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsFocusable");
static_assert(sizeof(CommonButtonBase_SetIsFocusable) == 0x000001, "Wrong size on CommonButtonBase_SetIsFocusable");
static_assert(offsetof(CommonButtonBase_SetIsFocusable, bInIsFocusable) == 0x000000, "Member 'CommonButtonBase_SetIsFocusable::bInIsFocusable' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsInteractableWhenSelected
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsInteractableWhenSelected final
{
public:
	bool                                          bInInteractableWhenSelected;                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsInteractableWhenSelected) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsInteractableWhenSelected");
static_assert(sizeof(CommonButtonBase_SetIsInteractableWhenSelected) == 0x000001, "Wrong size on CommonButtonBase_SetIsInteractableWhenSelected");
static_assert(offsetof(CommonButtonBase_SetIsInteractableWhenSelected, bInInteractableWhenSelected) == 0x000000, "Member 'CommonButtonBase_SetIsInteractableWhenSelected::bInInteractableWhenSelected' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsInteractionEnabled
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsInteractionEnabled final
{
public:
	bool                                          bInIsInteractionEnabled;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsInteractionEnabled) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsInteractionEnabled");
static_assert(sizeof(CommonButtonBase_SetIsInteractionEnabled) == 0x000001, "Wrong size on CommonButtonBase_SetIsInteractionEnabled");
static_assert(offsetof(CommonButtonBase_SetIsInteractionEnabled, bInIsInteractionEnabled) == 0x000000, "Member 'CommonButtonBase_SetIsInteractionEnabled::bInIsInteractionEnabled' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsLocked
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsLocked final
{
public:
	bool                                          bInIsLocked;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsLocked) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsLocked");
static_assert(sizeof(CommonButtonBase_SetIsLocked) == 0x000001, "Wrong size on CommonButtonBase_SetIsLocked");
static_assert(offsetof(CommonButtonBase_SetIsLocked, bInIsLocked) == 0x000000, "Member 'CommonButtonBase_SetIsLocked::bInIsLocked' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsSelectable
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsSelectable final
{
public:
	bool                                          bInIsSelectable;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsSelectable) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsSelectable");
static_assert(sizeof(CommonButtonBase_SetIsSelectable) == 0x000001, "Wrong size on CommonButtonBase_SetIsSelectable");
static_assert(offsetof(CommonButtonBase_SetIsSelectable, bInIsSelectable) == 0x000000, "Member 'CommonButtonBase_SetIsSelectable::bInIsSelectable' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsSelected
// 0x0002 (0x0002 - 0x0000)
struct CommonButtonBase_SetIsSelected final
{
public:
	bool                                          InSelected;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGiveClickFeedback;                                // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsSelected) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsSelected");
static_assert(sizeof(CommonButtonBase_SetIsSelected) == 0x000002, "Wrong size on CommonButtonBase_SetIsSelected");
static_assert(offsetof(CommonButtonBase_SetIsSelected, InSelected) == 0x000000, "Member 'CommonButtonBase_SetIsSelected::InSelected' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_SetIsSelected, bGiveClickFeedback) == 0x000001, "Member 'CommonButtonBase_SetIsSelected::bGiveClickFeedback' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetIsToggleable
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetIsToggleable final
{
public:
	bool                                          bInIsToggleable;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetIsToggleable) == 0x000001, "Wrong alignment on CommonButtonBase_SetIsToggleable");
static_assert(sizeof(CommonButtonBase_SetIsToggleable) == 0x000001, "Wrong size on CommonButtonBase_SetIsToggleable");
static_assert(offsetof(CommonButtonBase_SetIsToggleable, bInIsToggleable) == 0x000000, "Member 'CommonButtonBase_SetIsToggleable::bInIsToggleable' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetLockedHoveredSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetLockedHoveredSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetLockedHoveredSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetLockedHoveredSoundOverride");
static_assert(sizeof(CommonButtonBase_SetLockedHoveredSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetLockedHoveredSoundOverride");
static_assert(offsetof(CommonButtonBase_SetLockedHoveredSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetLockedHoveredSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetLockedPressedSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetLockedPressedSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetLockedPressedSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetLockedPressedSoundOverride");
static_assert(sizeof(CommonButtonBase_SetLockedPressedSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetLockedPressedSoundOverride");
static_assert(offsetof(CommonButtonBase_SetLockedPressedSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetLockedPressedSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetMinDimensions
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetMinDimensions final
{
public:
	int32                                         InMinWidth;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InMinHeight;                                       // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetMinDimensions) == 0x000004, "Wrong alignment on CommonButtonBase_SetMinDimensions");
static_assert(sizeof(CommonButtonBase_SetMinDimensions) == 0x000008, "Wrong size on CommonButtonBase_SetMinDimensions");
static_assert(offsetof(CommonButtonBase_SetMinDimensions, InMinWidth) == 0x000000, "Member 'CommonButtonBase_SetMinDimensions::InMinWidth' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_SetMinDimensions, InMinHeight) == 0x000004, "Member 'CommonButtonBase_SetMinDimensions::InMinHeight' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetPressedSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetPressedSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetPressedSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetPressedSoundOverride");
static_assert(sizeof(CommonButtonBase_SetPressedSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetPressedSoundOverride");
static_assert(offsetof(CommonButtonBase_SetPressedSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetPressedSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetPressMethod
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetPressMethod final
{
public:
	EButtonPressMethod                            InPressMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetPressMethod) == 0x000001, "Wrong alignment on CommonButtonBase_SetPressMethod");
static_assert(sizeof(CommonButtonBase_SetPressMethod) == 0x000001, "Wrong size on CommonButtonBase_SetPressMethod");
static_assert(offsetof(CommonButtonBase_SetPressMethod, InPressMethod) == 0x000000, "Member 'CommonButtonBase_SetPressMethod::InPressMethod' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetSelectedHoveredSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetSelectedHoveredSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetSelectedHoveredSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetSelectedHoveredSoundOverride");
static_assert(sizeof(CommonButtonBase_SetSelectedHoveredSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetSelectedHoveredSoundOverride");
static_assert(offsetof(CommonButtonBase_SetSelectedHoveredSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetSelectedHoveredSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetSelectedInternal
// 0x0003 (0x0003 - 0x0000)
struct CommonButtonBase_SetSelectedInternal final
{
public:
	bool                                          bInSelected;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSound;                                       // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBroadcast;                                        // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetSelectedInternal) == 0x000001, "Wrong alignment on CommonButtonBase_SetSelectedInternal");
static_assert(sizeof(CommonButtonBase_SetSelectedInternal) == 0x000003, "Wrong size on CommonButtonBase_SetSelectedInternal");
static_assert(offsetof(CommonButtonBase_SetSelectedInternal, bInSelected) == 0x000000, "Member 'CommonButtonBase_SetSelectedInternal::bInSelected' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_SetSelectedInternal, bAllowSound) == 0x000001, "Member 'CommonButtonBase_SetSelectedInternal::bAllowSound' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_SetSelectedInternal, bBroadcast) == 0x000002, "Member 'CommonButtonBase_SetSelectedInternal::bBroadcast' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetSelectedPressedSoundOverride
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetSelectedPressedSoundOverride final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetSelectedPressedSoundOverride) == 0x000008, "Wrong alignment on CommonButtonBase_SetSelectedPressedSoundOverride");
static_assert(sizeof(CommonButtonBase_SetSelectedPressedSoundOverride) == 0x000008, "Wrong size on CommonButtonBase_SetSelectedPressedSoundOverride");
static_assert(offsetof(CommonButtonBase_SetSelectedPressedSoundOverride, Sound) == 0x000000, "Member 'CommonButtonBase_SetSelectedPressedSoundOverride::Sound' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetShouldSelectUponReceivingFocus
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetShouldSelectUponReceivingFocus final
{
public:
	bool                                          bInShouldSelectUponReceivingFocus;                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetShouldSelectUponReceivingFocus) == 0x000001, "Wrong alignment on CommonButtonBase_SetShouldSelectUponReceivingFocus");
static_assert(sizeof(CommonButtonBase_SetShouldSelectUponReceivingFocus) == 0x000001, "Wrong size on CommonButtonBase_SetShouldSelectUponReceivingFocus");
static_assert(offsetof(CommonButtonBase_SetShouldSelectUponReceivingFocus, bInShouldSelectUponReceivingFocus) == 0x000000, "Member 'CommonButtonBase_SetShouldSelectUponReceivingFocus::bInShouldSelectUponReceivingFocus' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetShouldUseFallbackDefaultInputAction
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetShouldUseFallbackDefaultInputAction final
{
public:
	bool                                          bInShouldUseFallbackDefaultInputAction;            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetShouldUseFallbackDefaultInputAction) == 0x000001, "Wrong alignment on CommonButtonBase_SetShouldUseFallbackDefaultInputAction");
static_assert(sizeof(CommonButtonBase_SetShouldUseFallbackDefaultInputAction) == 0x000001, "Wrong size on CommonButtonBase_SetShouldUseFallbackDefaultInputAction");
static_assert(offsetof(CommonButtonBase_SetShouldUseFallbackDefaultInputAction, bInShouldUseFallbackDefaultInputAction) == 0x000000, "Member 'CommonButtonBase_SetShouldUseFallbackDefaultInputAction::bInShouldUseFallbackDefaultInputAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetStyle final
{
public:
	TSubclassOf<class UCommonButtonStyle>         InStyle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetStyle) == 0x000008, "Wrong alignment on CommonButtonBase_SetStyle");
static_assert(sizeof(CommonButtonBase_SetStyle) == 0x000008, "Wrong size on CommonButtonBase_SetStyle");
static_assert(offsetof(CommonButtonBase_SetStyle, InStyle) == 0x000000, "Member 'CommonButtonBase_SetStyle::InStyle' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetTouchMethod
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_SetTouchMethod final
{
public:
	EButtonTouchMethod                            InTouchMethod;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetTouchMethod) == 0x000001, "Wrong alignment on CommonButtonBase_SetTouchMethod");
static_assert(sizeof(CommonButtonBase_SetTouchMethod) == 0x000001, "Wrong size on CommonButtonBase_SetTouchMethod");
static_assert(offsetof(CommonButtonBase_SetTouchMethod, InTouchMethod) == 0x000000, "Member 'CommonButtonBase_SetTouchMethod::InTouchMethod' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetTriggeredInputAction
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_SetTriggeredInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetTriggeredInputAction) == 0x000008, "Wrong alignment on CommonButtonBase_SetTriggeredInputAction");
static_assert(sizeof(CommonButtonBase_SetTriggeredInputAction) == 0x000010, "Wrong size on CommonButtonBase_SetTriggeredInputAction");
static_assert(offsetof(CommonButtonBase_SetTriggeredInputAction, InputActionRow) == 0x000000, "Member 'CommonButtonBase_SetTriggeredInputAction::InputActionRow' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetTriggeringEnhancedInputAction
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_SetTriggeringEnhancedInputAction final
{
public:
	class UInputAction*                           InInputAction;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetTriggeringEnhancedInputAction) == 0x000008, "Wrong alignment on CommonButtonBase_SetTriggeringEnhancedInputAction");
static_assert(sizeof(CommonButtonBase_SetTriggeringEnhancedInputAction) == 0x000008, "Wrong size on CommonButtonBase_SetTriggeringEnhancedInputAction");
static_assert(offsetof(CommonButtonBase_SetTriggeringEnhancedInputAction, InInputAction) == 0x000000, "Member 'CommonButtonBase_SetTriggeringEnhancedInputAction::InInputAction' has a wrong offset!");

// Function CommonUI.CommonButtonBase.SetTriggeringInputAction
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_SetTriggeringInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_SetTriggeringInputAction) == 0x000008, "Wrong alignment on CommonButtonBase_SetTriggeringInputAction");
static_assert(sizeof(CommonButtonBase_SetTriggeringInputAction) == 0x000010, "Wrong size on CommonButtonBase_SetTriggeringInputAction");
static_assert(offsetof(CommonButtonBase_SetTriggeringInputAction, InputActionRow) == 0x000000, "Member 'CommonButtonBase_SetTriggeringInputAction::InputActionRow' has a wrong offset!");

// Function CommonUI.CommonButtonBase.UpdateHoldData
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_UpdateHoldData final
{
public:
	ECommonInputType                              CurrentInputType;                                  // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_UpdateHoldData) == 0x000001, "Wrong alignment on CommonButtonBase_UpdateHoldData");
static_assert(sizeof(CommonButtonBase_UpdateHoldData) == 0x000001, "Wrong size on CommonButtonBase_UpdateHoldData");
static_assert(offsetof(CommonButtonBase_UpdateHoldData, CurrentInputType) == 0x000000, "Member 'CommonButtonBase_UpdateHoldData::CurrentInputType' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetCurrentButtonPadding
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_GetCurrentButtonPadding final
{
public:
	struct FMargin                                OutButtonPadding;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetCurrentButtonPadding) == 0x000004, "Wrong alignment on CommonButtonBase_GetCurrentButtonPadding");
static_assert(sizeof(CommonButtonBase_GetCurrentButtonPadding) == 0x000010, "Wrong size on CommonButtonBase_GetCurrentButtonPadding");
static_assert(offsetof(CommonButtonBase_GetCurrentButtonPadding, OutButtonPadding) == 0x000000, "Member 'CommonButtonBase_GetCurrentButtonPadding::OutButtonPadding' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetCurrentCustomPadding
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonBase_GetCurrentCustomPadding final
{
public:
	struct FMargin                                OutCustomPadding;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetCurrentCustomPadding) == 0x000004, "Wrong alignment on CommonButtonBase_GetCurrentCustomPadding");
static_assert(sizeof(CommonButtonBase_GetCurrentCustomPadding) == 0x000010, "Wrong size on CommonButtonBase_GetCurrentCustomPadding");
static_assert(offsetof(CommonButtonBase_GetCurrentCustomPadding, OutCustomPadding) == 0x000000, "Member 'CommonButtonBase_GetCurrentCustomPadding::OutCustomPadding' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetCurrentTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_GetCurrentTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetCurrentTextStyle) == 0x000008, "Wrong alignment on CommonButtonBase_GetCurrentTextStyle");
static_assert(sizeof(CommonButtonBase_GetCurrentTextStyle) == 0x000008, "Wrong size on CommonButtonBase_GetCurrentTextStyle");
static_assert(offsetof(CommonButtonBase_GetCurrentTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetCurrentTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetCurrentTextStyleClass
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_GetCurrentTextStyleClass final
{
public:
	TSubclassOf<class UCommonTextStyle>           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetCurrentTextStyleClass) == 0x000008, "Wrong alignment on CommonButtonBase_GetCurrentTextStyleClass");
static_assert(sizeof(CommonButtonBase_GetCurrentTextStyleClass) == 0x000008, "Wrong size on CommonButtonBase_GetCurrentTextStyleClass");
static_assert(offsetof(CommonButtonBase_GetCurrentTextStyleClass, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetCurrentTextStyleClass::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetEnhancedInputAction
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_GetEnhancedInputAction final
{
public:
	class UInputAction*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetEnhancedInputAction) == 0x000008, "Wrong alignment on CommonButtonBase_GetEnhancedInputAction");
static_assert(sizeof(CommonButtonBase_GetEnhancedInputAction) == 0x000008, "Wrong size on CommonButtonBase_GetEnhancedInputAction");
static_assert(offsetof(CommonButtonBase_GetEnhancedInputAction, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetEnhancedInputAction::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetInputAction
// 0x0018 (0x0018 - 0x0000)
struct CommonButtonBase_GetInputAction final
{
public:
	struct FDataTableRowHandle                    InputActionRow;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2337[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonBase_GetInputAction) == 0x000008, "Wrong alignment on CommonButtonBase_GetInputAction");
static_assert(sizeof(CommonButtonBase_GetInputAction) == 0x000018, "Wrong size on CommonButtonBase_GetInputAction");
static_assert(offsetof(CommonButtonBase_GetInputAction, InputActionRow) == 0x000000, "Member 'CommonButtonBase_GetInputAction::InputActionRow' has a wrong offset!");
static_assert(offsetof(CommonButtonBase_GetInputAction, ReturnValue) == 0x000010, "Member 'CommonButtonBase_GetInputAction::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetIsFocusable
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_GetIsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetIsFocusable) == 0x000001, "Wrong alignment on CommonButtonBase_GetIsFocusable");
static_assert(sizeof(CommonButtonBase_GetIsFocusable) == 0x000001, "Wrong size on CommonButtonBase_GetIsFocusable");
static_assert(offsetof(CommonButtonBase_GetIsFocusable, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetIsFocusable::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetLocked
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_GetLocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetLocked) == 0x000001, "Wrong alignment on CommonButtonBase_GetLocked");
static_assert(sizeof(CommonButtonBase_GetLocked) == 0x000001, "Wrong size on CommonButtonBase_GetLocked");
static_assert(offsetof(CommonButtonBase_GetLocked, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetLocked::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetSelected
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_GetSelected final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetSelected) == 0x000001, "Wrong alignment on CommonButtonBase_GetSelected");
static_assert(sizeof(CommonButtonBase_GetSelected) == 0x000001, "Wrong size on CommonButtonBase_GetSelected");
static_assert(offsetof(CommonButtonBase_GetSelected, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetSelected::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetShouldSelectUponReceivingFocus
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_GetShouldSelectUponReceivingFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetShouldSelectUponReceivingFocus) == 0x000001, "Wrong alignment on CommonButtonBase_GetShouldSelectUponReceivingFocus");
static_assert(sizeof(CommonButtonBase_GetShouldSelectUponReceivingFocus) == 0x000001, "Wrong size on CommonButtonBase_GetShouldSelectUponReceivingFocus");
static_assert(offsetof(CommonButtonBase_GetShouldSelectUponReceivingFocus, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetShouldSelectUponReceivingFocus::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetSingleMaterialStyleMID
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_GetSingleMaterialStyleMID final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetSingleMaterialStyleMID) == 0x000008, "Wrong alignment on CommonButtonBase_GetSingleMaterialStyleMID");
static_assert(sizeof(CommonButtonBase_GetSingleMaterialStyleMID) == 0x000008, "Wrong size on CommonButtonBase_GetSingleMaterialStyleMID");
static_assert(offsetof(CommonButtonBase_GetSingleMaterialStyleMID, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetSingleMaterialStyleMID::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.GetStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonBase_GetStyle final
{
public:
	class UCommonButtonStyle*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_GetStyle) == 0x000008, "Wrong alignment on CommonButtonBase_GetStyle");
static_assert(sizeof(CommonButtonBase_GetStyle) == 0x000008, "Wrong size on CommonButtonBase_GetStyle");
static_assert(offsetof(CommonButtonBase_GetStyle, ReturnValue) == 0x000000, "Member 'CommonButtonBase_GetStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.IsInteractionEnabled
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_IsInteractionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_IsInteractionEnabled) == 0x000001, "Wrong alignment on CommonButtonBase_IsInteractionEnabled");
static_assert(sizeof(CommonButtonBase_IsInteractionEnabled) == 0x000001, "Wrong size on CommonButtonBase_IsInteractionEnabled");
static_assert(offsetof(CommonButtonBase_IsInteractionEnabled, ReturnValue) == 0x000000, "Member 'CommonButtonBase_IsInteractionEnabled::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonBase.IsPressed
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonBase_IsPressed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonBase_IsPressed) == 0x000001, "Wrong alignment on CommonButtonBase_IsPressed");
static_assert(sizeof(CommonButtonBase_IsPressed) == 0x000001, "Wrong size on CommonButtonBase_IsPressed");
static_assert(offsetof(CommonButtonBase_IsPressed, ReturnValue) == 0x000000, "Member 'CommonButtonBase_IsPressed::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.BindVisibilityToActivation
// 0x0008 (0x0008 - 0x0000)
struct CommonActivatableWidget_BindVisibilityToActivation final
{
public:
	class UCommonActivatableWidget*               ActivatableWidget;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_BindVisibilityToActivation) == 0x000008, "Wrong alignment on CommonActivatableWidget_BindVisibilityToActivation");
static_assert(sizeof(CommonActivatableWidget_BindVisibilityToActivation) == 0x000008, "Wrong size on CommonActivatableWidget_BindVisibilityToActivation");
static_assert(offsetof(CommonActivatableWidget_BindVisibilityToActivation, ActivatableWidget) == 0x000000, "Member 'CommonActivatableWidget_BindVisibilityToActivation::ActivatableWidget' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct CommonActivatableWidget_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on CommonActivatableWidget_BP_OnHandleBackAction");
static_assert(sizeof(CommonActivatableWidget_BP_OnHandleBackAction) == 0x000001, "Wrong size on CommonActivatableWidget_BP_OnHandleBackAction");
static_assert(offsetof(CommonActivatableWidget_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'CommonActivatableWidget_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.SetBindVisibilities
// 0x0003 (0x0003 - 0x0000)
struct CommonActivatableWidget_SetBindVisibilities final
{
public:
	ESlateVisibility                              OnActivatedVisibility;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              OnDeactivatedVisibility;                           // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInAllActive;                                      // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_SetBindVisibilities) == 0x000001, "Wrong alignment on CommonActivatableWidget_SetBindVisibilities");
static_assert(sizeof(CommonActivatableWidget_SetBindVisibilities) == 0x000003, "Wrong size on CommonActivatableWidget_SetBindVisibilities");
static_assert(offsetof(CommonActivatableWidget_SetBindVisibilities, OnActivatedVisibility) == 0x000000, "Member 'CommonActivatableWidget_SetBindVisibilities::OnActivatedVisibility' has a wrong offset!");
static_assert(offsetof(CommonActivatableWidget_SetBindVisibilities, OnDeactivatedVisibility) == 0x000001, "Member 'CommonActivatableWidget_SetBindVisibilities::OnDeactivatedVisibility' has a wrong offset!");
static_assert(offsetof(CommonActivatableWidget_SetBindVisibilities, bInAllActive) == 0x000002, "Member 'CommonActivatableWidget_SetBindVisibilities::bInAllActive' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.BP_GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct CommonActivatableWidget_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on CommonActivatableWidget_BP_GetDesiredFocusTarget");
static_assert(sizeof(CommonActivatableWidget_BP_GetDesiredFocusTarget) == 0x000008, "Wrong size on CommonActivatableWidget_BP_GetDesiredFocusTarget");
static_assert(offsetof(CommonActivatableWidget_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'CommonActivatableWidget_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.BP_GetDesiredInputConfig
// 0x0005 (0x0005 - 0x0000)
struct CommonActivatableWidget_BP_GetDesiredInputConfig final
{
public:
	struct FUIInputConfig                         ReturnValue;                                       // 0x0000(0x0005)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_BP_GetDesiredInputConfig) == 0x000001, "Wrong alignment on CommonActivatableWidget_BP_GetDesiredInputConfig");
static_assert(sizeof(CommonActivatableWidget_BP_GetDesiredInputConfig) == 0x000005, "Wrong size on CommonActivatableWidget_BP_GetDesiredInputConfig");
static_assert(offsetof(CommonActivatableWidget_BP_GetDesiredInputConfig, ReturnValue) == 0x000000, "Member 'CommonActivatableWidget_BP_GetDesiredInputConfig::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.GetDesiredFocusTarget
// 0x0008 (0x0008 - 0x0000)
struct CommonActivatableWidget_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on CommonActivatableWidget_GetDesiredFocusTarget");
static_assert(sizeof(CommonActivatableWidget_GetDesiredFocusTarget) == 0x000008, "Wrong size on CommonActivatableWidget_GetDesiredFocusTarget");
static_assert(offsetof(CommonActivatableWidget_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'CommonActivatableWidget_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidget.IsActivated
// 0x0001 (0x0001 - 0x0000)
struct CommonActivatableWidget_IsActivated final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidget_IsActivated) == 0x000001, "Wrong alignment on CommonActivatableWidget_IsActivated");
static_assert(sizeof(CommonActivatableWidget_IsActivated) == 0x000001, "Wrong size on CommonActivatableWidget_IsActivated");
static_assert(offsetof(CommonActivatableWidget_IsActivated, ReturnValue) == 0x000000, "Member 'CommonActivatableWidget_IsActivated::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.ActivateNextWidget
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_ActivateNextWidget final
{
public:
	bool                                          bCanWrap;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_ActivateNextWidget) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_ActivateNextWidget");
static_assert(sizeof(CommonAnimatedSwitcher_ActivateNextWidget) == 0x000001, "Wrong size on CommonAnimatedSwitcher_ActivateNextWidget");
static_assert(offsetof(CommonAnimatedSwitcher_ActivateNextWidget, bCanWrap) == 0x000000, "Member 'CommonAnimatedSwitcher_ActivateNextWidget::bCanWrap' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.ActivatePreviousWidget
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_ActivatePreviousWidget final
{
public:
	bool                                          bCanWrap;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_ActivatePreviousWidget) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_ActivatePreviousWidget");
static_assert(sizeof(CommonAnimatedSwitcher_ActivatePreviousWidget) == 0x000001, "Wrong size on CommonAnimatedSwitcher_ActivatePreviousWidget");
static_assert(offsetof(CommonAnimatedSwitcher_ActivatePreviousWidget, bCanWrap) == 0x000000, "Member 'CommonAnimatedSwitcher_ActivatePreviousWidget::bCanWrap' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.SetDisableTransitionAnimation
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_SetDisableTransitionAnimation final
{
public:
	bool                                          bDisableAnimation;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_SetDisableTransitionAnimation) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_SetDisableTransitionAnimation");
static_assert(sizeof(CommonAnimatedSwitcher_SetDisableTransitionAnimation) == 0x000001, "Wrong size on CommonAnimatedSwitcher_SetDisableTransitionAnimation");
static_assert(offsetof(CommonAnimatedSwitcher_SetDisableTransitionAnimation, bDisableAnimation) == 0x000000, "Member 'CommonAnimatedSwitcher_SetDisableTransitionAnimation::bDisableAnimation' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.HasWidgets
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_HasWidgets final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_HasWidgets) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_HasWidgets");
static_assert(sizeof(CommonAnimatedSwitcher_HasWidgets) == 0x000001, "Wrong size on CommonAnimatedSwitcher_HasWidgets");
static_assert(offsetof(CommonAnimatedSwitcher_HasWidgets, ReturnValue) == 0x000000, "Member 'CommonAnimatedSwitcher_HasWidgets::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.IsCurrentlySwitching
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_IsCurrentlySwitching final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_IsCurrentlySwitching) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_IsCurrentlySwitching");
static_assert(sizeof(CommonAnimatedSwitcher_IsCurrentlySwitching) == 0x000001, "Wrong size on CommonAnimatedSwitcher_IsCurrentlySwitching");
static_assert(offsetof(CommonAnimatedSwitcher_IsCurrentlySwitching, ReturnValue) == 0x000000, "Member 'CommonAnimatedSwitcher_IsCurrentlySwitching::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonAnimatedSwitcher.IsTransitionPlaying
// 0x0001 (0x0001 - 0x0000)
struct CommonAnimatedSwitcher_IsTransitionPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonAnimatedSwitcher_IsTransitionPlaying) == 0x000001, "Wrong alignment on CommonAnimatedSwitcher_IsTransitionPlaying");
static_assert(sizeof(CommonAnimatedSwitcher_IsTransitionPlaying) == 0x000001, "Wrong size on CommonAnimatedSwitcher_IsTransitionPlaying");
static_assert(offsetof(CommonAnimatedSwitcher_IsTransitionPlaying, ReturnValue) == 0x000000, "Member 'CommonAnimatedSwitcher_IsTransitionPlaying::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonBorder.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonBorder_SetStyle final
{
public:
	TSubclassOf<class UCommonBorderStyle>         InStyle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonBorder_SetStyle) == 0x000008, "Wrong alignment on CommonBorder_SetStyle");
static_assert(sizeof(CommonBorder_SetStyle) == 0x000008, "Wrong size on CommonBorder_SetStyle");
static_assert(offsetof(CommonBorder_SetStyle, InStyle) == 0x000000, "Member 'CommonBorder_SetStyle::InStyle' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetButtonPadding
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonStyle_GetButtonPadding final
{
public:
	struct FMargin                                OutButtonPadding;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetButtonPadding) == 0x000004, "Wrong alignment on CommonButtonStyle_GetButtonPadding");
static_assert(sizeof(CommonButtonStyle_GetButtonPadding) == 0x000010, "Wrong size on CommonButtonStyle_GetButtonPadding");
static_assert(offsetof(CommonButtonStyle_GetButtonPadding, OutButtonPadding) == 0x000000, "Member 'CommonButtonStyle_GetButtonPadding::OutButtonPadding' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetCustomPadding
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonStyle_GetCustomPadding final
{
public:
	struct FMargin                                OutCustomPadding;                                  // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetCustomPadding) == 0x000004, "Wrong alignment on CommonButtonStyle_GetCustomPadding");
static_assert(sizeof(CommonButtonStyle_GetCustomPadding) == 0x000010, "Wrong size on CommonButtonStyle_GetCustomPadding");
static_assert(offsetof(CommonButtonStyle_GetCustomPadding, OutCustomPadding) == 0x000000, "Member 'CommonButtonStyle_GetCustomPadding::OutCustomPadding' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetDisabledBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetDisabledBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetDisabledBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetDisabledBrush");
static_assert(sizeof(CommonButtonStyle_GetDisabledBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetDisabledBrush");
static_assert(offsetof(CommonButtonStyle_GetDisabledBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetDisabledBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetDisabledTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonStyle_GetDisabledTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetDisabledTextStyle) == 0x000008, "Wrong alignment on CommonButtonStyle_GetDisabledTextStyle");
static_assert(sizeof(CommonButtonStyle_GetDisabledTextStyle) == 0x000008, "Wrong size on CommonButtonStyle_GetDisabledTextStyle");
static_assert(offsetof(CommonButtonStyle_GetDisabledTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonStyle_GetDisabledTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetMaterialBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetMaterialBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetMaterialBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetMaterialBrush");
static_assert(sizeof(CommonButtonStyle_GetMaterialBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetMaterialBrush");
static_assert(offsetof(CommonButtonStyle_GetMaterialBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetMaterialBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetNormalBaseBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetNormalBaseBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetNormalBaseBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetNormalBaseBrush");
static_assert(sizeof(CommonButtonStyle_GetNormalBaseBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetNormalBaseBrush");
static_assert(offsetof(CommonButtonStyle_GetNormalBaseBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetNormalBaseBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetNormalHoveredBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetNormalHoveredBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetNormalHoveredBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetNormalHoveredBrush");
static_assert(sizeof(CommonButtonStyle_GetNormalHoveredBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetNormalHoveredBrush");
static_assert(offsetof(CommonButtonStyle_GetNormalHoveredBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetNormalHoveredBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetNormalHoveredTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonStyle_GetNormalHoveredTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetNormalHoveredTextStyle) == 0x000008, "Wrong alignment on CommonButtonStyle_GetNormalHoveredTextStyle");
static_assert(sizeof(CommonButtonStyle_GetNormalHoveredTextStyle) == 0x000008, "Wrong size on CommonButtonStyle_GetNormalHoveredTextStyle");
static_assert(offsetof(CommonButtonStyle_GetNormalHoveredTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonStyle_GetNormalHoveredTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetNormalPressedBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetNormalPressedBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetNormalPressedBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetNormalPressedBrush");
static_assert(sizeof(CommonButtonStyle_GetNormalPressedBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetNormalPressedBrush");
static_assert(offsetof(CommonButtonStyle_GetNormalPressedBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetNormalPressedBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetNormalTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonStyle_GetNormalTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetNormalTextStyle) == 0x000008, "Wrong alignment on CommonButtonStyle_GetNormalTextStyle");
static_assert(sizeof(CommonButtonStyle_GetNormalTextStyle) == 0x000008, "Wrong size on CommonButtonStyle_GetNormalTextStyle");
static_assert(offsetof(CommonButtonStyle_GetNormalTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonStyle_GetNormalTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetSelectedBaseBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetSelectedBaseBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetSelectedBaseBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetSelectedBaseBrush");
static_assert(sizeof(CommonButtonStyle_GetSelectedBaseBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetSelectedBaseBrush");
static_assert(offsetof(CommonButtonStyle_GetSelectedBaseBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetSelectedBaseBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetSelectedHoveredBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetSelectedHoveredBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetSelectedHoveredBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetSelectedHoveredBrush");
static_assert(sizeof(CommonButtonStyle_GetSelectedHoveredBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetSelectedHoveredBrush");
static_assert(offsetof(CommonButtonStyle_GetSelectedHoveredBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetSelectedHoveredBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetSelectedHoveredTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonStyle_GetSelectedHoveredTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetSelectedHoveredTextStyle) == 0x000008, "Wrong alignment on CommonButtonStyle_GetSelectedHoveredTextStyle");
static_assert(sizeof(CommonButtonStyle_GetSelectedHoveredTextStyle) == 0x000008, "Wrong size on CommonButtonStyle_GetSelectedHoveredTextStyle");
static_assert(offsetof(CommonButtonStyle_GetSelectedHoveredTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonStyle_GetSelectedHoveredTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetSelectedPressedBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonButtonStyle_GetSelectedPressedBrush final
{
public:
	struct FSlateBrush                            Brush;                                             // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetSelectedPressedBrush) == 0x000010, "Wrong alignment on CommonButtonStyle_GetSelectedPressedBrush");
static_assert(sizeof(CommonButtonStyle_GetSelectedPressedBrush) == 0x0000D0, "Wrong size on CommonButtonStyle_GetSelectedPressedBrush");
static_assert(offsetof(CommonButtonStyle_GetSelectedPressedBrush, Brush) == 0x000000, "Member 'CommonButtonStyle_GetSelectedPressedBrush::Brush' has a wrong offset!");

// Function CommonUI.CommonButtonStyle.GetSelectedTextStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonStyle_GetSelectedTextStyle final
{
public:
	class UCommonTextStyle*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonStyle_GetSelectedTextStyle) == 0x000008, "Wrong alignment on CommonButtonStyle_GetSelectedTextStyle");
static_assert(sizeof(CommonButtonStyle_GetSelectedTextStyle) == 0x000008, "Wrong size on CommonButtonStyle_GetSelectedTextStyle");
static_assert(offsetof(CommonButtonStyle_GetSelectedTextStyle, ReturnValue) == 0x000000, "Member 'CommonButtonStyle_GetSelectedTextStyle::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTextBlock.GetMargin
// 0x0010 (0x0010 - 0x0000)
struct CommonTextBlock_GetMargin final
{
public:
	struct FMargin                                ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_GetMargin) == 0x000004, "Wrong alignment on CommonTextBlock_GetMargin");
static_assert(sizeof(CommonTextBlock_GetMargin) == 0x000010, "Wrong size on CommonTextBlock_GetMargin");
static_assert(offsetof(CommonTextBlock_GetMargin, ReturnValue) == 0x000000, "Member 'CommonTextBlock_GetMargin::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetLineHeightPercentage
// 0x0004 (0x0004 - 0x0000)
struct CommonTextBlock_SetLineHeightPercentage final
{
public:
	float                                         InLineHeightPercentage;                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetLineHeightPercentage) == 0x000004, "Wrong alignment on CommonTextBlock_SetLineHeightPercentage");
static_assert(sizeof(CommonTextBlock_SetLineHeightPercentage) == 0x000004, "Wrong size on CommonTextBlock_SetLineHeightPercentage");
static_assert(offsetof(CommonTextBlock_SetLineHeightPercentage, InLineHeightPercentage) == 0x000000, "Member 'CommonTextBlock_SetLineHeightPercentage::InLineHeightPercentage' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetMargin
// 0x0010 (0x0010 - 0x0000)
struct CommonTextBlock_SetMargin final
{
public:
	struct FMargin                                InMargin;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetMargin) == 0x000004, "Wrong alignment on CommonTextBlock_SetMargin");
static_assert(sizeof(CommonTextBlock_SetMargin) == 0x000010, "Wrong size on CommonTextBlock_SetMargin");
static_assert(offsetof(CommonTextBlock_SetMargin, InMargin) == 0x000000, "Member 'CommonTextBlock_SetMargin::InMargin' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetMobileFontSizeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct CommonTextBlock_SetMobileFontSizeMultiplier final
{
public:
	float                                         InMobileFontSizeMultiplier;                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetMobileFontSizeMultiplier) == 0x000004, "Wrong alignment on CommonTextBlock_SetMobileFontSizeMultiplier");
static_assert(sizeof(CommonTextBlock_SetMobileFontSizeMultiplier) == 0x000004, "Wrong size on CommonTextBlock_SetMobileFontSizeMultiplier");
static_assert(offsetof(CommonTextBlock_SetMobileFontSizeMultiplier, InMobileFontSizeMultiplier) == 0x000000, "Member 'CommonTextBlock_SetMobileFontSizeMultiplier::InMobileFontSizeMultiplier' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetScrollingEnabled
// 0x0001 (0x0001 - 0x0000)
struct CommonTextBlock_SetScrollingEnabled final
{
public:
	bool                                          bInIsScrollingEnabled;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetScrollingEnabled) == 0x000001, "Wrong alignment on CommonTextBlock_SetScrollingEnabled");
static_assert(sizeof(CommonTextBlock_SetScrollingEnabled) == 0x000001, "Wrong size on CommonTextBlock_SetScrollingEnabled");
static_assert(offsetof(CommonTextBlock_SetScrollingEnabled, bInIsScrollingEnabled) == 0x000000, "Member 'CommonTextBlock_SetScrollingEnabled::bInIsScrollingEnabled' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetStyle
// 0x0008 (0x0008 - 0x0000)
struct CommonTextBlock_SetStyle final
{
public:
	TSubclassOf<class UCommonTextStyle>           InStyle;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetStyle) == 0x000008, "Wrong alignment on CommonTextBlock_SetStyle");
static_assert(sizeof(CommonTextBlock_SetStyle) == 0x000008, "Wrong size on CommonTextBlock_SetStyle");
static_assert(offsetof(CommonTextBlock_SetStyle, InStyle) == 0x000000, "Member 'CommonTextBlock_SetStyle::InStyle' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetTextCase
// 0x0001 (0x0001 - 0x0000)
struct CommonTextBlock_SetTextCase final
{
public:
	bool                                          bUseAllCaps;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetTextCase) == 0x000001, "Wrong alignment on CommonTextBlock_SetTextCase");
static_assert(sizeof(CommonTextBlock_SetTextCase) == 0x000001, "Wrong size on CommonTextBlock_SetTextCase");
static_assert(offsetof(CommonTextBlock_SetTextCase, bUseAllCaps) == 0x000000, "Member 'CommonTextBlock_SetTextCase::bUseAllCaps' has a wrong offset!");

// Function CommonUI.CommonTextBlock.SetWrapTextWidth
// 0x0004 (0x0004 - 0x0000)
struct CommonTextBlock_SetWrapTextWidth final
{
public:
	int32                                         InWrapTextAt;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_SetWrapTextWidth) == 0x000004, "Wrong alignment on CommonTextBlock_SetWrapTextWidth");
static_assert(sizeof(CommonTextBlock_SetWrapTextWidth) == 0x000004, "Wrong size on CommonTextBlock_SetWrapTextWidth");
static_assert(offsetof(CommonTextBlock_SetWrapTextWidth, InWrapTextAt) == 0x000000, "Member 'CommonTextBlock_SetWrapTextWidth::InWrapTextAt' has a wrong offset!");

// Function CommonUI.CommonTextBlock.GetMobileFontSizeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct CommonTextBlock_GetMobileFontSizeMultiplier final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextBlock_GetMobileFontSizeMultiplier) == 0x000004, "Wrong alignment on CommonTextBlock_GetMobileFontSizeMultiplier");
static_assert(sizeof(CommonTextBlock_GetMobileFontSizeMultiplier) == 0x000004, "Wrong size on CommonTextBlock_GetMobileFontSizeMultiplier");
static_assert(offsetof(CommonTextBlock_GetMobileFontSizeMultiplier, ReturnValue) == 0x000000, "Member 'CommonTextBlock_GetMobileFontSizeMultiplier::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonDateTimeTextBlock.SetCountDownCompletionText
// 0x0018 (0x0018 - 0x0000)
struct CommonDateTimeTextBlock_SetCountDownCompletionText final
{
public:
	class FText                                   InCompletionText;                                  // 0x0000(0x0018)(ConstParm, Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonDateTimeTextBlock_SetCountDownCompletionText) == 0x000008, "Wrong alignment on CommonDateTimeTextBlock_SetCountDownCompletionText");
static_assert(sizeof(CommonDateTimeTextBlock_SetCountDownCompletionText) == 0x000018, "Wrong size on CommonDateTimeTextBlock_SetCountDownCompletionText");
static_assert(offsetof(CommonDateTimeTextBlock_SetCountDownCompletionText, InCompletionText) == 0x000000, "Member 'CommonDateTimeTextBlock_SetCountDownCompletionText::InCompletionText' has a wrong offset!");

// Function CommonUI.CommonDateTimeTextBlock.SetDateTimeValue
// 0x0010 (0x0010 - 0x0000)
struct CommonDateTimeTextBlock_SetDateTimeValue final
{
public:
	struct FDateTime                              InDateTime;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowAsCountdown;                                  // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_234B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InRefreshDelay;                                    // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonDateTimeTextBlock_SetDateTimeValue) == 0x000008, "Wrong alignment on CommonDateTimeTextBlock_SetDateTimeValue");
static_assert(sizeof(CommonDateTimeTextBlock_SetDateTimeValue) == 0x000010, "Wrong size on CommonDateTimeTextBlock_SetDateTimeValue");
static_assert(offsetof(CommonDateTimeTextBlock_SetDateTimeValue, InDateTime) == 0x000000, "Member 'CommonDateTimeTextBlock_SetDateTimeValue::InDateTime' has a wrong offset!");
static_assert(offsetof(CommonDateTimeTextBlock_SetDateTimeValue, bShowAsCountdown) == 0x000008, "Member 'CommonDateTimeTextBlock_SetDateTimeValue::bShowAsCountdown' has a wrong offset!");
static_assert(offsetof(CommonDateTimeTextBlock_SetDateTimeValue, InRefreshDelay) == 0x00000C, "Member 'CommonDateTimeTextBlock_SetDateTimeValue::InRefreshDelay' has a wrong offset!");

// Function CommonUI.CommonDateTimeTextBlock.SetTimespanValue
// 0x0008 (0x0008 - 0x0000)
struct CommonDateTimeTextBlock_SetTimespanValue final
{
public:
	struct FTimespan                              InTimespan;                                        // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonDateTimeTextBlock_SetTimespanValue) == 0x000008, "Wrong alignment on CommonDateTimeTextBlock_SetTimespanValue");
static_assert(sizeof(CommonDateTimeTextBlock_SetTimespanValue) == 0x000008, "Wrong size on CommonDateTimeTextBlock_SetTimespanValue");
static_assert(offsetof(CommonDateTimeTextBlock_SetTimespanValue, InTimespan) == 0x000000, "Member 'CommonDateTimeTextBlock_SetTimespanValue::InTimespan' has a wrong offset!");

// Function CommonUI.CommonDateTimeTextBlock.GetDateTime
// 0x0008 (0x0008 - 0x0000)
struct CommonDateTimeTextBlock_GetDateTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonDateTimeTextBlock_GetDateTime) == 0x000008, "Wrong alignment on CommonDateTimeTextBlock_GetDateTime");
static_assert(sizeof(CommonDateTimeTextBlock_GetDateTime) == 0x000008, "Wrong size on CommonDateTimeTextBlock_GetDateTime");
static_assert(offsetof(CommonDateTimeTextBlock_GetDateTime, ReturnValue) == 0x000000, "Member 'CommonDateTimeTextBlock_GetDateTime::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonLazyImage.SetBrushFromLazyDisplayAsset
// 0x0030 (0x0030 - 0x0000)
struct CommonLazyImage_SetBrushFromLazyDisplayAsset final
{
public:
	TSoftObjectPtr<class UObject>                 LazyObject;                                        // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchTextureSize;                                 // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_234F[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonLazyImage_SetBrushFromLazyDisplayAsset) == 0x000008, "Wrong alignment on CommonLazyImage_SetBrushFromLazyDisplayAsset");
static_assert(sizeof(CommonLazyImage_SetBrushFromLazyDisplayAsset) == 0x000030, "Wrong size on CommonLazyImage_SetBrushFromLazyDisplayAsset");
static_assert(offsetof(CommonLazyImage_SetBrushFromLazyDisplayAsset, LazyObject) == 0x000000, "Member 'CommonLazyImage_SetBrushFromLazyDisplayAsset::LazyObject' has a wrong offset!");
static_assert(offsetof(CommonLazyImage_SetBrushFromLazyDisplayAsset, bMatchTextureSize) == 0x000028, "Member 'CommonLazyImage_SetBrushFromLazyDisplayAsset::bMatchTextureSize' has a wrong offset!");

// Function CommonUI.CommonLazyImage.SetBrushFromLazyMaterial
// 0x0028 (0x0028 - 0x0000)
struct CommonLazyImage_SetBrushFromLazyMaterial final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      LazyMaterial;                                      // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyImage_SetBrushFromLazyMaterial) == 0x000008, "Wrong alignment on CommonLazyImage_SetBrushFromLazyMaterial");
static_assert(sizeof(CommonLazyImage_SetBrushFromLazyMaterial) == 0x000028, "Wrong size on CommonLazyImage_SetBrushFromLazyMaterial");
static_assert(offsetof(CommonLazyImage_SetBrushFromLazyMaterial, LazyMaterial) == 0x000000, "Member 'CommonLazyImage_SetBrushFromLazyMaterial::LazyMaterial' has a wrong offset!");

// Function CommonUI.CommonLazyImage.SetBrushFromLazyTexture
// 0x0030 (0x0030 - 0x0000)
struct CommonLazyImage_SetBrushFromLazyTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              LazyTexture;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchSize;                                        // 0x0028(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2350[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonLazyImage_SetBrushFromLazyTexture) == 0x000008, "Wrong alignment on CommonLazyImage_SetBrushFromLazyTexture");
static_assert(sizeof(CommonLazyImage_SetBrushFromLazyTexture) == 0x000030, "Wrong size on CommonLazyImage_SetBrushFromLazyTexture");
static_assert(offsetof(CommonLazyImage_SetBrushFromLazyTexture, LazyTexture) == 0x000000, "Member 'CommonLazyImage_SetBrushFromLazyTexture::LazyTexture' has a wrong offset!");
static_assert(offsetof(CommonLazyImage_SetBrushFromLazyTexture, bMatchSize) == 0x000028, "Member 'CommonLazyImage_SetBrushFromLazyTexture::bMatchSize' has a wrong offset!");

// Function CommonUI.CommonLazyImage.SetMaterialTextureParamName
// 0x0008 (0x0008 - 0x0000)
struct CommonLazyImage_SetMaterialTextureParamName final
{
public:
	class FName                                   TextureParamName;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyImage_SetMaterialTextureParamName) == 0x000004, "Wrong alignment on CommonLazyImage_SetMaterialTextureParamName");
static_assert(sizeof(CommonLazyImage_SetMaterialTextureParamName) == 0x000008, "Wrong size on CommonLazyImage_SetMaterialTextureParamName");
static_assert(offsetof(CommonLazyImage_SetMaterialTextureParamName, TextureParamName) == 0x000000, "Member 'CommonLazyImage_SetMaterialTextureParamName::TextureParamName' has a wrong offset!");

// Function CommonUI.CommonLazyImage.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct CommonLazyImage_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyImage_IsLoading) == 0x000001, "Wrong alignment on CommonLazyImage_IsLoading");
static_assert(sizeof(CommonLazyImage_IsLoading) == 0x000001, "Wrong size on CommonLazyImage_IsLoading");
static_assert(offsetof(CommonLazyImage_IsLoading, ReturnValue) == 0x000000, "Member 'CommonLazyImage_IsLoading::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonLazyWidget.SetLazyContent
// 0x0028 (0x0028 - 0x0000)
struct CommonLazyWidget_SetLazyContent final
{
public:
	TSoftClassPtr<class UClass>                   SoftWidget;                                        // 0x0000(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyWidget_SetLazyContent) == 0x000008, "Wrong alignment on CommonLazyWidget_SetLazyContent");
static_assert(sizeof(CommonLazyWidget_SetLazyContent) == 0x000028, "Wrong size on CommonLazyWidget_SetLazyContent");
static_assert(offsetof(CommonLazyWidget_SetLazyContent, SoftWidget) == 0x000000, "Member 'CommonLazyWidget_SetLazyContent::SoftWidget' has a wrong offset!");

// Function CommonUI.CommonLazyWidget.GetContent
// 0x0008 (0x0008 - 0x0000)
struct CommonLazyWidget_GetContent final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyWidget_GetContent) == 0x000008, "Wrong alignment on CommonLazyWidget_GetContent");
static_assert(sizeof(CommonLazyWidget_GetContent) == 0x000008, "Wrong size on CommonLazyWidget_GetContent");
static_assert(offsetof(CommonLazyWidget_GetContent, ReturnValue) == 0x000000, "Member 'CommonLazyWidget_GetContent::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonLazyWidget.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct CommonLazyWidget_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLazyWidget_IsLoading) == 0x000001, "Wrong alignment on CommonLazyWidget_IsLoading");
static_assert(sizeof(CommonLazyWidget_IsLoading) == 0x000001, "Wrong size on CommonLazyWidget_IsLoading");
static_assert(offsetof(CommonLazyWidget_IsLoading, ReturnValue) == 0x000000, "Member 'CommonLazyWidget_IsLoading::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonListView.SetEntrySpacing
// 0x0004 (0x0004 - 0x0000)
struct CommonListView_SetEntrySpacing final
{
public:
	float                                         InEntrySpacing;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonListView_SetEntrySpacing) == 0x000004, "Wrong alignment on CommonListView_SetEntrySpacing");
static_assert(sizeof(CommonListView_SetEntrySpacing) == 0x000004, "Wrong size on CommonListView_SetEntrySpacing");
static_assert(offsetof(CommonListView_SetEntrySpacing, InEntrySpacing) == 0x000000, "Member 'CommonListView_SetEntrySpacing::InEntrySpacing' has a wrong offset!");

// Function CommonUI.LoadGuardSlot.SetHorizontalAlignment
// 0x0001 (0x0001 - 0x0000)
struct LoadGuardSlot_SetHorizontalAlignment final
{
public:
	EHorizontalAlignment                          InHorizontalAlignment;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadGuardSlot_SetHorizontalAlignment) == 0x000001, "Wrong alignment on LoadGuardSlot_SetHorizontalAlignment");
static_assert(sizeof(LoadGuardSlot_SetHorizontalAlignment) == 0x000001, "Wrong size on LoadGuardSlot_SetHorizontalAlignment");
static_assert(offsetof(LoadGuardSlot_SetHorizontalAlignment, InHorizontalAlignment) == 0x000000, "Member 'LoadGuardSlot_SetHorizontalAlignment::InHorizontalAlignment' has a wrong offset!");

// Function CommonUI.LoadGuardSlot.SetPadding
// 0x0010 (0x0010 - 0x0000)
struct LoadGuardSlot_SetPadding final
{
public:
	struct FMargin                                InPadding;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadGuardSlot_SetPadding) == 0x000004, "Wrong alignment on LoadGuardSlot_SetPadding");
static_assert(sizeof(LoadGuardSlot_SetPadding) == 0x000010, "Wrong size on LoadGuardSlot_SetPadding");
static_assert(offsetof(LoadGuardSlot_SetPadding, InPadding) == 0x000000, "Member 'LoadGuardSlot_SetPadding::InPadding' has a wrong offset!");

// Function CommonUI.LoadGuardSlot.SetVerticalAlignment
// 0x0001 (0x0001 - 0x0000)
struct LoadGuardSlot_SetVerticalAlignment final
{
public:
	EVerticalAlignment                            InVerticalAlignment;                               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LoadGuardSlot_SetVerticalAlignment) == 0x000001, "Wrong alignment on LoadGuardSlot_SetVerticalAlignment");
static_assert(sizeof(LoadGuardSlot_SetVerticalAlignment) == 0x000001, "Wrong size on LoadGuardSlot_SetVerticalAlignment");
static_assert(offsetof(LoadGuardSlot_SetVerticalAlignment, InVerticalAlignment) == 0x000000, "Member 'LoadGuardSlot_SetVerticalAlignment::InVerticalAlignment' has a wrong offset!");

// Function CommonUI.CommonLoadGuard.BP_GuardAndLoadAsset
// 0x0038 (0x0038 - 0x0000)
struct CommonLoadGuard_BP_GuardAndLoadAsset final
{
public:
	TSoftObjectPtr<class UObject>                 InLazyAsset;                                       // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(class UObject* Object)>        OnAssetLoaded;                                     // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLoadGuard_BP_GuardAndLoadAsset) == 0x000008, "Wrong alignment on CommonLoadGuard_BP_GuardAndLoadAsset");
static_assert(sizeof(CommonLoadGuard_BP_GuardAndLoadAsset) == 0x000038, "Wrong size on CommonLoadGuard_BP_GuardAndLoadAsset");
static_assert(offsetof(CommonLoadGuard_BP_GuardAndLoadAsset, InLazyAsset) == 0x000000, "Member 'CommonLoadGuard_BP_GuardAndLoadAsset::InLazyAsset' has a wrong offset!");
static_assert(offsetof(CommonLoadGuard_BP_GuardAndLoadAsset, OnAssetLoaded) == 0x000028, "Member 'CommonLoadGuard_BP_GuardAndLoadAsset::OnAssetLoaded' has a wrong offset!");

// DelegateFunction CommonUI.CommonLoadGuard.OnAssetLoaded__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CommonLoadGuard_OnAssetLoaded__DelegateSignature final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLoadGuard_OnAssetLoaded__DelegateSignature) == 0x000008, "Wrong alignment on CommonLoadGuard_OnAssetLoaded__DelegateSignature");
static_assert(sizeof(CommonLoadGuard_OnAssetLoaded__DelegateSignature) == 0x000008, "Wrong size on CommonLoadGuard_OnAssetLoaded__DelegateSignature");
static_assert(offsetof(CommonLoadGuard_OnAssetLoaded__DelegateSignature, Object) == 0x000000, "Member 'CommonLoadGuard_OnAssetLoaded__DelegateSignature::Object' has a wrong offset!");

// Function CommonUI.CommonLoadGuard.SetIsLoading
// 0x0001 (0x0001 - 0x0000)
struct CommonLoadGuard_SetIsLoading final
{
public:
	bool                                          bInIsLoading;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLoadGuard_SetIsLoading) == 0x000001, "Wrong alignment on CommonLoadGuard_SetIsLoading");
static_assert(sizeof(CommonLoadGuard_SetIsLoading) == 0x000001, "Wrong size on CommonLoadGuard_SetIsLoading");
static_assert(offsetof(CommonLoadGuard_SetIsLoading, bInIsLoading) == 0x000000, "Member 'CommonLoadGuard_SetIsLoading::bInIsLoading' has a wrong offset!");

// Function CommonUI.CommonLoadGuard.SetLoadingText
// 0x0018 (0x0018 - 0x0000)
struct CommonLoadGuard_SetLoadingText final
{
public:
	class FText                                   InLoadingText;                                     // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLoadGuard_SetLoadingText) == 0x000008, "Wrong alignment on CommonLoadGuard_SetLoadingText");
static_assert(sizeof(CommonLoadGuard_SetLoadingText) == 0x000018, "Wrong size on CommonLoadGuard_SetLoadingText");
static_assert(offsetof(CommonLoadGuard_SetLoadingText, InLoadingText) == 0x000000, "Member 'CommonLoadGuard_SetLoadingText::InLoadingText' has a wrong offset!");

// Function CommonUI.CommonLoadGuard.IsLoading
// 0x0001 (0x0001 - 0x0000)
struct CommonLoadGuard_IsLoading final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonLoadGuard_IsLoading) == 0x000001, "Wrong alignment on CommonLoadGuard_IsLoading");
static_assert(sizeof(CommonLoadGuard_IsLoading) == 0x000001, "Wrong size on CommonLoadGuard_IsLoading");
static_assert(offsetof(CommonLoadGuard_IsLoading, ReturnValue) == 0x000000, "Member 'CommonLoadGuard_IsLoading::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonNumericTextBlock.InterpolateToValue
// 0x0010 (0x0010 - 0x0000)
struct CommonNumericTextBlock_InterpolateToValue final
{
public:
	float                                         TargetValue;                                       // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MaximumInterpolationDuration;                      // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         MinimumChangeRate;                                 // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutroOffset;                                       // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_InterpolateToValue) == 0x000004, "Wrong alignment on CommonNumericTextBlock_InterpolateToValue");
static_assert(sizeof(CommonNumericTextBlock_InterpolateToValue) == 0x000010, "Wrong size on CommonNumericTextBlock_InterpolateToValue");
static_assert(offsetof(CommonNumericTextBlock_InterpolateToValue, TargetValue) == 0x000000, "Member 'CommonNumericTextBlock_InterpolateToValue::TargetValue' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_InterpolateToValue, MaximumInterpolationDuration) == 0x000004, "Member 'CommonNumericTextBlock_InterpolateToValue::MaximumInterpolationDuration' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_InterpolateToValue, MinimumChangeRate) == 0x000008, "Member 'CommonNumericTextBlock_InterpolateToValue::MinimumChangeRate' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_InterpolateToValue, OutroOffset) == 0x00000C, "Member 'CommonNumericTextBlock_InterpolateToValue::OutroOffset' has a wrong offset!");

// DelegateFunction CommonUI.CommonNumericTextBlock.OnInterpolationEnded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature final
{
public:
	class UCommonNumericTextBlock*                NumericTextBlock;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          HadCompleted;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_235A[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature) == 0x000008, "Wrong alignment on CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature");
static_assert(sizeof(CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature) == 0x000010, "Wrong size on CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature, NumericTextBlock) == 0x000000, "Member 'CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature::NumericTextBlock' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature, HadCompleted) == 0x000008, "Member 'CommonNumericTextBlock_OnInterpolationEnded__DelegateSignature::HadCompleted' has a wrong offset!");

// DelegateFunction CommonUI.CommonNumericTextBlock.OnInterpolationStarted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature final
{
public:
	class UCommonNumericTextBlock*                NumericTextBlock;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature) == 0x000008, "Wrong alignment on CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature");
static_assert(sizeof(CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature) == 0x000008, "Wrong size on CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature, NumericTextBlock) == 0x000000, "Member 'CommonNumericTextBlock_OnInterpolationStarted__DelegateSignature::NumericTextBlock' has a wrong offset!");

// DelegateFunction CommonUI.CommonNumericTextBlock.OnInterpolationUpdated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature final
{
public:
	class UCommonNumericTextBlock*                NumericTextBlock;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastValue;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NewValue;                                          // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature) == 0x000008, "Wrong alignment on CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature");
static_assert(sizeof(CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature) == 0x000010, "Wrong size on CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature, NumericTextBlock) == 0x000000, "Member 'CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature::NumericTextBlock' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature, LastValue) == 0x000008, "Member 'CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature::LastValue' has a wrong offset!");
static_assert(offsetof(CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature, NewValue) == 0x00000C, "Member 'CommonNumericTextBlock_OnInterpolationUpdated__DelegateSignature::NewValue' has a wrong offset!");

// DelegateFunction CommonUI.CommonNumericTextBlock.OnOutro__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CommonNumericTextBlock_OnOutro__DelegateSignature final
{
public:
	class UCommonNumericTextBlock*                NumericTextBlock;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_OnOutro__DelegateSignature) == 0x000008, "Wrong alignment on CommonNumericTextBlock_OnOutro__DelegateSignature");
static_assert(sizeof(CommonNumericTextBlock_OnOutro__DelegateSignature) == 0x000008, "Wrong size on CommonNumericTextBlock_OnOutro__DelegateSignature");
static_assert(offsetof(CommonNumericTextBlock_OnOutro__DelegateSignature, NumericTextBlock) == 0x000000, "Member 'CommonNumericTextBlock_OnOutro__DelegateSignature::NumericTextBlock' has a wrong offset!");

// Function CommonUI.CommonNumericTextBlock.SetCurrentValue
// 0x0004 (0x0004 - 0x0000)
struct CommonNumericTextBlock_SetCurrentValue final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_SetCurrentValue) == 0x000004, "Wrong alignment on CommonNumericTextBlock_SetCurrentValue");
static_assert(sizeof(CommonNumericTextBlock_SetCurrentValue) == 0x000004, "Wrong size on CommonNumericTextBlock_SetCurrentValue");
static_assert(offsetof(CommonNumericTextBlock_SetCurrentValue, NewValue) == 0x000000, "Member 'CommonNumericTextBlock_SetCurrentValue::NewValue' has a wrong offset!");

// Function CommonUI.CommonNumericTextBlock.SetNumericType
// 0x0001 (0x0001 - 0x0000)
struct CommonNumericTextBlock_SetNumericType final
{
public:
	ECommonNumericType                            InNumericType;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_SetNumericType) == 0x000001, "Wrong alignment on CommonNumericTextBlock_SetNumericType");
static_assert(sizeof(CommonNumericTextBlock_SetNumericType) == 0x000001, "Wrong size on CommonNumericTextBlock_SetNumericType");
static_assert(offsetof(CommonNumericTextBlock_SetNumericType, InNumericType) == 0x000000, "Member 'CommonNumericTextBlock_SetNumericType::InNumericType' has a wrong offset!");

// Function CommonUI.CommonNumericTextBlock.GetTargetValue
// 0x0004 (0x0004 - 0x0000)
struct CommonNumericTextBlock_GetTargetValue final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_GetTargetValue) == 0x000004, "Wrong alignment on CommonNumericTextBlock_GetTargetValue");
static_assert(sizeof(CommonNumericTextBlock_GetTargetValue) == 0x000004, "Wrong size on CommonNumericTextBlock_GetTargetValue");
static_assert(offsetof(CommonNumericTextBlock_GetTargetValue, ReturnValue) == 0x000000, "Member 'CommonNumericTextBlock_GetTargetValue::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonNumericTextBlock.IsInterpolatingNumericValue
// 0x0001 (0x0001 - 0x0000)
struct CommonNumericTextBlock_IsInterpolatingNumericValue final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonNumericTextBlock_IsInterpolatingNumericValue) == 0x000001, "Wrong alignment on CommonNumericTextBlock_IsInterpolatingNumericValue");
static_assert(sizeof(CommonNumericTextBlock_IsInterpolatingNumericValue) == 0x000001, "Wrong size on CommonNumericTextBlock_IsInterpolatingNumericValue");
static_assert(offsetof(CommonNumericTextBlock_IsInterpolatingNumericValue, ReturnValue) == 0x000000, "Member 'CommonNumericTextBlock_IsInterpolatingNumericValue::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonRichTextBlock.SetScrollingEnabled
// 0x0001 (0x0001 - 0x0000)
struct CommonRichTextBlock_SetScrollingEnabled final
{
public:
	bool                                          bInIsScrollingEnabled;                             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRichTextBlock_SetScrollingEnabled) == 0x000001, "Wrong alignment on CommonRichTextBlock_SetScrollingEnabled");
static_assert(sizeof(CommonRichTextBlock_SetScrollingEnabled) == 0x000001, "Wrong size on CommonRichTextBlock_SetScrollingEnabled");
static_assert(offsetof(CommonRichTextBlock_SetScrollingEnabled, bInIsScrollingEnabled) == 0x000000, "Member 'CommonRichTextBlock_SetScrollingEnabled::bInIsScrollingEnabled' has a wrong offset!");

// Function CommonUI.CommonRotator.BP_OnOptionSelected
// 0x0004 (0x0004 - 0x0000)
struct CommonRotator_BP_OnOptionSelected final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_BP_OnOptionSelected) == 0x000004, "Wrong alignment on CommonRotator_BP_OnOptionSelected");
static_assert(sizeof(CommonRotator_BP_OnOptionSelected) == 0x000004, "Wrong size on CommonRotator_BP_OnOptionSelected");
static_assert(offsetof(CommonRotator_BP_OnOptionSelected, Param_Index) == 0x000000, "Member 'CommonRotator_BP_OnOptionSelected::Param_Index' has a wrong offset!");

// Function CommonUI.CommonRotator.BP_OnOptionsPopulated
// 0x0004 (0x0004 - 0x0000)
struct CommonRotator_BP_OnOptionsPopulated final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_BP_OnOptionsPopulated) == 0x000004, "Wrong alignment on CommonRotator_BP_OnOptionsPopulated");
static_assert(sizeof(CommonRotator_BP_OnOptionsPopulated) == 0x000004, "Wrong size on CommonRotator_BP_OnOptionsPopulated");
static_assert(offsetof(CommonRotator_BP_OnOptionsPopulated, Count) == 0x000000, "Member 'CommonRotator_BP_OnOptionsPopulated::Count' has a wrong offset!");

// Function CommonUI.CommonRotator.PopulateTextLabels
// 0x0010 (0x0010 - 0x0000)
struct CommonRotator_PopulateTextLabels final
{
public:
	TArray<class FText>                           Labels;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_PopulateTextLabels) == 0x000008, "Wrong alignment on CommonRotator_PopulateTextLabels");
static_assert(sizeof(CommonRotator_PopulateTextLabels) == 0x000010, "Wrong size on CommonRotator_PopulateTextLabels");
static_assert(offsetof(CommonRotator_PopulateTextLabels, Labels) == 0x000000, "Member 'CommonRotator_PopulateTextLabels::Labels' has a wrong offset!");

// Function CommonUI.CommonRotator.SetSelectedItem
// 0x0004 (0x0004 - 0x0000)
struct CommonRotator_SetSelectedItem final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_SetSelectedItem) == 0x000004, "Wrong alignment on CommonRotator_SetSelectedItem");
static_assert(sizeof(CommonRotator_SetSelectedItem) == 0x000004, "Wrong size on CommonRotator_SetSelectedItem");
static_assert(offsetof(CommonRotator_SetSelectedItem, InValue) == 0x000000, "Member 'CommonRotator_SetSelectedItem::InValue' has a wrong offset!");

// Function CommonUI.CommonRotator.GetSelectedIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonRotator_GetSelectedIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_GetSelectedIndex) == 0x000004, "Wrong alignment on CommonRotator_GetSelectedIndex");
static_assert(sizeof(CommonRotator_GetSelectedIndex) == 0x000004, "Wrong size on CommonRotator_GetSelectedIndex");
static_assert(offsetof(CommonRotator_GetSelectedIndex, ReturnValue) == 0x000000, "Member 'CommonRotator_GetSelectedIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonRotator.GetSelectedText
// 0x0018 (0x0018 - 0x0000)
struct CommonRotator_GetSelectedText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonRotator_GetSelectedText) == 0x000008, "Wrong alignment on CommonRotator_GetSelectedText");
static_assert(sizeof(CommonRotator_GetSelectedText) == 0x000018, "Wrong size on CommonRotator_GetSelectedText");
static_assert(offsetof(CommonRotator_GetSelectedText, ReturnValue) == 0x000000, "Member 'CommonRotator_GetSelectedText::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.DisableTabWithReason
// 0x0020 (0x0020 - 0x0000)
struct CommonTabListWidgetBase_DisableTabWithReason final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Reason;                                            // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_DisableTabWithReason) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_DisableTabWithReason");
static_assert(sizeof(CommonTabListWidgetBase_DisableTabWithReason) == 0x000020, "Wrong size on CommonTabListWidgetBase_DisableTabWithReason");
static_assert(offsetof(CommonTabListWidgetBase_DisableTabWithReason, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_DisableTabWithReason::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_DisableTabWithReason, Reason) == 0x000008, "Member 'CommonTabListWidgetBase_DisableTabWithReason::Reason' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.HandleNextTabInputAction
// 0x0001 (0x0001 - 0x0000)
struct CommonTabListWidgetBase_HandleNextTabInputAction final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_HandleNextTabInputAction) == 0x000001, "Wrong alignment on CommonTabListWidgetBase_HandleNextTabInputAction");
static_assert(sizeof(CommonTabListWidgetBase_HandleNextTabInputAction) == 0x000001, "Wrong size on CommonTabListWidgetBase_HandleNextTabInputAction");
static_assert(offsetof(CommonTabListWidgetBase_HandleNextTabInputAction, bPassThrough) == 0x000000, "Member 'CommonTabListWidgetBase_HandleNextTabInputAction::bPassThrough' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.HandlePreviousTabInputAction
// 0x0001 (0x0001 - 0x0000)
struct CommonTabListWidgetBase_HandlePreviousTabInputAction final
{
public:
	bool                                          bPassThrough;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_HandlePreviousTabInputAction) == 0x000001, "Wrong alignment on CommonTabListWidgetBase_HandlePreviousTabInputAction");
static_assert(sizeof(CommonTabListWidgetBase_HandlePreviousTabInputAction) == 0x000001, "Wrong size on CommonTabListWidgetBase_HandlePreviousTabInputAction");
static_assert(offsetof(CommonTabListWidgetBase_HandlePreviousTabInputAction, bPassThrough) == 0x000000, "Member 'CommonTabListWidgetBase_HandlePreviousTabInputAction::bPassThrough' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.HandleTabButtonSelected
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_HandleTabButtonSelected final
{
public:
	class UCommonButtonBase*                      SelectedTabButton;                                 // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2365[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_HandleTabButtonSelected) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_HandleTabButtonSelected");
static_assert(sizeof(CommonTabListWidgetBase_HandleTabButtonSelected) == 0x000010, "Wrong size on CommonTabListWidgetBase_HandleTabButtonSelected");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabButtonSelected, SelectedTabButton) == 0x000000, "Member 'CommonTabListWidgetBase_HandleTabButtonSelected::SelectedTabButton' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabButtonSelected, ButtonIndex) == 0x000008, "Member 'CommonTabListWidgetBase_HandleTabButtonSelected::ButtonIndex' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.HandleTabCreation
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_HandleTabCreation final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_HandleTabCreation) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_HandleTabCreation");
static_assert(sizeof(CommonTabListWidgetBase_HandleTabCreation) == 0x000010, "Wrong size on CommonTabListWidgetBase_HandleTabCreation");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabCreation, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_HandleTabCreation::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabCreation, TabButton) == 0x000008, "Member 'CommonTabListWidgetBase_HandleTabCreation::TabButton' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.HandleTabRemoval
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_HandleTabRemoval final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_HandleTabRemoval) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_HandleTabRemoval");
static_assert(sizeof(CommonTabListWidgetBase_HandleTabRemoval) == 0x000010, "Wrong size on CommonTabListWidgetBase_HandleTabRemoval");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabRemoval, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_HandleTabRemoval::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_HandleTabRemoval, TabButton) == 0x000008, "Member 'CommonTabListWidgetBase_HandleTabRemoval::TabButton' has a wrong offset!");

// DelegateFunction CommonUI.CommonTabListWidgetBase.OnTabButtonCreation__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature");
static_assert(sizeof(CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature) == 0x000010, "Wrong size on CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature");
static_assert(offsetof(CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature, TabId) == 0x000000, "Member 'CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature, TabButton) == 0x000008, "Member 'CommonTabListWidgetBase_OnTabButtonCreation__DelegateSignature::TabButton' has a wrong offset!");

// DelegateFunction CommonUI.CommonTabListWidgetBase.OnTabButtonRemoval__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButtonBase*                      TabButton;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature");
static_assert(sizeof(CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature) == 0x000010, "Wrong size on CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature");
static_assert(offsetof(CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature, TabId) == 0x000000, "Member 'CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature::TabId' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature, TabButton) == 0x000008, "Member 'CommonTabListWidgetBase_OnTabButtonRemoval__DelegateSignature::TabButton' has a wrong offset!");

// DelegateFunction CommonUI.CommonTabListWidgetBase.OnTabSelected__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct CommonTabListWidgetBase_OnTabSelected__DelegateSignature final
{
public:
	class FName                                   TabId;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_OnTabSelected__DelegateSignature) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_OnTabSelected__DelegateSignature");
static_assert(sizeof(CommonTabListWidgetBase_OnTabSelected__DelegateSignature) == 0x000008, "Wrong size on CommonTabListWidgetBase_OnTabSelected__DelegateSignature");
static_assert(offsetof(CommonTabListWidgetBase_OnTabSelected__DelegateSignature, TabId) == 0x000000, "Member 'CommonTabListWidgetBase_OnTabSelected__DelegateSignature::TabId' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.RegisterTab
// 0x0020 (0x0020 - 0x0000)
struct CommonTabListWidgetBase_RegisterTab final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonButtonBase>          ButtonWidgetType;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ContentWidget;                                     // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TabIndex;                                          // 0x0018(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2366[0x3];                                     // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_RegisterTab) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_RegisterTab");
static_assert(sizeof(CommonTabListWidgetBase_RegisterTab) == 0x000020, "Wrong size on CommonTabListWidgetBase_RegisterTab");
static_assert(offsetof(CommonTabListWidgetBase_RegisterTab, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_RegisterTab::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_RegisterTab, ButtonWidgetType) == 0x000008, "Member 'CommonTabListWidgetBase_RegisterTab::ButtonWidgetType' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_RegisterTab, ContentWidget) == 0x000010, "Member 'CommonTabListWidgetBase_RegisterTab::ContentWidget' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_RegisterTab, TabIndex) == 0x000018, "Member 'CommonTabListWidgetBase_RegisterTab::TabIndex' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_RegisterTab, ReturnValue) == 0x00001C, "Member 'CommonTabListWidgetBase_RegisterTab::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.RemoveTab
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_RemoveTab final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2367[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_RemoveTab) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_RemoveTab");
static_assert(sizeof(CommonTabListWidgetBase_RemoveTab) == 0x00000C, "Wrong size on CommonTabListWidgetBase_RemoveTab");
static_assert(offsetof(CommonTabListWidgetBase_RemoveTab, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_RemoveTab::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_RemoveTab, ReturnValue) == 0x000008, "Member 'CommonTabListWidgetBase_RemoveTab::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SelectTabByID
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_SelectTabByID final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuppressClickFeedback;                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2368[0x2];                                     // 0x000A(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_SelectTabByID) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_SelectTabByID");
static_assert(sizeof(CommonTabListWidgetBase_SelectTabByID) == 0x00000C, "Wrong size on CommonTabListWidgetBase_SelectTabByID");
static_assert(offsetof(CommonTabListWidgetBase_SelectTabByID, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_SelectTabByID::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_SelectTabByID, bSuppressClickFeedback) == 0x000008, "Member 'CommonTabListWidgetBase_SelectTabByID::bSuppressClickFeedback' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_SelectTabByID, ReturnValue) == 0x000009, "Member 'CommonTabListWidgetBase_SelectTabByID::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SetLinkedSwitcher
// 0x0008 (0x0008 - 0x0000)
struct CommonTabListWidgetBase_SetLinkedSwitcher final
{
public:
	class UCommonAnimatedSwitcher*                CommonSwitcher;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_SetLinkedSwitcher) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_SetLinkedSwitcher");
static_assert(sizeof(CommonTabListWidgetBase_SetLinkedSwitcher) == 0x000008, "Wrong size on CommonTabListWidgetBase_SetLinkedSwitcher");
static_assert(offsetof(CommonTabListWidgetBase_SetLinkedSwitcher, CommonSwitcher) == 0x000000, "Member 'CommonTabListWidgetBase_SetLinkedSwitcher::CommonSwitcher' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SetListeningForInput
// 0x0001 (0x0001 - 0x0000)
struct CommonTabListWidgetBase_SetListeningForInput final
{
public:
	bool                                          bShouldListen;                                     // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_SetListeningForInput) == 0x000001, "Wrong alignment on CommonTabListWidgetBase_SetListeningForInput");
static_assert(sizeof(CommonTabListWidgetBase_SetListeningForInput) == 0x000001, "Wrong size on CommonTabListWidgetBase_SetListeningForInput");
static_assert(offsetof(CommonTabListWidgetBase_SetListeningForInput, bShouldListen) == 0x000000, "Member 'CommonTabListWidgetBase_SetListeningForInput::bShouldListen' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SetTabEnabled
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_SetTabEnabled final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2369[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_SetTabEnabled) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_SetTabEnabled");
static_assert(sizeof(CommonTabListWidgetBase_SetTabEnabled) == 0x00000C, "Wrong size on CommonTabListWidgetBase_SetTabEnabled");
static_assert(offsetof(CommonTabListWidgetBase_SetTabEnabled, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_SetTabEnabled::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_SetTabEnabled, bEnable) == 0x000008, "Member 'CommonTabListWidgetBase_SetTabEnabled::bEnable' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SetTabInteractionEnabled
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_SetTabInteractionEnabled final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnable;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_236A[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_SetTabInteractionEnabled) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_SetTabInteractionEnabled");
static_assert(sizeof(CommonTabListWidgetBase_SetTabInteractionEnabled) == 0x00000C, "Wrong size on CommonTabListWidgetBase_SetTabInteractionEnabled");
static_assert(offsetof(CommonTabListWidgetBase_SetTabInteractionEnabled, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_SetTabInteractionEnabled::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_SetTabInteractionEnabled, bEnable) == 0x000008, "Member 'CommonTabListWidgetBase_SetTabInteractionEnabled::bEnable' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.SetTabVisibility
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_SetTabVisibility final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESlateVisibility                              NewVisibility;                                     // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_236B[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonTabListWidgetBase_SetTabVisibility) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_SetTabVisibility");
static_assert(sizeof(CommonTabListWidgetBase_SetTabVisibility) == 0x00000C, "Wrong size on CommonTabListWidgetBase_SetTabVisibility");
static_assert(offsetof(CommonTabListWidgetBase_SetTabVisibility, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_SetTabVisibility::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_SetTabVisibility, NewVisibility) == 0x000008, "Member 'CommonTabListWidgetBase_SetTabVisibility::NewVisibility' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetActiveTab
// 0x0008 (0x0008 - 0x0000)
struct CommonTabListWidgetBase_GetActiveTab final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetActiveTab) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_GetActiveTab");
static_assert(sizeof(CommonTabListWidgetBase_GetActiveTab) == 0x000008, "Wrong size on CommonTabListWidgetBase_GetActiveTab");
static_assert(offsetof(CommonTabListWidgetBase_GetActiveTab, ReturnValue) == 0x000000, "Member 'CommonTabListWidgetBase_GetActiveTab::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetLinkedSwitcher
// 0x0008 (0x0008 - 0x0000)
struct CommonTabListWidgetBase_GetLinkedSwitcher final
{
public:
	class UCommonAnimatedSwitcher*                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetLinkedSwitcher) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_GetLinkedSwitcher");
static_assert(sizeof(CommonTabListWidgetBase_GetLinkedSwitcher) == 0x000008, "Wrong size on CommonTabListWidgetBase_GetLinkedSwitcher");
static_assert(offsetof(CommonTabListWidgetBase_GetLinkedSwitcher, ReturnValue) == 0x000000, "Member 'CommonTabListWidgetBase_GetLinkedSwitcher::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetSelectedTabId
// 0x0008 (0x0008 - 0x0000)
struct CommonTabListWidgetBase_GetSelectedTabId final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetSelectedTabId) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_GetSelectedTabId");
static_assert(sizeof(CommonTabListWidgetBase_GetSelectedTabId) == 0x000008, "Wrong size on CommonTabListWidgetBase_GetSelectedTabId");
static_assert(offsetof(CommonTabListWidgetBase_GetSelectedTabId, ReturnValue) == 0x000000, "Member 'CommonTabListWidgetBase_GetSelectedTabId::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetTabButtonBaseByID
// 0x0010 (0x0010 - 0x0000)
struct CommonTabListWidgetBase_GetTabButtonBaseByID final
{
public:
	class FName                                   TabNameID;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonButtonBase*                      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetTabButtonBaseByID) == 0x000008, "Wrong alignment on CommonTabListWidgetBase_GetTabButtonBaseByID");
static_assert(sizeof(CommonTabListWidgetBase_GetTabButtonBaseByID) == 0x000010, "Wrong size on CommonTabListWidgetBase_GetTabButtonBaseByID");
static_assert(offsetof(CommonTabListWidgetBase_GetTabButtonBaseByID, TabNameID) == 0x000000, "Member 'CommonTabListWidgetBase_GetTabButtonBaseByID::TabNameID' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_GetTabButtonBaseByID, ReturnValue) == 0x000008, "Member 'CommonTabListWidgetBase_GetTabButtonBaseByID::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetTabCount
// 0x0004 (0x0004 - 0x0000)
struct CommonTabListWidgetBase_GetTabCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetTabCount) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_GetTabCount");
static_assert(sizeof(CommonTabListWidgetBase_GetTabCount) == 0x000004, "Wrong size on CommonTabListWidgetBase_GetTabCount");
static_assert(offsetof(CommonTabListWidgetBase_GetTabCount, ReturnValue) == 0x000000, "Member 'CommonTabListWidgetBase_GetTabCount::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTabListWidgetBase.GetTabIdAtIndex
// 0x000C (0x000C - 0x0000)
struct CommonTabListWidgetBase_GetTabIdAtIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTabListWidgetBase_GetTabIdAtIndex) == 0x000004, "Wrong alignment on CommonTabListWidgetBase_GetTabIdAtIndex");
static_assert(sizeof(CommonTabListWidgetBase_GetTabIdAtIndex) == 0x00000C, "Wrong size on CommonTabListWidgetBase_GetTabIdAtIndex");
static_assert(offsetof(CommonTabListWidgetBase_GetTabIdAtIndex, Param_Index) == 0x000000, "Member 'CommonTabListWidgetBase_GetTabIdAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(CommonTabListWidgetBase_GetTabIdAtIndex, ReturnValue) == 0x000004, "Member 'CommonTabListWidgetBase_GetTabIdAtIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetColor
// 0x0010 (0x0010 - 0x0000)
struct CommonTextStyle_GetColor final
{
public:
	struct FLinearColor                           OutColor;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetColor) == 0x000004, "Wrong alignment on CommonTextStyle_GetColor");
static_assert(sizeof(CommonTextStyle_GetColor) == 0x000010, "Wrong size on CommonTextStyle_GetColor");
static_assert(offsetof(CommonTextStyle_GetColor, OutColor) == 0x000000, "Member 'CommonTextStyle_GetColor::OutColor' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetFont
// 0x0058 (0x0058 - 0x0000)
struct CommonTextStyle_GetFont final
{
public:
	struct FSlateFontInfo                         OutFont;                                           // 0x0000(0x0058)(Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetFont) == 0x000008, "Wrong alignment on CommonTextStyle_GetFont");
static_assert(sizeof(CommonTextStyle_GetFont) == 0x000058, "Wrong size on CommonTextStyle_GetFont");
static_assert(offsetof(CommonTextStyle_GetFont, OutFont) == 0x000000, "Member 'CommonTextStyle_GetFont::OutFont' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetLineHeightPercentage
// 0x0004 (0x0004 - 0x0000)
struct CommonTextStyle_GetLineHeightPercentage final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetLineHeightPercentage) == 0x000004, "Wrong alignment on CommonTextStyle_GetLineHeightPercentage");
static_assert(sizeof(CommonTextStyle_GetLineHeightPercentage) == 0x000004, "Wrong size on CommonTextStyle_GetLineHeightPercentage");
static_assert(offsetof(CommonTextStyle_GetLineHeightPercentage, ReturnValue) == 0x000000, "Member 'CommonTextStyle_GetLineHeightPercentage::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetMargin
// 0x0010 (0x0010 - 0x0000)
struct CommonTextStyle_GetMargin final
{
public:
	struct FMargin                                OutMargin;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetMargin) == 0x000004, "Wrong alignment on CommonTextStyle_GetMargin");
static_assert(sizeof(CommonTextStyle_GetMargin) == 0x000010, "Wrong size on CommonTextStyle_GetMargin");
static_assert(offsetof(CommonTextStyle_GetMargin, OutMargin) == 0x000000, "Member 'CommonTextStyle_GetMargin::OutMargin' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetShadowColor
// 0x0010 (0x0010 - 0x0000)
struct CommonTextStyle_GetShadowColor final
{
public:
	struct FLinearColor                           OutColor;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetShadowColor) == 0x000004, "Wrong alignment on CommonTextStyle_GetShadowColor");
static_assert(sizeof(CommonTextStyle_GetShadowColor) == 0x000010, "Wrong size on CommonTextStyle_GetShadowColor");
static_assert(offsetof(CommonTextStyle_GetShadowColor, OutColor) == 0x000000, "Member 'CommonTextStyle_GetShadowColor::OutColor' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetShadowOffset
// 0x0010 (0x0010 - 0x0000)
struct CommonTextStyle_GetShadowOffset final
{
public:
	struct FVector2D                              OutShadowOffset;                                   // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetShadowOffset) == 0x000008, "Wrong alignment on CommonTextStyle_GetShadowOffset");
static_assert(sizeof(CommonTextStyle_GetShadowOffset) == 0x000010, "Wrong size on CommonTextStyle_GetShadowOffset");
static_assert(offsetof(CommonTextStyle_GetShadowOffset, OutShadowOffset) == 0x000000, "Member 'CommonTextStyle_GetShadowOffset::OutShadowOffset' has a wrong offset!");

// Function CommonUI.CommonTextStyle.GetStrikeBrush
// 0x00D0 (0x00D0 - 0x0000)
struct CommonTextStyle_GetStrikeBrush final
{
public:
	struct FSlateBrush                            OutStrikeBrush;                                    // 0x0000(0x00D0)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonTextStyle_GetStrikeBrush) == 0x000010, "Wrong alignment on CommonTextStyle_GetStrikeBrush");
static_assert(sizeof(CommonTextStyle_GetStrikeBrush) == 0x0000D0, "Wrong size on CommonTextStyle_GetStrikeBrush");
static_assert(offsetof(CommonTextStyle_GetStrikeBrush, OutStrikeBrush) == 0x000000, "Member 'CommonTextStyle_GetStrikeBrush::OutStrikeBrush' has a wrong offset!");

// Function CommonUI.CommonUILibrary.FindParentWidgetOfType
// 0x0018 (0x0018 - 0x0000)
struct CommonUILibrary_FindParentWidgetOfType final
{
public:
	class UWidget*                                StartingWidget;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWidget>                    Type;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                                ReturnValue;                                       // 0x0010(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUILibrary_FindParentWidgetOfType) == 0x000008, "Wrong alignment on CommonUILibrary_FindParentWidgetOfType");
static_assert(sizeof(CommonUILibrary_FindParentWidgetOfType) == 0x000018, "Wrong size on CommonUILibrary_FindParentWidgetOfType");
static_assert(offsetof(CommonUILibrary_FindParentWidgetOfType, StartingWidget) == 0x000000, "Member 'CommonUILibrary_FindParentWidgetOfType::StartingWidget' has a wrong offset!");
static_assert(offsetof(CommonUILibrary_FindParentWidgetOfType, Type) == 0x000008, "Member 'CommonUILibrary_FindParentWidgetOfType::Type' has a wrong offset!");
static_assert(offsetof(CommonUILibrary_FindParentWidgetOfType, ReturnValue) == 0x000010, "Member 'CommonUILibrary_FindParentWidgetOfType::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonUISubsystemBase.GetEnhancedInputActionButtonIcon
// 0x00E0 (0x00E0 - 0x0000)
struct CommonUISubsystemBase_GetEnhancedInputActionButtonIcon final
{
public:
	const class UInputAction*                     InputAction;                                       // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class ULocalPlayer*                     LocalPlayer;                                       // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                            ReturnValue;                                       // 0x0010(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUISubsystemBase_GetEnhancedInputActionButtonIcon) == 0x000010, "Wrong alignment on CommonUISubsystemBase_GetEnhancedInputActionButtonIcon");
static_assert(sizeof(CommonUISubsystemBase_GetEnhancedInputActionButtonIcon) == 0x0000E0, "Wrong size on CommonUISubsystemBase_GetEnhancedInputActionButtonIcon");
static_assert(offsetof(CommonUISubsystemBase_GetEnhancedInputActionButtonIcon, InputAction) == 0x000000, "Member 'CommonUISubsystemBase_GetEnhancedInputActionButtonIcon::InputAction' has a wrong offset!");
static_assert(offsetof(CommonUISubsystemBase_GetEnhancedInputActionButtonIcon, LocalPlayer) == 0x000008, "Member 'CommonUISubsystemBase_GetEnhancedInputActionButtonIcon::LocalPlayer' has a wrong offset!");
static_assert(offsetof(CommonUISubsystemBase_GetEnhancedInputActionButtonIcon, ReturnValue) == 0x000010, "Member 'CommonUISubsystemBase_GetEnhancedInputActionButtonIcon::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonUISubsystemBase.GetInputActionButtonIcon
// 0x00F0 (0x00F0 - 0x0000)
struct CommonUISubsystemBase_GetInputActionButtonIcon final
{
public:
	struct FDataTableRowHandle                    InputActionRowHandle;                              // 0x0000(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	ECommonInputType                              InputType;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2375[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   GamepadName;                                       // 0x0014(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2376[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ReturnValue;                                       // 0x0020(0x00D0)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonUISubsystemBase_GetInputActionButtonIcon) == 0x000010, "Wrong alignment on CommonUISubsystemBase_GetInputActionButtonIcon");
static_assert(sizeof(CommonUISubsystemBase_GetInputActionButtonIcon) == 0x0000F0, "Wrong size on CommonUISubsystemBase_GetInputActionButtonIcon");
static_assert(offsetof(CommonUISubsystemBase_GetInputActionButtonIcon, InputActionRowHandle) == 0x000000, "Member 'CommonUISubsystemBase_GetInputActionButtonIcon::InputActionRowHandle' has a wrong offset!");
static_assert(offsetof(CommonUISubsystemBase_GetInputActionButtonIcon, InputType) == 0x000010, "Member 'CommonUISubsystemBase_GetInputActionButtonIcon::InputType' has a wrong offset!");
static_assert(offsetof(CommonUISubsystemBase_GetInputActionButtonIcon, GamepadName) == 0x000014, "Member 'CommonUISubsystemBase_GetInputActionButtonIcon::GamepadName' has a wrong offset!");
static_assert(offsetof(CommonUISubsystemBase_GetInputActionButtonIcon, ReturnValue) == 0x000020, "Member 'CommonUISubsystemBase_GetInputActionButtonIcon::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.DecrementActiveWidgetIndex
// 0x0001 (0x0001 - 0x0000)
struct CommonVisibilitySwitcher_DecrementActiveWidgetIndex final
{
public:
	bool                                          bAllowWrapping;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_DecrementActiveWidgetIndex) == 0x000001, "Wrong alignment on CommonVisibilitySwitcher_DecrementActiveWidgetIndex");
static_assert(sizeof(CommonVisibilitySwitcher_DecrementActiveWidgetIndex) == 0x000001, "Wrong size on CommonVisibilitySwitcher_DecrementActiveWidgetIndex");
static_assert(offsetof(CommonVisibilitySwitcher_DecrementActiveWidgetIndex, bAllowWrapping) == 0x000000, "Member 'CommonVisibilitySwitcher_DecrementActiveWidgetIndex::bAllowWrapping' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.IncrementActiveWidgetIndex
// 0x0001 (0x0001 - 0x0000)
struct CommonVisibilitySwitcher_IncrementActiveWidgetIndex final
{
public:
	bool                                          bAllowWrapping;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_IncrementActiveWidgetIndex) == 0x000001, "Wrong alignment on CommonVisibilitySwitcher_IncrementActiveWidgetIndex");
static_assert(sizeof(CommonVisibilitySwitcher_IncrementActiveWidgetIndex) == 0x000001, "Wrong size on CommonVisibilitySwitcher_IncrementActiveWidgetIndex");
static_assert(offsetof(CommonVisibilitySwitcher_IncrementActiveWidgetIndex, bAllowWrapping) == 0x000000, "Member 'CommonVisibilitySwitcher_IncrementActiveWidgetIndex::bAllowWrapping' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.SetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonVisibilitySwitcher_SetActiveWidget final
{
public:
	const class UWidget*                          Widget;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_SetActiveWidget) == 0x000008, "Wrong alignment on CommonVisibilitySwitcher_SetActiveWidget");
static_assert(sizeof(CommonVisibilitySwitcher_SetActiveWidget) == 0x000008, "Wrong size on CommonVisibilitySwitcher_SetActiveWidget");
static_assert(offsetof(CommonVisibilitySwitcher_SetActiveWidget, Widget) == 0x000000, "Member 'CommonVisibilitySwitcher_SetActiveWidget::Widget' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.SetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonVisibilitySwitcher_SetActiveWidgetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_SetActiveWidgetIndex) == 0x000004, "Wrong alignment on CommonVisibilitySwitcher_SetActiveWidgetIndex");
static_assert(sizeof(CommonVisibilitySwitcher_SetActiveWidgetIndex) == 0x000004, "Wrong size on CommonVisibilitySwitcher_SetActiveWidgetIndex");
static_assert(offsetof(CommonVisibilitySwitcher_SetActiveWidgetIndex, Param_Index) == 0x000000, "Member 'CommonVisibilitySwitcher_SetActiveWidgetIndex::Param_Index' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.GetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonVisibilitySwitcher_GetActiveWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_GetActiveWidget) == 0x000008, "Wrong alignment on CommonVisibilitySwitcher_GetActiveWidget");
static_assert(sizeof(CommonVisibilitySwitcher_GetActiveWidget) == 0x000008, "Wrong size on CommonVisibilitySwitcher_GetActiveWidget");
static_assert(offsetof(CommonVisibilitySwitcher_GetActiveWidget, ReturnValue) == 0x000000, "Member 'CommonVisibilitySwitcher_GetActiveWidget::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonVisibilitySwitcher.GetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonVisibilitySwitcher_GetActiveWidgetIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonVisibilitySwitcher_GetActiveWidgetIndex) == 0x000004, "Wrong alignment on CommonVisibilitySwitcher_GetActiveWidgetIndex");
static_assert(sizeof(CommonVisibilitySwitcher_GetActiveWidgetIndex) == 0x000004, "Wrong size on CommonVisibilitySwitcher_GetActiveWidgetIndex");
static_assert(offsetof(CommonVisibilitySwitcher_GetActiveWidgetIndex, ReturnValue) == 0x000000, "Member 'CommonVisibilitySwitcher_GetActiveWidgetIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.UCommonVisibilityWidgetBase.GetRegisteredPlatforms
// 0x0010 (0x0010 - 0x0000)
struct UCommonVisibilityWidgetBase_GetRegisteredPlatforms final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(UCommonVisibilityWidgetBase_GetRegisteredPlatforms) == 0x000008, "Wrong alignment on UCommonVisibilityWidgetBase_GetRegisteredPlatforms");
static_assert(sizeof(UCommonVisibilityWidgetBase_GetRegisteredPlatforms) == 0x000010, "Wrong size on UCommonVisibilityWidgetBase_GetRegisteredPlatforms");
static_assert(offsetof(UCommonVisibilityWidgetBase_GetRegisteredPlatforms, ReturnValue) == 0x000000, "Member 'UCommonVisibilityWidgetBase_GetRegisteredPlatforms::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonWidgetCarousel.BeginAutoScrolling
// 0x0004 (0x0004 - 0x0000)
struct CommonWidgetCarousel_BeginAutoScrolling final
{
public:
	float                                         ScrollInterval;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarousel_BeginAutoScrolling) == 0x000004, "Wrong alignment on CommonWidgetCarousel_BeginAutoScrolling");
static_assert(sizeof(CommonWidgetCarousel_BeginAutoScrolling) == 0x000004, "Wrong size on CommonWidgetCarousel_BeginAutoScrolling");
static_assert(offsetof(CommonWidgetCarousel_BeginAutoScrolling, ScrollInterval) == 0x000000, "Member 'CommonWidgetCarousel_BeginAutoScrolling::ScrollInterval' has a wrong offset!");

// Function CommonUI.CommonWidgetCarousel.SetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetCarousel_SetActiveWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarousel_SetActiveWidget) == 0x000008, "Wrong alignment on CommonWidgetCarousel_SetActiveWidget");
static_assert(sizeof(CommonWidgetCarousel_SetActiveWidget) == 0x000008, "Wrong size on CommonWidgetCarousel_SetActiveWidget");
static_assert(offsetof(CommonWidgetCarousel_SetActiveWidget, Widget) == 0x000000, "Member 'CommonWidgetCarousel_SetActiveWidget::Widget' has a wrong offset!");

// Function CommonUI.CommonWidgetCarousel.SetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonWidgetCarousel_SetActiveWidgetIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarousel_SetActiveWidgetIndex) == 0x000004, "Wrong alignment on CommonWidgetCarousel_SetActiveWidgetIndex");
static_assert(sizeof(CommonWidgetCarousel_SetActiveWidgetIndex) == 0x000004, "Wrong size on CommonWidgetCarousel_SetActiveWidgetIndex");
static_assert(offsetof(CommonWidgetCarousel_SetActiveWidgetIndex, Param_Index) == 0x000000, "Member 'CommonWidgetCarousel_SetActiveWidgetIndex::Param_Index' has a wrong offset!");

// Function CommonUI.CommonWidgetCarousel.GetActiveWidgetIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonWidgetCarousel_GetActiveWidgetIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarousel_GetActiveWidgetIndex) == 0x000004, "Wrong alignment on CommonWidgetCarousel_GetActiveWidgetIndex");
static_assert(sizeof(CommonWidgetCarousel_GetActiveWidgetIndex) == 0x000004, "Wrong size on CommonWidgetCarousel_GetActiveWidgetIndex");
static_assert(offsetof(CommonWidgetCarousel_GetActiveWidgetIndex, ReturnValue) == 0x000000, "Member 'CommonWidgetCarousel_GetActiveWidgetIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonWidgetCarousel.GetWidgetAtIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonWidgetCarousel_GetWidgetAtIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2383[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarousel_GetWidgetAtIndex) == 0x000008, "Wrong alignment on CommonWidgetCarousel_GetWidgetAtIndex");
static_assert(sizeof(CommonWidgetCarousel_GetWidgetAtIndex) == 0x000010, "Wrong size on CommonWidgetCarousel_GetWidgetAtIndex");
static_assert(offsetof(CommonWidgetCarousel_GetWidgetAtIndex, Param_Index) == 0x000000, "Member 'CommonWidgetCarousel_GetWidgetAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(CommonWidgetCarousel_GetWidgetAtIndex, ReturnValue) == 0x000008, "Member 'CommonWidgetCarousel_GetWidgetAtIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonWidgetCarouselNavBar.HandleButtonClicked
// 0x0010 (0x0010 - 0x0000)
struct CommonWidgetCarouselNavBar_HandleButtonClicked final
{
public:
	class UCommonButtonBase*                      AssociatedButton;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ButtonIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2385[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonWidgetCarouselNavBar_HandleButtonClicked) == 0x000008, "Wrong alignment on CommonWidgetCarouselNavBar_HandleButtonClicked");
static_assert(sizeof(CommonWidgetCarouselNavBar_HandleButtonClicked) == 0x000010, "Wrong size on CommonWidgetCarouselNavBar_HandleButtonClicked");
static_assert(offsetof(CommonWidgetCarouselNavBar_HandleButtonClicked, AssociatedButton) == 0x000000, "Member 'CommonWidgetCarouselNavBar_HandleButtonClicked::AssociatedButton' has a wrong offset!");
static_assert(offsetof(CommonWidgetCarouselNavBar_HandleButtonClicked, ButtonIndex) == 0x000008, "Member 'CommonWidgetCarouselNavBar_HandleButtonClicked::ButtonIndex' has a wrong offset!");

// Function CommonUI.CommonWidgetCarouselNavBar.HandlePageChanged
// 0x0010 (0x0010 - 0x0000)
struct CommonWidgetCarouselNavBar_HandlePageChanged final
{
public:
	class UCommonWidgetCarousel*                  CommonCarousel;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PageIndex;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2386[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonWidgetCarouselNavBar_HandlePageChanged) == 0x000008, "Wrong alignment on CommonWidgetCarouselNavBar_HandlePageChanged");
static_assert(sizeof(CommonWidgetCarouselNavBar_HandlePageChanged) == 0x000010, "Wrong size on CommonWidgetCarouselNavBar_HandlePageChanged");
static_assert(offsetof(CommonWidgetCarouselNavBar_HandlePageChanged, CommonCarousel) == 0x000000, "Member 'CommonWidgetCarouselNavBar_HandlePageChanged::CommonCarousel' has a wrong offset!");
static_assert(offsetof(CommonWidgetCarouselNavBar_HandlePageChanged, PageIndex) == 0x000008, "Member 'CommonWidgetCarouselNavBar_HandlePageChanged::PageIndex' has a wrong offset!");

// Function CommonUI.CommonWidgetCarouselNavBar.SetLinkedCarousel
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetCarouselNavBar_SetLinkedCarousel final
{
public:
	class UCommonWidgetCarousel*                  CommonCarousel;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetCarouselNavBar_SetLinkedCarousel) == 0x000008, "Wrong alignment on CommonWidgetCarouselNavBar_SetLinkedCarousel");
static_assert(sizeof(CommonWidgetCarouselNavBar_SetLinkedCarousel) == 0x000008, "Wrong size on CommonWidgetCarouselNavBar_SetLinkedCarousel");
static_assert(offsetof(CommonWidgetCarouselNavBar_SetLinkedCarousel, CommonCarousel) == 0x000000, "Member 'CommonWidgetCarouselNavBar_SetLinkedCarousel::CommonCarousel' has a wrong offset!");

// Function CommonUI.CommonWidgetGroupBase.AddWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetGroupBase_AddWidget final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetGroupBase_AddWidget) == 0x000008, "Wrong alignment on CommonWidgetGroupBase_AddWidget");
static_assert(sizeof(CommonWidgetGroupBase_AddWidget) == 0x000008, "Wrong size on CommonWidgetGroupBase_AddWidget");
static_assert(offsetof(CommonWidgetGroupBase_AddWidget, InWidget) == 0x000000, "Member 'CommonWidgetGroupBase_AddWidget::InWidget' has a wrong offset!");

// Function CommonUI.CommonWidgetGroupBase.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonWidgetGroupBase_RemoveWidget final
{
public:
	class UWidget*                                InWidget;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonWidgetGroupBase_RemoveWidget) == 0x000008, "Wrong alignment on CommonWidgetGroupBase_RemoveWidget");
static_assert(sizeof(CommonWidgetGroupBase_RemoveWidget) == 0x000008, "Wrong size on CommonWidgetGroupBase_RemoveWidget");
static_assert(offsetof(CommonWidgetGroupBase_RemoveWidget, InWidget) == 0x000000, "Member 'CommonWidgetGroupBase_RemoveWidget::InWidget' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.OnButtonBaseHovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_OnButtonBaseHovered final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_OnButtonBaseHovered) == 0x000008, "Wrong alignment on CommonButtonGroupBase_OnButtonBaseHovered");
static_assert(sizeof(CommonButtonGroupBase_OnButtonBaseHovered) == 0x000008, "Wrong size on CommonButtonGroupBase_OnButtonBaseHovered");
static_assert(offsetof(CommonButtonGroupBase_OnButtonBaseHovered, BaseButton) == 0x000000, "Member 'CommonButtonGroupBase_OnButtonBaseHovered::BaseButton' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.OnButtonBaseUnhovered
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_OnButtonBaseUnhovered final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_OnButtonBaseUnhovered) == 0x000008, "Wrong alignment on CommonButtonGroupBase_OnButtonBaseUnhovered");
static_assert(sizeof(CommonButtonGroupBase_OnButtonBaseUnhovered) == 0x000008, "Wrong size on CommonButtonGroupBase_OnButtonBaseUnhovered");
static_assert(offsetof(CommonButtonGroupBase_OnButtonBaseUnhovered, BaseButton) == 0x000000, "Member 'CommonButtonGroupBase_OnButtonBaseUnhovered::BaseButton' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.OnHandleButtonBaseClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_OnHandleButtonBaseClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_OnHandleButtonBaseClicked) == 0x000008, "Wrong alignment on CommonButtonGroupBase_OnHandleButtonBaseClicked");
static_assert(sizeof(CommonButtonGroupBase_OnHandleButtonBaseClicked) == 0x000008, "Wrong size on CommonButtonGroupBase_OnHandleButtonBaseClicked");
static_assert(offsetof(CommonButtonGroupBase_OnHandleButtonBaseClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupBase_OnHandleButtonBaseClicked::BaseButton' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.OnHandleButtonBaseDoubleClicked
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked) == 0x000008, "Wrong alignment on CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked");
static_assert(sizeof(CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked) == 0x000008, "Wrong size on CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked");
static_assert(offsetof(CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked, BaseButton) == 0x000000, "Member 'CommonButtonGroupBase_OnHandleButtonBaseDoubleClicked::BaseButton' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.OnSelectionStateChangedBase
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupBase_OnSelectionStateChangedBase final
{
public:
	class UCommonButtonBase*                      BaseButton;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelected;                                       // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_238D[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupBase_OnSelectionStateChangedBase) == 0x000008, "Wrong alignment on CommonButtonGroupBase_OnSelectionStateChangedBase");
static_assert(sizeof(CommonButtonGroupBase_OnSelectionStateChangedBase) == 0x000010, "Wrong size on CommonButtonGroupBase_OnSelectionStateChangedBase");
static_assert(offsetof(CommonButtonGroupBase_OnSelectionStateChangedBase, BaseButton) == 0x000000, "Member 'CommonButtonGroupBase_OnSelectionStateChangedBase::BaseButton' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupBase_OnSelectionStateChangedBase, bIsSelected) == 0x000008, "Member 'CommonButtonGroupBase_OnSelectionStateChangedBase::bIsSelected' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.SelectButtonAtIndex
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_SelectButtonAtIndex final
{
public:
	int32                                         ButtonIndex;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowSound;                                       // 0x0004(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_238E[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupBase_SelectButtonAtIndex) == 0x000004, "Wrong alignment on CommonButtonGroupBase_SelectButtonAtIndex");
static_assert(sizeof(CommonButtonGroupBase_SelectButtonAtIndex) == 0x000008, "Wrong size on CommonButtonGroupBase_SelectButtonAtIndex");
static_assert(offsetof(CommonButtonGroupBase_SelectButtonAtIndex, ButtonIndex) == 0x000000, "Member 'CommonButtonGroupBase_SelectButtonAtIndex::ButtonIndex' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupBase_SelectButtonAtIndex, bAllowSound) == 0x000004, "Member 'CommonButtonGroupBase_SelectButtonAtIndex::bAllowSound' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.SelectNextButton
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonGroupBase_SelectNextButton final
{
public:
	bool                                          bAllowWrap;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_SelectNextButton) == 0x000001, "Wrong alignment on CommonButtonGroupBase_SelectNextButton");
static_assert(sizeof(CommonButtonGroupBase_SelectNextButton) == 0x000001, "Wrong size on CommonButtonGroupBase_SelectNextButton");
static_assert(offsetof(CommonButtonGroupBase_SelectNextButton, bAllowWrap) == 0x000000, "Member 'CommonButtonGroupBase_SelectNextButton::bAllowWrap' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.SelectPreviousButton
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonGroupBase_SelectPreviousButton final
{
public:
	bool                                          bAllowWrap;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_SelectPreviousButton) == 0x000001, "Wrong alignment on CommonButtonGroupBase_SelectPreviousButton");
static_assert(sizeof(CommonButtonGroupBase_SelectPreviousButton) == 0x000001, "Wrong size on CommonButtonGroupBase_SelectPreviousButton");
static_assert(offsetof(CommonButtonGroupBase_SelectPreviousButton, bAllowWrap) == 0x000000, "Member 'CommonButtonGroupBase_SelectPreviousButton::bAllowWrap' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.SetSelectionRequired
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonGroupBase_SetSelectionRequired final
{
public:
	bool                                          bRequireSelection;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_SetSelectionRequired) == 0x000001, "Wrong alignment on CommonButtonGroupBase_SetSelectionRequired");
static_assert(sizeof(CommonButtonGroupBase_SetSelectionRequired) == 0x000001, "Wrong size on CommonButtonGroupBase_SetSelectionRequired");
static_assert(offsetof(CommonButtonGroupBase_SetSelectionRequired, bRequireSelection) == 0x000000, "Member 'CommonButtonGroupBase_SetSelectionRequired::bRequireSelection' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.FindButtonIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupBase_FindButtonIndex final
{
public:
	const class UCommonButtonBase*                ButtonToFind;                                      // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_238F[0x4];                                     // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CommonButtonGroupBase_FindButtonIndex) == 0x000008, "Wrong alignment on CommonButtonGroupBase_FindButtonIndex");
static_assert(sizeof(CommonButtonGroupBase_FindButtonIndex) == 0x000010, "Wrong size on CommonButtonGroupBase_FindButtonIndex");
static_assert(offsetof(CommonButtonGroupBase_FindButtonIndex, ButtonToFind) == 0x000000, "Member 'CommonButtonGroupBase_FindButtonIndex::ButtonToFind' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupBase_FindButtonIndex, ReturnValue) == 0x000008, "Member 'CommonButtonGroupBase_FindButtonIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.GetButtonBaseAtIndex
// 0x0010 (0x0010 - 0x0000)
struct CommonButtonGroupBase_GetButtonBaseAtIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2390[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_GetButtonBaseAtIndex) == 0x000008, "Wrong alignment on CommonButtonGroupBase_GetButtonBaseAtIndex");
static_assert(sizeof(CommonButtonGroupBase_GetButtonBaseAtIndex) == 0x000010, "Wrong size on CommonButtonGroupBase_GetButtonBaseAtIndex");
static_assert(offsetof(CommonButtonGroupBase_GetButtonBaseAtIndex, Param_Index) == 0x000000, "Member 'CommonButtonGroupBase_GetButtonBaseAtIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(CommonButtonGroupBase_GetButtonBaseAtIndex, ReturnValue) == 0x000008, "Member 'CommonButtonGroupBase_GetButtonBaseAtIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.GetButtonCount
// 0x0004 (0x0004 - 0x0000)
struct CommonButtonGroupBase_GetButtonCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_GetButtonCount) == 0x000004, "Wrong alignment on CommonButtonGroupBase_GetButtonCount");
static_assert(sizeof(CommonButtonGroupBase_GetButtonCount) == 0x000004, "Wrong size on CommonButtonGroupBase_GetButtonCount");
static_assert(offsetof(CommonButtonGroupBase_GetButtonCount, ReturnValue) == 0x000000, "Member 'CommonButtonGroupBase_GetButtonCount::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.GetHoveredButtonIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonButtonGroupBase_GetHoveredButtonIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_GetHoveredButtonIndex) == 0x000004, "Wrong alignment on CommonButtonGroupBase_GetHoveredButtonIndex");
static_assert(sizeof(CommonButtonGroupBase_GetHoveredButtonIndex) == 0x000004, "Wrong size on CommonButtonGroupBase_GetHoveredButtonIndex");
static_assert(offsetof(CommonButtonGroupBase_GetHoveredButtonIndex, ReturnValue) == 0x000000, "Member 'CommonButtonGroupBase_GetHoveredButtonIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.GetSelectedButtonBase
// 0x0008 (0x0008 - 0x0000)
struct CommonButtonGroupBase_GetSelectedButtonBase final
{
public:
	class UCommonButtonBase*                      ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_GetSelectedButtonBase) == 0x000008, "Wrong alignment on CommonButtonGroupBase_GetSelectedButtonBase");
static_assert(sizeof(CommonButtonGroupBase_GetSelectedButtonBase) == 0x000008, "Wrong size on CommonButtonGroupBase_GetSelectedButtonBase");
static_assert(offsetof(CommonButtonGroupBase_GetSelectedButtonBase, ReturnValue) == 0x000000, "Member 'CommonButtonGroupBase_GetSelectedButtonBase::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.GetSelectedButtonIndex
// 0x0004 (0x0004 - 0x0000)
struct CommonButtonGroupBase_GetSelectedButtonIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_GetSelectedButtonIndex) == 0x000004, "Wrong alignment on CommonButtonGroupBase_GetSelectedButtonIndex");
static_assert(sizeof(CommonButtonGroupBase_GetSelectedButtonIndex) == 0x000004, "Wrong size on CommonButtonGroupBase_GetSelectedButtonIndex");
static_assert(offsetof(CommonButtonGroupBase_GetSelectedButtonIndex, ReturnValue) == 0x000000, "Member 'CommonButtonGroupBase_GetSelectedButtonIndex::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonButtonGroupBase.HasAnyButtons
// 0x0001 (0x0001 - 0x0000)
struct CommonButtonGroupBase_HasAnyButtons final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonButtonGroupBase_HasAnyButtons) == 0x000001, "Wrong alignment on CommonButtonGroupBase_HasAnyButtons");
static_assert(sizeof(CommonButtonGroupBase_HasAnyButtons) == 0x000001, "Wrong size on CommonButtonGroupBase_HasAnyButtons");
static_assert(offsetof(CommonButtonGroupBase_HasAnyButtons, ReturnValue) == 0x000000, "Member 'CommonButtonGroupBase_HasAnyButtons::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonBoundActionBar.SetDisplayOwningPlayerActionsOnly
// 0x0001 (0x0001 - 0x0000)
struct CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly final
{
public:
	bool                                          bShouldOnlyDisplayOwningPlayerActions;             // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly) == 0x000001, "Wrong alignment on CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly");
static_assert(sizeof(CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly) == 0x000001, "Wrong size on CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly");
static_assert(offsetof(CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly, bShouldOnlyDisplayOwningPlayerActions) == 0x000000, "Member 'CommonBoundActionBar_SetDisplayOwningPlayerActionsOnly::bShouldOnlyDisplayOwningPlayerActions' has a wrong offset!");

// Function CommonUI.CommonActivatableWidgetContainerBase.BP_AddWidget
// 0x0010 (0x0010 - 0x0000)
struct CommonActivatableWidgetContainerBase_BP_AddWidget final
{
public:
	TSubclassOf<class UCommonActivatableWidget>   ActivatableWidgetClass;                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonActivatableWidget*               ReturnValue;                                       // 0x0008(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidgetContainerBase_BP_AddWidget) == 0x000008, "Wrong alignment on CommonActivatableWidgetContainerBase_BP_AddWidget");
static_assert(sizeof(CommonActivatableWidgetContainerBase_BP_AddWidget) == 0x000010, "Wrong size on CommonActivatableWidgetContainerBase_BP_AddWidget");
static_assert(offsetof(CommonActivatableWidgetContainerBase_BP_AddWidget, ActivatableWidgetClass) == 0x000000, "Member 'CommonActivatableWidgetContainerBase_BP_AddWidget::ActivatableWidgetClass' has a wrong offset!");
static_assert(offsetof(CommonActivatableWidgetContainerBase_BP_AddWidget, ReturnValue) == 0x000008, "Member 'CommonActivatableWidgetContainerBase_BP_AddWidget::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidgetContainerBase.RemoveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonActivatableWidgetContainerBase_RemoveWidget final
{
public:
	class UCommonActivatableWidget*               WidgetToRemove;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidgetContainerBase_RemoveWidget) == 0x000008, "Wrong alignment on CommonActivatableWidgetContainerBase_RemoveWidget");
static_assert(sizeof(CommonActivatableWidgetContainerBase_RemoveWidget) == 0x000008, "Wrong size on CommonActivatableWidgetContainerBase_RemoveWidget");
static_assert(offsetof(CommonActivatableWidgetContainerBase_RemoveWidget, WidgetToRemove) == 0x000000, "Member 'CommonActivatableWidgetContainerBase_RemoveWidget::WidgetToRemove' has a wrong offset!");

// Function CommonUI.CommonActivatableWidgetContainerBase.SetTransitionDuration
// 0x0004 (0x0004 - 0x0000)
struct CommonActivatableWidgetContainerBase_SetTransitionDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidgetContainerBase_SetTransitionDuration) == 0x000004, "Wrong alignment on CommonActivatableWidgetContainerBase_SetTransitionDuration");
static_assert(sizeof(CommonActivatableWidgetContainerBase_SetTransitionDuration) == 0x000004, "Wrong size on CommonActivatableWidgetContainerBase_SetTransitionDuration");
static_assert(offsetof(CommonActivatableWidgetContainerBase_SetTransitionDuration, Duration) == 0x000000, "Member 'CommonActivatableWidgetContainerBase_SetTransitionDuration::Duration' has a wrong offset!");

// Function CommonUI.CommonActivatableWidgetContainerBase.GetActiveWidget
// 0x0008 (0x0008 - 0x0000)
struct CommonActivatableWidgetContainerBase_GetActiveWidget final
{
public:
	class UCommonActivatableWidget*               ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidgetContainerBase_GetActiveWidget) == 0x000008, "Wrong alignment on CommonActivatableWidgetContainerBase_GetActiveWidget");
static_assert(sizeof(CommonActivatableWidgetContainerBase_GetActiveWidget) == 0x000008, "Wrong size on CommonActivatableWidgetContainerBase_GetActiveWidget");
static_assert(offsetof(CommonActivatableWidgetContainerBase_GetActiveWidget, ReturnValue) == 0x000000, "Member 'CommonActivatableWidgetContainerBase_GetActiveWidget::ReturnValue' has a wrong offset!");

// Function CommonUI.CommonActivatableWidgetContainerBase.GetTransitionDuration
// 0x0004 (0x0004 - 0x0000)
struct CommonActivatableWidgetContainerBase_GetTransitionDuration final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CommonActivatableWidgetContainerBase_GetTransitionDuration) == 0x000004, "Wrong alignment on CommonActivatableWidgetContainerBase_GetTransitionDuration");
static_assert(sizeof(CommonActivatableWidgetContainerBase_GetTransitionDuration) == 0x000004, "Wrong size on CommonActivatableWidgetContainerBase_GetTransitionDuration");
static_assert(offsetof(CommonActivatableWidgetContainerBase_GetTransitionDuration, ReturnValue) == 0x000000, "Member 'CommonActivatableWidgetContainerBase_GetTransitionDuration::ReturnValue' has a wrong offset!");

}

