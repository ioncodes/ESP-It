#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Water

#include "Basic.hpp"

#include "Water_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Water.BuoyancyComponent.GetLastWaterSurfaceInfo
// 0x0068 (0x0068 - 0x0000)
struct BuoyancyComponent_GetLastWaterSurfaceInfo final
{
public:
	struct FVector                                OutWaterPlaneLocation;                             // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterPlaneNormal;                               // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterSurfacePosition;                           // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutWaterDepth;                                     // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OutWaterBodyIdx;                                   // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterVelocity;                                  // 0x0050(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_GetLastWaterSurfaceInfo) == 0x000008, "Wrong alignment on BuoyancyComponent_GetLastWaterSurfaceInfo");
static_assert(sizeof(BuoyancyComponent_GetLastWaterSurfaceInfo) == 0x000068, "Wrong size on BuoyancyComponent_GetLastWaterSurfaceInfo");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterPlaneLocation) == 0x000000, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterPlaneLocation' has a wrong offset!");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterPlaneNormal) == 0x000018, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterPlaneNormal' has a wrong offset!");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterSurfacePosition) == 0x000030, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterSurfacePosition' has a wrong offset!");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterDepth) == 0x000048, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterDepth' has a wrong offset!");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterBodyIdx) == 0x00004C, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterBodyIdx' has a wrong offset!");
static_assert(offsetof(BuoyancyComponent_GetLastWaterSurfaceInfo, OutWaterVelocity) == 0x000050, "Member 'BuoyancyComponent_GetLastWaterSurfaceInfo::OutWaterVelocity' has a wrong offset!");

// Function Water.BuoyancyComponent.OnPontoonEnteredWater
// 0x02D0 (0x02D0 - 0x0000)
struct BuoyancyComponent_OnPontoonEnteredWater final
{
public:
	struct FSphericalPontoon                      Pontoon;                                           // 0x0000(0x02D0)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_OnPontoonEnteredWater) == 0x000010, "Wrong alignment on BuoyancyComponent_OnPontoonEnteredWater");
static_assert(sizeof(BuoyancyComponent_OnPontoonEnteredWater) == 0x0002D0, "Wrong size on BuoyancyComponent_OnPontoonEnteredWater");
static_assert(offsetof(BuoyancyComponent_OnPontoonEnteredWater, Pontoon) == 0x000000, "Member 'BuoyancyComponent_OnPontoonEnteredWater::Pontoon' has a wrong offset!");

// Function Water.BuoyancyComponent.OnPontoonExitedWater
// 0x02D0 (0x02D0 - 0x0000)
struct BuoyancyComponent_OnPontoonExitedWater final
{
public:
	struct FSphericalPontoon                      Pontoon;                                           // 0x0000(0x02D0)(ConstParm, Parm, OutParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_OnPontoonExitedWater) == 0x000010, "Wrong alignment on BuoyancyComponent_OnPontoonExitedWater");
static_assert(sizeof(BuoyancyComponent_OnPontoonExitedWater) == 0x0002D0, "Wrong size on BuoyancyComponent_OnPontoonExitedWater");
static_assert(offsetof(BuoyancyComponent_OnPontoonExitedWater, Pontoon) == 0x000000, "Member 'BuoyancyComponent_OnPontoonExitedWater::Pontoon' has a wrong offset!");

// Function Water.BuoyancyComponent.GetCurrentWaterBodyComponents
// 0x0010 (0x0010 - 0x0000)
struct BuoyancyComponent_GetCurrentWaterBodyComponents final
{
public:
	TArray<class UWaterBodyComponent*>            ReturnValue;                                       // 0x0000(0x0010)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_GetCurrentWaterBodyComponents) == 0x000008, "Wrong alignment on BuoyancyComponent_GetCurrentWaterBodyComponents");
static_assert(sizeof(BuoyancyComponent_GetCurrentWaterBodyComponents) == 0x000010, "Wrong size on BuoyancyComponent_GetCurrentWaterBodyComponents");
static_assert(offsetof(BuoyancyComponent_GetCurrentWaterBodyComponents, ReturnValue) == 0x000000, "Member 'BuoyancyComponent_GetCurrentWaterBodyComponents::ReturnValue' has a wrong offset!");

// Function Water.BuoyancyComponent.IsInWaterBody
// 0x0001 (0x0001 - 0x0000)
struct BuoyancyComponent_IsInWaterBody final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_IsInWaterBody) == 0x000001, "Wrong alignment on BuoyancyComponent_IsInWaterBody");
static_assert(sizeof(BuoyancyComponent_IsInWaterBody) == 0x000001, "Wrong size on BuoyancyComponent_IsInWaterBody");
static_assert(offsetof(BuoyancyComponent_IsInWaterBody, ReturnValue) == 0x000000, "Member 'BuoyancyComponent_IsInWaterBody::ReturnValue' has a wrong offset!");

// Function Water.BuoyancyComponent.IsOverlappingWaterBody
// 0x0001 (0x0001 - 0x0000)
struct BuoyancyComponent_IsOverlappingWaterBody final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BuoyancyComponent_IsOverlappingWaterBody) == 0x000001, "Wrong alignment on BuoyancyComponent_IsOverlappingWaterBody");
static_assert(sizeof(BuoyancyComponent_IsOverlappingWaterBody) == 0x000001, "Wrong size on BuoyancyComponent_IsOverlappingWaterBody");
static_assert(offsetof(BuoyancyComponent_IsOverlappingWaterBody, ReturnValue) == 0x000000, "Member 'BuoyancyComponent_IsOverlappingWaterBody::ReturnValue' has a wrong offset!");

// Function Water.BuoyancyManager.GetBuoyancyComponentManager
// 0x0018 (0x0018 - 0x0000)
struct BuoyancyManager_GetBuoyancyComponentManager final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABuoyancyManager*                       Manager;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BuoyancyManager_GetBuoyancyComponentManager) == 0x000008, "Wrong alignment on BuoyancyManager_GetBuoyancyComponentManager");
static_assert(sizeof(BuoyancyManager_GetBuoyancyComponentManager) == 0x000018, "Wrong size on BuoyancyManager_GetBuoyancyComponentManager");
static_assert(offsetof(BuoyancyManager_GetBuoyancyComponentManager, WorldContextObject) == 0x000000, "Member 'BuoyancyManager_GetBuoyancyComponentManager::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BuoyancyManager_GetBuoyancyComponentManager, Manager) == 0x000008, "Member 'BuoyancyManager_GetBuoyancyComponentManager::Manager' has a wrong offset!");
static_assert(offsetof(BuoyancyManager_GetBuoyancyComponentManager, ReturnValue) == 0x000010, "Member 'BuoyancyManager_GetBuoyancyComponentManager::ReturnValue' has a wrong offset!");

// Function Water.GerstnerWaterWaveGeneratorBase.GenerateGerstnerWaves
// 0x0010 (0x0010 - 0x0000)
struct GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves final
{
public:
	TArray<struct FGerstnerWave>                  OutWaves;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves) == 0x000008, "Wrong alignment on GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves");
static_assert(sizeof(GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves) == 0x000010, "Wrong size on GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves");
static_assert(offsetof(GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves, OutWaves) == 0x000000, "Member 'GerstnerWaterWaveGeneratorBase_GenerateGerstnerWaves::OutWaves' has a wrong offset!");

// Function Water.NiagaraWaterFunctionLibrary.SetWaterBody
// 0x0020 (0x0020 - 0x0000)
struct NiagaraWaterFunctionLibrary_SetWaterBody final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWaterBody*                             WaterBody;                                         // 0x0018(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraWaterFunctionLibrary_SetWaterBody) == 0x000008, "Wrong alignment on NiagaraWaterFunctionLibrary_SetWaterBody");
static_assert(sizeof(NiagaraWaterFunctionLibrary_SetWaterBody) == 0x000020, "Wrong size on NiagaraWaterFunctionLibrary_SetWaterBody");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBody, NiagaraSystem) == 0x000000, "Member 'NiagaraWaterFunctionLibrary_SetWaterBody::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBody, OverrideName) == 0x000008, "Member 'NiagaraWaterFunctionLibrary_SetWaterBody::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBody, WaterBody) == 0x000018, "Member 'NiagaraWaterFunctionLibrary_SetWaterBody::WaterBody' has a wrong offset!");

// Function Water.NiagaraWaterFunctionLibrary.SetWaterBodyComponent
// 0x0020 (0x0020 - 0x0000)
struct NiagaraWaterFunctionLibrary_SetWaterBodyComponent final
{
public:
	class UNiagaraComponent*                      NiagaraSystem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OverrideName;                                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWaterBodyComponent*                    WaterBodyComponent;                                // 0x0018(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NiagaraWaterFunctionLibrary_SetWaterBodyComponent) == 0x000008, "Wrong alignment on NiagaraWaterFunctionLibrary_SetWaterBodyComponent");
static_assert(sizeof(NiagaraWaterFunctionLibrary_SetWaterBodyComponent) == 0x000020, "Wrong size on NiagaraWaterFunctionLibrary_SetWaterBodyComponent");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBodyComponent, NiagaraSystem) == 0x000000, "Member 'NiagaraWaterFunctionLibrary_SetWaterBodyComponent::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBodyComponent, OverrideName) == 0x000008, "Member 'NiagaraWaterFunctionLibrary_SetWaterBodyComponent::OverrideName' has a wrong offset!");
static_assert(offsetof(NiagaraWaterFunctionLibrary_SetWaterBodyComponent, WaterBodyComponent) == 0x000018, "Member 'NiagaraWaterFunctionLibrary_SetWaterBodyComponent::WaterBodyComponent' has a wrong offset!");

// Function Water.WaterBody.GetRiverToLakeTransitionMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetRiverToLakeTransitionMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetRiverToLakeTransitionMaterialInstance) == 0x000008, "Wrong alignment on WaterBody_GetRiverToLakeTransitionMaterialInstance");
static_assert(sizeof(WaterBody_GetRiverToLakeTransitionMaterialInstance) == 0x000008, "Wrong size on WaterBody_GetRiverToLakeTransitionMaterialInstance");
static_assert(offsetof(WaterBody_GetRiverToLakeTransitionMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBody_GetRiverToLakeTransitionMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetRiverToOceanTransitionMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetRiverToOceanTransitionMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetRiverToOceanTransitionMaterialInstance) == 0x000008, "Wrong alignment on WaterBody_GetRiverToOceanTransitionMaterialInstance");
static_assert(sizeof(WaterBody_GetRiverToOceanTransitionMaterialInstance) == 0x000008, "Wrong size on WaterBody_GetRiverToOceanTransitionMaterialInstance");
static_assert(offsetof(WaterBody_GetRiverToOceanTransitionMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBody_GetRiverToOceanTransitionMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetWaterMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterMaterialInstance) == 0x000008, "Wrong alignment on WaterBody_GetWaterMaterialInstance");
static_assert(sizeof(WaterBody_GetWaterMaterialInstance) == 0x000008, "Wrong size on WaterBody_GetWaterMaterialInstance");
static_assert(offsetof(WaterBody_GetWaterMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBody_GetWaterMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.OnWaterBodyChanged
// 0x0002 (0x0002 - 0x0000)
struct WaterBody_OnWaterBodyChanged final
{
public:
	bool                                          bShapeOrPositionChanged;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeightmapSettingsChanged;                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_OnWaterBodyChanged) == 0x000001, "Wrong alignment on WaterBody_OnWaterBodyChanged");
static_assert(sizeof(WaterBody_OnWaterBodyChanged) == 0x000002, "Wrong size on WaterBody_OnWaterBodyChanged");
static_assert(offsetof(WaterBody_OnWaterBodyChanged, bShapeOrPositionChanged) == 0x000000, "Member 'WaterBody_OnWaterBodyChanged::bShapeOrPositionChanged' has a wrong offset!");
static_assert(offsetof(WaterBody_OnWaterBodyChanged, bWeightmapSettingsChanged) == 0x000001, "Member 'WaterBody_OnWaterBodyChanged::bWeightmapSettingsChanged' has a wrong offset!");

// Function Water.WaterBody.SetWaterMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_SetWaterMaterial final
{
public:
	class UMaterialInterface*                     InMaterial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_SetWaterMaterial) == 0x000008, "Wrong alignment on WaterBody_SetWaterMaterial");
static_assert(sizeof(WaterBody_SetWaterMaterial) == 0x000008, "Wrong size on WaterBody_SetWaterMaterial");
static_assert(offsetof(WaterBody_SetWaterMaterial, InMaterial) == 0x000000, "Member 'WaterBody_SetWaterMaterial::InMaterial' has a wrong offset!");

// Function Water.WaterBody.SetWaterWaves
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_SetWaterWaves final
{
public:
	class UWaterWavesBase*                        InWaterWaves;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_SetWaterWaves) == 0x000008, "Wrong alignment on WaterBody_SetWaterWaves");
static_assert(sizeof(WaterBody_SetWaterWaves) == 0x000008, "Wrong size on WaterBody_SetWaterWaves");
static_assert(offsetof(WaterBody_SetWaterWaves, InWaterWaves) == 0x000000, "Member 'WaterBody_SetWaterWaves::InWaterWaves' has a wrong offset!");

// Function Water.WaterBody.GetAudioIntensityAtSplineInputKey
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetAudioIntensityAtSplineInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetAudioIntensityAtSplineInputKey) == 0x000004, "Wrong alignment on WaterBody_GetAudioIntensityAtSplineInputKey");
static_assert(sizeof(WaterBody_GetAudioIntensityAtSplineInputKey) == 0x000008, "Wrong size on WaterBody_GetAudioIntensityAtSplineInputKey");
static_assert(offsetof(WaterBody_GetAudioIntensityAtSplineInputKey, InKey) == 0x000000, "Member 'WaterBody_GetAudioIntensityAtSplineInputKey::InKey' has a wrong offset!");
static_assert(offsetof(WaterBody_GetAudioIntensityAtSplineInputKey, ReturnValue) == 0x000004, "Member 'WaterBody_GetAudioIntensityAtSplineInputKey::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetExclusionVolumes
// 0x0010 (0x0010 - 0x0000)
struct WaterBody_GetExclusionVolumes final
{
public:
	TArray<class AWaterBodyExclusionVolume*>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetExclusionVolumes) == 0x000008, "Wrong alignment on WaterBody_GetExclusionVolumes");
static_assert(sizeof(WaterBody_GetExclusionVolumes) == 0x000010, "Wrong size on WaterBody_GetExclusionVolumes");
static_assert(offsetof(WaterBody_GetExclusionVolumes, ReturnValue) == 0x000000, "Member 'WaterBody_GetExclusionVolumes::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetIslands
// 0x0010 (0x0010 - 0x0000)
struct WaterBody_GetIslands final
{
public:
	TArray<class AWaterBodyIsland*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetIslands) == 0x000008, "Wrong alignment on WaterBody_GetIslands");
static_assert(sizeof(WaterBody_GetIslands) == 0x000010, "Wrong size on WaterBody_GetIslands");
static_assert(offsetof(WaterBody_GetIslands, ReturnValue) == 0x000000, "Member 'WaterBody_GetIslands::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterBodyComponent
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetWaterBodyComponent final
{
public:
	class UWaterBodyComponent*                    ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterBodyComponent) == 0x000008, "Wrong alignment on WaterBody_GetWaterBodyComponent");
static_assert(sizeof(WaterBody_GetWaterBodyComponent) == 0x000008, "Wrong size on WaterBody_GetWaterBodyComponent");
static_assert(offsetof(WaterBody_GetWaterBodyComponent, ReturnValue) == 0x000000, "Member 'WaterBody_GetWaterBodyComponent::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterBodyType
// 0x0001 (0x0001 - 0x0000)
struct WaterBody_GetWaterBodyType final
{
public:
	EWaterBodyType                                ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterBodyType) == 0x000001, "Wrong alignment on WaterBody_GetWaterBodyType");
static_assert(sizeof(WaterBody_GetWaterBodyType) == 0x000001, "Wrong size on WaterBody_GetWaterBodyType");
static_assert(offsetof(WaterBody_GetWaterBodyType, ReturnValue) == 0x000000, "Member 'WaterBody_GetWaterBodyType::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterSpline
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetWaterSpline final
{
public:
	class UWaterSplineComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterSpline) == 0x000008, "Wrong alignment on WaterBody_GetWaterSpline");
static_assert(sizeof(WaterBody_GetWaterSpline) == 0x000008, "Wrong size on WaterBody_GetWaterSpline");
static_assert(offsetof(WaterBody_GetWaterSpline, ReturnValue) == 0x000000, "Member 'WaterBody_GetWaterSpline::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterVelocityAtSplineInputKey
// 0x0008 (0x0008 - 0x0000)
struct WaterBody_GetWaterVelocityAtSplineInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterVelocityAtSplineInputKey) == 0x000004, "Wrong alignment on WaterBody_GetWaterVelocityAtSplineInputKey");
static_assert(sizeof(WaterBody_GetWaterVelocityAtSplineInputKey) == 0x000008, "Wrong size on WaterBody_GetWaterVelocityAtSplineInputKey");
static_assert(offsetof(WaterBody_GetWaterVelocityAtSplineInputKey, InKey) == 0x000000, "Member 'WaterBody_GetWaterVelocityAtSplineInputKey::InKey' has a wrong offset!");
static_assert(offsetof(WaterBody_GetWaterVelocityAtSplineInputKey, ReturnValue) == 0x000004, "Member 'WaterBody_GetWaterVelocityAtSplineInputKey::ReturnValue' has a wrong offset!");

// Function Water.WaterBody.GetWaterVelocityVectorAtSplineInputKey
// 0x0020 (0x0020 - 0x0000)
struct WaterBody_GetWaterVelocityVectorAtSplineInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBody_GetWaterVelocityVectorAtSplineInputKey) == 0x000008, "Wrong alignment on WaterBody_GetWaterVelocityVectorAtSplineInputKey");
static_assert(sizeof(WaterBody_GetWaterVelocityVectorAtSplineInputKey) == 0x000020, "Wrong size on WaterBody_GetWaterVelocityVectorAtSplineInputKey");
static_assert(offsetof(WaterBody_GetWaterVelocityVectorAtSplineInputKey, InKey) == 0x000000, "Member 'WaterBody_GetWaterVelocityVectorAtSplineInputKey::InKey' has a wrong offset!");
static_assert(offsetof(WaterBody_GetWaterVelocityVectorAtSplineInputKey, ReturnValue) == 0x000008, "Member 'WaterBody_GetWaterVelocityVectorAtSplineInputKey::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetRiverToLakeTransitionMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetRiverToLakeTransitionMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetRiverToOceanTransitionMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetRiverToOceanTransitionMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetUnderwaterPostProcessMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetUnderwaterPostProcessMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterInfoMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterInfoMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterInfoMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterInfoMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetWaterInfoMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterInfoMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetWaterInfoMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterInfoMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterLODMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterLODMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterLODMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterLODMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetWaterLODMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterLODMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetWaterLODMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterLODMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetWaterMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetWaterMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterStaticMeshMaterialInstance
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterStaticMeshMaterialInstance final
{
public:
	class UMaterialInstanceDynamic*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterStaticMeshMaterialInstance) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterStaticMeshMaterialInstance");
static_assert(sizeof(WaterBodyComponent_GetWaterStaticMeshMaterialInstance) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterStaticMeshMaterialInstance");
static_assert(offsetof(WaterBodyComponent_GetWaterStaticMeshMaterialInstance, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterStaticMeshMaterialInstance::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.OnWaterBodyChanged
// 0x0003 (0x0003 - 0x0000)
struct WaterBodyComponent_OnWaterBodyChanged final
{
public:
	bool                                          bShapeOrPositionChanged;                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWeightmapSettingsChanged;                         // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUserTriggeredChanged;                             // 0x0002(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_OnWaterBodyChanged) == 0x000001, "Wrong alignment on WaterBodyComponent_OnWaterBodyChanged");
static_assert(sizeof(WaterBodyComponent_OnWaterBodyChanged) == 0x000003, "Wrong size on WaterBodyComponent_OnWaterBodyChanged");
static_assert(offsetof(WaterBodyComponent_OnWaterBodyChanged, bShapeOrPositionChanged) == 0x000000, "Member 'WaterBodyComponent_OnWaterBodyChanged::bShapeOrPositionChanged' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_OnWaterBodyChanged, bWeightmapSettingsChanged) == 0x000001, "Member 'WaterBodyComponent_OnWaterBodyChanged::bWeightmapSettingsChanged' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_OnWaterBodyChanged, bUserTriggeredChanged) == 0x000002, "Member 'WaterBodyComponent_OnWaterBodyChanged::bUserTriggeredChanged' has a wrong offset!");

// Function Water.WaterBodyComponent.SetUnderwaterPostProcessMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_SetUnderwaterPostProcessMaterial final
{
public:
	class UMaterialInterface*                     InMaterial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_SetUnderwaterPostProcessMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_SetUnderwaterPostProcessMaterial");
static_assert(sizeof(WaterBodyComponent_SetUnderwaterPostProcessMaterial) == 0x000008, "Wrong size on WaterBodyComponent_SetUnderwaterPostProcessMaterial");
static_assert(offsetof(WaterBodyComponent_SetUnderwaterPostProcessMaterial, InMaterial) == 0x000000, "Member 'WaterBodyComponent_SetUnderwaterPostProcessMaterial::InMaterial' has a wrong offset!");

// Function Water.WaterBodyComponent.SetWaterAndUnderWaterPostProcessMaterial
// 0x0010 (0x0010 - 0x0000)
struct WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial final
{
public:
	class UMaterialInterface*                     InWaterMaterial;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     InUnderWaterPostProcessMaterial;                   // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial");
static_assert(sizeof(WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial) == 0x000010, "Wrong size on WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial");
static_assert(offsetof(WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial, InWaterMaterial) == 0x000000, "Member 'WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial::InWaterMaterial' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial, InUnderWaterPostProcessMaterial) == 0x000008, "Member 'WaterBodyComponent_SetWaterAndUnderWaterPostProcessMaterial::InUnderWaterPostProcessMaterial' has a wrong offset!");

// Function Water.WaterBodyComponent.SetWaterMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_SetWaterMaterial final
{
public:
	class UMaterialInterface*                     InMaterial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_SetWaterMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_SetWaterMaterial");
static_assert(sizeof(WaterBodyComponent_SetWaterMaterial) == 0x000008, "Wrong size on WaterBodyComponent_SetWaterMaterial");
static_assert(offsetof(WaterBodyComponent_SetWaterMaterial, InMaterial) == 0x000000, "Member 'WaterBodyComponent_SetWaterMaterial::InMaterial' has a wrong offset!");

// Function Water.WaterBodyComponent.SetWaterStaticMeshMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_SetWaterStaticMeshMaterial final
{
public:
	class UMaterialInterface*                     InMaterial;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_SetWaterStaticMeshMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_SetWaterStaticMeshMaterial");
static_assert(sizeof(WaterBodyComponent_SetWaterStaticMeshMaterial) == 0x000008, "Wrong size on WaterBodyComponent_SetWaterStaticMeshMaterial");
static_assert(offsetof(WaterBodyComponent_SetWaterStaticMeshMaterial, InMaterial) == 0x000000, "Member 'WaterBodyComponent_SetWaterStaticMeshMaterial::InMaterial' has a wrong offset!");

// Function Water.WaterBodyComponent.SetWaterZoneOverride
// 0x0028 (0x0028 - 0x0000)
struct WaterBodyComponent_SetWaterZoneOverride final
{
public:
	TSoftObjectPtr<class AWaterZone>              InWaterZoneOverride;                               // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_SetWaterZoneOverride) == 0x000008, "Wrong alignment on WaterBodyComponent_SetWaterZoneOverride");
static_assert(sizeof(WaterBodyComponent_SetWaterZoneOverride) == 0x000028, "Wrong size on WaterBodyComponent_SetWaterZoneOverride");
static_assert(offsetof(WaterBodyComponent_SetWaterZoneOverride, InWaterZoneOverride) == 0x000000, "Member 'WaterBodyComponent_SetWaterZoneOverride::InWaterZoneOverride' has a wrong offset!");

// Function Water.WaterBodyComponent.GetCollisionComponents
// 0x0018 (0x0018 - 0x0000)
struct WaterBodyComponent_GetCollisionComponents final
{
public:
	bool                                          bInOnlyEnabledComponents;                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0008(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetCollisionComponents) == 0x000008, "Wrong alignment on WaterBodyComponent_GetCollisionComponents");
static_assert(sizeof(WaterBodyComponent_GetCollisionComponents) == 0x000018, "Wrong size on WaterBodyComponent_GetCollisionComponents");
static_assert(offsetof(WaterBodyComponent_GetCollisionComponents, bInOnlyEnabledComponents) == 0x000000, "Member 'WaterBodyComponent_GetCollisionComponents::bInOnlyEnabledComponents' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetCollisionComponents, ReturnValue) == 0x000008, "Member 'WaterBodyComponent_GetCollisionComponents::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetExclusionVolumes
// 0x0010 (0x0010 - 0x0000)
struct WaterBodyComponent_GetExclusionVolumes final
{
public:
	TArray<class AWaterBodyExclusionVolume*>      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetExclusionVolumes) == 0x000008, "Wrong alignment on WaterBodyComponent_GetExclusionVolumes");
static_assert(sizeof(WaterBodyComponent_GetExclusionVolumes) == 0x000010, "Wrong size on WaterBodyComponent_GetExclusionVolumes");
static_assert(offsetof(WaterBodyComponent_GetExclusionVolumes, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetExclusionVolumes::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetIslands
// 0x0010 (0x0010 - 0x0000)
struct WaterBodyComponent_GetIslands final
{
public:
	TArray<class AWaterBodyIsland*>               ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetIslands) == 0x000008, "Wrong alignment on WaterBodyComponent_GetIslands");
static_assert(sizeof(WaterBodyComponent_GetIslands) == 0x000010, "Wrong size on WaterBodyComponent_GetIslands");
static_assert(offsetof(WaterBodyComponent_GetIslands, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetIslands::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetMaxWaveHeight
// 0x0004 (0x0004 - 0x0000)
struct WaterBodyComponent_GetMaxWaveHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetMaxWaveHeight) == 0x000004, "Wrong alignment on WaterBodyComponent_GetMaxWaveHeight");
static_assert(sizeof(WaterBodyComponent_GetMaxWaveHeight) == 0x000004, "Wrong size on WaterBodyComponent_GetMaxWaveHeight");
static_assert(offsetof(WaterBodyComponent_GetMaxWaveHeight, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetMaxWaveHeight::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetRiverToLakeTransitionMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetRiverToLakeTransitionMaterial final
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetRiverToLakeTransitionMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_GetRiverToLakeTransitionMaterial");
static_assert(sizeof(WaterBodyComponent_GetRiverToLakeTransitionMaterial) == 0x000008, "Wrong size on WaterBodyComponent_GetRiverToLakeTransitionMaterial");
static_assert(offsetof(WaterBodyComponent_GetRiverToLakeTransitionMaterial, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetRiverToLakeTransitionMaterial::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetRiverToOceanTransitionMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetRiverToOceanTransitionMaterial final
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetRiverToOceanTransitionMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_GetRiverToOceanTransitionMaterial");
static_assert(sizeof(WaterBodyComponent_GetRiverToOceanTransitionMaterial) == 0x000008, "Wrong size on WaterBodyComponent_GetRiverToOceanTransitionMaterial");
static_assert(offsetof(WaterBodyComponent_GetRiverToOceanTransitionMaterial, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetRiverToOceanTransitionMaterial::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetStandardRenderableComponents
// 0x0010 (0x0010 - 0x0000)
struct WaterBodyComponent_GetStandardRenderableComponents final
{
public:
	TArray<class UPrimitiveComponent*>            ReturnValue;                                       // 0x0000(0x0010)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetStandardRenderableComponents) == 0x000008, "Wrong alignment on WaterBodyComponent_GetStandardRenderableComponents");
static_assert(sizeof(WaterBodyComponent_GetStandardRenderableComponents) == 0x000010, "Wrong size on WaterBodyComponent_GetStandardRenderableComponents");
static_assert(offsetof(WaterBodyComponent_GetStandardRenderableComponents, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetStandardRenderableComponents::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterBodyActor
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterBodyActor final
{
public:
	class AWaterBody*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterBodyActor) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterBodyActor");
static_assert(sizeof(WaterBodyComponent_GetWaterBodyActor) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterBodyActor");
static_assert(offsetof(WaterBodyComponent_GetWaterBodyActor, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterBodyActor::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterMaterial final
{
public:
	class UMaterialInterface*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterMaterial) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterMaterial");
static_assert(sizeof(WaterBodyComponent_GetWaterMaterial) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterMaterial");
static_assert(offsetof(WaterBodyComponent_GetWaterMaterial, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterMaterial::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterSpline
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterSpline final
{
public:
	class UWaterSplineComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterSpline) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterSpline");
static_assert(sizeof(WaterBodyComponent_GetWaterSpline) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterSpline");
static_assert(offsetof(WaterBodyComponent_GetWaterSpline, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterSpline::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterSurfaceInfoAtLocation
// 0x0068 (0x0068 - 0x0000)
struct WaterBodyComponent_GetWaterSurfaceInfoAtLocation final
{
public:
	struct FVector                                InLocation;                                        // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterSurfaceLocation;                           // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterSurfaceNormal;                             // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                OutWaterVelocity;                                  // 0x0048(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         OutWaterDepth;                                     // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIncludeDepth;                                     // 0x0064(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterSurfaceInfoAtLocation");
static_assert(sizeof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation) == 0x000068, "Wrong size on WaterBodyComponent_GetWaterSurfaceInfoAtLocation");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, InLocation) == 0x000000, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::InLocation' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, OutWaterSurfaceLocation) == 0x000018, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::OutWaterSurfaceLocation' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, OutWaterSurfaceNormal) == 0x000030, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::OutWaterSurfaceNormal' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, OutWaterVelocity) == 0x000048, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::OutWaterVelocity' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, OutWaterDepth) == 0x000060, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::OutWaterDepth' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterSurfaceInfoAtLocation, bIncludeDepth) == 0x000064, "Member 'WaterBodyComponent_GetWaterSurfaceInfoAtLocation::bIncludeDepth' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterVelocityAtSplineInputKey
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterVelocityAtSplineInputKey final
{
public:
	float                                         InKey;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterVelocityAtSplineInputKey) == 0x000004, "Wrong alignment on WaterBodyComponent_GetWaterVelocityAtSplineInputKey");
static_assert(sizeof(WaterBodyComponent_GetWaterVelocityAtSplineInputKey) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterVelocityAtSplineInputKey");
static_assert(offsetof(WaterBodyComponent_GetWaterVelocityAtSplineInputKey, InKey) == 0x000000, "Member 'WaterBodyComponent_GetWaterVelocityAtSplineInputKey::InKey' has a wrong offset!");
static_assert(offsetof(WaterBodyComponent_GetWaterVelocityAtSplineInputKey, ReturnValue) == 0x000004, "Member 'WaterBodyComponent_GetWaterVelocityAtSplineInputKey::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyComponent.GetWaterWaves
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyComponent_GetWaterWaves final
{
public:
	class UWaterWavesBase*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyComponent_GetWaterWaves) == 0x000008, "Wrong alignment on WaterBodyComponent_GetWaterWaves");
static_assert(sizeof(WaterBodyComponent_GetWaterWaves) == 0x000008, "Wrong size on WaterBodyComponent_GetWaterWaves");
static_assert(offsetof(WaterBodyComponent_GetWaterWaves, ReturnValue) == 0x000000, "Member 'WaterBodyComponent_GetWaterWaves::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyIsland.GetWaterSpline
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyIsland_GetWaterSpline final
{
public:
	class UWaterSplineComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyIsland_GetWaterSpline) == 0x000008, "Wrong alignment on WaterBodyIsland_GetWaterSpline");
static_assert(sizeof(WaterBodyIsland_GetWaterSpline) == 0x000008, "Wrong size on WaterBodyIsland_GetWaterSpline");
static_assert(offsetof(WaterBodyIsland_GetWaterSpline, ReturnValue) == 0x000000, "Member 'WaterBodyIsland_GetWaterSpline::ReturnValue' has a wrong offset!");

// Function Water.WaterBodyRiverComponent.SetLakeAndOceanTransitionMaterials
// 0x0010 (0x0010 - 0x0000)
struct WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials final
{
public:
	class UMaterialInterface*                     InLakeTransition;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     InOceanTransition;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials) == 0x000008, "Wrong alignment on WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials");
static_assert(sizeof(WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials) == 0x000010, "Wrong size on WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials");
static_assert(offsetof(WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials, InLakeTransition) == 0x000000, "Member 'WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials::InLakeTransition' has a wrong offset!");
static_assert(offsetof(WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials, InOceanTransition) == 0x000008, "Member 'WaterBodyRiverComponent_SetLakeAndOceanTransitionMaterials::InOceanTransition' has a wrong offset!");

// Function Water.WaterBodyRiverComponent.SetLakeTransitionMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyRiverComponent_SetLakeTransitionMaterial final
{
public:
	class UMaterialInterface*                     InMat;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyRiverComponent_SetLakeTransitionMaterial) == 0x000008, "Wrong alignment on WaterBodyRiverComponent_SetLakeTransitionMaterial");
static_assert(sizeof(WaterBodyRiverComponent_SetLakeTransitionMaterial) == 0x000008, "Wrong size on WaterBodyRiverComponent_SetLakeTransitionMaterial");
static_assert(offsetof(WaterBodyRiverComponent_SetLakeTransitionMaterial, InMat) == 0x000000, "Member 'WaterBodyRiverComponent_SetLakeTransitionMaterial::InMat' has a wrong offset!");

// Function Water.WaterBodyRiverComponent.SetOceanTransitionMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterBodyRiverComponent_SetOceanTransitionMaterial final
{
public:
	class UMaterialInterface*                     InMat;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterBodyRiverComponent_SetOceanTransitionMaterial) == 0x000008, "Wrong alignment on WaterBodyRiverComponent_SetOceanTransitionMaterial");
static_assert(sizeof(WaterBodyRiverComponent_SetOceanTransitionMaterial) == 0x000008, "Wrong size on WaterBodyRiverComponent_SetOceanTransitionMaterial");
static_assert(offsetof(WaterBodyRiverComponent_SetOceanTransitionMaterial, InMat) == 0x000000, "Member 'WaterBodyRiverComponent_SetOceanTransitionMaterial::InMat' has a wrong offset!");

// Function Water.WaterMeshComponent.IsEnabled
// 0x0001 (0x0001 - 0x0000)
struct WaterMeshComponent_IsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterMeshComponent_IsEnabled) == 0x000001, "Wrong alignment on WaterMeshComponent_IsEnabled");
static_assert(sizeof(WaterMeshComponent_IsEnabled) == 0x000001, "Wrong size on WaterMeshComponent_IsEnabled");
static_assert(offsetof(WaterMeshComponent_IsEnabled, ReturnValue) == 0x000000, "Member 'WaterMeshComponent_IsEnabled::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetShallowWaterMaxDynamicForces
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetShallowWaterMaxDynamicForces final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetShallowWaterMaxDynamicForces) == 0x000004, "Wrong alignment on WaterSubsystem_GetShallowWaterMaxDynamicForces");
static_assert(sizeof(WaterSubsystem_GetShallowWaterMaxDynamicForces) == 0x000004, "Wrong size on WaterSubsystem_GetShallowWaterMaxDynamicForces");
static_assert(offsetof(WaterSubsystem_GetShallowWaterMaxDynamicForces, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetShallowWaterMaxDynamicForces::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetShallowWaterMaxImpulseForces
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetShallowWaterMaxImpulseForces final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetShallowWaterMaxImpulseForces) == 0x000004, "Wrong alignment on WaterSubsystem_GetShallowWaterMaxImpulseForces");
static_assert(sizeof(WaterSubsystem_GetShallowWaterMaxImpulseForces) == 0x000004, "Wrong size on WaterSubsystem_GetShallowWaterMaxImpulseForces");
static_assert(offsetof(WaterSubsystem_GetShallowWaterMaxImpulseForces, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetShallowWaterMaxImpulseForces::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetShallowWaterSimulationRenderTargetSize
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetShallowWaterSimulationRenderTargetSize final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetShallowWaterSimulationRenderTargetSize) == 0x000004, "Wrong alignment on WaterSubsystem_GetShallowWaterSimulationRenderTargetSize");
static_assert(sizeof(WaterSubsystem_GetShallowWaterSimulationRenderTargetSize) == 0x000004, "Wrong size on WaterSubsystem_GetShallowWaterSimulationRenderTargetSize");
static_assert(offsetof(WaterSubsystem_GetShallowWaterSimulationRenderTargetSize, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetShallowWaterSimulationRenderTargetSize::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.PrintToWaterLog
// 0x0018 (0x0018 - 0x0000)
struct WaterSubsystem_PrintToWaterLog final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWarning;                                          // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(WaterSubsystem_PrintToWaterLog) == 0x000008, "Wrong alignment on WaterSubsystem_PrintToWaterLog");
static_assert(sizeof(WaterSubsystem_PrintToWaterLog) == 0x000018, "Wrong size on WaterSubsystem_PrintToWaterLog");
static_assert(offsetof(WaterSubsystem_PrintToWaterLog, Message) == 0x000000, "Member 'WaterSubsystem_PrintToWaterLog::Message' has a wrong offset!");
static_assert(offsetof(WaterSubsystem_PrintToWaterLog, bWarning) == 0x000010, "Member 'WaterSubsystem_PrintToWaterLog::bWarning' has a wrong offset!");

// Function Water.WaterSubsystem.SetOceanFloodHeight
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_SetOceanFloodHeight final
{
public:
	float                                         InFloodHeight;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_SetOceanFloodHeight) == 0x000004, "Wrong alignment on WaterSubsystem_SetOceanFloodHeight");
static_assert(sizeof(WaterSubsystem_SetOceanFloodHeight) == 0x000004, "Wrong size on WaterSubsystem_SetOceanFloodHeight");
static_assert(offsetof(WaterSubsystem_SetOceanFloodHeight, InFloodHeight) == 0x000000, "Member 'WaterSubsystem_SetOceanFloodHeight::InFloodHeight' has a wrong offset!");

// Function Water.WaterSubsystem.GetCameraUnderwaterDepth
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetCameraUnderwaterDepth final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetCameraUnderwaterDepth) == 0x000004, "Wrong alignment on WaterSubsystem_GetCameraUnderwaterDepth");
static_assert(sizeof(WaterSubsystem_GetCameraUnderwaterDepth) == 0x000004, "Wrong size on WaterSubsystem_GetCameraUnderwaterDepth");
static_assert(offsetof(WaterSubsystem_GetCameraUnderwaterDepth, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetCameraUnderwaterDepth::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetOceanBaseHeight
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetOceanBaseHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetOceanBaseHeight) == 0x000004, "Wrong alignment on WaterSubsystem_GetOceanBaseHeight");
static_assert(sizeof(WaterSubsystem_GetOceanBaseHeight) == 0x000004, "Wrong size on WaterSubsystem_GetOceanBaseHeight");
static_assert(offsetof(WaterSubsystem_GetOceanBaseHeight, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetOceanBaseHeight::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetOceanFloodHeight
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetOceanFloodHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetOceanFloodHeight) == 0x000004, "Wrong alignment on WaterSubsystem_GetOceanFloodHeight");
static_assert(sizeof(WaterSubsystem_GetOceanFloodHeight) == 0x000004, "Wrong size on WaterSubsystem_GetOceanFloodHeight");
static_assert(offsetof(WaterSubsystem_GetOceanFloodHeight, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetOceanFloodHeight::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetOceanTotalHeight
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetOceanTotalHeight final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetOceanTotalHeight) == 0x000004, "Wrong alignment on WaterSubsystem_GetOceanTotalHeight");
static_assert(sizeof(WaterSubsystem_GetOceanTotalHeight) == 0x000004, "Wrong size on WaterSubsystem_GetOceanTotalHeight");
static_assert(offsetof(WaterSubsystem_GetOceanTotalHeight, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetOceanTotalHeight::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetSmoothedWorldTimeSeconds
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetSmoothedWorldTimeSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetSmoothedWorldTimeSeconds) == 0x000004, "Wrong alignment on WaterSubsystem_GetSmoothedWorldTimeSeconds");
static_assert(sizeof(WaterSubsystem_GetSmoothedWorldTimeSeconds) == 0x000004, "Wrong size on WaterSubsystem_GetSmoothedWorldTimeSeconds");
static_assert(offsetof(WaterSubsystem_GetSmoothedWorldTimeSeconds, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetSmoothedWorldTimeSeconds::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.GetWaterTimeSeconds
// 0x0004 (0x0004 - 0x0000)
struct WaterSubsystem_GetWaterTimeSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_GetWaterTimeSeconds) == 0x000004, "Wrong alignment on WaterSubsystem_GetWaterTimeSeconds");
static_assert(sizeof(WaterSubsystem_GetWaterTimeSeconds) == 0x000004, "Wrong size on WaterSubsystem_GetWaterTimeSeconds");
static_assert(offsetof(WaterSubsystem_GetWaterTimeSeconds, ReturnValue) == 0x000000, "Member 'WaterSubsystem_GetWaterTimeSeconds::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.IsShallowWaterSimulationEnabled
// 0x0001 (0x0001 - 0x0000)
struct WaterSubsystem_IsShallowWaterSimulationEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_IsShallowWaterSimulationEnabled) == 0x000001, "Wrong alignment on WaterSubsystem_IsShallowWaterSimulationEnabled");
static_assert(sizeof(WaterSubsystem_IsShallowWaterSimulationEnabled) == 0x000001, "Wrong size on WaterSubsystem_IsShallowWaterSimulationEnabled");
static_assert(offsetof(WaterSubsystem_IsShallowWaterSimulationEnabled, ReturnValue) == 0x000000, "Member 'WaterSubsystem_IsShallowWaterSimulationEnabled::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.IsUnderwaterPostProcessEnabled
// 0x0001 (0x0001 - 0x0000)
struct WaterSubsystem_IsUnderwaterPostProcessEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_IsUnderwaterPostProcessEnabled) == 0x000001, "Wrong alignment on WaterSubsystem_IsUnderwaterPostProcessEnabled");
static_assert(sizeof(WaterSubsystem_IsUnderwaterPostProcessEnabled) == 0x000001, "Wrong size on WaterSubsystem_IsUnderwaterPostProcessEnabled");
static_assert(offsetof(WaterSubsystem_IsUnderwaterPostProcessEnabled, ReturnValue) == 0x000000, "Member 'WaterSubsystem_IsUnderwaterPostProcessEnabled::ReturnValue' has a wrong offset!");

// Function Water.WaterSubsystem.IsWaterRenderingEnabled
// 0x0001 (0x0001 - 0x0000)
struct WaterSubsystem_IsWaterRenderingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterSubsystem_IsWaterRenderingEnabled) == 0x000001, "Wrong alignment on WaterSubsystem_IsWaterRenderingEnabled");
static_assert(sizeof(WaterSubsystem_IsWaterRenderingEnabled) == 0x000001, "Wrong size on WaterSubsystem_IsWaterRenderingEnabled");
static_assert(offsetof(WaterSubsystem_IsWaterRenderingEnabled, ReturnValue) == 0x000000, "Member 'WaterSubsystem_IsWaterRenderingEnabled::ReturnValue' has a wrong offset!");

// Function Water.WaterZone.SetFarMeshMaterial
// 0x0008 (0x0008 - 0x0000)
struct WaterZone_SetFarMeshMaterial final
{
public:
	class UMaterialInterface*                     InFarMaterial;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterZone_SetFarMeshMaterial) == 0x000008, "Wrong alignment on WaterZone_SetFarMeshMaterial");
static_assert(sizeof(WaterZone_SetFarMeshMaterial) == 0x000008, "Wrong size on WaterZone_SetFarMeshMaterial");
static_assert(offsetof(WaterZone_SetFarMeshMaterial, InFarMaterial) == 0x000000, "Member 'WaterZone_SetFarMeshMaterial::InFarMaterial' has a wrong offset!");

// Function Water.WaterZone.GetWaterZoneIndex
// 0x0004 (0x0004 - 0x0000)
struct WaterZone_GetWaterZoneIndex final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(WaterZone_GetWaterZoneIndex) == 0x000004, "Wrong alignment on WaterZone_GetWaterZoneIndex");
static_assert(sizeof(WaterZone_GetWaterZoneIndex) == 0x000004, "Wrong size on WaterZone_GetWaterZoneIndex");
static_assert(offsetof(WaterZone_GetWaterZoneIndex, ReturnValue) == 0x000000, "Member 'WaterZone_GetWaterZoneIndex::ReturnValue' has a wrong offset!");

}

