#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_InstrumentManager

#include "Basic.hpp"

#include "S_InstrumentTracks_structs.hpp"
#include "E_InstrumentTypes_structs.hpp"


namespace SDK::Params
{

// Function B_InstrumentManager.B_InstrumentManager_C.AddToMusic
// 0x0010 (0x0010 - 0x0000)
struct B_InstrumentManager_C_AddToMusic final
{
public:
	class FString                                 InstrumentName;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InstrumentManager_C_AddToMusic) == 0x000008, "Wrong alignment on B_InstrumentManager_C_AddToMusic");
static_assert(sizeof(B_InstrumentManager_C_AddToMusic) == 0x000010, "Wrong size on B_InstrumentManager_C_AddToMusic");
static_assert(offsetof(B_InstrumentManager_C_AddToMusic, InstrumentName) == 0x000000, "Member 'B_InstrumentManager_C_AddToMusic::InstrumentName' has a wrong offset!");

// Function B_InstrumentManager.B_InstrumentManager_C.ExecuteUbergraph_B_InstrumentManager
// 0x0078 (0x0078 - 0x0000)
struct B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3925[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3926[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InstrumentName;                 // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InstrumentTypes                             Temp_byte_Variable;                                // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3927[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InstrumentName_1;               // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_InstrumentTracks                    CallFunc_Map_Find_Value;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3928[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager) == 0x000008, "Wrong alignment on B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager");
static_assert(sizeof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager) == 0x000078, "Wrong size on B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, EntryPoint) == 0x000000, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, K2Node_CustomEvent_InstrumentName) == 0x000010, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::K2Node_CustomEvent_InstrumentName' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, Temp_int_Variable) == 0x000024, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, Temp_byte_Variable) == 0x000028, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, K2Node_CustomEvent_InstrumentName_1) == 0x000030, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::K2Node_CustomEvent_InstrumentName_1' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Map_Find_Value) == 0x000040, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager, CallFunc_Percent_IntInt_ReturnValue) == 0x000070, "Member 'B_InstrumentManager_C_ExecuteUbergraph_B_InstrumentManager::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function B_InstrumentManager.B_InstrumentManager_C.OnRep_IsMusicPlaying
// 0x0010 (0x0010 - 0x0000)
struct B_InstrumentManager_C_OnRep_IsMusicPlaying final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3929[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InstrumentManager_C_OnRep_IsMusicPlaying) == 0x000008, "Wrong alignment on B_InstrumentManager_C_OnRep_IsMusicPlaying");
static_assert(sizeof(B_InstrumentManager_C_OnRep_IsMusicPlaying) == 0x000010, "Wrong size on B_InstrumentManager_C_OnRep_IsMusicPlaying");
static_assert(offsetof(B_InstrumentManager_C_OnRep_IsMusicPlaying, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'B_InstrumentManager_C_OnRep_IsMusicPlaying::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_OnRep_IsMusicPlaying, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'B_InstrumentManager_C_OnRep_IsMusicPlaying::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_OnRep_IsMusicPlaying, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'B_InstrumentManager_C_OnRep_IsMusicPlaying::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function B_InstrumentManager.B_InstrumentManager_C.RemoveAndCheckIfMusicStillPlaying
// 0x0014 (0x0014 - 0x0000)
struct B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying final
{
public:
	bool                                          NoOnePlaying;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392A[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying) == 0x000004, "Wrong alignment on B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying");
static_assert(sizeof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying) == 0x000014, "Wrong size on B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, NoOnePlaying) == 0x000000, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::NoOnePlaying' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, Temp_bool_Variable) == 0x000001, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, Temp_int_Variable) == 0x000004, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, K2Node_Select_Default) == 0x00000C, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'B_InstrumentManager_C_RemoveAndCheckIfMusicStillPlaying::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_InstrumentManager.B_InstrumentManager_C.RemoveFromMusic
// 0x0010 (0x0010 - 0x0000)
struct B_InstrumentManager_C_RemoveFromMusic final
{
public:
	class FString                                 InstrumentName;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_InstrumentManager_C_RemoveFromMusic) == 0x000008, "Wrong alignment on B_InstrumentManager_C_RemoveFromMusic");
static_assert(sizeof(B_InstrumentManager_C_RemoveFromMusic) == 0x000010, "Wrong size on B_InstrumentManager_C_RemoveFromMusic");
static_assert(offsetof(B_InstrumentManager_C_RemoveFromMusic, InstrumentName) == 0x000000, "Member 'B_InstrumentManager_C_RemoveFromMusic::InstrumentName' has a wrong offset!");

}

