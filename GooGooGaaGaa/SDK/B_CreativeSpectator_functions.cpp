#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativeSpectator

#include "Basic.hpp"

#include "B_CreativeSpectator_classes.hpp"
#include "B_CreativeSpectator_parameters.hpp"


namespace SDK
{

// Function B_CreativeSpectator.B_CreativeSpectator_C.ClientPossessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::ClientPossessed(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "ClientPossessed");

	Params::B_CreativeSpectator_C_ClientPossessed Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.ExecuteUbergraph_B_CreativeSpectator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::ExecuteUbergraph_B_CreativeSpectator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "ExecuteUbergraph_B_CreativeSpectator");

	Params::B_CreativeSpectator_C_ExecuteUbergraph_B_CreativeSpectator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.HandlePlayerJoin
// (BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::HandlePlayerJoin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "HandlePlayerJoin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.InitializePlayername
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::InitializePlayername()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "InitializePlayername");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.InpActEvt_Crouch_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_CreativeSpectator_C::InpActEvt_Crouch_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "InpActEvt_Crouch_K2Node_InputActionEvent_0");

	Params::B_CreativeSpectator_C_InpActEvt_Crouch_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.InpActEvt_SwitchCamera_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_CreativeSpectator_C::InpActEvt_SwitchCamera_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "InpActEvt_SwitchCamera_K2Node_InputActionEvent_1");

	Params::B_CreativeSpectator_C_InpActEvt_SwitchCamera_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.OnCompleteExportScrennshotToDisk
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::OnCompleteExportScrennshotToDisk(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "OnCompleteExportScrennshotToDisk");

	Params::B_CreativeSpectator_C_OnCompleteExportScrennshotToDisk Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.OnCompleteExportThumbnailToDisk
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::OnCompleteExportThumbnailToDisk(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "OnCompleteExportThumbnailToDisk");

	Params::B_CreativeSpectator_C_OnCompleteExportThumbnailToDisk Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AB_CreativeSpectator_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "ReceivePossessed");

	Params::B_CreativeSpectator_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_CreativeSpectator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "ReceiveTick");

	Params::B_CreativeSpectator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.SetCameraView
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::SetCameraView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "SetCameraView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.SetScreenshotHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::SetScreenshotHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "SetScreenshotHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.SetupInputAndDefaultHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::SetupInputAndDefaultHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "SetupInputAndDefaultHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.TakeScreenshot
// (BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::TakeScreenshot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "TakeScreenshot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.TickHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::TickHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "TickHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_CreativeSpectator.B_CreativeSpectator_C.TickMovement
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_CreativeSpectator_C::TickMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_CreativeSpectator_C", "TickMovement");

	UObject::ProcessEvent(Func, nullptr);
}

}

