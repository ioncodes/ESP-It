#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RecentlyPlayed

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_RecentlyPlayed.WB_RecentlyPlayed_C
// 0x0070 (0x0330 - 0x02C0)
class UWB_RecentlyPlayed_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCircularThrobber*                      CircularThrobber;                                  // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UListView*                              RecentlyPlayedList;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox;                                         // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<struct FUniqueNetIdRepl, class UB_OnlineUserEntryData_C*> RecentPlayerEntries;                               // 0x02E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AcceptButtonPressed();
	void AddListItemsSorted(TArray<class UOnlineRecentPlayerRef*>& NewPlayers);
	void Construct();
	void Deinit();
	void ExecuteUbergraph_WB_RecentlyPlayed(int32 EntryPoint);
	void GetCurrentlyFocusedWidget(class UWidget** FocusedWidget);
	void GetSelectedEntry(class UWB_OnlineUserEntry_C** ListEntry);
	void Init();
	void PresenceUpdated();
	void RecentPlayerComparator(class UObject* ObjectA, class UObject* ObjectB, bool* Result);
	void RefreshRecentPlayers();
	void ScrollToSelectedItem();
	void SelectionChanged(class UObject* Item, bool bIsSelected);
	void SetItemFocus(bool ResetFocus);
	void SpecialButtonPressed();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_RecentlyPlayed_C">();
	}
	static class UWB_RecentlyPlayed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_RecentlyPlayed_C>();
	}
};
static_assert(alignof(UWB_RecentlyPlayed_C) == 0x000008, "Wrong alignment on UWB_RecentlyPlayed_C");
static_assert(sizeof(UWB_RecentlyPlayed_C) == 0x000330, "Wrong size on UWB_RecentlyPlayed_C");
static_assert(offsetof(UWB_RecentlyPlayed_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_RecentlyPlayed_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_RecentlyPlayed_C, CircularThrobber) == 0x0002C8, "Member 'UWB_RecentlyPlayed_C::CircularThrobber' has a wrong offset!");
static_assert(offsetof(UWB_RecentlyPlayed_C, RecentlyPlayedList) == 0x0002D0, "Member 'UWB_RecentlyPlayed_C::RecentlyPlayedList' has a wrong offset!");
static_assert(offsetof(UWB_RecentlyPlayed_C, ScrollBox) == 0x0002D8, "Member 'UWB_RecentlyPlayed_C::ScrollBox' has a wrong offset!");
static_assert(offsetof(UWB_RecentlyPlayed_C, RecentPlayerEntries) == 0x0002E0, "Member 'UWB_RecentlyPlayed_C::RecentPlayerEntries' has a wrong offset!");

}

