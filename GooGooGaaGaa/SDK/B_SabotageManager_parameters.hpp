#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SabotageManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_SabotageManager.B_SabotageManager_C.Initialize
// 0x0010 (0x0010 - 0x0000)
struct B_SabotageManager_C_Initialize final
{
public:
	TArray<class AB_SabotageActor_C*>             SabotageActors;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_SabotageManager_C_Initialize) == 0x000008, "Wrong alignment on B_SabotageManager_C_Initialize");
static_assert(sizeof(B_SabotageManager_C_Initialize) == 0x000010, "Wrong size on B_SabotageManager_C_Initialize");
static_assert(offsetof(B_SabotageManager_C_Initialize, SabotageActors) == 0x000000, "Member 'B_SabotageManager_C_Initialize::SabotageActors' has a wrong offset!");

// Function B_SabotageManager.B_SabotageManager_C.IsAnyGlobalSabotageActive
// 0x0020 (0x0020 - 0x0000)
struct B_SabotageManager_C_IsAnyGlobalSabotageActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_SabotageActor_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SabotageManager_C_IsAnyGlobalSabotageActive) == 0x000008, "Wrong alignment on B_SabotageManager_C_IsAnyGlobalSabotageActive");
static_assert(sizeof(B_SabotageManager_C_IsAnyGlobalSabotageActive) == 0x000020, "Wrong size on B_SabotageManager_C_IsAnyGlobalSabotageActive");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, ReturnValue) == 0x000000, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_Less_IntInt_ReturnValue) == 0x00001C, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_IsActive_ReturnValue) == 0x00001D, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnyGlobalSabotageActive, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'B_SabotageManager_C_IsAnyGlobalSabotageActive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_SabotageManager.B_SabotageManager_C.IsAnySabotageActive
// 0x0020 (0x0020 - 0x0000)
struct B_SabotageManager_C_IsAnySabotageActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_SabotageActor_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SabotageManager_C_IsAnySabotageActive) == 0x000008, "Wrong alignment on B_SabotageManager_C_IsAnySabotageActive");
static_assert(sizeof(B_SabotageManager_C_IsAnySabotageActive) == 0x000020, "Wrong size on B_SabotageManager_C_IsAnySabotageActive");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, ReturnValue) == 0x000000, "Member 'B_SabotageManager_C_IsAnySabotageActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_SabotageManager_C_IsAnySabotageActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_SabotageManager_C_IsAnySabotageActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_SabotageManager_C_IsAnySabotageActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_SabotageManager_C_IsAnySabotageActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'B_SabotageManager_C_IsAnySabotageActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, CallFunc_IsActive_ReturnValue) == 0x00001C, "Member 'B_SabotageManager_C_IsAnySabotageActive::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_IsAnySabotageActive, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'B_SabotageManager_C_IsAnySabotageActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_SabotageManager.B_SabotageManager_C.TriggerGlobalCooldowns
// 0x0028 (0x0028 - 0x0000)
struct B_SabotageManager_C_TriggerGlobalCooldowns final
{
public:
	class AB_SabotageActor_C*                     CurrentSabotage;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SabotageActor_C*                     CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_SabotageManager_C_TriggerGlobalCooldowns) == 0x000008, "Wrong alignment on B_SabotageManager_C_TriggerGlobalCooldowns");
static_assert(sizeof(B_SabotageManager_C_TriggerGlobalCooldowns) == 0x000028, "Wrong size on B_SabotageManager_C_TriggerGlobalCooldowns");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, CurrentSabotage) == 0x000000, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::CurrentSabotage' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_SabotageManager_C_TriggerGlobalCooldowns, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'B_SabotageManager_C_TriggerGlobalCooldowns::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

