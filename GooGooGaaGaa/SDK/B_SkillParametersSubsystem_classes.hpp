#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkillParametersSubsystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"
#include "E_SkillRuleType_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SkillParametersSubsystem.B_SkillParametersSubsystem_C
// 0x00E8 (0x0118 - 0x0030)
class UB_SkillParametersSubsystem_C final : public UParametersSubsystem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_ChickenParameters_C*                 Chicken;                                           // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_HookParameters_C*                    Hook;                                              // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_CannonballParameters_C*              Cannonball;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_GarlicParameters_C*                  Garlic;                                            // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_TrapParameters_C*                    Trap;                                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_PowerBallParameters_C*               PowerBall;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_DecoyParameters_C*                   Decoy;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_MushroomParameters_C*                Mushroom;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_FlyParameters_C*                     Fly;                                               // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_JumpScareParameters_C*               JumpScare;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_PossessParameters_C*                 Possess;                                           // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_FlyingEyeParameters_C*               FlyingEye;                                         // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_PotatoParameters_C*                  Potato;                                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_MeleeParameters_C*                   Melee;                                             // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UB_TrainParameters_C*                   Train;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<E_SkillRuleType, class USkillParameters*> Skills;                                            // 0x00B0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             SkillRulesUpdated;                                 // 0x0100(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          UsingCustomRules;                                  // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SkillRulesUpdated__DelegateSignature();
	void ApplyGameModeOverrides(class UClass* GameModeClass);
	void ApplyObjectiveModeOverrides();
	void ApplySkillRules(TArray<struct FS_SkillRules>& SkillRules, class UClass* GameMode);
	void ExecuteUbergraph_B_SkillParametersSubsystem(int32 EntryPoint);
	void GetAllSkillClasses(TArray<class UClass*>* SkillClasses);
	void GetDefaultSkillParameterValue(E_SkillRuleType SkillType, const struct FUIParameterData& UIPameter, struct FUIParam* DefaultValue);
	void GetFloatValueByName(E_SkillRuleType SkillType, class FName FloatName, double* Value);
	void GetSkillCooldown(E_SkillRuleType SkillType, ETeamID PlayerType, double* Cooldown);
	void GetSkillTooltip(class UB_BaseSkill_C* Skill, class FText* ToolTip);
	void GetUIParameters(E_SkillRuleType SkillType, TArray<struct FUIParameterData>* UIParameters);
	void InitializeDefaultSkills();
	void InitializeSubsystem();
	void IsSkillListed(class UClass* Skill, bool* IsListed);
	void IsSkillUsingRules(E_SkillRuleType SkillType, bool* IsUsingRules);
	void IsUsingCustomRules(bool* CustomRules);
	TArray<class AActor*> SpawnProjectileSkill(class UClass* Param_Class, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigator, int32 NumberOfProjectiles, double ProjectileSpread);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SkillParametersSubsystem_C">();
	}
	static class UB_SkillParametersSubsystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_SkillParametersSubsystem_C>();
	}
};
static_assert(alignof(UB_SkillParametersSubsystem_C) == 0x000008, "Wrong alignment on UB_SkillParametersSubsystem_C");
static_assert(sizeof(UB_SkillParametersSubsystem_C) == 0x000118, "Wrong size on UB_SkillParametersSubsystem_C");
static_assert(offsetof(UB_SkillParametersSubsystem_C, UberGraphFrame) == 0x000030, "Member 'UB_SkillParametersSubsystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Chicken) == 0x000038, "Member 'UB_SkillParametersSubsystem_C::Chicken' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Hook) == 0x000040, "Member 'UB_SkillParametersSubsystem_C::Hook' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Cannonball) == 0x000048, "Member 'UB_SkillParametersSubsystem_C::Cannonball' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Garlic) == 0x000050, "Member 'UB_SkillParametersSubsystem_C::Garlic' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Trap) == 0x000058, "Member 'UB_SkillParametersSubsystem_C::Trap' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, PowerBall) == 0x000060, "Member 'UB_SkillParametersSubsystem_C::PowerBall' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Decoy) == 0x000068, "Member 'UB_SkillParametersSubsystem_C::Decoy' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Mushroom) == 0x000070, "Member 'UB_SkillParametersSubsystem_C::Mushroom' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Fly) == 0x000078, "Member 'UB_SkillParametersSubsystem_C::Fly' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, JumpScare) == 0x000080, "Member 'UB_SkillParametersSubsystem_C::JumpScare' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Possess) == 0x000088, "Member 'UB_SkillParametersSubsystem_C::Possess' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, FlyingEye) == 0x000090, "Member 'UB_SkillParametersSubsystem_C::FlyingEye' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Potato) == 0x000098, "Member 'UB_SkillParametersSubsystem_C::Potato' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Melee) == 0x0000A0, "Member 'UB_SkillParametersSubsystem_C::Melee' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Train) == 0x0000A8, "Member 'UB_SkillParametersSubsystem_C::Train' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, Skills) == 0x0000B0, "Member 'UB_SkillParametersSubsystem_C::Skills' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, SkillRulesUpdated) == 0x000100, "Member 'UB_SkillParametersSubsystem_C::SkillRulesUpdated' has a wrong offset!");
static_assert(offsetof(UB_SkillParametersSubsystem_C, UsingCustomRules) == 0x000110, "Member 'UB_SkillParametersSubsystem_C::UsingCustomRules' has a wrong offset!");

}

