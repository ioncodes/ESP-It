#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_JumpScareGhost

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_JumpScareGhost.B_JumpScareGhost_C.BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_JumpScareGhost_C_BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.CanTeleport
// 0x0002 (0x0002 - 0x0000)
struct B_JumpScareGhost_C_CanTeleport final
{
public:
	bool                                          CanTeleport_0;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_CanTeleport) == 0x000001, "Wrong alignment on B_JumpScareGhost_C_CanTeleport");
static_assert(sizeof(B_JumpScareGhost_C_CanTeleport) == 0x000002, "Wrong size on B_JumpScareGhost_C_CanTeleport");
static_assert(offsetof(B_JumpScareGhost_C_CanTeleport, CanTeleport_0) == 0x000000, "Member 'B_JumpScareGhost_C_CanTeleport::CanTeleport_0' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_CanTeleport, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'B_JumpScareGhost_C_CanTeleport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.ExecuteUbergraph_B_JumpScareGhost
// 0x0148 (0x0148 - 0x0000)
struct B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost");
static_assert(sizeof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost) == 0x000148, "Wrong size on B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, EntryPoint) == 0x000000, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, CallFunc_HasAuthority_ReturnValue) == 0x000120, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000128, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost, K2Node_Event_DeltaSeconds) == 0x000140, "Member 'B_JumpScareGhost_C_ExecuteUbergraph_B_JumpScareGhost::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.HandleOverlap
// 0x0088 (0x0088 - 0x0000)
struct B_JumpScareGhost_C_HandleOverlap final
{
public:
	class UObject*                                Overlapping_Actor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            OverlappingHunter;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PowerBall_C*                         K2Node_DynamicCast_AsB_Power_Ball;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_HandleOverlap) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_HandleOverlap");
static_assert(sizeof(B_JumpScareGhost_C_HandleOverlap) == 0x000088, "Wrong size on B_JumpScareGhost_C_HandleOverlap");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, Overlapping_Actor) == 0x000000, "Member 'B_JumpScareGhost_C_HandleOverlap::Overlapping_Actor' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, OverlappingHunter) == 0x000008, "Member 'B_JumpScareGhost_C_HandleOverlap::OverlappingHunter' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x000021, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_AsB_Hunter) == 0x000028, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_AsB_Power_Ball) == 0x000038, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_AsB_Power_Ball' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_GetObjectClass_ReturnValue_1) == 0x000050, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_ClassIsChildOf_ReturnValue) == 0x000058, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000059, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_Not_PreBool_ReturnValue) == 0x00005A, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_AsB_Player_Controller) == 0x000068, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'B_JumpScareGhost_C_HandleOverlap::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000078, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_HandleOverlap, CallFunc_FClamp_ReturnValue) == 0x000080, "Member 'B_JumpScareGhost_C_HandleOverlap::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.InitializeRules
// 0x0008 (0x0008 - 0x0000)
struct B_JumpScareGhost_C_InitializeRules final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_InitializeRules) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_InitializeRules");
static_assert(sizeof(B_JumpScareGhost_C_InitializeRules) == 0x000008, "Wrong size on B_JumpScareGhost_C_InitializeRules");
static_assert(offsetof(B_JumpScareGhost_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_JumpScareGhost_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_JumpScareGhost_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_ReceiveTick) == 0x000004, "Wrong alignment on B_JumpScareGhost_C_ReceiveTick");
static_assert(sizeof(B_JumpScareGhost_C_ReceiveTick) == 0x000004, "Wrong size on B_JumpScareGhost_C_ReceiveTick");
static_assert(offsetof(B_JumpScareGhost_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_JumpScareGhost_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.SetLuaqVisibilityForHunters
// 0x0030 (0x0030 - 0x0000)
struct B_JumpScareGhost_C_SetLuaqVisibilityForHunters final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_PlayerController; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_SetLuaqVisibilityForHunters");
static_assert(sizeof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters) == 0x000030, "Wrong size on B_JumpScareGhost_C_SetLuaqVisibilityForHunters");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, CallFunc_GetFirstLocalPlayerController_PlayerController) == 0x000018, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::CallFunc_GetFirstLocalPlayerController_PlayerController' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, K2Node_DynamicCast_AsB_Player_State) == 0x000020, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_SetLuaqVisibilityForHunters, CallFunc_IsDedicatedServer_ReturnValue) == 0x00002A, "Member 'B_JumpScareGhost_C_SetLuaqVisibilityForHunters::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.TearDown
// 0x0020 (0x0020 - 0x0000)
struct B_JumpScareGhost_C_TearDown final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_TearDown) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_TearDown");
static_assert(sizeof(B_JumpScareGhost_C_TearDown) == 0x000020, "Wrong size on B_JumpScareGhost_C_TearDown");
static_assert(offsetof(B_JumpScareGhost_C_TearDown, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_JumpScareGhost_C_TearDown::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_TearDown, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000008, "Member 'B_JumpScareGhost_C_TearDown::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.TearUp
// 0x0080 (0x0080 - 0x0000)
struct B_JumpScareGhost_C_TearUp final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Owner_0;                                           // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Instigator_0;                                      // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_TearUp) == 0x000010, "Wrong alignment on B_JumpScareGhost_C_TearUp");
static_assert(sizeof(B_JumpScareGhost_C_TearUp) == 0x000080, "Wrong size on B_JumpScareGhost_C_TearUp");
static_assert(offsetof(B_JumpScareGhost_C_TearUp, SpawnTransform) == 0x000000, "Member 'B_JumpScareGhost_C_TearUp::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_TearUp, Owner_0) == 0x000060, "Member 'B_JumpScareGhost_C_TearUp::Owner_0' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_TearUp, Instigator_0) == 0x000068, "Member 'B_JumpScareGhost_C_TearUp::Instigator_0' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_TearUp, CallFunc_HasAuthority_ReturnValue) == 0x000070, "Member 'B_JumpScareGhost_C_TearUp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.UpdateScaleVelocityAndBlindDuration
// 0x0118 (0x0118 - 0x0000)
struct B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration");
static_assert(sizeof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration) == 0x000118, "Wrong size on B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000028, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000038, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000068, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_VInterpTo_ReturnValue) == 0x000080, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000098, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000A0, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0000B0, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Normal_ReturnValue) == 0x0000C8, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E0, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F8, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000110, "Member 'B_JumpScareGhost_C_UpdateScaleVelocityAndBlindDuration::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function B_JumpScareGhost.B_JumpScareGhost_C.UpdateVelocityVector
// 0x0040 (0x0040 - 0x0000)
struct B_JumpScareGhost_C_UpdateVelocityVector final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVectorLength_size_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_JumpScareGhost_C_UpdateVelocityVector) == 0x000008, "Wrong alignment on B_JumpScareGhost_C_UpdateVelocityVector");
static_assert(sizeof(B_JumpScareGhost_C_UpdateVelocityVector) == 0x000040, "Wrong size on B_JumpScareGhost_C_UpdateVelocityVector");
static_assert(offsetof(B_JumpScareGhost_C_UpdateVelocityVector, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_JumpScareGhost_C_UpdateVelocityVector::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateVelocityVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000008, "Member 'B_JumpScareGhost_C_UpdateVelocityVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateVelocityVector, CallFunc_SetVectorLength_ReturnValue) == 0x000020, "Member 'B_JumpScareGhost_C_UpdateVelocityVector::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_JumpScareGhost_C_UpdateVelocityVector, CallFunc_SetVectorLength_size_ImplicitCast) == 0x000038, "Member 'B_JumpScareGhost_C_UpdateVelocityVector::CallFunc_SetVectorLength_size_ImplicitCast' has a wrong offset!");

}

