#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyBinding

#include "Basic.hpp"

#include "SAxisToEdit_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WB_KeyBinding.WB_KeyBinding_C.CleanButtons
// 0x0038 (0x0038 - 0x0000)
struct WB_KeyBinding_C_CleanButtons final
{
public:
	struct FKey                                   KeyNone;                                           // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KeyBindingButton_C*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_CleanButtons) == 0x000008, "Wrong alignment on WB_KeyBinding_C_CleanButtons");
static_assert(sizeof(WB_KeyBinding_C_CleanButtons) == 0x000038, "Wrong size on WB_KeyBinding_C_CleanButtons");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, KeyNone) == 0x000000, "Member 'WB_KeyBinding_C_CleanButtons::KeyNone' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WB_KeyBinding_C_CleanButtons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WB_KeyBinding_C_CleanButtons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_CleanButtons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_KeyBinding_C_CleanButtons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WB_KeyBinding_C_CleanButtons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CleanButtons, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WB_KeyBinding_C_CleanButtons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.CountNonGamepadActions
// 0x0060 (0x0060 - 0x0000)
struct WB_KeyBinding_C_CountNonGamepadActions final
{
public:
	TArray<struct FInputActionKeyMapping>         ActionMappings;                                    // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Counter;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_CountNonGamepadActions) == 0x000008, "Wrong alignment on WB_KeyBinding_C_CountNonGamepadActions");
static_assert(sizeof(WB_KeyBinding_C_CountNonGamepadActions) == 0x000060, "Wrong size on WB_KeyBinding_C_CountNonGamepadActions");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, ActionMappings) == 0x000000, "Member 'WB_KeyBinding_C_CountNonGamepadActions::ActionMappings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, ReturnValue) == 0x000010, "Member 'WB_KeyBinding_C_CountNonGamepadActions::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, Counter) == 0x000014, "Member 'WB_KeyBinding_C_CountNonGamepadActions::Counter' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_KeyBinding_C_CountNonGamepadActions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_KeyBinding_C_CountNonGamepadActions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, Temp_int_Variable) == 0x00002C, "Member 'WB_KeyBinding_C_CountNonGamepadActions::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000058, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadActions, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WB_KeyBinding_C_CountNonGamepadActions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.CountNonGamepadAxis
// 0x0060 (0x0060 - 0x0000)
struct WB_KeyBinding_C_CountNonGamepadAxis final
{
public:
	TArray<struct FInputAxisKeyMapping>           AxisMappings;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Counter;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_CountNonGamepadAxis) == 0x000008, "Wrong alignment on WB_KeyBinding_C_CountNonGamepadAxis");
static_assert(sizeof(WB_KeyBinding_C_CountNonGamepadAxis) == 0x000060, "Wrong size on WB_KeyBinding_C_CountNonGamepadAxis");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, AxisMappings) == 0x000000, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::AxisMappings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, ReturnValue) == 0x000010, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, Counter) == 0x000014, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::Counter' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, Temp_int_Variable) == 0x00002C, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Array_Get_Item) == 0x000030, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000058, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Not_PreBool_ReturnValue) == 0x000059, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_CountNonGamepadAxis, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'WB_KeyBinding_C_CountNonGamepadAxis::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.ExecuteUbergraph_WB_KeyBinding
// 0x0048 (0x0048 - 0x0000)
struct WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWB_KeyBindingButton_C*>         K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWB_KeyBindingButton_C*                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding) == 0x000008, "Wrong alignment on WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding");
static_assert(sizeof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding) == 0x000048, "Wrong size on WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, EntryPoint) == 0x000000, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, K2Node_MakeArray_Array) == 0x000028, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WB_KeyBinding_C_ExecuteUbergraph_WB_KeyBinding::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.FindRemappedIndex
// 0x0014 (0x0014 - 0x0000)
struct WB_KeyBinding_C_FindRemappedIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundIndex;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_FindRemappedIndex) == 0x000004, "Wrong alignment on WB_KeyBinding_C_FindRemappedIndex");
static_assert(sizeof(WB_KeyBinding_C_FindRemappedIndex) == 0x000014, "Wrong size on WB_KeyBinding_C_FindRemappedIndex");
static_assert(offsetof(WB_KeyBinding_C_FindRemappedIndex, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_FindRemappedIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_FindRemappedIndex, ReturnValue) == 0x000004, "Member 'WB_KeyBinding_C_FindRemappedIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_FindRemappedIndex, FoundIndex) == 0x000008, "Member 'WB_KeyBinding_C_FindRemappedIndex::FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_FindRemappedIndex, CallFunc_Map_Find_Value) == 0x00000C, "Member 'WB_KeyBinding_C_FindRemappedIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_FindRemappedIndex, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'WB_KeyBinding_C_FindRemappedIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.OnKeyBindingButtonClicked__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature final
{
public:
	class UWB_KeyBinding_C*                       KeyBindingWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_KeyBindingButton_C*                 KeyBindingButton;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature) == 0x000008, "Wrong alignment on WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature");
static_assert(sizeof(WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature) == 0x000018, "Wrong size on WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature");
static_assert(offsetof(WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature, KeyBindingWidget) == 0x000000, "Member 'WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature::KeyBindingWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature, KeyBindingButton) == 0x000008, "Member 'WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature::KeyBindingButton' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature, Index_0) == 0x000010, "Member 'WB_KeyBinding_C_OnKeyBindingButtonClicked__DelegateSignature::Index_0' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.Refresh
// 0x0008 (0x0008 - 0x0000)
struct WB_KeyBinding_C_Refresh final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_Refresh) == 0x000004, "Wrong alignment on WB_KeyBinding_C_Refresh");
static_assert(sizeof(WB_KeyBinding_C_Refresh) == 0x000008, "Wrong size on WB_KeyBinding_C_Refresh");
static_assert(offsetof(WB_KeyBinding_C_Refresh, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'WB_KeyBinding_C_Refresh::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_Refresh, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'WB_KeyBinding_C_Refresh::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.RemoveAction
// 0x0058 (0x0058 - 0x0000)
struct WB_KeyBinding_C_RemoveAction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0008(0x0028)()
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_CountNonGamepadActions_ReturnValue;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CountNonGamepadActions_ReturnValue_1;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_RemoveAction) == 0x000008, "Wrong alignment on WB_KeyBinding_C_RemoveAction");
static_assert(sizeof(WB_KeyBinding_C_RemoveAction) == 0x000058, "Wrong size on WB_KeyBinding_C_RemoveAction");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_RemoveAction::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_GetKeyBindingsForAction_Bindings) == 0x000030, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_CountNonGamepadActions_ReturnValue) == 0x000040, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_CountNonGamepadActions_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_CountNonGamepadActions_ReturnValue_1) == 0x000048, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_CountNonGamepadActions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000050, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_BooleanAND_ReturnValue) == 0x000052, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAction, CallFunc_BooleanAND_ReturnValue_1) == 0x000053, "Member 'WB_KeyBinding_C_RemoveAction::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.RemoveAxis
// 0x0058 (0x0058 - 0x0000)
struct WB_KeyBinding_C_RemoveAxis final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0008(0x0028)()
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeyBindingsForAxis_Bindings;           // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_CountNonGamepadAxis_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountNonGamepadAxis_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_RemoveAxis) == 0x000008, "Wrong alignment on WB_KeyBinding_C_RemoveAxis");
static_assert(sizeof(WB_KeyBinding_C_RemoveAxis) == 0x000058, "Wrong size on WB_KeyBinding_C_RemoveAxis");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_RemoveAxis::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_Array_Get_Item) == 0x000008, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_GetKeyBindingsForAxis_Bindings) == 0x000030, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_GetKeyBindingsForAxis_Bindings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_CountNonGamepadAxis_ReturnValue) == 0x000040, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_CountNonGamepadAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_CountNonGamepadAxis_ReturnValue_1) == 0x000044, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_CountNonGamepadAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000049, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveAxis, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'WB_KeyBinding_C_RemoveAxis::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.RemoveBinding
// 0x0014 (0x0014 - 0x0000)
struct WB_KeyBinding_C_RemoveBinding final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindRemappedIndex_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_RemoveBinding) == 0x000004, "Wrong alignment on WB_KeyBinding_C_RemoveBinding");
static_assert(sizeof(WB_KeyBinding_C_RemoveBinding) == 0x000014, "Wrong size on WB_KeyBinding_C_RemoveBinding");
static_assert(offsetof(WB_KeyBinding_C_RemoveBinding, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_RemoveBinding::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveBinding, CallFunc_FindRemappedIndex_ReturnValue) == 0x000004, "Member 'WB_KeyBinding_C_RemoveBinding::CallFunc_FindRemappedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveBinding, CallFunc_FindRemappedIndex_FoundIndex) == 0x000008, "Member 'WB_KeyBinding_C_RemoveBinding::CallFunc_FindRemappedIndex_FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveBinding, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_KeyBinding_C_RemoveBinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_RemoveBinding, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WB_KeyBinding_C_RemoveBinding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.SetAction
// 0x0110 (0x0110 - 0x0000)
struct WB_KeyBinding_C_SetAction final
{
public:
	class FName                                   ActionName_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexForNewRemap;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         ActionMappings;                                    // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         LastRemapIndex;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CurrentKey;                                        // 0x0028(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputActionKeyMapping                 CurrentInputAction;                                // 0x0040(0x0028)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0078(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputActionKeyMapping>         CallFunc_GetKeyBindingsForAction_Bindings;         // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KeyBindingButton_C*                 CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindRemappedIndex_ReturnValue;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindRemappedIndex_ReturnValue_1;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex_1;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_SetAction) == 0x000008, "Wrong alignment on WB_KeyBinding_C_SetAction");
static_assert(sizeof(WB_KeyBinding_C_SetAction) == 0x000110, "Wrong size on WB_KeyBinding_C_SetAction");
static_assert(offsetof(WB_KeyBinding_C_SetAction, ActionName_0) == 0x000000, "Member 'WB_KeyBinding_C_SetAction::ActionName_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, IndexForNewRemap) == 0x000008, "Member 'WB_KeyBinding_C_SetAction::IndexForNewRemap' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, ActionMappings) == 0x000010, "Member 'WB_KeyBinding_C_SetAction::ActionMappings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, LastRemapIndex) == 0x000020, "Member 'WB_KeyBinding_C_SetAction::LastRemapIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CurrentIndex) == 0x000024, "Member 'WB_KeyBinding_C_SetAction::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CurrentKey) == 0x000028, "Member 'WB_KeyBinding_C_SetAction::CurrentKey' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CurrentInputAction) == 0x000040, "Member 'WB_KeyBinding_C_SetAction::CurrentInputAction' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Get_Item) == 0x000078, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_GetKeyBindingsForAction_Bindings) == 0x0000A8, "Member 'WB_KeyBinding_C_SetAction::CallFunc_GetKeyBindingsForAction_Bindings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Variable) == 0x0000C4, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Variable_1) == 0x0000C8, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Array_Index_Variable_1) == 0x0000CC, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Length_ReturnValue_3) == 0x0000D0, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_FindRemappedIndex_ReturnValue) == 0x0000E0, "Member 'WB_KeyBinding_C_SetAction::CallFunc_FindRemappedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_FindRemappedIndex_FoundIndex) == 0x0000E4, "Member 'WB_KeyBinding_C_SetAction::CallFunc_FindRemappedIndex_FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Not_PreBool_ReturnValue) == 0x0000E5, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_FindRemappedIndex_ReturnValue_1) == 0x0000E8, "Member 'WB_KeyBinding_C_SetAction::CallFunc_FindRemappedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_FindRemappedIndex_FoundIndex_1) == 0x0000EC, "Member 'WB_KeyBinding_C_SetAction::CallFunc_FindRemappedIndex_FoundIndex_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000ED, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000F0, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F4, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x0000F8, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F9, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'WB_KeyBinding_C_SetAction::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Less_IntInt_ReturnValue_2) == 0x000104, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAction, CallFunc_Add_IntInt_ReturnValue_3) == 0x000108, "Member 'WB_KeyBinding_C_SetAction::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.SetAxis
// 0x0120 (0x0120 - 0x0000)
struct WB_KeyBinding_C_SetAxis final
{
public:
	struct FSAxisToEdit                           Axis;                                              // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         IndexForNewRemap;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           AxisMappings;                                      // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         LastRemapIndex;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CurrentKey;                                        // 0x0040(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   CurrentInputAxis;                                  // 0x0058(0x0028)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindRemappedIndex_ReturnValue;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E[0x2];                                       // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindRemappedIndex_ReturnValue_1;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex_1;           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KeyBindingButton_C*                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetKeyBindingsForAxis_Bindings;           // 0x00F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_SetAxis) == 0x000008, "Wrong alignment on WB_KeyBinding_C_SetAxis");
static_assert(sizeof(WB_KeyBinding_C_SetAxis) == 0x000120, "Wrong size on WB_KeyBinding_C_SetAxis");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Axis) == 0x000000, "Member 'WB_KeyBinding_C_SetAxis::Axis' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, IndexForNewRemap) == 0x000020, "Member 'WB_KeyBinding_C_SetAxis::IndexForNewRemap' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, AxisMappings) == 0x000028, "Member 'WB_KeyBinding_C_SetAxis::AxisMappings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, LastRemapIndex) == 0x000038, "Member 'WB_KeyBinding_C_SetAxis::LastRemapIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CurrentIndex) == 0x00003C, "Member 'WB_KeyBinding_C_SetAxis::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CurrentKey) == 0x000040, "Member 'WB_KeyBinding_C_SetAxis::CurrentKey' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CurrentInputAxis) == 0x000058, "Member 'WB_KeyBinding_C_SetAxis::CurrentInputAxis' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Array_Index_Variable) == 0x000080, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Variable) == 0x00008C, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_FindRemappedIndex_ReturnValue) == 0x000098, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_FindRemappedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_FindRemappedIndex_FoundIndex) == 0x00009C, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_FindRemappedIndex_FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Not_PreBool_ReturnValue) == 0x00009D, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_FindRemappedIndex_ReturnValue_1) == 0x0000A0, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_FindRemappedIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_FindRemappedIndex_FoundIndex_1) == 0x0000A4, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_FindRemappedIndex_FoundIndex_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Less_IntInt_ReturnValue) == 0x0000A5, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Variable_1) == 0x0000A8, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Length_ReturnValue_3) == 0x0000F0, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F4, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_GetKeyBindingsForAxis_Bindings) == 0x0000F8, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_GetKeyBindingsForAxis_Bindings' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Add_IntInt_ReturnValue_2) == 0x000108, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, Temp_int_Loop_Counter_Variable_1) == 0x00010C, "Member 'WB_KeyBinding_C_SetAxis::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Less_IntInt_ReturnValue_2) == 0x000110, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Add_IntInt_ReturnValue_3) == 0x000114, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000118, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Not_PreBool_ReturnValue_1) == 0x000119, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetAxis, CallFunc_Array_Add_ReturnValue) == 0x00011C, "Member 'WB_KeyBinding_C_SetAxis::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.SetBindingName
// 0x0030 (0x0030 - 0x0000)
struct WB_KeyBinding_C_SetBindingName final
{
public:
	class FName                                   InText;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0008(0x0010)()
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0018(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_SetBindingName) == 0x000008, "Wrong alignment on WB_KeyBinding_C_SetBindingName");
static_assert(sizeof(WB_KeyBinding_C_SetBindingName) == 0x000030, "Wrong size on WB_KeyBinding_C_SetBindingName");
static_assert(offsetof(WB_KeyBinding_C_SetBindingName, InText) == 0x000000, "Member 'WB_KeyBinding_C_SetBindingName::InText' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBindingName, CallFunc_Conv_NameToText_ReturnValue) == 0x000008, "Member 'WB_KeyBinding_C_SetBindingName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBindingName, CallFunc_Map_Find_Value) == 0x000018, "Member 'WB_KeyBinding_C_SetBindingName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBindingName, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'WB_KeyBinding_C_SetBindingName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBindingName, CallFunc_Map_Contains_ReturnValue) == 0x000029, "Member 'WB_KeyBinding_C_SetBindingName::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.SetBoundKeyForIndex
// 0x0030 (0x0030 - 0x0000)
struct WB_KeyBinding_C_SetBoundKeyForIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Key;                                               // 0x0008(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class UWB_KeyBindingButton_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_SetBoundKeyForIndex) == 0x000008, "Wrong alignment on WB_KeyBinding_C_SetBoundKeyForIndex");
static_assert(sizeof(WB_KeyBinding_C_SetBoundKeyForIndex) == 0x000030, "Wrong size on WB_KeyBinding_C_SetBoundKeyForIndex");
static_assert(offsetof(WB_KeyBinding_C_SetBoundKeyForIndex, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_SetBoundKeyForIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBoundKeyForIndex, Key) == 0x000008, "Member 'WB_KeyBinding_C_SetBoundKeyForIndex::Key' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBoundKeyForIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'WB_KeyBinding_C_SetBoundKeyForIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetBoundKeyForIndex, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WB_KeyBinding_C_SetBoundKeyForIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.SetInputBinding__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct WB_KeyBinding_C_SetInputBinding__DelegateSignature final
{
public:
	class UWB_KeyBinding_C*                       KeyBindingWidget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_SetInputBinding__DelegateSignature) == 0x000008, "Wrong alignment on WB_KeyBinding_C_SetInputBinding__DelegateSignature");
static_assert(sizeof(WB_KeyBinding_C_SetInputBinding__DelegateSignature) == 0x000018, "Wrong size on WB_KeyBinding_C_SetInputBinding__DelegateSignature");
static_assert(offsetof(WB_KeyBinding_C_SetInputBinding__DelegateSignature, KeyBindingWidget) == 0x000000, "Member 'WB_KeyBinding_C_SetInputBinding__DelegateSignature::KeyBindingWidget' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetInputBinding__DelegateSignature, Button) == 0x000008, "Member 'WB_KeyBinding_C_SetInputBinding__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_SetInputBinding__DelegateSignature, Index_0) == 0x000010, "Member 'WB_KeyBinding_C_SetInputBinding__DelegateSignature::Index_0' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.UpdateAction
// 0x0080 (0x0080 - 0x0000)
struct WB_KeyBinding_C_UpdateAction final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_FindRemappedIndex_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0028(0x0028)()
	struct FInputActionKeyMapping                 K2Node_MakeStruct_InputActionKeyMapping;           // 0x0050(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_UpdateAction) == 0x000008, "Wrong alignment on WB_KeyBinding_C_UpdateAction");
static_assert(sizeof(WB_KeyBinding_C_UpdateAction) == 0x000080, "Wrong size on WB_KeyBinding_C_UpdateAction");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_UpdateAction::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, NewKey) == 0x000008, "Member 'WB_KeyBinding_C_UpdateAction::NewKey' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, CallFunc_FindRemappedIndex_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_UpdateAction::CallFunc_FindRemappedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, CallFunc_FindRemappedIndex_FoundIndex) == 0x000024, "Member 'WB_KeyBinding_C_UpdateAction::CallFunc_FindRemappedIndex_FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_KeyBinding_C_UpdateAction::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, K2Node_MakeStruct_InputActionKeyMapping) == 0x000050, "Member 'WB_KeyBinding_C_UpdateAction::K2Node_MakeStruct_InputActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WB_KeyBinding_C_UpdateAction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAction, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'WB_KeyBinding_C_UpdateAction::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.UpdateAxis
// 0x0080 (0x0080 - 0x0000)
struct WB_KeyBinding_C_UpdateAxis final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_FindRemappedIndex_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindRemappedIndex_FoundIndex;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0028(0x0028)()
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0050(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_UpdateAxis) == 0x000008, "Wrong alignment on WB_KeyBinding_C_UpdateAxis");
static_assert(sizeof(WB_KeyBinding_C_UpdateAxis) == 0x000080, "Wrong size on WB_KeyBinding_C_UpdateAxis");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_UpdateAxis::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, NewKey) == 0x000008, "Member 'WB_KeyBinding_C_UpdateAxis::NewKey' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, CallFunc_FindRemappedIndex_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_UpdateAxis::CallFunc_FindRemappedIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, CallFunc_FindRemappedIndex_FoundIndex) == 0x000024, "Member 'WB_KeyBinding_C_UpdateAxis::CallFunc_FindRemappedIndex_FoundIndex' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_KeyBinding_C_UpdateAxis::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000050, "Member 'WB_KeyBinding_C_UpdateAxis::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WB_KeyBinding_C_UpdateAxis::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateAxis, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'WB_KeyBinding_C_UpdateAxis::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_KeyBinding.WB_KeyBinding_C.UpdateBinding
// 0x0028 (0x0028 - 0x0000)
struct WB_KeyBinding_C_UpdateBinding final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   NewKey;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_KeyBinding_C_UpdateBinding) == 0x000008, "Wrong alignment on WB_KeyBinding_C_UpdateBinding");
static_assert(sizeof(WB_KeyBinding_C_UpdateBinding) == 0x000028, "Wrong size on WB_KeyBinding_C_UpdateBinding");
static_assert(offsetof(WB_KeyBinding_C_UpdateBinding, Index_0) == 0x000000, "Member 'WB_KeyBinding_C_UpdateBinding::Index_0' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateBinding, NewKey) == 0x000008, "Member 'WB_KeyBinding_C_UpdateBinding::NewKey' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateBinding, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_KeyBinding_C_UpdateBinding::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_KeyBinding_C_UpdateBinding, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WB_KeyBinding_C_UpdateBinding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

