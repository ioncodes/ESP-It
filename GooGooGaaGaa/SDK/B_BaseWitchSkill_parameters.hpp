#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BaseWitchSkill

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_BaseWitchSkill.B_BaseWitchSkill_C.CanActivate
// 0x0018 (0x0018 - 0x0000)
struct B_BaseWitchSkill_C_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOwnerIsDispel_IsDispel;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetOwnersMana_Mana;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseWitchSkill_C_CanActivate) == 0x000008, "Wrong alignment on B_BaseWitchSkill_C_CanActivate");
static_assert(sizeof(B_BaseWitchSkill_C_CanActivate) == 0x000018, "Wrong size on B_BaseWitchSkill_C_CanActivate");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, ReturnValue) == 0x000000, "Member 'B_BaseWitchSkill_C_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_GetOwnerIsDispel_IsDispel) == 0x000001, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_GetOwnerIsDispel_IsDispel' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_GetOwnersMana_Mana) == 0x000008, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_GetOwnersMana_Mana' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_CanActivate_ReturnValue) == 0x000011, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000012, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_CanActivate, CallFunc_BooleanAND_ReturnValue_1) == 0x000014, "Member 'B_BaseWitchSkill_C_CanActivate::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function B_BaseWitchSkill.B_BaseWitchSkill_C.GetOwnerIsTrapped
// 0x0048 (0x0048 - 0x0000)
struct B_BaseWitchSkill_C_GetOwnerIsTrapped final
{
public:
	bool                                          IsTrapped;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         CallFunc_GetBGameState_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseWitchSkill_C_GetOwnerIsTrapped) == 0x000008, "Wrong alignment on B_BaseWitchSkill_C_GetOwnerIsTrapped");
static_assert(sizeof(B_BaseWitchSkill_C_GetOwnerIsTrapped) == 0x000048, "Wrong size on B_BaseWitchSkill_C_GetOwnerIsTrapped");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, IsTrapped) == 0x000000, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::IsTrapped' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_GetBGameState_ReturnValue) == 0x000008, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_GetBGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000010, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x000011, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000028, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, K2Node_DynamicCast_AsB_Witch) == 0x000038, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsTrapped, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000042, "Member 'B_BaseWitchSkill_C_GetOwnerIsTrapped::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_BaseWitchSkill.B_BaseWitchSkill_C.GetOwnerIsDispel
// 0x0050 (0x0050 - 0x0000)
struct B_BaseWitchSkill_C_GetOwnerIsDispel final
{
public:
	bool                                          IsDispel;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseWitchSkill_C_GetOwnerIsDispel) == 0x000008, "Wrong alignment on B_BaseWitchSkill_C_GetOwnerIsDispel");
static_assert(sizeof(B_BaseWitchSkill_C_GetOwnerIsDispel) == 0x000050, "Wrong size on B_BaseWitchSkill_C_GetOwnerIsDispel");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, IsDispel) == 0x000000, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::IsDispel' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000028, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000030, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_AsB_Witch) == 0x000040, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00004A, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x00004B, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnerIsDispel, CallFunc_BooleanOR_ReturnValue) == 0x00004C, "Member 'B_BaseWitchSkill_C_GetOwnerIsDispel::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_BaseWitchSkill.B_BaseWitchSkill_C.GetOwnersMana
// 0x0020 (0x0020 - 0x0000)
struct B_BaseWitchSkill_C_GetOwnersMana final
{
public:
	double                                        Mana;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ManaComponent_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseWitchSkill_C_GetOwnersMana) == 0x000008, "Wrong alignment on B_BaseWitchSkill_C_GetOwnersMana");
static_assert(sizeof(B_BaseWitchSkill_C_GetOwnersMana) == 0x000020, "Wrong size on B_BaseWitchSkill_C_GetOwnersMana");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnersMana, Mana) == 0x000000, "Member 'B_BaseWitchSkill_C_GetOwnersMana::Mana' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnersMana, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_BaseWitchSkill_C_GetOwnersMana::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnersMana, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'B_BaseWitchSkill_C_GetOwnersMana::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_GetOwnersMana, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_BaseWitchSkill_C_GetOwnersMana::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function B_BaseWitchSkill.B_BaseWitchSkill_C.ConsumeOwnersMana
// 0x0020 (0x0020 - 0x0000)
struct B_BaseWitchSkill_C_ConsumeOwnersMana final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ManaComponent_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_BaseWitchSkill_C_ConsumeOwnersMana) == 0x000008, "Wrong alignment on B_BaseWitchSkill_C_ConsumeOwnersMana");
static_assert(sizeof(B_BaseWitchSkill_C_ConsumeOwnersMana) == 0x000020, "Wrong size on B_BaseWitchSkill_C_ConsumeOwnersMana");
static_assert(offsetof(B_BaseWitchSkill_C_ConsumeOwnersMana, Amount) == 0x000000, "Member 'B_BaseWitchSkill_C_ConsumeOwnersMana::Amount' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_ConsumeOwnersMana, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_BaseWitchSkill_C_ConsumeOwnersMana::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_ConsumeOwnersMana, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'B_BaseWitchSkill_C_ConsumeOwnersMana::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_BaseWitchSkill_C_ConsumeOwnersMana, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_BaseWitchSkill_C_ConsumeOwnersMana::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

