#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapSelection

#include "Basic.hpp"

#include "WB_MapSelection_classes.hpp"
#include "WB_MapSelection_parameters.hpp"


namespace SDK
{

// Function WB_MapSelection.WB_MapSelection_C.UpdateDisplayedMapSelectionInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_MapSelection_C::UpdateDisplayedMapSelectionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "UpdateDisplayedMapSelectionInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MapSelection.WB_MapSelection_C.GetMapImage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)

TSoftObjectPtr<class UTexture2D> UWB_MapSelection_C::GetMapImage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "GetMapImage");

	Params::WB_MapSelection_C_GetMapImage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_MapSelection.WB_MapSelection_C.GetMapName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_MapSelection_C::GetMapName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "GetMapName");

	Params::WB_MapSelection_C_GetMapName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_MapSelection.WB_MapSelection_C.OnFocusReceived
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_MapSelection_C::OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "OnFocusReceived");

	Params::WB_MapSelection_C_OnFocusReceived Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_MapSelection.WB_MapSelection_C.BndEvt__WB_GridButton_K2Node_ComponentBoundEvent_28_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_MapSelection_C::BndEvt__WB_GridButton_K2Node_ComponentBoundEvent_28_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "BndEvt__WB_GridButton_K2Node_ComponentBoundEvent_28_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MapSelection.WB_MapSelection_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MapSelection_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "PreConstruct");

	Params::WB_MapSelection_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MapSelection.WB_MapSelection_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_MapSelection_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MapSelection.WB_MapSelection_C.OnChangeButtonClicked__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UWB_MapSelection_C::OnChangeButtonClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "OnChangeButtonClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MapSelection.WB_MapSelection_C.ExecuteUbergraph_WB_MapSelection
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MapSelection_C::ExecuteUbergraph_WB_MapSelection(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "ExecuteUbergraph_WB_MapSelection");

	Params::WB_MapSelection_C_ExecuteUbergraph_WB_MapSelection Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MapSelection.WB_MapSelection_C.UseMapCycleInfo
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    UseMapCycleInfo_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MapSelection_C::UseMapCycleInfo(bool* UseMapCycleInfo_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MapSelection_C", "UseMapCycleInfo");

	Params::WB_MapSelection_C_UseMapCycleInfo Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UseMapCycleInfo_0 != nullptr)
		*UseMapCycleInfo_0 = Parms.UseMapCycleInfo_0;
}

}

