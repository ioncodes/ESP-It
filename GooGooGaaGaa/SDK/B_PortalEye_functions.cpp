#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PortalEye

#include "Basic.hpp"

#include "B_PortalEye_classes.hpp"
#include "B_PortalEye_parameters.hpp"


namespace SDK
{

// Function B_PortalEye.B_PortalEye_C.ExecuteUbergraph_B_PortalEye
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::ExecuteUbergraph_B_PortalEye(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "ExecuteUbergraph_B_PortalEye");

	Params::B_PortalEye_C_ExecuteUbergraph_B_PortalEye Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpActEvt_Crouch_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PortalEye_C::InpActEvt_Crouch_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpActEvt_Crouch_K2Node_InputActionEvent_0");

	Params::B_PortalEye_C_InpActEvt_Crouch_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpActEvt_Crouch_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PortalEye_C::InpActEvt_Crouch_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpActEvt_Crouch_K2Node_InputActionEvent_1");

	Params::B_PortalEye_C_InpActEvt_Crouch_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PortalEye_C::InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpActEvt_Jump_K2Node_InputActionEvent_2");

	Params::B_PortalEye_C_InpActEvt_Jump_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpActEvt_Jump_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_PortalEye_C::InpActEvt_Jump_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpActEvt_Jump_K2Node_InputActionEvent_3");

	Params::B_PortalEye_C_InpActEvt_Jump_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_172
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_172(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_172");

	Params::B_PortalEye_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_172 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_11
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_11(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_11");

	Params::B_PortalEye_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_11 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181");

	Params::B_PortalEye_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_181 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192");

	Params::B_PortalEye_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_192 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_157
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_Turn_K2Node_InputAxisEvent_157(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_Turn_K2Node_InputAxisEvent_157");

	Params::B_PortalEye_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_157 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::InpAxisEvt_TurnRate_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "InpAxisEvt_TurnRate_K2Node_InputAxisEvent_1");

	Params::B_PortalEye_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.PossessedClient
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_PortalEye_C::PossessedClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "PossessedClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PortalEye.B_PortalEye_C.PossessedOwner
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AB_PortalEye_C::PossessedOwner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "PossessedOwner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_PortalEye.B_PortalEye_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "ReceivePossessed");

	Params::B_PortalEye_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "ReceiveTick");

	Params::B_PortalEye_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_PortalEye.B_PortalEye_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_PortalEye_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_PortalEye_C", "ReceiveUnpossessed");

	Params::B_PortalEye_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}

}

