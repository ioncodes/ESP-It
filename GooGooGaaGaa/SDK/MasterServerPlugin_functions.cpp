#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MasterServerPlugin

#include "Basic.hpp"

#include "MasterServerPlugin_classes.hpp"
#include "MasterServerPlugin_parameters.hpp"


namespace SDK
{

// Function MasterServerPlugin.BaseUserBehaviorTrackingManager.BPTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UBaseUserBehaviorTrackingManager::BPTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BaseUserBehaviorTrackingManager", "BPTick");

	Params::BaseUserBehaviorTrackingManager_BPTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.GrantItemsCallbackProxy.GrantItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          Param_WorldContextObject                               (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AccountId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Param_ItemDefIds                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    bNotify                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsDrop                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsExtraItem                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerState*                     Param_PlayerState                                      (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGrantItemsCallbackProxy*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UGrantItemsCallbackProxy* UGrantItemsCallbackProxy::GrantItems(class UObject* Param_WorldContextObject, int32 AccountId, const TArray<int32>& Param_ItemDefIds, bool bNotify, bool bIsDrop, bool bIsExtraItem, class APlayerState* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("GrantItemsCallbackProxy", "GrantItems");

	Params::GrantItemsCallbackProxy_GrantItems Parms{};

	Parms.Param_WorldContextObject = Param_WorldContextObject;
	Parms.AccountId = AccountId;
	Parms.Param_ItemDefIds = std::move(Param_ItemDefIds);
	Parms.bNotify = bNotify;
	Parms.bIsDrop = bIsDrop;
	Parms.bIsExtraItem = bIsExtraItem;
	Parms.Param_PlayerState = Param_PlayerState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.GrantItemsCallbackProxy.GrantItemsResponse
// (Final, Native, Private)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGrantItemsCallbackProxy::GrantItemsResponse(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GrantItemsCallbackProxy", "GrantItemsResponse");

	Params::GrantItemsCallbackProxy_GrantItemsResponse Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InC                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InD                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::Connect(int32 InA, int32 InB, int32 InC, int32 InD, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "Connect");

	Params::InstanceManagerConnSubsystem_Connect Parms{};

	Parms.InA = InA;
	Parms.InB = InB;
	Parms.InC = InC;
	Parms.InD = InD;
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.ConnectHost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           HostName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::ConnectHost(const class FString& HostName, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "ConnectHost");

	Params::InstanceManagerConnSubsystem_ConnectHost Parms{};

	Parms.HostName = std::move(HostName);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.Disconnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AutomaticReconnectWhenKeepAlive                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInstanceManagerConnSubsystem::Disconnect(bool AutomaticReconnectWhenKeepAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "Disconnect");

	Params::InstanceManagerConnSubsystem_Disconnect Parms{};

	Parms.AutomaticReconnectWhenKeepAlive = AutomaticReconnectWhenKeepAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.SendEmptyPacket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EInstanceMgrPacketType                  PacketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::SendEmptyPacket(EInstanceMgrPacketType PacketType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "SendEmptyPacket");

	Params::InstanceManagerConnSubsystem_SendEmptyPacket Parms{};

	Parms.PacketType = PacketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.SendPacket
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EInstanceMgrPacketType                  PacketType                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Payload                                                (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::SendPacket(EInstanceMgrPacketType PacketType, TArray<uint8>* Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "SendPacket");

	Params::InstanceManagerConnSubsystem_SendPacket Parms{};

	Parms.PacketType = PacketType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Payload != nullptr)
		*Payload = std::move(Parms.Payload);

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::IsConnected() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "IsConnected");

	Params::InstanceManagerConnSubsystem_IsConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.IsTearingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::IsTearingDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "IsTearingDown");

	Params::InstanceManagerConnSubsystem_IsTearingDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InstanceManagerConnSubsystem.SendData
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<uint8>                           Data                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInstanceManagerConnSubsystem::SendData(TArray<uint8>* Data) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstanceManagerConnSubsystem", "SendData");

	Params::InstanceManagerConnSubsystem_SendData Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InventorySubsystem.AddAddedItem
// (Final, Native, Public)
// Parameters:
// EItemChangeReason                       Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintOnlineItem             Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class FString                           Payload                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventorySubsystem::AddAddedItem(EItemChangeReason Reason, const struct FBlueprintOnlineItem& Item, const class FString& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "AddAddedItem");

	Params::InventorySubsystem_AddAddedItem Parms{};

	Parms.Reason = Reason;
	Parms.Item = std::move(Item);
	Parms.Payload = std::move(Payload);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.InventorySubsystem.GetItemProperty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   DefinitionId                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             PropertyName                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UInventorySubsystem::GetItemProperty(int32 DefinitionId, class FName PropertyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "GetItemProperty");

	Params::InventorySubsystem_GetItemProperty Parms{};

	Parms.DefinitionId = DefinitionId;
	Parms.PropertyName = PropertyName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InventorySubsystem.GrantItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                                   TargetAccountId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           ItemDefIds                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           StackSizes                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    bIsCauldronDrop                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventorySubsystem::GrantItems(int32 TargetAccountId, const TArray<int32>& ItemDefIds, const TArray<int32>& StackSizes, bool bIsCauldronDrop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "GrantItems");

	Params::InventorySubsystem_GrantItems Parms{};

	Parms.TargetAccountId = TargetAccountId;
	Parms.ItemDefIds = std::move(ItemDefIds);
	Parms.StackSizes = std::move(StackSizes);
	Parms.bIsCauldronDrop = bIsCauldronDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.InventorySubsystem.LoadItemDefinitions
// (Final, Native, Public)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UInventorySubsystem::LoadItemDefinitions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "LoadItemDefinitions");

	Params::InventorySubsystem_LoadItemDefinitions Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.InventorySubsystem.LoadItemDefinitionsResponse
// (Final, Native, Private)
// Parameters:
// class UVaRestRequestJSON*               Request                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UInventorySubsystem::LoadItemDefinitionsResponse(class UVaRestRequestJSON* Request)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "LoadItemDefinitionsResponse");

	Params::InventorySubsystem_LoadItemDefinitionsResponse Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.InventorySubsystem.PopAddedItemsByReason
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// EItemChangeReason                       Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBlueprintOnlineItem>     ItemsResult                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventorySubsystem::PopAddedItemsByReason(EItemChangeReason Reason, TArray<struct FBlueprintOnlineItem>* ItemsResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "PopAddedItemsByReason");

	Params::InventorySubsystem_PopAddedItemsByReason Parms{};

	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsResult != nullptr)
		*ItemsResult = std::move(Parms.ItemsResult);
}


// Function MasterServerPlugin.InventorySubsystem.PopAddedItemsByReasons
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<EItemChangeReason>               Reasons                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FBlueprintOnlineItem>     ItemsResult                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventorySubsystem::PopAddedItemsByReasons(const TArray<EItemChangeReason>& Reasons, TArray<struct FBlueprintOnlineItem>* ItemsResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "PopAddedItemsByReasons");

	Params::InventorySubsystem_PopAddedItemsByReasons Parms{};

	Parms.Reasons = std::move(Reasons);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsResult != nullptr)
		*ItemsResult = std::move(Parms.ItemsResult);
}


// Function MasterServerPlugin.InventorySubsystem.PopAllAddedItems
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FBlueprintOnlineItem>     ItemsResult                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UInventorySubsystem::PopAllAddedItems(TArray<struct FBlueprintOnlineItem>* ItemsResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "PopAllAddedItems");

	Params::InventorySubsystem_PopAllAddedItems Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (ItemsResult != nullptr)
		*ItemsResult = std::move(Parms.ItemsResult);
}


// Function MasterServerPlugin.InventorySubsystem.RequestInventory
// (Final, Native, Public)

void UInventorySubsystem::RequestInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventorySubsystem", "RequestInventory");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerLoginCallbackProxy.MasterServerLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerLoginCallbackProxy*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerLoginCallbackProxy* UMasterServerLoginCallbackProxy::MasterServerLogin(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager, const class FString& UserName, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerLoginCallbackProxy", "MasterServerLogin");

	Params::MasterServerLoginCallbackProxy_MasterServerLogin Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;
	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerLoginCallbackProxy.MasterServerRegisterAndLogin
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           UserName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Password                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerLoginCallbackProxy*  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerLoginCallbackProxy* UMasterServerLoginCallbackProxy::MasterServerRegisterAndLogin(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager, const class FString& UserName, const class FString& Password)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerLoginCallbackProxy", "MasterServerRegisterAndLogin");

	Params::MasterServerLoginCallbackProxy_MasterServerRegisterAndLogin Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;
	Parms.UserName = std::move(UserName);
	Parms.Password = std::move(Password);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerPingCallbackProxy.MasterServerPing
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerPingCallbackProxy*   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerPingCallbackProxy* UMasterServerPingCallbackProxy::MasterServerPing(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerPingCallbackProxy", "MasterServerPing");

	Params::MasterServerPingCallbackProxy_MasterServerPing Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerMatchFillAPotCallbackProxy.MatchFillAPot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WantedRegion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerMatchFillAPotCallbackProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerMatchFillAPotCallbackProxy* UMasterServerMatchFillAPotCallbackProxy::MatchFillAPot(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager, int32 WantedRegion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerMatchFillAPotCallbackProxy", "MatchFillAPot");

	Params::MasterServerMatchFillAPotCallbackProxy_MatchFillAPot Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;
	Parms.WantedRegion = WantedRegion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerMatchFillAPotCallbackProxy.MatchFillAPotJoinFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerMatchFillAPotCallbackProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerMatchFillAPotCallbackProxy* UMasterServerMatchFillAPotCallbackProxy::MatchFillAPotJoinFriend(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerMatchFillAPotCallbackProxy", "MatchFillAPotJoinFriend");

	Params::MasterServerMatchFillAPotCallbackProxy_MatchFillAPotJoinFriend Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerMatchFillAPotCallbackProxy.MatchFillAPotWithFriend
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerManager*             MasterServerManager                                    (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   WantedRegion                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FriendAccountId                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMasterServerMatchFillAPotCallbackProxy*ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMasterServerMatchFillAPotCallbackProxy* UMasterServerMatchFillAPotCallbackProxy::MatchFillAPotWithFriend(class UObject* WorldContextObject, class UMasterServerManager* MasterServerManager, int32 WantedRegion, int32 FriendAccountId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("MasterServerMatchFillAPotCallbackProxy", "MatchFillAPotWithFriend");

	Params::MasterServerMatchFillAPotCallbackProxy_MatchFillAPotWithFriend Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MasterServerManager = MasterServerManager;
	Parms.WantedRegion = WantedRegion;
	Parms.FriendAccountId = FriendAccountId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerManager.CancelMatchFillAPot
// (Final, Native, Public, BlueprintCallable)

void UMasterServerManager::CancelMatchFillAPot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "CancelMatchFillAPot");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InA                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InC                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InD                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::Connect(int32 InA, int32 InB, int32 InC, int32 InD, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "Connect");

	Params::MasterServerManager_Connect Parms{};

	Parms.InA = InA;
	Parms.InB = InB;
	Parms.InC = InC;
	Parms.InD = InD;
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.ConnectHost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           HostName                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMasterServerManager::ConnectHost(const class FString& HostName, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "ConnectHost");

	Params::MasterServerManager_ConnectHost Parms{};

	Parms.HostName = std::move(HostName);
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerManager.Disconnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    AutomaticalReconnectWhenKeepAlive                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::Disconnect(bool AutomaticalReconnectWhenKeepAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "Disconnect");

	Params::MasterServerManager_Disconnect Parms{};

	Parms.AutomaticalReconnectWhenKeepAlive = AutomaticalReconnectWhenKeepAlive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.GetAccountId
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UMasterServerManager::GetAccountId()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "GetAccountId");

	Params::MasterServerManager_GetAccountId Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerManager.GetIsInMatchmaking
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMasterServerManager::GetIsInMatchmaking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "GetIsInMatchmaking");

	Params::MasterServerManager_GetIsInMatchmaking Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerManager.GetTestSessionSearchResult
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FBlueprintSessionResult UMasterServerManager::GetTestSessionSearchResult()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "GetTestSessionSearchResult");

	Params::MasterServerManager_GetTestSessionSearchResult Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction MasterServerPlugin.MasterServerManager.InitializeClientsForMatchMaking__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasOutParams)
// Parameters:
// TArray<class FString>                   UserIds                                                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int32>                           ObjectiveTeam                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UMasterServerManager::InitializeClientsForMatchMaking__DelegateSignature(const TArray<class FString>& UserIds, const TArray<int32>& ObjectiveTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "InitializeClientsForMatchMaking__DelegateSignature");

	Params::MasterServerManager_InitializeClientsForMatchMaking__DelegateSignature Parms{};

	Parms.UserIds = std::move(UserIds);
	Parms.ObjectiveTeam = std::move(ObjectiveTeam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.MasterServerManager.InitializeInstanceId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InstanceId                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   IsStaticInstance                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::InitializeInstanceId(int32 InstanceId, uint8 IsStaticInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "InitializeInstanceId");

	Params::MasterServerManager_InitializeInstanceId Parms{};

	Parms.InstanceId = InstanceId;
	Parms.IsStaticInstance = IsStaticInstance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.InitializeUnsecureUserId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           UnsecureUserId                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Language                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::InitializeUnsecureUserId(const class FString& UnsecureUserId, const class FString& Language)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "InitializeUnsecureUserId");

	Params::MasterServerManager_InitializeUnsecureUserId Parms{};

	Parms.UnsecureUserId = std::move(UnsecureUserId);
	Parms.Language = std::move(Language);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.InvalidateAccessToken
// (Final, Native, Public, BlueprintCallable)

void UMasterServerManager::InvalidateAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "InvalidateAccessToken");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMasterServerManager::IsConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "IsConnected");

	Params::MasterServerManager_IsConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.MasterServerManager.IsTearingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UMasterServerManager::IsTearingDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "IsTearingDown");

	Params::MasterServerManager_IsTearingDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// DelegateFunction MasterServerPlugin.MasterServerManager.NotifyQuestChange__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// EQuestChangeReason                      Reason                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   AccountQuestId                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::NotifyQuestChange__DelegateSignature(EQuestChangeReason Reason, int64 AccountQuestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "NotifyQuestChange__DelegateSignature");

	Params::MasterServerManager_NotifyQuestChange__DelegateSignature Parms{};

	Parms.Reason = Reason;
	Parms.AccountQuestId = AccountQuestId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.MasterServerManager.OnConnectionEstablished
// (Event, Public, BlueprintEvent)

void UMasterServerManager::OnConnectionEstablished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "OnConnectionEstablished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MasterServerPlugin.MasterServerManager.OnDisconnected
// (Event, Public, BlueprintEvent)

void UMasterServerManager::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "OnDisconnected");

	UObject::ProcessEvent(Func, nullptr);
}


// DelegateFunction MasterServerPlugin.MasterServerManager.PlayersFoundForMatchMaking__DelegateSignature
// (MulticastDelegate, Public, Delegate)

void UMasterServerManager::PlayersFoundForMatchMaking__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "PlayersFoundForMatchMaking__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MasterServerPlugin.MasterServerManager.RequestEarlyAccessItem
// (Final, Native, Public, BlueprintCallable)

void UMasterServerManager::RequestEarlyAccessItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "RequestEarlyAccessItem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.SendServerSystemMessage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::SendServerSystemMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "SendServerSystemMessage");

	Params::MasterServerManager_SendServerSystemMessage Parms{};

	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerManager.SetAccessToken
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Param_SetAccessToken                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerManager::SetAccessToken(const class FString& Param_SetAccessToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerManager", "SetAccessToken");

	Params::MasterServerManager_SetAccessToken Parms{};

	Parms.Param_SetAccessToken = std::move(Param_SetAccessToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerSubsystem.SetNewMasterServerManager
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UNewMasterServerManager*          Param_SetNewMasterServerManager                        (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerSubsystem::SetNewMasterServerManager(class UNewMasterServerManager* Param_SetNewMasterServerManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerSubsystem", "SetNewMasterServerManager");

	Params::MasterServerSubsystem_SetNewMasterServerManager Parms{};

	Parms.Param_SetNewMasterServerManager = Param_SetNewMasterServerManager;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.MasterServerSubsystem.GetNewMasterServerManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UNewMasterServerManager*          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UNewMasterServerManager* UMasterServerSubsystem::GetNewMasterServerManager() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MasterServerSubsystem", "GetNewMasterServerManager");

	Params::MasterServerSubsystem_GetNewMasterServerManager Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.BPTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::BPTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "BPTick");

	Params::NewMasterServerManager_BPTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.NewMasterServerManager.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Ip                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Port                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Resource                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNewMasterServerManager::Connect(const class FString& Ip, int32 Port, const class FString& Resource)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "Connect");

	Params::NewMasterServerManager_Connect Parms{};

	Parms.Ip = std::move(Ip);
	Parms.Port = Port;
	Parms.Resource = std::move(Resource);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.DeclarePresence
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           PresenceString                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::DeclarePresence(const class FString& PresenceString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "DeclarePresence");

	Params::NewMasterServerManager_DeclarePresence Parms{};

	Parms.PresenceString = std::move(PresenceString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.Disconnect
// (Final, Native, Public, BlueprintCallable)

void UNewMasterServerManager::Disconnect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "Disconnect");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.GetPresenceForUser
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UOnlineUserRef*                   User                                                   (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bIsValid                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAccountPresenceEntry            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAccountPresenceEntry UNewMasterServerManager::GetPresenceForUser(class UOnlineUserRef* User, bool* bIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "GetPresenceForUser");

	Params::NewMasterServerManager_GetPresenceForUser Parms{};

	Parms.User = User;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (bIsValid != nullptr)
		*bIsValid = Parms.bIsValid;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.IsConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNewMasterServerManager::IsConnected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "IsConnected");

	Params::NewMasterServerManager_IsConnected Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.IsRestApiAccessTokenValid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// double                                  MaxExpiryDeltaSeconds                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNewMasterServerManager::IsRestApiAccessTokenValid(double MaxExpiryDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "IsRestApiAccessTokenValid");

	Params::NewMasterServerManager_IsRestApiAccessTokenValid Parms{};

	Parms.MaxExpiryDeltaSeconds = MaxExpiryDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.OnConnected
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ErrorMessage                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::OnConnected(bool Success, const class FString& ErrorMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "OnConnected");

	Params::NewMasterServerManager_OnConnected Parms{};

	Parms.Success = Success;
	Parms.ErrorMessage = std::move(ErrorMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.NewMasterServerManager.OnDisconnected
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                                   StatusCode                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Reason                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bWasClean                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::OnDisconnected(int32 StatusCode, const class FString& Reason, bool bWasClean)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "OnDisconnected");

	Params::NewMasterServerManager_OnDisconnected Parms{};

	Parms.StatusCode = StatusCode;
	Parms.Reason = std::move(Reason);
	Parms.bWasClean = bWasClean;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.NewMasterServerManager.OnLoginResponse
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AccountId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::OnLoginResponse(bool Success, int32 AccountId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "OnLoginResponse");

	Params::NewMasterServerManager_OnLoginResponse Parms{};

	Parms.Success = Success;
	Parms.AccountId = AccountId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MasterServerPlugin.NewMasterServerManager.RequestAccountSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class FString>                   SettingNames                                           (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNewMasterServerManager::RequestAccountSettings(const TArray<class FString>& SettingNames)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "RequestAccountSettings");

	Params::NewMasterServerManager_RequestAccountSettings Parms{};

	Parms.SettingNames = std::move(SettingNames);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.RequestPresenceForAccounts
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UOnlineUserRef*>           Users                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNewMasterServerManager::RequestPresenceForAccounts(const TArray<class UOnlineUserRef*>& Users)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "RequestPresenceForAccounts");

	Params::NewMasterServerManager_RequestPresenceForAccounts Parms{};

	Parms.Users = std::move(Users);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.SendLoadingCompleted
// (Final, Native, Public, BlueprintCallable)

void UNewMasterServerManager::SendLoadingCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "SendLoadingCompleted");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.SendLoginPacket
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           AccessToken                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::SendLoginPacket(const class FString& AccessToken)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "SendLoginPacket");

	Params::NewMasterServerManager_SendLoginPacket Parms{};

	Parms.AccessToken = std::move(AccessToken);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.SendRequestAccountInfo
// (Final, Native, Public, BlueprintCallable)

void UNewMasterServerManager::SendRequestAccountInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "SendRequestAccountInfo");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.SetAccountSettings
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FAccountSetting>          Settings                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UNewMasterServerManager::SetAccountSettings(const TArray<struct FAccountSetting>& Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "SetAccountSettings");

	Params::NewMasterServerManager_SetAccountSettings Parms{};

	Parms.Settings = std::move(Settings);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.SetupRestApiData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           ServerHostname                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ServerPort                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AccountId                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::SetupRestApiData(const class FString& ServerHostname, int32 ServerPort, int32 AccountId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "SetupRestApiData");

	Params::NewMasterServerManager_SetupRestApiData Parms{};

	Parms.ServerHostname = std::move(ServerHostname);
	Parms.ServerPort = ServerPort;
	Parms.AccountId = AccountId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.UpdateRestApiAccessToken
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class FString                           AccessToken                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        AccessTokenExpiryTime                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNewMasterServerManager::UpdateRestApiAccessToken(const class FString& AccessToken, const struct FDateTime& AccessTokenExpiryTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "UpdateRestApiAccessToken");

	Params::NewMasterServerManager_UpdateRestApiAccessToken Parms{};

	Parms.AccessToken = std::move(AccessToken);
	Parms.AccessTokenExpiryTime = std::move(AccessTokenExpiryTime);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.NewMasterServerManager.GetServerBrowser
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UServerBrowser*                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UServerBrowser* UNewMasterServerManager::GetServerBrowser() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "GetServerBrowser");

	Params::NewMasterServerManager_GetServerBrowser Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.HasRuntimeAccountFlag
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ERuntimeAccountFlags                    Flag                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNewMasterServerManager::HasRuntimeAccountFlag(ERuntimeAccountFlags Flag) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "HasRuntimeAccountFlag");

	Params::NewMasterServerManager_HasRuntimeAccountFlag Parms{};

	Parms.Flag = Flag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.NewMasterServerManager.IsTearingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UNewMasterServerManager::IsTearingDown() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewMasterServerManager", "IsTearingDown");

	Params::NewMasterServerManager_IsTearingDown Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.ServerBrowser.ClearCachedPings
// (Final, Native, Public, BlueprintCallable)

void UServerBrowser::ClearCachedPings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "ClearCachedPings");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.PingAddress
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                           Address                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ServerID                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UServerBrowser::PingAddress(const class FString& Address, const class FString& ServerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "PingAddress");

	Params::ServerBrowser_PingAddress Parms{};

	Parms.Address = std::move(Address);
	Parms.ServerID = std::move(ServerID);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.PingServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FBlueprintSessionResult          BlueprintSessionResult                                 (Parm, NativeAccessSpecifierPublic)

void UServerBrowser::PingServer(const struct FBlueprintSessionResult& BlueprintSessionResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "PingServer");

	Params::ServerBrowser_PingServer Parms{};

	Parms.BlueprintSessionResult = std::move(BlueprintSessionResult);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.RegisterGameServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameServerInfo                  GameServerInfo                                         (Parm, NativeAccessSpecifierPublic)

void UServerBrowser::RegisterGameServer(const struct FGameServerInfo& GameServerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "RegisterGameServer");

	Params::ServerBrowser_RegisterGameServer Parms{};

	Parms.GameServerInfo = std::move(GameServerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.RequestServerList
// (Final, Native, Public, BlueprintCallable)

void UServerBrowser::RequestServerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "RequestServerList");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.SendServerBrowserInfo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FGameServerInfo                  GameServerInfo                                         (Parm, NativeAccessSpecifierPublic)

void UServerBrowser::SendServerBrowserInfo(const struct FGameServerInfo& GameServerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "SendServerBrowserInfo");

	Params::ServerBrowser_SendServerBrowserInfo Parms{};

	Parms.GameServerInfo = std::move(GameServerInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.StartGameServerSession
// (Final, Native, Public, BlueprintCallable)

void UServerBrowser::StartGameServerSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "StartGameServerSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.StopGameServerSession
// (Final, Native, Public, BlueprintCallable)

void UServerBrowser::StopGameServerSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "StopGameServerSession");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.UnregisterGameServer
// (Final, Native, Public, BlueprintCallable)

void UServerBrowser::UnregisterGameServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "UnregisterGameServer");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.GetServerList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FBlueprintSessionResult>  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FBlueprintSessionResult> UServerBrowser::GetServerList() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "GetServerList");

	Params::ServerBrowser_GetServerList Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.ServerBrowser.HandleRefreshRequiredRequest
// (Final, Native, Public, Const)

void UServerBrowser::HandleRefreshRequiredRequest() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "HandleRefreshRequiredRequest");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.ServerBrowser.HasActiveGameSession
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UServerBrowser::HasActiveGameSession() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "HasActiveGameSession");

	Params::ServerBrowser_HasActiveGameSession Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.ServerBrowser.SendGameServerKeepAlive
// (Final, Native, Public, BlueprintCallable, Const)

void UServerBrowser::SendGameServerKeepAlive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ServerBrowser", "SendGameServerKeepAlive");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function MasterServerPlugin.WitchItPacket.ParseFromBytes
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Bytes                                                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWitchItPacket::ParseFromBytes(const TArray<uint8>& Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ParseFromBytes");

	Params::WitchItPacket_ParseFromBytes Parms{};

	Parms.Bytes = std::move(Bytes);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.PutArray
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<uint8>                           Bytes                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutArray(const TArray<uint8>& Bytes, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutArray");

	Params::WitchItPacket_PutArray Parms{};

	Parms.Bytes = std::move(Bytes);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutFloat32
// (Final, Native, Public, HasOutParams)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutFloat32(float Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutFloat32");

	Params::WitchItPacket_PutFloat32 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutInt16
// (Final, Native, Public, HasOutParams)
// Parameters:
// int16                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutInt16(int16 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutInt16");

	Params::WitchItPacket_PutInt16 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutInt32
// (Final, Native, Public, HasOutParams)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutInt32(int32 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutInt32");

	Params::WitchItPacket_PutInt32 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutInt64
// (Final, Native, Public, HasOutParams)
// Parameters:
// int64                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutInt64(int64 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutInt64");

	Params::WitchItPacket_PutInt64 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutInt8
// (Final, Native, Public, HasOutParams)
// Parameters:
// int8                                    Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutInt8(int8 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutInt8");

	Params::WitchItPacket_PutInt8 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutString
// (Final, Native, Public, HasOutParams)
// Parameters:
// class FString                           Value                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutString(const class FString& Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutString");

	Params::WitchItPacket_PutString Parms{};

	Parms.Value = std::move(Value);
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutUInt16
// (Final, Native, Public, HasOutParams)
// Parameters:
// uint16                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutUInt16(uint16 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutUInt16");

	Params::WitchItPacket_PutUInt16 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutUInt32
// (Final, Native, Public, HasOutParams)
// Parameters:
// uint32                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutUInt32(uint32 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutUInt32");

	Params::WitchItPacket_PutUInt32 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutUInt64
// (Final, Native, Public, HasOutParams)
// Parameters:
// uint64                                  Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutUInt64(uint64 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutUInt64");

	Params::WitchItPacket_PutUInt64 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.PutUInt8
// (Final, Native, Public, HasOutParams)
// Parameters:
// uint8                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWitchItPacket::PutUInt8(uint8 Value, int32 Param_Index, int32* AdvancedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "PutUInt8");

	Params::WitchItPacket_PutUInt8 Parms{};

	Parms.Value = Value;
	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;
}


// Function MasterServerPlugin.WitchItPacket.ReadBytes
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UWitchItPacket::ReadBytes(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadBytes");

	Params::WitchItPacket_ReadBytes Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadFloat32
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWitchItPacket::ReadFloat32(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadFloat32");

	Params::WitchItPacket_ReadFloat32 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadInt16
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int16                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int16 UWitchItPacket::ReadInt16(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadInt16");

	Params::WitchItPacket_ReadInt16 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadInt32
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWitchItPacket::ReadInt32(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadInt32");

	Params::WitchItPacket_ReadInt32 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadInt64
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 UWitchItPacket::ReadInt64(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadInt64");

	Params::WitchItPacket_ReadInt64 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadInt8
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int8                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int8 UWitchItPacket::ReadInt8(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadInt8");

	Params::WitchItPacket_ReadInt8 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadString
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWitchItPacket::ReadString(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadString");

	Params::WitchItPacket_ReadString Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadUInt16
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint16 UWitchItPacket::ReadUInt16(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadUInt16");

	Params::WitchItPacket_ReadUInt16 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadUInt32
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint32 UWitchItPacket::ReadUInt32(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadUInt32");

	Params::WitchItPacket_ReadUInt32 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadUInt64
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint64 UWitchItPacket::ReadUInt64(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadUInt64");

	Params::WitchItPacket_ReadUInt64 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.ReadUInt8
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// int32                                   Param_Index                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   AdvancedPosition                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWitchItPacket::ReadUInt8(int32 Param_Index, int32* AdvancedPosition) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "ReadUInt8");

	Params::WitchItPacket_ReadUInt8 Parms{};

	Parms.Param_Index = Param_Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AdvancedPosition != nullptr)
		*AdvancedPosition = Parms.AdvancedPosition;

	return Parms.ReturnValue;
}


// Function MasterServerPlugin.WitchItPacket.SerializeToBytes
// (Final, Native, Public, Const)
// Parameters:
// TArray<uint8>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<uint8> UWitchItPacket::SerializeToBytes() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WitchItPacket", "SerializeToBytes");

	Params::WitchItPacket_SerializeToBytes Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

