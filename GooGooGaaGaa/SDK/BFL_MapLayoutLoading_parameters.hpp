#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_MapLayoutLoading

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"


namespace SDK::Params
{

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.AddToSwitchIdMapIfValidId
// 0x0070 (0x0070 - 0x0000)
struct BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId final
{
public:
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         ID;                                                // 0x0050(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 ActorToAdd;                                        // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId) == 0x000008, "Wrong alignment on BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId");
static_assert(sizeof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId) == 0x000070, "Wrong size on BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId");
static_assert(offsetof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId, SwitchIdMap) == 0x000000, "Member 'BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId, ID) == 0x000050, "Member 'BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId::ID' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId, ActorToAdd) == 0x000058, "Member 'BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId::ActorToAdd' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId, __WorldContext) == 0x000060, "Member 'BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.GetUniformScaleOfWeathervane
// 0x01B0 (0x01B0 - 0x0000)
struct BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CorrectedTransform;                                // 0x0070(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane");
static_assert(sizeof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane) == 0x0001B0, "Wrong size on BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, Transform) == 0x000000, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::Transform' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, __WorldContext) == 0x000060, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CorrectedTransform) == 0x000070, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CorrectedTransform' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakVector_X) == 0x000118, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakVector_Y) == 0x000120, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_BreakVector_Z) == 0x000128, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000130, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadLights
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_MapLayoutLoading_C_LoadLights final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPlaceableLightToSave>          LightsToLoad;                                      // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlaceableLight_C*>           LoadedLights;                                      // 0x0078(0x0010)(Parm, OutParm)
	TArray<class ABP_PlaceableLight_C*>           Lights;                                            // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ABP_PlaceableLight_C*                   CurrentLight;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlaceableLightToSave                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0078)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue; // 0x0190(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Placeable_Light;      // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableLight_C*                   CallFunc_SpawnPlaceableLight_SpawnedActor;         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_LoadLights) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_LoadLights");
static_assert(sizeof(BFL_MapLayoutLoading_C_LoadLights) == 0x0001E0, "Wrong size on BFL_MapLayoutLoading_C_LoadLights");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_LoadLights::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_LoadLights::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, LightsToLoad) == 0x000060, "Member 'BFL_MapLayoutLoading_C_LoadLights::LightsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, __WorldContext) == 0x000070, "Member 'BFL_MapLayoutLoading_C_LoadLights::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, LoadedLights) == 0x000078, "Member 'BFL_MapLayoutLoading_C_LoadLights::LoadedLights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, Lights) == 0x000088, "Member 'BFL_MapLayoutLoading_C_LoadLights::Lights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CurrentLight) == 0x000098, "Member 'BFL_MapLayoutLoading_C_LoadLights::CurrentLight' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_LoadLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BFL_MapLayoutLoading_C_LoadLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue) == 0x000190, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0001B8, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, K2Node_ClassDynamicCast_AsBP_Placeable_Light) == 0x0001C0, "Member 'BFL_MapLayoutLoading_C_LoadLights::K2Node_ClassDynamicCast_AsBP_Placeable_Light' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, K2Node_ClassDynamicCast_bSuccess) == 0x0001C8, "Member 'BFL_MapLayoutLoading_C_LoadLights::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_SpawnPlaceableLight_SpawnedActor) == 0x0001D0, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_SpawnPlaceableLight_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadLights, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BFL_MapLayoutLoading_C_LoadLights::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadMapLayout
// 0x0168 (0x0168 - 0x0000)
struct BFL_MapLayoutLoading_C_LoadMapLayout final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPropToSave>                    PropsToLoad;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPlaceableStaticToSave>         StaticsToLoad;                                     // 0x0070(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPlaceableLightToSave>          LightsToLoad;                                      // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSwitchToSave>                  SwitchesToLoad;                                    // 0x0090(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_StaticMeshProp_C*>            LoadedProps;                                       // 0x00A8(0x0010)(Parm, OutParm)
	TArray<class ABP_PlaceableStaticProp_C*>      LoadedStatics;                                     // 0x00B8(0x0010)(Parm, OutParm)
	TArray<class ABP_PlaceableLight_C*>           LoadedLights;                                      // 0x00C8(0x0010)(Parm, OutParm)
	TArray<class ABP_Switch_C*>                   LoadedSwitches;                                    // 0x00D8(0x0010)(Parm, OutParm)
	TArray<class ABP_Switch_C*>                   Switches;                                          // 0x00E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlaceableLight_C*>           Lights;                                            // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_PlaceableStaticProp_C*>      Statics;                                           // 0x0108(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AB_StaticMeshProp_C*>            Props;                                             // 0x0118(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_Switch_C*>                   CallFunc_LoadSwitches_LoadedSwitches;              // 0x0128(0x0010)(ReferenceParm)
	TArray<class ABP_PlaceableLight_C*>           CallFunc_LoadLights_LoadedLights;                  // 0x0138(0x0010)(ReferenceParm)
	TArray<class ABP_PlaceableStaticProp_C*>      CallFunc_LoadStatics_LoadedStatics;                // 0x0148(0x0010)(ReferenceParm)
	TArray<class AB_StaticMeshProp_C*>            CallFunc_LoadProps_LoadedProps;                    // 0x0158(0x0010)(ReferenceParm)
};
static_assert(alignof(BFL_MapLayoutLoading_C_LoadMapLayout) == 0x000008, "Wrong alignment on BFL_MapLayoutLoading_C_LoadMapLayout");
static_assert(sizeof(BFL_MapLayoutLoading_C_LoadMapLayout) == 0x000168, "Wrong size on BFL_MapLayoutLoading_C_LoadMapLayout");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, PropsToLoad) == 0x000060, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::PropsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, StaticsToLoad) == 0x000070, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::StaticsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, LightsToLoad) == 0x000080, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::LightsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, SwitchesToLoad) == 0x000090, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::SwitchesToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, __WorldContext) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, LoadedProps) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::LoadedProps' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, LoadedStatics) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::LoadedStatics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, LoadedLights) == 0x0000C8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::LoadedLights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, LoadedSwitches) == 0x0000D8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::LoadedSwitches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, Switches) == 0x0000E8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::Switches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, Lights) == 0x0000F8, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::Lights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, Statics) == 0x000108, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::Statics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, Props) == 0x000118, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::Props' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, CallFunc_LoadSwitches_LoadedSwitches) == 0x000128, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::CallFunc_LoadSwitches_LoadedSwitches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, CallFunc_LoadLights_LoadedLights) == 0x000138, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::CallFunc_LoadLights_LoadedLights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, CallFunc_LoadStatics_LoadedStatics) == 0x000148, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::CallFunc_LoadStatics_LoadedStatics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadMapLayout, CallFunc_LoadProps_LoadedProps) == 0x000158, "Member 'BFL_MapLayoutLoading_C_LoadMapLayout::CallFunc_LoadProps_LoadedProps' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadProps
// 0x01C0 (0x01C0 - 0x0000)
struct BFL_MapLayoutLoading_C_LoadProps final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPropToSave>                    PropsToLoad;                                       // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_StaticMeshProp_C*>            LoadedProps;                                       // 0x0078(0x0010)(Parm, OutParm)
	class AB_StaticMeshProp_C*                    CurrentProp;                                       // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_StaticMeshProp_C*>            Props;                                             // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPropToSave                            CallFunc_Array_Get_Item;                           // 0x00B0(0x0068)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue; // 0x0180(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_SpawnPropOrActionProp_SpawnedActor;       // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_LoadProps) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_LoadProps");
static_assert(sizeof(BFL_MapLayoutLoading_C_LoadProps) == 0x0001C0, "Wrong size on BFL_MapLayoutLoading_C_LoadProps");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_LoadProps::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_LoadProps::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, PropsToLoad) == 0x000060, "Member 'BFL_MapLayoutLoading_C_LoadProps::PropsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, __WorldContext) == 0x000070, "Member 'BFL_MapLayoutLoading_C_LoadProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, LoadedProps) == 0x000078, "Member 'BFL_MapLayoutLoading_C_LoadProps::LoadedProps' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CurrentProp) == 0x000088, "Member 'BFL_MapLayoutLoading_C_LoadProps::CurrentProp' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, Props) == 0x000090, "Member 'BFL_MapLayoutLoading_C_LoadProps::Props' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_LoadProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BFL_MapLayoutLoading_C_LoadProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue) == 0x000180, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0001A8, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadProps, CallFunc_SpawnPropOrActionProp_SpawnedActor) == 0x0001B8, "Member 'BFL_MapLayoutLoading_C_LoadProps::CallFunc_SpawnPropOrActionProp_SpawnedActor' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadStatics
// 0x01C0 (0x01C0 - 0x0000)
struct BFL_MapLayoutLoading_C_LoadStatics final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FPlaceableStaticToSave>         StaticsToLoad;                                     // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlaceableStaticProp_C*>      LoadedStatics;                                     // 0x0078(0x0010)(Parm, OutParm)
	class ABP_PlaceableStaticProp_C*              CurrentStatic;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PlaceableStaticProp_C*>      Statics;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlaceableStaticToSave                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0060)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0xB];                                      // 0x0115(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue; // 0x0180(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableStaticProp_C*              CallFunc_SpawnStaticOrActionPlaceable_SpawnedActor; // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_LoadStatics) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_LoadStatics");
static_assert(sizeof(BFL_MapLayoutLoading_C_LoadStatics) == 0x0001C0, "Wrong size on BFL_MapLayoutLoading_C_LoadStatics");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_LoadStatics::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_LoadStatics::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, StaticsToLoad) == 0x000060, "Member 'BFL_MapLayoutLoading_C_LoadStatics::StaticsToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, __WorldContext) == 0x000070, "Member 'BFL_MapLayoutLoading_C_LoadStatics::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, LoadedStatics) == 0x000078, "Member 'BFL_MapLayoutLoading_C_LoadStatics::LoadedStatics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CurrentStatic) == 0x000088, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CurrentStatic' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, Statics) == 0x000090, "Member 'BFL_MapLayoutLoading_C_LoadStatics::Statics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_LoadStatics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BFL_MapLayoutLoading_C_LoadStatics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_Array_Length_ReturnValue) == 0x000110, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue) == 0x000180, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0001A8, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadStatics, CallFunc_SpawnStaticOrActionPlaceable_SpawnedActor) == 0x0001B8, "Member 'BFL_MapLayoutLoading_C_LoadStatics::CallFunc_SpawnStaticOrActionPlaceable_SpawnedActor' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadSwitches
// 0x02C0 (0x02C0 - 0x0000)
struct BFL_MapLayoutLoading_C_LoadSwitches final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, class AActor*>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSwitchToSave>                  SwitchesToLoad;                                    // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Switch_C*>                   LoadedSwitches;                                    // 0x0078(0x0010)(Parm, OutParm)
	class AActor*                                 CurrentActor;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_Switch_C*                           CurrentSwitch;                                     // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Switch_C*>                   Switches;                                          // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSwitchToSave                          CallFunc_Array_Get_Item;                           // 0x00C8(0x0078)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSwitchToSave                          CallFunc_Array_Get_Item_2;                         // 0x0148(0x0078)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0xB];                                      // 0x01C5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue; // 0x0230(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Switch;               // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_SpawnSwitch_SpawnedActor;                 // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_Array_Get_Item_3;                         // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Map_Find_Value;                           // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_LoadSwitches) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_LoadSwitches");
static_assert(sizeof(BFL_MapLayoutLoading_C_LoadSwitches) == 0x0002C0, "Wrong size on BFL_MapLayoutLoading_C_LoadSwitches");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, SwitchesToLoad) == 0x000060, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::SwitchesToLoad' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, __WorldContext) == 0x000070, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, LoadedSwitches) == 0x000078, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::LoadedSwitches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CurrentActor) == 0x000088, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CurrentActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CurrentSwitch) == 0x000090, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CurrentSwitch' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Switches) == 0x000098, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Switches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Array_Index_Variable_2) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Length_ReturnValue) == 0x000140, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Get_Item_1) == 0x000144, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Get_Item_2) == 0x000148, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Length_ReturnValue_1) == 0x0001C0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue) == 0x000230, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Length_ReturnValue_2) == 0x000258, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000260, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Less_IntInt_ReturnValue_1) == 0x000268, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, K2Node_ClassDynamicCast_AsBP_Switch) == 0x000270, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::K2Node_ClassDynamicCast_AsBP_Switch' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, K2Node_ClassDynamicCast_bSuccess) == 0x000278, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_SpawnSwitch_SpawnedActor) == 0x000280, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_SpawnSwitch_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, Temp_int_Loop_Counter_Variable_2) == 0x000288, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00028C, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Less_IntInt_ReturnValue_2) == 0x00028D, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Add_IntInt_ReturnValue_2) == 0x000290, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Add_ReturnValue) == 0x000294, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Add_ReturnValue_1) == 0x000298, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Array_Get_Item_3) == 0x0002A0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Map_Find_Value) == 0x0002A8, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_LoadSwitches, CallFunc_Map_Find_ReturnValue) == 0x0002B0, "Member 'BFL_MapLayoutLoading_C_LoadSwitches::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.SpawnPropOrActionProp
// 0x0110 (0x0110 - 0x0000)
struct BFL_MapLayoutLoading_C_SpawnPropOrActionProp final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartAwake;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFrozen;                                          // 0x0081(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Activated;                                         // 0x0082(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    SpawnedActor;                                      // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ActionPropClass;                                   // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    SpawnedProp;                                       // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Static_Mesh_Action_Prop; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetDefaultObject_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshActionProp_C*              K2Node_DynamicCast_AsB_Static_Mesh_Action_Prop;    // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Static_Mesh_Prop;      // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_SpawnProp_SpawnedActor;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_SpawnActionProp_SpawnedActor;             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_SpawnPropOrActionProp");
static_assert(sizeof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp) == 0x000110, "Wrong size on BFL_MapLayoutLoading_C_SpawnPropOrActionProp");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Class_0) == 0x000010, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Class_0' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Transform) == 0x000020, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Transform' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, StartAwake) == 0x000080, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::StartAwake' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, IsFrozen) == 0x000081, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::IsFrozen' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Activated) == 0x000082, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Activated' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, __WorldContext) == 0x000088, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, SpawnedActor) == 0x000090, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, ActionPropClass) == 0x000098, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::ActionPropClass' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, SpawnedProp) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::SpawnedProp' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Temp_bool_Variable) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_ClassDynamicCast_AsB_Static_Mesh_Action_Prop) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_ClassDynamicCast_AsB_Static_Mesh_Action_Prop' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_ClassDynamicCast_bSuccess) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, CallFunc_GetDefaultObject_ReturnValue) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::CallFunc_GetDefaultObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, Temp_bool_Variable_1) == 0x0000C8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_DynamicCast_AsB_Static_Mesh_Action_Prop) == 0x0000D0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_DynamicCast_AsB_Static_Mesh_Action_Prop' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D9, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_ClassDynamicCast_AsB_Static_Mesh_Prop) == 0x0000E0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_ClassDynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_ClassDynamicCast_bSuccess_1) == 0x0000E8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, CallFunc_SpawnProp_SpawnedActor) == 0x0000F0, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::CallFunc_SpawnProp_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, K2Node_Select_Default) == 0x0000F8, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnPropOrActionProp, CallFunc_SpawnActionProp_SpawnedActor) == 0x000100, "Member 'BFL_MapLayoutLoading_C_SpawnPropOrActionProp::CallFunc_SpawnActionProp_SpawnedActor' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.SpawnStaticOrActionPlaceable
// 0x0220 (0x0220 - 0x0000)
struct BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable final
{
public:
	TScriptInterface<class IIMapLayoutLoading_C>  Target;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0020(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Activated;                                         // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaceableStaticProp_C*              SpawnedActor;                                      // 0x0090(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             StaticsTransform;                                  // 0x00A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaceableStaticProp_C*              SpawnedStatic;                                     // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Action_Placable;      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaceableStaticProp_C*              CallFunc_SpawnActionPlaceableStatic_SpawnedActor;  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Placeable_Static_Prop; // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_203[0x5];                                      // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableStaticProp_C*              CallFunc_SpawnPlaceableStatic_SpawnedActor;        // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable");
static_assert(sizeof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable) == 0x000220, "Wrong size on BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, Target) == 0x000000, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::Target' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, Class_0) == 0x000010, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::Class_0' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, Transform) == 0x000020, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::Transform' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, Activated) == 0x000080, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::Activated' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, __WorldContext) == 0x000088, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, SpawnedActor) == 0x000090, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, StaticsTransform) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::StaticsTransform' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, SpawnedStatic) == 0x000100, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::SpawnedStatic' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, K2Node_ClassDynamicCast_AsBP_Action_Placable) == 0x000108, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::K2Node_ClassDynamicCast_AsBP_Action_Placable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, K2Node_ClassDynamicCast_bSuccess) == 0x000110, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakTransform_Location) == 0x000118, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakTransform_Rotation) == 0x000130, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakVector_X) == 0x000160, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakVector_Y) == 0x000168, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BreakVector_Z) == 0x000170, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000178, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_SpawnActionPlaceableStatic_SpawnedActor) == 0x0001F0, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_SpawnActionPlaceableStatic_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, K2Node_ClassDynamicCast_AsBP_Placeable_Static_Prop) == 0x0001F8, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::K2Node_ClassDynamicCast_AsBP_Placeable_Static_Prop' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, K2Node_ClassDynamicCast_bSuccess_1) == 0x000200, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_ClassIsChildOf_ReturnValue) == 0x000201, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000202, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_SpawnPlaceableStatic_SpawnedActor) == 0x000208, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_SpawnPlaceableStatic_SpawnedActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable, CallFunc_BooleanNOR_ReturnValue) == 0x000210, "Member 'BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreLights
// 0x0210 (0x0210 - 0x0000)
struct BFL_MapLayoutLoading_C_StoreLights final
{
public:
	TArray<class ABP_PlaceableLight_C*>           Lights;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentSwitchId;                                   // 0x0060(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPlaceableLightToSave>          LightStructsToSave;                                // 0x0070(0x0010)(Parm, OutParm)
	class ABP_PlaceableLight_C*                   CurrentLight;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPlaceableLightToSave>          LightsToSave;                                      // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActionBool_Activated;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableLight_C*                   CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0xB];                                       // 0x00C5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPlaceableLightToSave                  K2Node_MakeStruct_PlaceableLightToSave;            // 0x0190(0x0078)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_StoreLights) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_StoreLights");
static_assert(sizeof(BFL_MapLayoutLoading_C_StoreLights) == 0x000210, "Wrong size on BFL_MapLayoutLoading_C_StoreLights");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, Lights) == 0x000000, "Member 'BFL_MapLayoutLoading_C_StoreLights::Lights' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_StoreLights::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CurrentSwitchId) == 0x000060, "Member 'BFL_MapLayoutLoading_C_StoreLights::CurrentSwitchId' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, __WorldContext) == 0x000068, "Member 'BFL_MapLayoutLoading_C_StoreLights::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, LightStructsToSave) == 0x000070, "Member 'BFL_MapLayoutLoading_C_StoreLights::LightStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CurrentLight) == 0x000080, "Member 'BFL_MapLayoutLoading_C_StoreLights::CurrentLight' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, LightsToSave) == 0x000088, "Member 'BFL_MapLayoutLoading_C_StoreLights::LightsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, Temp_int_Loop_Counter_Variable) == 0x000098, "Member 'BFL_MapLayoutLoading_C_StoreLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, Temp_int_Array_Index_Variable) == 0x0000AC, "Member 'BFL_MapLayoutLoading_C_StoreLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, Temp_int_Variable) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_StoreLights::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_GetActionBool_Activated) == 0x0000B4, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_GetActionBool_Activated' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_BreakTransform_Location) == 0x000130, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_BreakTransform_Rotation) == 0x000148, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_BreakTransform_Scale) == 0x000160, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_GetObjectClass_ReturnValue) == 0x000178, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x000180, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, K2Node_MakeStruct_PlaceableLightToSave) == 0x000190, "Member 'BFL_MapLayoutLoading_C_StoreLights::K2Node_MakeStruct_PlaceableLightToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreLights, CallFunc_Add_IntInt_ReturnValue_1) == 0x00020C, "Member 'BFL_MapLayoutLoading_C_StoreLights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreMapLayout
// 0x0160 (0x0160 - 0x0000)
struct BFL_MapLayoutLoading_C_StoreMapLayout final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPropToSave>                    PropsToSave;                                       // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FPlaceableStaticToSave>         PlaceableStaticsToSave;                            // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FPlaceableLightToSave>          PlaceableLightsToSave;                             // 0x0028(0x0010)(Parm, OutParm)
	TArray<struct FSwitchToSave>                  SwitchesToSave;                                    // 0x0038(0x0010)(Parm, OutParm)
	TArray<struct FSwitchToSave>                  SwitchStructs;                                     // 0x0048(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPlaceableLightToSave>          LightStructs;                                      // 0x0058(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPlaceableStaticToSave>         StaticStructs;                                     // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<struct FPropToSave>                    PropStructs;                                       // 0x0078(0x0010)(Edit, BlueprintVisible)
	int32                                         CurrentSwitchId;                                   // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0090(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ABP_Switch_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x00E0(0x0010)(ReferenceParm)
	TArray<struct FSwitchToSave>                  CallFunc_StoreSwitches_SwitchStructsToSave;        // 0x00F0(0x0010)(ReferenceParm)
	TArray<class ABP_PlaceableLight_C*>           CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0100(0x0010)(ReferenceParm)
	TArray<struct FPlaceableLightToSave>          CallFunc_StoreLights_LightStructsToSave;           // 0x0110(0x0010)(ReferenceParm)
	TArray<class ABP_PlaceableStaticProp_C*>      CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0120(0x0010)(ReferenceParm)
	TArray<struct FPlaceableStaticToSave>         CallFunc_StoreStatics_StaticStructsToSave;         // 0x0130(0x0010)(ReferenceParm)
	TArray<class AB_StaticMeshProp_C*>            CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0140(0x0010)(ReferenceParm)
	TArray<struct FPropToSave>                    CallFunc_StoreProps_PropStructsToSave;             // 0x0150(0x0010)(ReferenceParm)
};
static_assert(alignof(BFL_MapLayoutLoading_C_StoreMapLayout) == 0x000008, "Wrong alignment on BFL_MapLayoutLoading_C_StoreMapLayout");
static_assert(sizeof(BFL_MapLayoutLoading_C_StoreMapLayout) == 0x000160, "Wrong size on BFL_MapLayoutLoading_C_StoreMapLayout");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, __WorldContext) == 0x000000, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, PropsToSave) == 0x000008, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::PropsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, PlaceableStaticsToSave) == 0x000018, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::PlaceableStaticsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, PlaceableLightsToSave) == 0x000028, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::PlaceableLightsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, SwitchesToSave) == 0x000038, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::SwitchesToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, SwitchStructs) == 0x000048, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::SwitchStructs' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, LightStructs) == 0x000058, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::LightStructs' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, StaticStructs) == 0x000068, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::StaticStructs' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, PropStructs) == 0x000078, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::PropStructs' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CurrentSwitchId) == 0x000088, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CurrentSwitchId' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, SwitchIdMap) == 0x000090, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000E0, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_StoreSwitches_SwitchStructsToSave) == 0x0000F0, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_StoreSwitches_SwitchStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000100, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_StoreLights_LightStructsToSave) == 0x000110, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_StoreLights_LightStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000120, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_StoreStatics_StaticStructsToSave) == 0x000130, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_StoreStatics_StaticStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000140, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreMapLayout, CallFunc_StoreProps_PropStructsToSave) == 0x000150, "Member 'BFL_MapLayoutLoading_C_StoreMapLayout::CallFunc_StoreProps_PropStructsToSave' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreProps
// 0x0210 (0x0210 - 0x0000)
struct BFL_MapLayoutLoading_C_StoreProps final
{
public:
	TArray<class AB_StaticMeshProp_C*>            Props;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentSwitchId;                                   // 0x0060(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPropToSave>                    PropStructsToSave;                                 // 0x0070(0x0010)(Parm, OutParm)
	class AB_StaticMeshProp_C*                    CurrentProp;                                       // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPropToSave>                    PropsToSave;                                       // 0x0088(0x0010)(Edit, BlueprintVisible)
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionActor_IsActionActor;              // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x0170(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActionBool_Activated;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPropToSave                            K2Node_MakeStruct_PropToSave;                      // 0x0190(0x0068)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_StoreProps) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_StoreProps");
static_assert(sizeof(BFL_MapLayoutLoading_C_StoreProps) == 0x000210, "Wrong size on BFL_MapLayoutLoading_C_StoreProps");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, Props) == 0x000000, "Member 'BFL_MapLayoutLoading_C_StoreProps::Props' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_StoreProps::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CurrentSwitchId) == 0x000060, "Member 'BFL_MapLayoutLoading_C_StoreProps::CurrentSwitchId' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, __WorldContext) == 0x000068, "Member 'BFL_MapLayoutLoading_C_StoreProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, PropStructsToSave) == 0x000070, "Member 'BFL_MapLayoutLoading_C_StoreProps::PropStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CurrentProp) == 0x000080, "Member 'BFL_MapLayoutLoading_C_StoreProps::CurrentProp' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, PropsToSave) == 0x000088, "Member 'BFL_MapLayoutLoading_C_StoreProps::PropsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_StoreProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BFL_MapLayoutLoading_C_StoreProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, Temp_int_Variable) == 0x0000B4, "Member 'BFL_MapLayoutLoading_C_StoreProps::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_IsActionActor_IsActionActor) == 0x0000BC, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_IsActionActor_IsActionActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetTransform_ReturnValue) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_BreakTransform_Location) == 0x000120, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_BreakTransform_Rotation) == 0x000138, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_BreakTransform_Scale) == 0x000150, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetObjectClass_ReturnValue) == 0x000168, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x000170, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_GetActionBool_Activated) == 0x000180, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_GetActionBool_Activated' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Array_Get_Item) == 0x000188, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, K2Node_MakeStruct_PropToSave) == 0x000190, "Member 'BFL_MapLayoutLoading_C_StoreProps::K2Node_MakeStruct_PropToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Array_Length_ReturnValue) == 0x0001F8, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Less_IntInt_ReturnValue) == 0x0001FC, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreProps, CallFunc_Array_Add_ReturnValue) == 0x000200, "Member 'BFL_MapLayoutLoading_C_StoreProps::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreStatics
// 0x0220 (0x0220 - 0x0000)
struct BFL_MapLayoutLoading_C_StoreStatics final
{
public:
	TArray<class ABP_PlaceableStaticProp_C*>      Statics;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentSwitchId;                                   // 0x0060(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPlaceableStaticToSave>         StaticStructsToSave;                               // 0x0070(0x0010)(Parm, OutParm)
	class UClass*                                 CurrentClass;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaceableStaticProp_C*              CurrentStatic;                                     // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPlaceableStaticToSave>         StaticsToSave;                                     // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ActionActorSubsystem_C*              CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActionActor_IsActionActor;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActionBool_Activated;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlaceableStaticToSave                 K2Node_MakeStruct_PlaceableStaticToSave;           // 0x01A0(0x0060)(NoDestructor)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableStaticProp_C*              CallFunc_Array_Get_Item;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_StoreStatics) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_StoreStatics");
static_assert(sizeof(BFL_MapLayoutLoading_C_StoreStatics) == 0x000220, "Wrong size on BFL_MapLayoutLoading_C_StoreStatics");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, Statics) == 0x000000, "Member 'BFL_MapLayoutLoading_C_StoreStatics::Statics' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_StoreStatics::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CurrentSwitchId) == 0x000060, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CurrentSwitchId' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, __WorldContext) == 0x000068, "Member 'BFL_MapLayoutLoading_C_StoreStatics::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, StaticStructsToSave) == 0x000070, "Member 'BFL_MapLayoutLoading_C_StoreStatics::StaticStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CurrentClass) == 0x000080, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CurrentClass' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CurrentStatic) == 0x000088, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CurrentStatic' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, StaticsToSave) == 0x000090, "Member 'BFL_MapLayoutLoading_C_StoreStatics::StaticsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0000B8, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_ClassIsChildOf_ReturnValue) == 0x0000C4, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0000C5, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Not_PreBool_ReturnValue) == 0x0000C6, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_BooleanAND_ReturnValue) == 0x0000C7, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, Temp_int_Variable) == 0x0000C8, "Member 'BFL_MapLayoutLoading_C_StoreStatics::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_IsActionActor_IsActionActor) == 0x0000CC, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_IsActionActor_IsActionActor' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x0000D4, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_BreakTransform_Location) == 0x000150, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_BreakTransform_Rotation) == 0x000168, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_BreakTransform_Scale) == 0x000180, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetActionBool_Activated) == 0x000198, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetActionBool_Activated' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, K2Node_MakeStruct_PlaceableStaticToSave) == 0x0001A0, "Member 'BFL_MapLayoutLoading_C_StoreStatics::K2Node_MakeStruct_PlaceableStaticToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_GetObjectClass_ReturnValue) == 0x000200, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Array_Get_Item) == 0x000210, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreStatics, CallFunc_Less_IntInt_ReturnValue) == 0x00021C, "Member 'BFL_MapLayoutLoading_C_StoreStatics::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreSwitches
// 0x0240 (0x0240 - 0x0000)
struct BFL_MapLayoutLoading_C_StoreSwitches final
{
public:
	TArray<class ABP_Switch_C*>                   Switches;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0010(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentSwitchId;                                   // 0x0060(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSwitchToSave>                  SwitchStructsToSave;                               // 0x0070(0x0010)(Parm, OutParm)
	class ABP_Switch_C*                           CurrentSwitch;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSwitchToSave>                  SwitchesToSave;                                    // 0x0088(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSwitchTargetIds_TargetIds;             // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Find_Value;                           // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0xB];                                       // 0x00C5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x0180(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSwitchToSave                          K2Node_MakeStruct_SwitchToSave;                    // 0x0190(0x0078)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Switch_C*                           CallFunc_Array_Get_Item_1;                         // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_StoreSwitches) == 0x000010, "Wrong alignment on BFL_MapLayoutLoading_C_StoreSwitches");
static_assert(sizeof(BFL_MapLayoutLoading_C_StoreSwitches) == 0x000240, "Wrong size on BFL_MapLayoutLoading_C_StoreSwitches");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Switches) == 0x000000, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Switches' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, SwitchIdMap) == 0x000010, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CurrentSwitchId) == 0x000060, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CurrentSwitchId' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, __WorldContext) == 0x000068, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, SwitchStructsToSave) == 0x000070, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::SwitchStructsToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CurrentSwitch) == 0x000080, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CurrentSwitch' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, SwitchesToSave) == 0x000088, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::SwitchesToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Temp_int_Variable) == 0x00009C, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_GetSwitchTargetIds_TargetIds) == 0x0000B0, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_GetSwitchTargetIds_TargetIds' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Map_Find_Value) == 0x0000C0, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Map_Find_ReturnValue) == 0x0000C4, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_GetTransform_ReturnValue) == 0x0000D0, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_BreakTransform_Location) == 0x000130, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_BreakTransform_Rotation) == 0x000148, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_BreakTransform_Scale) == 0x000160, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_GetObjectClass_ReturnValue) == 0x000178, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x000180, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, K2Node_MakeStruct_SwitchToSave) == 0x000190, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::K2Node_MakeStruct_SwitchToSave' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Add_IntInt_ReturnValue_1) == 0x00020C, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, Temp_int_Loop_Counter_Variable_1) == 0x000210, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Array_Get_Item) == 0x000218, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Less_IntInt_ReturnValue) == 0x000224, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Add_IntInt_ReturnValue_2) == 0x000228, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Array_Length_ReturnValue_1) == 0x000238, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_StoreSwitches, CallFunc_Less_IntInt_ReturnValue_1) == 0x00023C, "Member 'BFL_MapLayoutLoading_C_StoreSwitches::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.GetSwitchTargetIds
// 0x00A8 (0x00A8 - 0x0000)
struct BFL_MapLayoutLoading_C_GetSwitchTargetIds final
{
public:
	class ABP_Switch_C*                           SWITCH;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, int32>                    SwitchIdMap;                                       // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 TargetIds;                                         // 0x0060(0x0010)(Parm, OutParm)
	TArray<int32>                                 SwitchIds;                                         // 0x0070(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_MapLayoutLoading_C_GetSwitchTargetIds) == 0x000008, "Wrong alignment on BFL_MapLayoutLoading_C_GetSwitchTargetIds");
static_assert(sizeof(BFL_MapLayoutLoading_C_GetSwitchTargetIds) == 0x0000A8, "Wrong size on BFL_MapLayoutLoading_C_GetSwitchTargetIds");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, SWITCH) == 0x000000, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::SWITCH' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, SwitchIdMap) == 0x000008, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::SwitchIdMap' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, __WorldContext) == 0x000058, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, TargetIds) == 0x000060, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::TargetIds' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, SwitchIds) == 0x000070, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::SwitchIds' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Array_Get_Item) == 0x000088, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Map_Find_Value) == 0x000094, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_MapLayoutLoading_C_GetSwitchTargetIds, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BFL_MapLayoutLoading_C_GetSwitchTargetIds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

