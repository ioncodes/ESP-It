#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_XPBar

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_XPBar.WB_XPBar_C.ExecuteUbergraph_WB_XPBar
// 0x0050 (0x0050 - 0x0000)
struct WB_XPBar_C_ExecuteUbergraph_WB_XPBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar) == 0x000008, "Wrong alignment on WB_XPBar_C_ExecuteUbergraph_WB_XPBar");
static_assert(sizeof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar) == 0x000050, "Wrong size on WB_XPBar_C_ExecuteUbergraph_WB_XPBar");
static_assert(offsetof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar, EntryPoint) == 0x000000, "Member 'WB_XPBar_C_ExecuteUbergraph_WB_XPBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_XPBar_C_ExecuteUbergraph_WB_XPBar::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_XPBar_C_ExecuteUbergraph_WB_XPBar::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000040, "Member 'WB_XPBar_C_ExecuteUbergraph_WB_XPBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_ExecuteUbergraph_WB_XPBar, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000048, "Member 'WB_XPBar_C_ExecuteUbergraph_WB_XPBar::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_Bar_Percent_0
// 0x0018 (0x0018 - 0x0000)
struct WB_XPBar_C_Get_Bar_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_XPBar_C_Get_Bar_Percent_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_Bar_Percent_0");
static_assert(sizeof(WB_XPBar_C_Get_Bar_Percent_0) == 0x000018, "Wrong size on WB_XPBar_C_Get_Bar_Percent_0");
static_assert(offsetof(WB_XPBar_C_Get_Bar_Percent_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_Bar_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_Bar_Percent_0, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'WB_XPBar_C_Get_Bar_Percent_0::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_Bar_Percent_0, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'WB_XPBar_C_Get_Bar_Percent_0::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_BonusBar_Percent_0
// 0x0018 (0x0018 - 0x0000)
struct WB_XPBar_C_Get_BonusBar_Percent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_XPBar_C_Get_BonusBar_Percent_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_BonusBar_Percent_0");
static_assert(sizeof(WB_XPBar_C_Get_BonusBar_Percent_0) == 0x000018, "Wrong size on WB_XPBar_C_Get_BonusBar_Percent_0");
static_assert(offsetof(WB_XPBar_C_Get_BonusBar_Percent_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_BonusBar_Percent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_BonusBar_Percent_0, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'WB_XPBar_C_Get_BonusBar_Percent_0::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_BonusBar_Percent_0, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'WB_XPBar_C_Get_BonusBar_Percent_0::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_BonusLabel_Text_0
// 0x0018 (0x0018 - 0x0000)
struct WB_XPBar_C_Get_BonusLabel_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_XPBar_C_Get_BonusLabel_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_BonusLabel_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_BonusLabel_Text_0) == 0x000018, "Wrong size on WB_XPBar_C_Get_BonusLabel_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_BonusLabel_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_BonusLabel_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_BonusLabel_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WB_XPBar_C_Get_BonusLabel_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_GainedTotalExpLabel_Text_0
// 0x0090 (0x0090 - 0x0000)
struct WB_XPBar_C_Get_GainedTotalExpLabel_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0010)()
};
static_assert(alignof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_GainedTotalExpLabel_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0) == 0x000090, "Wrong size on WB_XPBar_C_Get_GainedTotalExpLabel_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, K2Node_MakeArray_Array) == 0x000070, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_GainedTotalExpLabel_Text_0, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WB_XPBar_C_Get_GainedTotalExpLabel_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_LevelNext_Text_0
// 0x0028 (0x0028 - 0x0000)
struct WB_XPBar_C_Get_LevelNext_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
};
static_assert(alignof(WB_XPBar_C_Get_LevelNext_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_LevelNext_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_LevelNext_Text_0) == 0x000028, "Wrong size on WB_XPBar_C_Get_LevelNext_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_LevelNext_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_LevelNext_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_LevelNext_Text_0, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WB_XPBar_C_Get_LevelNext_Text_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_LevelNext_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_XPBar_C_Get_LevelNext_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_LevelNow_Text_0
// 0x0020 (0x0020 - 0x0000)
struct WB_XPBar_C_Get_LevelNow_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0010)()
};
static_assert(alignof(WB_XPBar_C_Get_LevelNow_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_LevelNow_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_LevelNow_Text_0) == 0x000020, "Wrong size on WB_XPBar_C_Get_LevelNow_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_LevelNow_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_LevelNow_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_LevelNow_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WB_XPBar_C_Get_LevelNow_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_XPGain_Text_0
// 0x0048 (0x0048 - 0x0000)
struct WB_XPBar_C_Get_XPGain_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_String__CombineStrings_Multi_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0010)()
};
static_assert(alignof(WB_XPBar_C_Get_XPGain_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_XPGain_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_XPGain_Text_0) == 0x000048, "Wrong size on WB_XPBar_C_Get_XPGain_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_XPGain_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_XPGain_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPGain_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'WB_XPBar_C_Get_XPGain_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPGain_Text_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'WB_XPBar_C_Get_XPGain_Text_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPGain_Text_0, CallFunc_String__CombineStrings_Multi_ReturnValue) == 0x000028, "Member 'WB_XPBar_C_Get_XPGain_Text_0::CallFunc_String__CombineStrings_Multi_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPGain_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'WB_XPBar_C_Get_XPGain_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Get_XPProgress_Text_0
// 0x00F0 (0x00F0 - 0x0000)
struct WB_XPBar_C_Get_XPProgress_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0078(0x0010)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0088(0x0048)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00E0(0x0010)()
};
static_assert(alignof(WB_XPBar_C_Get_XPProgress_Text_0) == 0x000008, "Wrong alignment on WB_XPBar_C_Get_XPProgress_Text_0");
static_assert(sizeof(WB_XPBar_C_Get_XPProgress_Text_0) == 0x0000F0, "Wrong size on WB_XPBar_C_Get_XPProgress_Text_0");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, ReturnValue) == 0x000000, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, Temp_bool_Variable) == 0x000010, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000070, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, K2Node_Select_Default) == 0x000074, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000078, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000088, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, K2Node_MakeArray_Array) == 0x0000D0, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Get_XPProgress_Text_0, CallFunc_Format_ReturnValue) == 0x0000E0, "Member 'WB_XPBar_C_Get_XPProgress_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_XPBar.WB_XPBar_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_XPBar_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_XPBar_C_Tick) == 0x000004, "Wrong alignment on WB_XPBar_C_Tick");
static_assert(sizeof(WB_XPBar_C_Tick) == 0x00003C, "Wrong size on WB_XPBar_C_Tick");
static_assert(offsetof(WB_XPBar_C_Tick, MyGeometry) == 0x000000, "Member 'WB_XPBar_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_XPBar_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_XPBar_C_Tick::InDeltaTime' has a wrong offset!");

}

