#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativeWitch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_CreativeWitch.B_CreativeWitch_C.ExecuteUbergraph_B_CreativeWitch
// 0x00C0 (0x00C0 - 0x0000)
struct B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CA[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CB[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_FieldOfViewComponent_C*              CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller_1; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch) == 0x000010, "Wrong alignment on B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch");
static_assert(sizeof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch) == 0x0000C0, "Wrong size on B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, EntryPoint) == 0x000000, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, Temp_struct_Variable) == 0x000010, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, CallFunc_IsDedicatedServer_ReturnValue) == 0x000070, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_Event_NewController) == 0x000080, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, CallFunc_GetController_ReturnValue) == 0x000088, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000090, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_Event_OldController) == 0x0000A0, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_DynamicCast_AsB_Creative_Player_Controller_1) == 0x0000A8, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_DynamicCast_AsB_Creative_Player_Controller_1' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'B_CreativeWitch_C_ExecuteUbergraph_B_CreativeWitch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_CreativeWitch.B_CreativeWitch_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct B_CreativeWitch_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_ReceivePossessed) == 0x000008, "Wrong alignment on B_CreativeWitch_C_ReceivePossessed");
static_assert(sizeof(B_CreativeWitch_C_ReceivePossessed) == 0x000008, "Wrong size on B_CreativeWitch_C_ReceivePossessed");
static_assert(offsetof(B_CreativeWitch_C_ReceivePossessed, NewController) == 0x000000, "Member 'B_CreativeWitch_C_ReceivePossessed::NewController' has a wrong offset!");

// Function B_CreativeWitch.B_CreativeWitch_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct B_CreativeWitch_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on B_CreativeWitch_C_ReceiveUnpossessed");
static_assert(sizeof(B_CreativeWitch_C_ReceiveUnpossessed) == 0x000008, "Wrong size on B_CreativeWitch_C_ReceiveUnpossessed");
static_assert(offsetof(B_CreativeWitch_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'B_CreativeWitch_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function B_CreativeWitch.B_CreativeWitch_C.SetProp
// 0x00B0 (0x00B0 - 0x0000)
struct B_CreativeWitch_C_SetProp final
{
public:
	class AB_PropPawnPhysics_C*                   Param_SpawnedProp;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePropPawnPhysics_C*           TempProp;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CD[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetValues_MaximumMana;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetValues_CurrentMana;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetValues_CurrentManaRegenPerSecond;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePropPawnPhysics_C*           CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_SetProp) == 0x000010, "Wrong alignment on B_CreativeWitch_C_SetProp");
static_assert(sizeof(B_CreativeWitch_C_SetProp) == 0x0000B0, "Wrong size on B_CreativeWitch_C_SetProp");
static_assert(offsetof(B_CreativeWitch_C_SetProp, Param_SpawnedProp) == 0x000000, "Member 'B_CreativeWitch_C_SetProp::Param_SpawnedProp' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, TempProp) == 0x000008, "Member 'B_CreativeWitch_C_SetProp::TempProp' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'B_CreativeWitch_C_SetProp::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, K2Node_DynamicCast_AsPlayer_Controller) == 0x000018, "Member 'B_CreativeWitch_C_SetProp::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_CreativeWitch_C_SetProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'B_CreativeWitch_C_SetProp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_GetValues_MaximumMana) == 0x000028, "Member 'B_CreativeWitch_C_SetProp::CallFunc_GetValues_MaximumMana' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_GetValues_CurrentMana) == 0x000030, "Member 'B_CreativeWitch_C_SetProp::CallFunc_GetValues_CurrentMana' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_GetValues_CurrentManaRegenPerSecond) == 0x000038, "Member 'B_CreativeWitch_C_SetProp::CallFunc_GetValues_CurrentManaRegenPerSecond' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'B_CreativeWitch_C_SetProp::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'B_CreativeWitch_C_SetProp::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetProp, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'B_CreativeWitch_C_SetProp::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_CreativeWitch.B_CreativeWitch_C.SetupHealthAndMana
// 0x0028 (0x0028 - 0x0000)
struct B_CreativeWitch_C_SetupHealthAndMana final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37CE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CreativeHUD_C*                      K2Node_DynamicCast_AsWB_Creative_HUD;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_SetupHealthAndMana) == 0x000008, "Wrong alignment on B_CreativeWitch_C_SetupHealthAndMana");
static_assert(sizeof(B_CreativeWitch_C_SetupHealthAndMana) == 0x000028, "Wrong size on B_CreativeWitch_C_SetupHealthAndMana");
static_assert(offsetof(B_CreativeWitch_C_SetupHealthAndMana, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_CreativeWitch_C_SetupHealthAndMana::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetupHealthAndMana, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_CreativeWitch_C_SetupHealthAndMana::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetupHealthAndMana, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_CreativeWitch_C_SetupHealthAndMana::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetupHealthAndMana, K2Node_DynamicCast_AsWB_Creative_HUD) == 0x000018, "Member 'B_CreativeWitch_C_SetupHealthAndMana::K2Node_DynamicCast_AsWB_Creative_HUD' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_SetupHealthAndMana, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'B_CreativeWitch_C_SetupHealthAndMana::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_CreativeWitch.B_CreativeWitch_C.TickVisuals
// 0x0003 (0x0003 - 0x0000)
struct B_CreativeWitch_C_TickVisuals final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CreativeWitch_C_TickVisuals) == 0x000001, "Wrong alignment on B_CreativeWitch_C_TickVisuals");
static_assert(sizeof(B_CreativeWitch_C_TickVisuals) == 0x000003, "Wrong size on B_CreativeWitch_C_TickVisuals");
static_assert(offsetof(B_CreativeWitch_C_TickVisuals, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'B_CreativeWitch_C_TickVisuals::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_TickVisuals, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'B_CreativeWitch_C_TickVisuals::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CreativeWitch_C_TickVisuals, CallFunc_IsLocallyControlled_ReturnValue) == 0x000002, "Member 'B_CreativeWitch_C_TickVisuals::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

}

