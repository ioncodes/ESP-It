#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapCyclePreview

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_CategoryMenuScreen_classes.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ESalvageCategory_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_MapCyclePreview.WB_MapCyclePreview_C
// 0x0050 (0x0350 - 0x0300)
class UWB_MapCyclePreview_C final : public UWB_CategoryMenuScreen_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_MapCyclePreview_C;               // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             MapCountText;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTileView*                              MapCycleTileview;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PreviewTitle;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CheckBoxWithLabelSmall_C*           RandomCheckbox;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_2;                                         // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   WB_ControllerIcon;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          MapCycleIsEditable;                                // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x7];                                      // 0x0339(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMapRemoved;                                      // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	ESlateVisibility GetVisibility_0();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void SetTitleAndCheckboxState();
	class FText Get_MapCountText_Text_0();
	void GetMapButtonDataByFileName(const class FString& Filename, class UB_MapButtonData_C** Data);
	void RemoveSelectedMapFromCycle(class UB_TileViewData_C* ItemData);
	void TryAddSelectedMapToCycle(const class FString& Filename, bool* Success);
	void GetIndividualItemDataAndFocus(class UUserWidget* CategoryButton, ESalvageCategory SalvageCategory, TArray<class UB_TileViewData_C*>* Data, TArray<bool>* FocusNeeded);
	void GetTileView(class UTileView** TileView);
	void Construct();
	void BndEvt__WB_MapCyclePreview_RandomCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature(bool bIsChecked);
	void OnMapRemoved__DelegateSignature(bool MapListEmpty);
	void ExecuteUbergraph_WB_MapCyclePreview(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_MapCyclePreview_C">();
	}
	static class UWB_MapCyclePreview_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_MapCyclePreview_C>();
	}
};
static_assert(alignof(UWB_MapCyclePreview_C) == 0x000008, "Wrong alignment on UWB_MapCyclePreview_C");
static_assert(sizeof(UWB_MapCyclePreview_C) == 0x000350, "Wrong size on UWB_MapCyclePreview_C");
static_assert(offsetof(UWB_MapCyclePreview_C, UberGraphFrame_WB_MapCyclePreview_C) == 0x000300, "Member 'UWB_MapCyclePreview_C::UberGraphFrame_WB_MapCyclePreview_C' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, MapCountText) == 0x000308, "Member 'UWB_MapCyclePreview_C::MapCountText' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, MapCycleTileview) == 0x000310, "Member 'UWB_MapCyclePreview_C::MapCycleTileview' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, PreviewTitle) == 0x000318, "Member 'UWB_MapCyclePreview_C::PreviewTitle' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, RandomCheckbox) == 0x000320, "Member 'UWB_MapCyclePreview_C::RandomCheckbox' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, SizeBox_2) == 0x000328, "Member 'UWB_MapCyclePreview_C::SizeBox_2' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, WB_ControllerIcon) == 0x000330, "Member 'UWB_MapCyclePreview_C::WB_ControllerIcon' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, MapCycleIsEditable) == 0x000338, "Member 'UWB_MapCyclePreview_C::MapCycleIsEditable' has a wrong offset!");
static_assert(offsetof(UWB_MapCyclePreview_C, OnMapRemoved) == 0x000340, "Member 'UWB_MapCyclePreview_C::OnMapRemoved' has a wrong offset!");

}

