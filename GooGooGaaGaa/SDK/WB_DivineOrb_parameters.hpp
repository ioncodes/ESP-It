#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DivineOrb

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_DivineOrb.WB_DivineOrb_C.ExecuteUbergraph_WB_DivineOrb
// 0x0108 (0x0108 - 0x0000)
struct WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x00D0(0x0038)(NoDestructor)
};
static_assert(alignof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb) == 0x000008, "Wrong alignment on WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb");
static_assert(sizeof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb) == 0x000108, "Wrong size on WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, EntryPoint) == 0x000000, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_BreakVector2D_X) == 0x000060, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_RandomFloatInRange_ReturnValue) == 0x000070, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000078, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000088, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_FInterpTo_ReturnValue) == 0x000098, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_MakeVector2D_ReturnValue) == 0x0000A0, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000B0, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_FInterpTo_ReturnValue_1) == 0x0000B8, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000C0, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb, K2Node_MakeStruct_WidgetTransform) == 0x0000D0, "Member 'WB_DivineOrb_C_ExecuteUbergraph_WB_DivineOrb::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function WB_DivineOrb.WB_DivineOrb_C.Get_Frame_ColorAndOpacity_0
// 0x0024 (0x0024 - 0x0000)
struct WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0) == 0x000004, "Wrong alignment on WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0");
static_assert(sizeof(WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0) == 0x000024, "Wrong size on WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0");
static_assert(offsetof(WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0, CallFunc_LinearColorLerp_ReturnValue) == 0x000010, "Member 'WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000020, "Member 'WB_DivineOrb_C_Get_Frame_ColorAndOpacity_0::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function WB_DivineOrb.WB_DivineOrb_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_DivineOrb_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DivineOrb_C_Tick) == 0x000004, "Wrong alignment on WB_DivineOrb_C_Tick");
static_assert(sizeof(WB_DivineOrb_C_Tick) == 0x00003C, "Wrong size on WB_DivineOrb_C_Tick");
static_assert(offsetof(WB_DivineOrb_C_Tick, MyGeometry) == 0x000000, "Member 'WB_DivineOrb_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DivineOrb_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_DivineOrb_C_Tick::InDeltaTime' has a wrong offset!");

}

