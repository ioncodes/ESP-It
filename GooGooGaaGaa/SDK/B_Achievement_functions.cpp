#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Achievement

#include "Basic.hpp"

#include "B_Achievement_classes.hpp"
#include "B_Achievement_parameters.hpp"


namespace SDK
{

// Function B_Achievement.B_Achievement_C.Get Valid Game Modes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Mobification                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide_and_Seek                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hunt_a_Hag                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Fill_the_Pot                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AB_GameMode_C*>            Valid_Game_Modes                                       (Parm, OutParm)

void UB_Achievement_C::Get_Valid_Game_Modes(bool Mobification, bool Hide_and_Seek, bool Hunt_a_Hag, bool Fill_the_Pot, TArray<class AB_GameMode_C*>* Valid_Game_Modes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Achievement_C", "Get Valid Game Modes");

	Params::B_Achievement_C_Get_Valid_Game_Modes Parms{};

	Parms.Mobification = Mobification;
	Parms.Hide_and_Seek = Hide_and_Seek;
	Parms.Hunt_a_Hag = Hunt_a_Hag;
	Parms.Fill_the_Pot = Fill_the_Pot;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_Game_Modes != nullptr)
		*Valid_Game_Modes = std::move(Parms.Valid_Game_Modes);
}


// Function B_Achievement.B_Achievement_C.Test Prop Id Validity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PropID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IdIsValid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_Achievement_C::Test_Prop_Id_Validity(int32 PropID, bool* IdIsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_Achievement_C", "Test Prop Id Validity");

	Params::B_Achievement_C_Test_Prop_Id_Validity Parms{};

	Parms.PropID = PropID;

	UObject::ProcessEvent(Func, &Parms);

	if (IdIsValid != nullptr)
		*IdIsValid = Parms.IdIsValid;
}

}

