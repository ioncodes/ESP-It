#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_HUD

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_PossessNotWorkingReason_structs.hpp"


namespace SDK::Params
{

// Function WB_HUD.WB_HUD_C.AddGamemodeSpecificHUDExtensions
// 0x0040 (0x0040 - 0x0000)
struct WB_HUD_C_AddGamemodeSpecificHUDExtensions final
{
public:
	class UWB_HuntAHagHUD_C*                      CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D12[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ObjectiveHudExtension_C*            CallFunc_Create_ReturnValue_1;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D13[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_AddGamemodeSpecificHUDExtensions) == 0x000008, "Wrong alignment on WB_HUD_C_AddGamemodeSpecificHUDExtensions");
static_assert(sizeof(WB_HUD_C_AddGamemodeSpecificHUDExtensions) == 0x000040, "Wrong size on WB_HUD_C_AddGamemodeSpecificHUDExtensions");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_Create_ReturnValue) == 0x000000, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_Create_ReturnValue_1) == 0x000020, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_GetGameState_ReturnValue_1) == 0x000028, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000030, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_AddGamemodeSpecificHUDExtensions, CallFunc_AddChild_ReturnValue_1) == 0x000038, "Member 'WB_HUD_C_AddGamemodeSpecificHUDExtensions::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.ExecuteUbergraph_WB_HUD
// 0x0348 (0x0348 - 0x0000)
struct WB_HUD_C_ExecuteUbergraph_WB_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D14[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D15[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D16[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D17[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0040(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D18[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D19[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Killer;                         // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WasHunter;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1A[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	bool                                          CallFunc_StringIsEmpty_ReturnValue;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1B[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1C[0x5];                                     // 0x018B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1D[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x01A8(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1E[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x01C8(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x01E0(0x0018)()
	E_PossessNotWorkingReason                     Temp_byte_Variable;                                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1F[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PowerUpName;                    // 0x0210(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0228(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0278(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0288(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_3;                              // 0x02A8(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_5;              // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_PossessNotWorkingReason                     K2Node_Event_Reason;                               // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D20[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           K2Node_Event_Killer;                               // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_PlayerWasHunter;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D21[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x02E0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D22[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0300(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D23[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0318(0x0018)()
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0330(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_ExecuteUbergraph_WB_HUD) == 0x000008, "Wrong alignment on WB_HUD_C_ExecuteUbergraph_WB_HUD");
static_assert(sizeof(WB_HUD_C_ExecuteUbergraph_WB_HUD) == 0x000348, "Wrong size on WB_HUD_C_ExecuteUbergraph_WB_HUD");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, EntryPoint) == 0x000000, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_AsB_Game_State) == 0x000030, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_HasRoundStarted_RoundHasStarted) == 0x00003A, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable) == 0x000040, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetGameInstance_ReturnValue_1) == 0x000058, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000060, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_MyGeometry) == 0x000078, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_InDeltaTime) == 0x0000B0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_Killer) == 0x0000B8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_WasHunter) == 0x0000C8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_WasHunter' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_StringIsEmpty_ReturnValue) == 0x0000E8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_StringIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_FormatArgumentData) == 0x0000F0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeArray_Array) == 0x000140, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Format_ReturnValue) == 0x000150, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_1) == 0x000168, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetOwningPlayer_ReturnValue) == 0x000170, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetGameState_ReturnValue_1) == 0x000178, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_AsB_Player_State) == 0x000180, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_IsValid_ReturnValue_1) == 0x000189, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Not_PreBool_ReturnValue) == 0x00018A, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000190, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_DynamicCast_bSuccess_4) == 0x000198, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000199, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_BooleanAND_ReturnValue) == 0x00019A, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00019B, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_BooleanAND_ReturnValue_1) == 0x00019C, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_BooleanAND_ReturnValue_2) == 0x00019D, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00019E, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_SwitchEnum_CmpSuccess) == 0x00019F, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable) == 0x0001A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default) == 0x0001A8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001C0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable_1) == 0x0001C8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable_2) == 0x0001E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_byte_Variable) == 0x0001F8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_2) == 0x000200, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_3) == 0x000208, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CustomEvent_PowerUpName) == 0x000210, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CustomEvent_PowerUpName' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeStruct_FormatArgumentData_1) == 0x000228, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_MakeArray_Array_1) == 0x000278, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_Format_ReturnValue_1) == 0x000288, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_4) == 0x0002A0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_text_Variable_3) == 0x0002A8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_PlayAnimation_ReturnValue_5) == 0x0002C0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_PlayAnimation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Reason) == 0x0002C8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Reason' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_Killer) == 0x0002D0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Event_PlayerWasHunter) == 0x0002D8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Event_PlayerWasHunter' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_1) == 0x0002E0, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_IsValid_ReturnValue_2) == 0x0002F8, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_GetPlayerName_ReturnValue) == 0x000300, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, Temp_bool_Variable_1) == 0x000310, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_Select_Default_2) == 0x000318, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, K2Node_CreateDelegate_OutputDelegate) == 0x000330, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_ExecuteUbergraph_WB_HUD, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000340, "Member 'WB_HUD_C_ExecuteUbergraph_WB_HUD::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_CrossHair_Visibility_0
// 0x0038 (0x0038 - 0x0000)
struct WB_HUD_C_Get_CrossHair_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D24[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D25[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_CrossHair_Visibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_CrossHair_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_CrossHair_Visibility_0) == 0x000038, "Wrong size on WB_HUD_C_Get_CrossHair_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, K2Node_DynamicCast_AsB_Game_State) == 0x000028, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000031, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000032, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_CrossHair_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'WB_HUD_C_Get_CrossHair_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_GameInProgress_Visibility_0
// 0x0028 (0x0028 - 0x0000)
struct WB_HUD_C_Get_GameInProgress_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D26[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D27[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_GameInProgress_Visibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_GameInProgress_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_GameInProgress_Visibility_0) == 0x000028, "Wrong size on WB_HUD_C_Get_GameInProgress_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, Temp_bool_Variable) == 0x000010, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000022, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameInProgress_Visibility_0, K2Node_Select_Default) == 0x000023, "Member 'WB_HUD_C_Get_GameInProgress_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_GameState_Text_0
// 0x0078 (0x0078 - 0x0000)
struct WB_HUD_C_Get_GameState_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0048(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_GameState_Text_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_GameState_Text_0");
static_assert(sizeof(WB_HUD_C_Get_GameState_Text_0) == 0x000078, "Wrong size on WB_HUD_C_Get_GameState_Text_0");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_GameState_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WB_HUD_C_Get_GameState_Text_0::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'WB_HUD_C_Get_GameState_Text_0::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000048, "Member 'WB_HUD_C_Get_GameState_Text_0::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'WB_HUD_C_Get_GameState_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000068, "Member 'WB_HUD_C_Get_GameState_Text_0::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WB_HUD_C_Get_GameState_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'WB_HUD_C_Get_GameState_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_GameState_Text_0, K2Node_SwitchEnum_CmpSuccess) == 0x000072, "Member 'WB_HUD_C_Get_GameState_Text_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_KickPlayerVote_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_Get_KickPlayerVote_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D28[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_KickPlayerVote_Visibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_KickPlayerVote_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_KickPlayerVote_Visibility_0) == 0x000020, "Wrong size on WB_HUD_C_Get_KickPlayerVote_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, Temp_byte_Variable_1) == 0x000002, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, Temp_bool_Variable) == 0x000003, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_KickPlayerVote_Visibility_0, K2Node_Select_Default) == 0x000019, "Member 'WB_HUD_C_Get_KickPlayerVote_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_LastRound_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct WB_HUD_C_Get_LastRound_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_LastRound_Visibility_0) == 0x000001, "Wrong alignment on WB_HUD_C_Get_LastRound_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_LastRound_Visibility_0) == 0x000005, "Wrong size on WB_HUD_C_Get_LastRound_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_LastRound_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_LastRound_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_LastRound_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_HUD_C_Get_LastRound_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_LastRound_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_HUD_C_Get_LastRound_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_LastRound_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_HUD_C_Get_LastRound_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_LastRound_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'WB_HUD_C_Get_LastRound_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_Name_Text_0
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_Get_Name_Text_0 final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNameOfControllingProp_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_Name_Text_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_Name_Text_0");
static_assert(sizeof(WB_HUD_C_Get_Name_Text_0) == 0x000020, "Wrong size on WB_HUD_C_Get_Name_Text_0");
static_assert(offsetof(WB_HUD_C_Get_Name_Text_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_Name_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Name_Text_0, CallFunc_GetNameOfControllingProp_ReturnValue) == 0x000010, "Member 'WB_HUD_C_Get_Name_Text_0::CallFunc_GetNameOfControllingProp_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_Time_Text_0
// 0x0268 (0x0268 - 0x0000)
struct WB_HUD_C_Get_Time_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D29[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2A[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0110(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0120(0x0018)()
	class FString                                 CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0170(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0188(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x01D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0240(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0250(0x0018)()
};
static_assert(alignof(WB_HUD_C_Get_Time_Text_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_Time_Text_0");
static_assert(sizeof(WB_HUD_C_Get_Time_Text_0) == 0x000268, "Wrong size on WB_HUD_C_Get_Time_Text_0");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_Time_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, Temp_bool_Variable) == 0x000018, "Member 'WB_HUD_C_Get_Time_Text_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000028, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000032, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000090, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeArray_Array) == 0x000098, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeArray_Array_1) == 0x000110, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Format_ReturnValue_1) == 0x000120, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString) == 0x000138, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_ConvertSecondsToMinutesAndSeconds_MinutesString' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString) == 0x000148, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_ConvertSecondsToMinutesAndSeconds_SecondsString' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_Select_Default) == 0x000158, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000170, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData_2) == 0x000188, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0001D8, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001F0, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, K2Node_MakeArray_Array_2) == 0x000240, "Member 'WB_HUD_C_Get_Time_Text_0::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Text_0, CallFunc_Format_ReturnValue_2) == 0x000250, "Member 'WB_HUD_C_Get_Time_Text_0::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_Time_Visibility_0
// 0x0038 (0x0038 - 0x0000)
struct WB_HUD_C_Get_Time_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_Time_Visibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_Time_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_Time_Visibility_0) == 0x000038, "Wrong size on WB_HUD_C_Get_Time_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_Time_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, K2Node_DynamicCast_AsB_Player_State) == 0x000018, "Member 'WB_HUD_C_Get_Time_Visibility_0::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_HUD_C_Get_Time_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000028, "Member 'WB_HUD_C_Get_Time_Visibility_0::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_HUD_C_Get_Time_Visibility_0::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000031, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000032, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_Time_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'WB_HUD_C_Get_Time_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Get_TransformingBackText_Visibility_0
// 0x0028 (0x0028 - 0x0000)
struct WB_HUD_C_Get_TransformingBackText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Get_TransformingBackText_Visibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_Get_TransformingBackText_Visibility_0");
static_assert(sizeof(WB_HUD_C_Get_TransformingBackText_Visibility_0) == 0x000028, "Wrong size on WB_HUD_C_Get_TransformingBackText_Visibility_0");
static_assert(offsetof(WB_HUD_C_Get_TransformingBackText_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_Get_TransformingBackText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_TransformingBackText_Visibility_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_HUD_C_Get_TransformingBackText_Visibility_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_TransformingBackText_Visibility_0, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'WB_HUD_C_Get_TransformingBackText_Visibility_0::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_TransformingBackText_Visibility_0, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000018, "Member 'WB_HUD_C_Get_TransformingBackText_Visibility_0::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Get_TransformingBackText_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_HUD_C_Get_TransformingBackText_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.GetHUDSkills
// 0x0010 (0x0010 - 0x0000)
struct WB_HUD_C_GetHUDSkills final
{
public:
	class UWB_HUDSkill_C*                         Movement;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_HUDSkill_C*                         Utility;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_GetHUDSkills) == 0x000008, "Wrong alignment on WB_HUD_C_GetHUDSkills");
static_assert(sizeof(WB_HUD_C_GetHUDSkills) == 0x000010, "Wrong size on WB_HUD_C_GetHUDSkills");
static_assert(offsetof(WB_HUD_C_GetHUDSkills, Movement) == 0x000000, "Member 'WB_HUD_C_GetHUDSkills::Movement' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetHUDSkills, Utility) == 0x000008, "Member 'WB_HUD_C_GetHUDSkills::Utility' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.GetSpeakerIconVisibility
// 0x0007 (0x0007 - 0x0000)
struct WB_HUD_C_GetSpeakerIconVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_GetSpeakerIconVisibility) == 0x000001, "Wrong alignment on WB_HUD_C_GetSpeakerIconVisibility");
static_assert(sizeof(WB_HUD_C_GetSpeakerIconVisibility) == 0x000007, "Wrong size on WB_HUD_C_GetSpeakerIconVisibility");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, ReturnValue) == 0x000000, "Member 'WB_HUD_C_GetSpeakerIconVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, Temp_bool_Variable) == 0x000001, "Member 'WB_HUD_C_GetSpeakerIconVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WB_HUD_C_GetSpeakerIconVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'WB_HUD_C_GetSpeakerIconVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, Temp_byte_Variable) == 0x000004, "Member 'WB_HUD_C_GetSpeakerIconVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, Temp_byte_Variable_1) == 0x000005, "Member 'WB_HUD_C_GetSpeakerIconVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetSpeakerIconVisibility, K2Node_Select_Default) == 0x000006, "Member 'WB_HUD_C_GetSpeakerIconVisibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_GetVisibility_0) == 0x000008, "Wrong alignment on WB_HUD_C_GetVisibility_0");
static_assert(sizeof(WB_HUD_C_GetVisibility_0) == 0x000020, "Wrong size on WB_HUD_C_GetVisibility_0");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_HUD_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_HUD_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_HUD_C_GetVisibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_HUD_C_GetVisibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_HUD_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, Temp_bool_Variable) == 0x000019, "Member 'WB_HUD_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, Temp_byte_Variable_1) == 0x00001A, "Member 'WB_HUD_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001B, "Member 'WB_HUD_C_GetVisibility_0::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_0, K2Node_Select_Default) == 0x00001C, "Member 'WB_HUD_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.GetVisibility_1
// 0x0028 (0x0028 - 0x0000)
struct WB_HUD_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D2F[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D30[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_GetVisibility_1) == 0x000008, "Wrong alignment on WB_HUD_C_GetVisibility_1");
static_assert(sizeof(WB_HUD_C_GetVisibility_1) == 0x000028, "Wrong size on WB_HUD_C_GetVisibility_1");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'WB_HUD_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, Temp_byte_Variable) == 0x000001, "Member 'WB_HUD_C_GetVisibility_1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, Temp_byte_Variable_1) == 0x000002, "Member 'WB_HUD_C_GetVisibility_1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_HUD_C_GetVisibility_1::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, Temp_bool_Variable) == 0x000010, "Member 'WB_HUD_C_GetVisibility_1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'WB_HUD_C_GetVisibility_1::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_HUD_C_GetVisibility_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WB_HUD_C_GetVisibility_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WB_HUD_C_GetVisibility_1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'WB_HUD_C_GetVisibility_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_1, K2Node_Select_Default) == 0x000024, "Member 'WB_HUD_C_GetVisibility_1::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.GetVisibility_2
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D31[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_GetVisibility_2) == 0x000008, "Wrong alignment on WB_HUD_C_GetVisibility_2");
static_assert(sizeof(WB_HUD_C_GetVisibility_2) == 0x000020, "Wrong size on WB_HUD_C_GetVisibility_2");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'WB_HUD_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, Temp_byte_Variable) == 0x000001, "Member 'WB_HUD_C_GetVisibility_2::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, Temp_byte_Variable_1) == 0x000002, "Member 'WB_HUD_C_GetVisibility_2::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, Temp_bool_Variable) == 0x000003, "Member 'WB_HUD_C_GetVisibility_2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_HUD_C_GetVisibility_2::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'WB_HUD_C_GetVisibility_2::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_HUD_C_GetVisibility_2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'WB_HUD_C_GetVisibility_2::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_GetVisibility_2, K2Node_Select_Default) == 0x00001A, "Member 'WB_HUD_C_GetVisibility_2::K2Node_Select_Default' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.HandleVisibilityChanged
// 0x0020 (0x0020 - 0x0000)
struct WB_HUD_C_HandleVisibilityChanged final
{
public:
	ESlateVisibility                              NewVisibility;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D32[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_HandleVisibilityChanged) == 0x000008, "Wrong alignment on WB_HUD_C_HandleVisibilityChanged");
static_assert(sizeof(WB_HUD_C_HandleVisibilityChanged) == 0x000020, "Wrong size on WB_HUD_C_HandleVisibilityChanged");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, NewVisibility) == 0x000000, "Member 'WB_HUD_C_HandleVisibilityChanged::NewVisibility' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WB_HUD_C_HandleVisibilityChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_HUD_C_HandleVisibilityChanged::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000010, "Member 'WB_HUD_C_HandleVisibilityChanged::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_HUD_C_HandleVisibilityChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_HUD_C_HandleVisibilityChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00001A, "Member 'WB_HUD_C_HandleVisibilityChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, CallFunc_Less_IntInt_ReturnValue_1) == 0x00001B, "Member 'WB_HUD_C_HandleVisibilityChanged::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x00001C, "Member 'WB_HUD_C_HandleVisibilityChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_HandleVisibilityChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00001D, "Member 'WB_HUD_C_HandleVisibilityChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.PlayPossessNotWorking
// 0x0001 (0x0001 - 0x0000)
struct WB_HUD_C_PlayPossessNotWorking final
{
public:
	E_PossessNotWorkingReason                     Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_PlayPossessNotWorking) == 0x000001, "Wrong alignment on WB_HUD_C_PlayPossessNotWorking");
static_assert(sizeof(WB_HUD_C_PlayPossessNotWorking) == 0x000001, "Wrong size on WB_HUD_C_PlayPossessNotWorking");
static_assert(offsetof(WB_HUD_C_PlayPossessNotWorking, Reason) == 0x000000, "Member 'WB_HUD_C_PlayPossessNotWorking::Reason' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.PlayYouHaveBeenKilled
// 0x0010 (0x0010 - 0x0000)
struct WB_HUD_C_PlayYouHaveBeenKilled final
{
public:
	class APlayerState*                           Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayerWasHunter;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_PlayYouHaveBeenKilled) == 0x000008, "Wrong alignment on WB_HUD_C_PlayYouHaveBeenKilled");
static_assert(sizeof(WB_HUD_C_PlayYouHaveBeenKilled) == 0x000010, "Wrong size on WB_HUD_C_PlayYouHaveBeenKilled");
static_assert(offsetof(WB_HUD_C_PlayYouHaveBeenKilled, Killer) == 0x000000, "Member 'WB_HUD_C_PlayYouHaveBeenKilled::Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_PlayYouHaveBeenKilled, PlayerWasHunter) == 0x000008, "Member 'WB_HUD_C_PlayYouHaveBeenKilled::PlayerWasHunter' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.PowerUpCollected
// 0x0018 (0x0018 - 0x0000)
struct WB_HUD_C_PowerUpCollected final
{
public:
	class FText                                   PowerUpName;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WB_HUD_C_PowerUpCollected) == 0x000008, "Wrong alignment on WB_HUD_C_PowerUpCollected");
static_assert(sizeof(WB_HUD_C_PowerUpCollected) == 0x000018, "Wrong size on WB_HUD_C_PowerUpCollected");
static_assert(offsetof(WB_HUD_C_PowerUpCollected, PowerUpName) == 0x000000, "Member 'WB_HUD_C_PowerUpCollected::PowerUpName' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.SetHudExtensionAlignment
// 0x0010 (0x0010 - 0x0000)
struct WB_HUD_C_SetHudExtensionAlignment final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_SetHudExtensionAlignment) == 0x000008, "Wrong alignment on WB_HUD_C_SetHudExtensionAlignment");
static_assert(sizeof(WB_HUD_C_SetHudExtensionAlignment) == 0x000010, "Wrong size on WB_HUD_C_SetHudExtensionAlignment");
static_assert(offsetof(WB_HUD_C_SetHudExtensionAlignment, Widget) == 0x000000, "Member 'WB_HUD_C_SetHudExtensionAlignment::Widget' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_SetHudExtensionAlignment, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000008, "Member 'WB_HUD_C_SetHudExtensionAlignment::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_HUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_Tick) == 0x000004, "Wrong alignment on WB_HUD_C_Tick");
static_assert(sizeof(WB_HUD_C_Tick) == 0x00003C, "Wrong size on WB_HUD_C_Tick");
static_assert(offsetof(WB_HUD_C_Tick, MyGeometry) == 0x000000, "Member 'WB_HUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_HUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.UpdateBigTextTimer
// 0x0038 (0x0038 - 0x0000)
struct WB_HUD_C_UpdateBigTextTimer final
{
public:
	int32                                         Param_Time;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D33[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_UpdateBigTextTimer) == 0x000008, "Wrong alignment on WB_HUD_C_UpdateBigTextTimer");
static_assert(sizeof(WB_HUD_C_UpdateBigTextTimer) == 0x000038, "Wrong size on WB_HUD_C_UpdateBigTextTimer");
static_assert(offsetof(WB_HUD_C_UpdateBigTextTimer, Param_Time) == 0x000000, "Member 'WB_HUD_C_UpdateBigTextTimer::Param_Time' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateBigTextTimer, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'WB_HUD_C_UpdateBigTextTimer::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateBigTextTimer, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WB_HUD_C_UpdateBigTextTimer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateBigTextTimer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'WB_HUD_C_UpdateBigTextTimer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_UpdateBigTextTimer, CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast) == 0x000030, "Member 'WB_HUD_C_UpdateBigTextTimer::CallFunc_PlaySound2D_VolumeMultiplier_ImplicitCast' has a wrong offset!");

// Function WB_HUD.WB_HUD_C.YouHaveBeenKilled
// 0x0018 (0x0018 - 0x0000)
struct WB_HUD_C_YouHaveBeenKilled final
{
public:
	class FString                                 Killer;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          WasHunter;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_HUD_C_YouHaveBeenKilled) == 0x000008, "Wrong alignment on WB_HUD_C_YouHaveBeenKilled");
static_assert(sizeof(WB_HUD_C_YouHaveBeenKilled) == 0x000018, "Wrong size on WB_HUD_C_YouHaveBeenKilled");
static_assert(offsetof(WB_HUD_C_YouHaveBeenKilled, Killer) == 0x000000, "Member 'WB_HUD_C_YouHaveBeenKilled::Killer' has a wrong offset!");
static_assert(offsetof(WB_HUD_C_YouHaveBeenKilled, WasHunter) == 0x000010, "Member 'WB_HUD_C_YouHaveBeenKilled::WasHunter' has a wrong offset!");

}

