#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DataPrivacy

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_DataPrivacy.WB_DataPrivacy_C.ExecuteUbergraph_WB_DataPrivacy
// 0x0058 (0x0058 - 0x0000)
struct WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy) == 0x000008, "Wrong alignment on WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy");
static_assert(sizeof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy) == 0x000058, "Wrong size on WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, EntryPoint) == 0x000000, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WB_DataPrivacy_C_ExecuteUbergraph_WB_DataPrivacy::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_DataPrivacy.WB_DataPrivacy_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_DataPrivacy_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            InitialFocusWidget;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DataPrivacy_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_DataPrivacy_C_GetInitialFocusWidget");
static_assert(sizeof(WB_DataPrivacy_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_DataPrivacy_C_GetInitialFocusWidget");
static_assert(offsetof(WB_DataPrivacy_C_GetInitialFocusWidget, InitialFocusWidget) == 0x000000, "Member 'WB_DataPrivacy_C_GetInitialFocusWidget::InitialFocusWidget' has a wrong offset!");

// Function WB_DataPrivacy.WB_DataPrivacy_C.OnPreviewKeyDown
// 0x0378 (0x0378 - 0x0000)
struct WB_DataPrivacy_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x01E8(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x02A0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x02BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BE[0x2];                                      // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x02C0(0x00B8)()
};
static_assert(alignof(WB_DataPrivacy_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_DataPrivacy_C_OnPreviewKeyDown");
static_assert(sizeof(WB_DataPrivacy_C_OnPreviewKeyDown) == 0x000378, "Wrong size on WB_DataPrivacy_C_OnPreviewKeyDown");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x0001E8, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x0002A0, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x0002B8, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x0002B9, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x0002BA, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x0002BB, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x0002BC, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue_1) == 0x0002BD, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue_1) == 0x0002C0, "Member 'WB_DataPrivacy_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");

// Function WB_DataPrivacy.WB_DataPrivacy_C.Scroll
// 0x0038 (0x0038 - 0x0000)
struct WB_DataPrivacy_C_Scroll final
{
public:
	double                                        Offset;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffset_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScrollOffsetOfEnd_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Max_ImplicitCast;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DataPrivacy_C_Scroll) == 0x000008, "Wrong alignment on WB_DataPrivacy_C_Scroll");
static_assert(sizeof(WB_DataPrivacy_C_Scroll) == 0x000038, "Wrong size on WB_DataPrivacy_C_Scroll");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, Offset) == 0x000000, "Member 'WB_DataPrivacy_C_Scroll::Offset' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_GetScrollOffset_ReturnValue) == 0x000008, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_GetScrollOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_GetScrollOffsetOfEnd_ReturnValue) == 0x00000C, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_GetScrollOffsetOfEnd_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_FClamp_Max_ImplicitCast) == 0x000028, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_FClamp_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Scroll, CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast) == 0x000030, "Member 'WB_DataPrivacy_C_Scroll::CallFunc_SetScrollOffset_NewScrollOffset_ImplicitCast' has a wrong offset!");

// Function WB_DataPrivacy.WB_DataPrivacy_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_DataPrivacy_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_DataPrivacy_C_Tick) == 0x000004, "Wrong alignment on WB_DataPrivacy_C_Tick");
static_assert(sizeof(WB_DataPrivacy_C_Tick) == 0x00003C, "Wrong size on WB_DataPrivacy_C_Tick");
static_assert(offsetof(WB_DataPrivacy_C_Tick, MyGeometry) == 0x000000, "Member 'WB_DataPrivacy_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_DataPrivacy_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_DataPrivacy_C_Tick::InDeltaTime' has a wrong offset!");

}

