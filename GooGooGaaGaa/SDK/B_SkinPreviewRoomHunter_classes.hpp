#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkinPreviewRoomHunter

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SkinPreviewRoomHunter.B_SkinPreviewRoomHunter_C
// 0x0120 (0x03B8 - 0x0298)
class AB_SkinPreviewRoomHunter_C final : public AActor
{
public:
	class URectLightComponent*                    RectLight2;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight1;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight6;                                       // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight4;                                       // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Characterlights;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Office1;                                        // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PaintingSquare;                                 // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Book;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Kanapee;                                        // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_FlowerPottLong;                                 // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_LibraryChair;                                   // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight5;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_CupBoard;                                       // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_LibDoor;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_LibDoorWay;                                     // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Office;                                         // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Podest;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   B_MenuCamera;                                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      Head;                                              // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      UpperBody;                                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      LowerBody;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          Hat;                                               // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          RangedWeapon;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          MeleeWeapon;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseDown;                                         // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AD1[0x3];                                     // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MousePosition;                                     // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SkinPreviewRoomHunter_C">();
	}
	static class AB_SkinPreviewRoomHunter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SkinPreviewRoomHunter_C>();
	}
};
static_assert(alignof(AB_SkinPreviewRoomHunter_C) == 0x000008, "Wrong alignment on AB_SkinPreviewRoomHunter_C");
static_assert(sizeof(AB_SkinPreviewRoomHunter_C) == 0x0003B8, "Wrong size on AB_SkinPreviewRoomHunter_C");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, RectLight2) == 0x000298, "Member 'AB_SkinPreviewRoomHunter_C::RectLight2' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, RectLight1) == 0x0002A0, "Member 'AB_SkinPreviewRoomHunter_C::RectLight1' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, RectLight) == 0x0002A8, "Member 'AB_SkinPreviewRoomHunter_C::RectLight' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SpotLight2) == 0x0002B0, "Member 'AB_SkinPreviewRoomHunter_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SpotLight1) == 0x0002B8, "Member 'AB_SkinPreviewRoomHunter_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, PointLight6) == 0x0002C0, "Member 'AB_SkinPreviewRoomHunter_C::PointLight6' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, PointLight4) == 0x0002C8, "Member 'AB_SkinPreviewRoomHunter_C::PointLight4' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Characterlights) == 0x0002D0, "Member 'AB_SkinPreviewRoomHunter_C::Characterlights' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_Office1) == 0x0002D8, "Member 'AB_SkinPreviewRoomHunter_C::SM_Office1' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Plane) == 0x0002E0, "Member 'AB_SkinPreviewRoomHunter_C::Plane' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, StaticMesh2) == 0x0002E8, "Member 'AB_SkinPreviewRoomHunter_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_PaintingSquare) == 0x0002F0, "Member 'AB_SkinPreviewRoomHunter_C::SM_PaintingSquare' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, StaticMesh) == 0x0002F8, "Member 'AB_SkinPreviewRoomHunter_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_Book) == 0x000300, "Member 'AB_SkinPreviewRoomHunter_C::SM_Book' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_Kanapee) == 0x000308, "Member 'AB_SkinPreviewRoomHunter_C::SM_Kanapee' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_FlowerPottLong) == 0x000310, "Member 'AB_SkinPreviewRoomHunter_C::SM_FlowerPottLong' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_LibraryChair) == 0x000318, "Member 'AB_SkinPreviewRoomHunter_C::SM_LibraryChair' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SpotLight) == 0x000320, "Member 'AB_SkinPreviewRoomHunter_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, PointLight5) == 0x000328, "Member 'AB_SkinPreviewRoomHunter_C::PointLight5' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_CupBoard) == 0x000330, "Member 'AB_SkinPreviewRoomHunter_C::SM_CupBoard' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_LibDoor) == 0x000338, "Member 'AB_SkinPreviewRoomHunter_C::SM_LibDoor' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_LibDoorWay) == 0x000340, "Member 'AB_SkinPreviewRoomHunter_C::SM_LibDoorWay' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, SM_Office) == 0x000348, "Member 'AB_SkinPreviewRoomHunter_C::SM_Office' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Cube) == 0x000350, "Member 'AB_SkinPreviewRoomHunter_C::Cube' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, PostProcess) == 0x000358, "Member 'AB_SkinPreviewRoomHunter_C::PostProcess' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Box) == 0x000360, "Member 'AB_SkinPreviewRoomHunter_C::Box' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Podest) == 0x000368, "Member 'AB_SkinPreviewRoomHunter_C::Podest' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, B_MenuCamera) == 0x000370, "Member 'AB_SkinPreviewRoomHunter_C::B_MenuCamera' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Scene) == 0x000378, "Member 'AB_SkinPreviewRoomHunter_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Head) == 0x000380, "Member 'AB_SkinPreviewRoomHunter_C::Head' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, UpperBody) == 0x000388, "Member 'AB_SkinPreviewRoomHunter_C::UpperBody' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, LowerBody) == 0x000390, "Member 'AB_SkinPreviewRoomHunter_C::LowerBody' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, Hat) == 0x000398, "Member 'AB_SkinPreviewRoomHunter_C::Hat' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, RangedWeapon) == 0x0003A0, "Member 'AB_SkinPreviewRoomHunter_C::RangedWeapon' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, MeleeWeapon) == 0x0003A8, "Member 'AB_SkinPreviewRoomHunter_C::MeleeWeapon' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, MouseDown) == 0x0003B0, "Member 'AB_SkinPreviewRoomHunter_C::MouseDown' has a wrong offset!");
static_assert(offsetof(AB_SkinPreviewRoomHunter_C, MousePosition) == 0x0003B4, "Member 'AB_SkinPreviewRoomHunter_C::MousePosition' has a wrong offset!");

}

