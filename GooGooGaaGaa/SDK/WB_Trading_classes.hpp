#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Trading

#include "Basic.hpp"

#include "E_QuestionAnswer_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Trading.WB_Trading_C
// 0x0038 (0x0318 - 0x02E0)
class UWB_Trading_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_C*                           Back;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           CreateRequest;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           PendingRequests;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           TradeHistory;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WaitingForPublicInventory;                         // 0x0310(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__WB_Trading_Back_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature();
	void BndEvt__WB_Trading_CreateRequest_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature();
	void BndEvt__WB_Trading_PendingRequests_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature();
	void BndEvt__WB_Trading_TradeHistory_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature();
	void CheckNotify();
	void Construct();
	void ExecuteUbergraph_WB_Trading(int32 EntryPoint);
	void GetInitialFocusWidget(class UUserWidget** InitialFocusWidget);
	void HandleInventoryPublic(bool IsPublic);
	void HasIncomingTradeRequestsEvent(bool HasIncomingTradeRequests);
	void IsInventoryPublic(TArray<struct FAccountSetting>& Settings, bool* IsPublic);
	void OnApply();
	void OnBack();
	void OnDialogAnswer(E_QuestionAnswer Answer);
	void OnReceiveAccountSettings(const TArray<struct FAccountSetting>& Settings);
	void OnSpecialAction();
	void ShowInventoryPrivate();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Trading_C">();
	}
	static class UWB_Trading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Trading_C>();
	}
};
static_assert(alignof(UWB_Trading_C) == 0x000008, "Wrong alignment on UWB_Trading_C");
static_assert(sizeof(UWB_Trading_C) == 0x000318, "Wrong size on UWB_Trading_C");
static_assert(offsetof(UWB_Trading_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_Trading_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, Back) == 0x0002E8, "Member 'UWB_Trading_C::Back' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, CanvasPanel_0) == 0x0002F0, "Member 'UWB_Trading_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, CreateRequest) == 0x0002F8, "Member 'UWB_Trading_C::CreateRequest' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, PendingRequests) == 0x000300, "Member 'UWB_Trading_C::PendingRequests' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, TradeHistory) == 0x000308, "Member 'UWB_Trading_C::TradeHistory' has a wrong offset!");
static_assert(offsetof(UWB_Trading_C, WaitingForPublicInventory) == 0x000310, "Member 'UWB_Trading_C::WaitingForPublicInventory' has a wrong offset!");

}

