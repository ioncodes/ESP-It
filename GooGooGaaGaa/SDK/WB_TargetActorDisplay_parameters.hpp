#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TargetActorDisplay

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WB_TargetActorDisplay_C_BndEvt__WB_TargetActorDisplay_RemoveCheckbox_K2Node_ComponentBoundEvent_0_OnCheckStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_TargetActorDisplay_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WB_TargetActorDisplay_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WB_TargetActorDisplay_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WB_TargetActorDisplay_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WB_TargetActorDisplay_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WB_TargetActorDisplay_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_TargetActorDisplay_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WB_TargetActorDisplay_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WB_TargetActorDisplay_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WB_TargetActorDisplay_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WB_TargetActorDisplay_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WB_TargetActorDisplay_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.ExecuteUbergraph_WB_TargetActorDisplay
// 0x0028 (0x0028 - 0x0000)
struct WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Event_ListItemObject;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_TargetActorData_C*                   K2Node_DynamicCast_AsB_Target_Actor_Data;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay");
static_assert(sizeof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay) == 0x000028, "Wrong size on WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, EntryPoint) == 0x000000, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, Temp_bool_Variable) == 0x000004, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, Temp_byte_Variable) == 0x000005, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, Temp_byte_Variable_1) == 0x000006, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_Select_Default) == 0x000007, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_Event_bIsExpanded) == 0x000008, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_Event_bIsSelected) == 0x000009, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_Event_ListItemObject) == 0x000010, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_Event_ListItemObject' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_DynamicCast_AsB_Target_Actor_Data) == 0x000018, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_DynamicCast_AsB_Target_Actor_Data' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay, K2Node_ComponentBoundEvent_bIsChecked) == 0x000021, "Member 'WB_TargetActorDisplay_C_ExecuteUbergraph_WB_TargetActorDisplay::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.Initialize
// 0x0014 (0x0014 - 0x0000)
struct WB_TargetActorDisplay_C_Initialize final
{
public:
	bool                                          CallFunc_CanContentBeInitialized_CanBeInitialized; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* AddedOrRemovedActor, bool WasAdded)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_Initialize) == 0x000004, "Wrong alignment on WB_TargetActorDisplay_C_Initialize");
static_assert(sizeof(WB_TargetActorDisplay_C_Initialize) == 0x000014, "Wrong size on WB_TargetActorDisplay_C_Initialize");
static_assert(offsetof(WB_TargetActorDisplay_C_Initialize, CallFunc_CanContentBeInitialized_CanBeInitialized) == 0x000000, "Member 'WB_TargetActorDisplay_C_Initialize::CallFunc_CanContentBeInitialized_CanBeInitialized' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_Initialize, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WB_TargetActorDisplay_C_Initialize::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.OnBorderMouseButtonDown
// 0x0230 (0x0230 - 0x0000)
struct WB_TargetActorDisplay_C_OnBorderMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable;                                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECheckBoxState                                Temp_byte_Variable_1;                              // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16B[0x5];                                      // 0x016B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0170(0x00B8)()
	ECheckBoxState                                K2Node_Select_Default;                             // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_OnBorderMouseButtonDown");
static_assert(sizeof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown) == 0x000230, "Wrong size on WB_TargetActorDisplay_C_OnBorderMouseButtonDown");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, MyGeometry) == 0x000000, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, MouseEvent) == 0x000038, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, Temp_bool_Variable) == 0x000168, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, Temp_byte_Variable) == 0x000169, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, Temp_byte_Variable_1) == 0x00016A, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, CallFunc_Unhandled_ReturnValue) == 0x000170, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_OnBorderMouseButtonDown, K2Node_Select_Default) == 0x000228, "Member 'WB_TargetActorDisplay_C_OnBorderMouseButtonDown::K2Node_Select_Default' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.OnListItemObjectSet
// 0x0008 (0x0008 - 0x0000)
struct WB_TargetActorDisplay_C_OnListItemObjectSet final
{
public:
	class UObject*                                ListItemObject;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_OnListItemObjectSet) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_OnListItemObjectSet");
static_assert(sizeof(WB_TargetActorDisplay_C_OnListItemObjectSet) == 0x000008, "Wrong size on WB_TargetActorDisplay_C_OnListItemObjectSet");
static_assert(offsetof(WB_TargetActorDisplay_C_OnListItemObjectSet, ListItemObject) == 0x000000, "Member 'WB_TargetActorDisplay_C_OnListItemObjectSet::ListItemObject' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.UpdateContent
// 0x0014 (0x0014 - 0x0000)
struct WB_TargetActorDisplay_C_UpdateContent final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_UpdateContent) == 0x000004, "Wrong alignment on WB_TargetActorDisplay_C_UpdateContent");
static_assert(sizeof(WB_TargetActorDisplay_C_UpdateContent) == 0x000014, "Wrong size on WB_TargetActorDisplay_C_UpdateContent");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateContent, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WB_TargetActorDisplay_C_UpdateContent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateContent, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast) == 0x000004, "Member 'WB_TargetActorDisplay_C_UpdateContent::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateContent, CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast) == 0x000008, "Member 'WB_TargetActorDisplay_C_UpdateContent::CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateContent, CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1) == 0x00000C, "Member 'WB_TargetActorDisplay_C_UpdateContent::CallFunc_SetMaxDesiredWidth_InMaxDesiredWidth_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateContent, CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast_1) == 0x000010, "Member 'WB_TargetActorDisplay_C_UpdateContent::CallFunc_SetMaxDesiredHeight_InMaxDesiredHeight_ImplicitCast_1' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.UpdateGroupInfo
// 0x0010 (0x0010 - 0x0000)
struct WB_TargetActorDisplay_C_UpdateGroupInfo final
{
public:
	class AActor*                                 AddedOrRemovedActor;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          WasAdded;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_UpdateGroupInfo) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_UpdateGroupInfo");
static_assert(sizeof(WB_TargetActorDisplay_C_UpdateGroupInfo) == 0x000010, "Wrong size on WB_TargetActorDisplay_C_UpdateGroupInfo");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateGroupInfo, AddedOrRemovedActor) == 0x000000, "Member 'WB_TargetActorDisplay_C_UpdateGroupInfo::AddedOrRemovedActor' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateGroupInfo, WasAdded) == 0x000008, "Member 'WB_TargetActorDisplay_C_UpdateGroupInfo::WasAdded' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.UpdateName
// 0x0018 (0x0018 - 0x0000)
struct WB_TargetActorDisplay_C_UpdateName final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetFullName_FullName;                     // 0x0008(0x0010)()
};
static_assert(alignof(WB_TargetActorDisplay_C_UpdateName) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_UpdateName");
static_assert(sizeof(WB_TargetActorDisplay_C_UpdateName) == 0x000018, "Wrong size on WB_TargetActorDisplay_C_UpdateName");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateName, TargetActor_0) == 0x000000, "Member 'WB_TargetActorDisplay_C_UpdateName::TargetActor_0' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateName, CallFunc_GetFullName_FullName) == 0x000008, "Member 'WB_TargetActorDisplay_C_UpdateName::CallFunc_GetFullName_FullName' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.UpdateNeedsToBeRemoved
// 0x0001 (0x0001 - 0x0000)
struct WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved) == 0x000001, "Wrong alignment on WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved");
static_assert(sizeof(WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved) == 0x000001, "Wrong size on WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved");
static_assert(offsetof(WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WB_TargetActorDisplay_C_UpdateNeedsToBeRemoved::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.CanContentBeInitialized
// 0x0002 (0x0002 - 0x0000)
struct WB_TargetActorDisplay_C_CanContentBeInitialized final
{
public:
	bool                                          CanBeInitialized;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_TargetActorDisplay_C_CanContentBeInitialized) == 0x000001, "Wrong alignment on WB_TargetActorDisplay_C_CanContentBeInitialized");
static_assert(sizeof(WB_TargetActorDisplay_C_CanContentBeInitialized) == 0x000002, "Wrong size on WB_TargetActorDisplay_C_CanContentBeInitialized");
static_assert(offsetof(WB_TargetActorDisplay_C_CanContentBeInitialized, CanBeInitialized) == 0x000000, "Member 'WB_TargetActorDisplay_C_CanContentBeInitialized::CanBeInitialized' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_CanContentBeInitialized, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WB_TargetActorDisplay_C_CanContentBeInitialized::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_TargetActorDisplay.WB_TargetActorDisplay_C.GetFullName
// 0x0040 (0x0040 - 0x0000)
struct WB_TargetActorDisplay_C_GetFullName final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   FullName;                                          // 0x0008(0x0010)(Parm, OutParm)
	class FString                                 Name_0;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNameForSingleActorOrGroup_FullName;    // 0x0030(0x0010)()
};
static_assert(alignof(WB_TargetActorDisplay_C_GetFullName) == 0x000008, "Wrong alignment on WB_TargetActorDisplay_C_GetFullName");
static_assert(sizeof(WB_TargetActorDisplay_C_GetFullName) == 0x000040, "Wrong size on WB_TargetActorDisplay_C_GetFullName");
static_assert(offsetof(WB_TargetActorDisplay_C_GetFullName, TargetActor_0) == 0x000000, "Member 'WB_TargetActorDisplay_C_GetFullName::TargetActor_0' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_GetFullName, FullName) == 0x000008, "Member 'WB_TargetActorDisplay_C_GetFullName::FullName' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_GetFullName, Name_0) == 0x000018, "Member 'WB_TargetActorDisplay_C_GetFullName::Name_0' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_GetFullName, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'WB_TargetActorDisplay_C_GetFullName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_TargetActorDisplay_C_GetFullName, CallFunc_GetNameForSingleActorOrGroup_FullName) == 0x000030, "Member 'WB_TargetActorDisplay_C_GetFullName::CallFunc_GetNameForSingleActorOrGroup_FullName' has a wrong offset!");

}

