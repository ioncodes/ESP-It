#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorSpectator

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ClientPossessed
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorSpectator_C_ClientPossessed final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_ClientPossessed) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_ClientPossessed");
static_assert(sizeof(B_ImpostorSpectator_C_ClientPossessed) == 0x000008, "Wrong size on B_ImpostorSpectator_C_ClientPossessed");
static_assert(offsetof(B_ImpostorSpectator_C_ClientPossessed, PlayerController) == 0x000000, "Member 'B_ImpostorSpectator_C_ClientPossessed::PlayerController' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ExecuteUbergraph_B_ImpostorSpectator
// 0x0260 (0x0260 - 0x0000)
struct B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0038(0x0018)(HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BD[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BE[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59BF[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_PlayerController;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0090(0x0018)(HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue;            // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill;                 // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C0[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue_1;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C1[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill_1;               // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C2[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Potato_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0160(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C3[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Potato_C*                            CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_AddActorComponent_ReturnValue_2;          // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C4[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_BaseSkill_C*                         K2Node_DynamicCast_AsB_Base_Skill_2;               // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C5[0x6];                                     // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0210(0x0018)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C6[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0240(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C7[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator) == 0x000010, "Wrong alignment on B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator");
static_assert(sizeof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator) == 0x000260, "Wrong size on B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, EntryPoint) == 0x000000, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_InputActionEvent_Key_3) == 0x000008, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, Temp_struct_Variable) == 0x000020, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_InputActionEvent_Key) == 0x000038, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000050, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000068, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x000078, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_Event_DeltaSeconds) == 0x000084, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_Event_PlayerController) == 0x000088, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_InputActionEvent_Key_1) == 0x000090, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_AddActorComponent_ReturnValue) == 0x0000A8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_AddActorComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Base_Skill) == 0x0000B0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Base_Skill' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetGameState_ReturnValue_1) == 0x0000C0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_AddActorComponent_ReturnValue_1) == 0x0000C8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_AddActorComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x0000D0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Base_Skill_1) == 0x0000E0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Base_Skill_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_5) == 0x0000E8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_FinishSpawningActor_ReturnValue) == 0x000158, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetTransform_ReturnValue_1) == 0x000160, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0001C0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0001D0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001D8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_Event_OldController) == 0x0001E8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_AddActorComponent_ReturnValue_2) == 0x0001F0, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_AddActorComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_IsValid_ReturnValue) == 0x0001F8, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Base_Skill_2) == 0x000200, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Base_Skill_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_6) == 0x000208, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_IsValid_ReturnValue_1) == 0x000209, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, Temp_struct_Variable_1) == 0x000210, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_GetGameInstance_ReturnValue) == 0x000228, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_AsB_Game_Instance) == 0x000230, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_DynamicCast_bSuccess_7) == 0x000238, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_InputActionEvent_Key_2) == 0x000240, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, CallFunc_IsLocallyControlled_ReturnValue) == 0x000258, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator, K2Node_InputAxisEvent_AxisValue) == 0x00025C, "Member 'B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0");
static_assert(sizeof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0");
static_assert(offsetof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1");
static_assert(sizeof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1");
static_assert(offsetof(B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_Fire_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2");
static_assert(sizeof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2");
static_assert(offsetof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_Fire_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3");
static_assert(sizeof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3");
static_assert(offsetof(B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0");
static_assert(sizeof(B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0");
static_assert(offsetof(B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ImpostorSpectator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ImpostorSpectator_C_ReceiveTick");
static_assert(sizeof(B_ImpostorSpectator_C_ReceiveTick) == 0x000004, "Wrong size on B_ImpostorSpectator_C_ReceiveTick");
static_assert(offsetof(B_ImpostorSpectator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ImpostorSpectator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorSpectator_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_ReceiveUnpossessed");
static_assert(sizeof(B_ImpostorSpectator_C_ReceiveUnpossessed) == 0x000008, "Wrong size on B_ImpostorSpectator_C_ReceiveUnpossessed");
static_assert(offsetof(B_ImpostorSpectator_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'B_ImpostorSpectator_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ShowSuitableSelectionScreen
// 0x0018 (0x0018 - 0x0000)
struct B_ImpostorSpectator_C_ShowSuitableSelectionScreen final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_ShowSuitableSelectionScreen");
static_assert(sizeof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen) == 0x000018, "Wrong size on B_ImpostorSpectator_C_ShowSuitableSelectionScreen");
static_assert(offsetof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_ImpostorSpectator_C_ShowSuitableSelectionScreen::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000008, "Member 'B_ImpostorSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ImpostorSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_ShowSuitableSelectionScreen, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'B_ImpostorSpectator_C_ShowSuitableSelectionScreen::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.TickHUD
// 0x0030 (0x0030 - 0x0000)
struct B_ImpostorSpectator_C_TickHUD final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C9[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_ImpostorHUD_C*                      K2Node_DynamicCast_AsWB_Impostor_HUD;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorSpectator_C_TickHUD) == 0x000008, "Wrong alignment on B_ImpostorSpectator_C_TickHUD");
static_assert(sizeof(B_ImpostorSpectator_C_TickHUD) == 0x000030, "Wrong size on B_ImpostorSpectator_C_TickHUD");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'B_ImpostorSpectator_C_TickHUD::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ImpostorSpectator_C_TickHUD::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ImpostorSpectator_C_TickHUD::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorSpectator_C_TickHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, K2Node_DynamicCast_AsWB_Impostor_HUD) == 0x000020, "Member 'B_ImpostorSpectator_C_TickHUD::K2Node_DynamicCast_AsWB_Impostor_HUD' has a wrong offset!");
static_assert(offsetof(B_ImpostorSpectator_C_TickHUD, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ImpostorSpectator_C_TickHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

