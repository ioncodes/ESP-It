#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_NewStatsAndAchievementsManager

#include "Basic.hpp"

#include "B_NewStatsAndAchievementsManager_classes.hpp"
#include "B_NewStatsAndAchievementsManager_parameters.hpp"


namespace SDK
{

// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.BuildStatsArrayJsonString
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_Stat>                  StatArray                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ResultString                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::BuildStatsArrayJsonString(TArray<struct FS_Stat>& StatArray, const class FString& ProductUserId, class FString* ResultString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "BuildStatsArrayJsonString");

	Params::B_NewStatsAndAchievementsManager_C_BuildStatsArrayJsonString Parms{};

	Parms.StatArray = std::move(StatArray);
	Parms.ProductUserId = std::move(ProductUserId);

	UObject::ProcessEvent(Func, &Parms);

	StatArray = std::move(Parms.StatArray);

	if (ResultString != nullptr)
		*ResultString = std::move(Parms.ResultString);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ExecuteUbergraph_B_NewStatsAndAchievementsManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::ExecuteUbergraph_B_NewStatsAndAchievementsManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "ExecuteUbergraph_B_NewStatsAndAchievementsManager");

	Params::B_NewStatsAndAchievementsManager_C_ExecuteUbergraph_B_NewStatsAndAchievementsManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.Initialize
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGameInstance*                    InGameInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::Initialize(class UGameInstance* InGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "Initialize");

	Params::B_NewStatsAndAchievementsManager_C_Initialize Parms{};

	Parms.InGameInstance = InGameInstance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidLoadGSOnlineStats__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnDidLoadGSOnlineStats__DelegateSignature(bool Success, const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnDidLoadGSOnlineStats__DelegateSignature");

	Params::B_NewStatsAndAchievementsManager_C_OnDidLoadGSOnlineStats__DelegateSignature Parms{};

	Parms.Success = Success;
	Parms.ProductUserId = std::move(ProductUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidLoadOnlineStats__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnDidLoadOnlineStats__DelegateSignature(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnDidLoadOnlineStats__DelegateSignature");

	Params::B_NewStatsAndAchievementsManager_C_OnDidLoadOnlineStats__DelegateSignature Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidStoreGSOnlineStats__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ProductUserId                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnDidStoreGSOnlineStats__DelegateSignature(bool Success, const class FString& ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnDidStoreGSOnlineStats__DelegateSignature");

	Params::B_NewStatsAndAchievementsManager_C_OnDidStoreGSOnlineStats__DelegateSignature Parms{};

	Parms.Success = Success;
	Parms.ProductUserId = std::move(ProductUserId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnDidStoreOnlineStats__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnDidStoreOnlineStats__DelegateSignature(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnDidStoreOnlineStats__DelegateSignature");

	Params::B_NewStatsAndAchievementsManager_C_OnDidStoreOnlineStats__DelegateSignature Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveGSStatsFailure
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveGSStatsFailure(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveGSStatsFailure");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsFailure Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveGSStatsResponse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveGSStatsResponse(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveGSStatsResponse");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveGSStatsResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStatsFailure
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveStatsFailure(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveStatsFailure");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveStatsFailure Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStatsResponse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveStatsResponse(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveStatsResponse");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveStatsResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreGSStatsComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveStoreGSStatsComplete(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveStoreGSStatsComplete");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsComplete Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreGSStatsFailure
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveStoreGSStatsFailure(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveStoreGSStatsFailure");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveStoreGSStatsFailure Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OnReceiveStoreStatsComplete
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OnReceiveStoreStatsComplete(class UVaRestRequestJSON* Response)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OnReceiveStoreStatsComplete");

	Params::B_NewStatsAndAchievementsManager_C_OnReceiveStoreStatsComplete Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseGSStatsAndAchievementsFromResponse
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ProductUserId                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::ParseGSStatsAndAchievementsFromResponse(class UVaRestRequestJSON* Response, bool* Success, class FString* ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "ParseGSStatsAndAchievementsFromResponse");

	Params::B_NewStatsAndAchievementsManager_C_ParseGSStatsAndAchievementsFromResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (ProductUserId != nullptr)
		*ProductUserId = std::move(Parms.ProductUserId);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseStatsAndAchievementsFromResponse
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::ParseStatsAndAchievementsFromResponse(class UVaRestRequestJSON* Response, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "ParseStatsAndAchievementsFromResponse");

	Params::B_NewStatsAndAchievementsManager_C_ParseStatsAndAchievementsFromResponse Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.ParseSuccessAndRequestedProductUserId
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVaRestRequestJSON*               Response                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ProductUserId                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::ParseSuccessAndRequestedProductUserId(class UVaRestRequestJSON* Response, bool* Success, class FString* ProductUserId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "ParseSuccessAndRequestedProductUserId");

	Params::B_NewStatsAndAchievementsManager_C_ParseSuccessAndRequestedProductUserId Parms{};

	Parms.Response = Response;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (ProductUserId != nullptr)
		*ProductUserId = std::move(Parms.ProductUserId);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.RequestGSOnlineStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::RequestGSOnlineStats(class AB_PlayerState_C* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "RequestGSOnlineStats");

	Params::B_NewStatsAndAchievementsManager_C_RequestGSOnlineStats Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.RequestOnlineStats
// (BlueprintCallable, BlueprintEvent)

void UB_NewStatsAndAchievementsManager_C::RequestOnlineStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "RequestOnlineStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.Reset All Online Stats
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AchievementsToo                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::Reset_All_Online_Stats(bool AchievementsToo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "Reset All Online Stats");

	Params::B_NewStatsAndAchievementsManager_C_Reset_All_Online_Stats Parms{};

	Parms.AchievementsToo = AchievementsToo;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetGSAchievement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::SetGSAchievement(class APlayerState* PlayerState, class FName Name_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "SetGSAchievement");

	Params::B_NewStatsAndAchievementsManager_C_SetGSAchievement Parms{};

	Parms.PlayerState = PlayerState;
	Parms.Name_0 = Name_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetGSStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   SetValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_NewStatsAndAchievementsManager_C::SetGSStat(class FName StatName, int64 SetValue, class APlayerState* PlayerState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "SetGSStat");

	Params::B_NewStatsAndAchievementsManager_C_SetGSStat Parms{};

	Parms.StatName = StatName;
	Parms.SetValue = SetValue;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.SetStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::SetStat(class FName StatName, int64 Value, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "SetStat");

	Params::B_NewStatsAndAchievementsManager_C_SetStat Parms{};

	Parms.StatName = StatName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.StoreGSOnlineStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::StoreGSOnlineStats(class AB_PlayerState_C* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "StoreGSOnlineStats");

	Params::B_NewStatsAndAchievementsManager_C_StoreGSOnlineStats Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.StoreOnlineStats
// (BlueprintCallable, BlueprintEvent)

void UB_NewStatsAndAchievementsManager_C::StoreOnlineStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "StoreOnlineStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetAchievementStatus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsCompleted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FDateTime                        CompletionDateTime                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsHidden                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::GetAchievementStatus(class FName StatName, bool* bIsCompleted, struct FDateTime* CompletionDateTime, bool* bIsHidden) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "GetAchievementStatus");

	Params::B_NewStatsAndAchievementsManager_C_GetAchievementStatus Parms{};

	Parms.StatName = StatName;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsCompleted != nullptr)
		*bIsCompleted = Parms.bIsCompleted;

	if (CompletionDateTime != nullptr)
		*CompletionDateTime = std::move(Parms.CompletionDateTime);

	if (bIsHidden != nullptr)
		*bIsHidden = Parms.bIsHidden;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetGSAchievement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HasAchievement                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::GetGSAchievement(class FName Name_0, class APlayerState* PlayerState, bool* HasAchievement, bool* Result) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "GetGSAchievement");

	Params::B_NewStatsAndAchievementsManager_C_GetGSAchievement Parms{};

	Parms.Name_0 = Name_0;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (HasAchievement != nullptr)
		*HasAchievement = Parms.HasAchievement;

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetGSStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerState*                     PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int64                                   ResultValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResultWasFound                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::GetGSStat(class FName StatName, class APlayerState* PlayerState, int64* ResultValue, bool* ResultWasFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "GetGSStat");

	Params::B_NewStatsAndAchievementsManager_C_GetGSStat Parms{};

	Parms.StatName = StatName;
	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultValue != nullptr)
		*ResultValue = Parms.ResultValue;

	if (ResultWasFound != nullptr)
		*ResultWasFound = Parms.ResultWasFound;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.GetStat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   ResultValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResultWasFound                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::GetStat(class FName StatName, int64* ResultValue, bool* ResultWasFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "GetStat");

	Params::B_NewStatsAndAchievementsManager_C_GetStat Parms{};

	Parms.StatName = StatName;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultValue != nullptr)
		*ResultValue = Parms.ResultValue;

	if (ResultWasFound != nullptr)
		*ResultWasFound = Parms.ResultWasFound;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.IsAchievementVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FName                             StatName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsVisible                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::IsAchievementVisible(class FName StatName, bool* bIsVisible) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "IsAchievementVisible");

	Params::B_NewStatsAndAchievementsManager_C_IsAchievementVisible Parms{};

	Parms.StatName = StatName;

	UObject::ProcessEvent(Func, &Parms);

	if (bIsVisible != nullptr)
		*bIsVisible = Parms.bIsVisible;
}


// Function B_NewStatsAndAchievementsManager.B_NewStatsAndAchievementsManager_C.OverrideServerLevel
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// int64                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WasFound                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_NewStatsAndAchievementsManager_C::OverrideServerLevel(int64* Value, bool* WasFound) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_NewStatsAndAchievementsManager_C", "OverrideServerLevel");

	Params::B_NewStatsAndAchievementsManager_C_OverrideServerLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;

	if (WasFound != nullptr)
		*WasFound = Parms.WasFound;
}

}

