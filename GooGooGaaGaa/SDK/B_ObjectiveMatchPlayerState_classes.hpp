#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveMatchPlayerState

#include "Basic.hpp"

#include "E_ObjectiveTeam_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "SSelectedSkills_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ObjectiveMatchPlayerState.B_ObjectiveMatchPlayerState_C
// 0x0060 (0x0088 - 0x0028)
class UB_ObjectiveMatchPlayerState_C final : public UObject
{
public:
	E_ObjectiveTeam                               ObjectiveTeam;                                     // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D55[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ScoreStatManager_C*                  ScoreStatManager;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Playtime;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Lives;                                             // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D56[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HealthPercental;                                   // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerId;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSSelectedSkills                       SelectedSkills;                                    // 0x0060(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead;                                            // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Initialize(const class FString& ID);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ObjectiveMatchPlayerState_C">();
	}
	static class UB_ObjectiveMatchPlayerState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ObjectiveMatchPlayerState_C>();
	}
};
static_assert(alignof(UB_ObjectiveMatchPlayerState_C) == 0x000008, "Wrong alignment on UB_ObjectiveMatchPlayerState_C");
static_assert(sizeof(UB_ObjectiveMatchPlayerState_C) == 0x000088, "Wrong size on UB_ObjectiveMatchPlayerState_C");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, ObjectiveTeam) == 0x000028, "Member 'UB_ObjectiveMatchPlayerState_C::ObjectiveTeam' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, ScoreStatManager) == 0x000030, "Member 'UB_ObjectiveMatchPlayerState_C::ScoreStatManager' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, Playtime) == 0x000038, "Member 'UB_ObjectiveMatchPlayerState_C::Playtime' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, Lives) == 0x000040, "Member 'UB_ObjectiveMatchPlayerState_C::Lives' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, HealthPercental) == 0x000048, "Member 'UB_ObjectiveMatchPlayerState_C::HealthPercental' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, PlayerId) == 0x000050, "Member 'UB_ObjectiveMatchPlayerState_C::PlayerId' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, SelectedSkills) == 0x000060, "Member 'UB_ObjectiveMatchPlayerState_C::SelectedSkills' has a wrong offset!");
static_assert(offsetof(UB_ObjectiveMatchPlayerState_C, IsDead) == 0x000080, "Member 'UB_ObjectiveMatchPlayerState_C::IsDead' has a wrong offset!");

}

