#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UniversalObjectLocator

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum UniversalObjectLocator.ELocatorResolveFlags
// NumValues: 0x0007
enum class ELocatorResolveFlags : uint8
{
	None                                     = 0,
	Load                                     = 1,
	Unload                                   = 2,
	Async                                    = 4,
	WillWait                                 = 8,
	AsyncWait                                = 12,
	ELocatorResolveFlags_MAX                 = 13,
};

// ScriptStruct UniversalObjectLocator.DirectPathObjectLocator
// 0x0020 (0x0020 - 0x0000)
struct FDirectPathObjectLocator final
{
public:
	struct FSoftObjectPath                        Path;                                              // 0x0000(0x0020)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDirectPathObjectLocator) == 0x000008, "Wrong alignment on FDirectPathObjectLocator");
static_assert(sizeof(FDirectPathObjectLocator) == 0x000020, "Wrong size on FDirectPathObjectLocator");
static_assert(offsetof(FDirectPathObjectLocator, Path) == 0x000000, "Member 'FDirectPathObjectLocator::Path' has a wrong offset!");

// ScriptStruct UniversalObjectLocator.LocatorSpawnedCacheResolveParameter
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FLocatorSpawnedCacheResolveParameter final
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FLocatorSpawnedCacheResolveParameter) == 0x000008, "Wrong alignment on FLocatorSpawnedCacheResolveParameter");
static_assert(sizeof(FLocatorSpawnedCacheResolveParameter) == 0x000008, "Wrong size on FLocatorSpawnedCacheResolveParameter");

// ScriptStruct UniversalObjectLocator.SubObjectLocator
// 0x0010 (0x0010 - 0x0000)
struct FSubObjectLocator final
{
public:
	class FString                                 PathWithinContext;                                 // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSubObjectLocator) == 0x000008, "Wrong alignment on FSubObjectLocator");
static_assert(sizeof(FSubObjectLocator) == 0x000010, "Wrong size on FSubObjectLocator");
static_assert(offsetof(FSubObjectLocator, PathWithinContext) == 0x000000, "Member 'FSubObjectLocator::PathWithinContext' has a wrong offset!");

// ScriptStruct UniversalObjectLocator.UniversalObjectLocatorFragment
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FUniversalObjectLocatorFragment final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUniversalObjectLocatorFragment) == 0x000008, "Wrong alignment on FUniversalObjectLocatorFragment");
static_assert(sizeof(FUniversalObjectLocatorFragment) == 0x000020, "Wrong size on FUniversalObjectLocatorFragment");

// ScriptStruct UniversalObjectLocator.UniversalObjectLocator
// 0x0010 (0x0010 - 0x0000)
struct FUniversalObjectLocator final
{
public:
	TArray<struct FUniversalObjectLocatorFragment> Fragments;                                         // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
};
static_assert(alignof(FUniversalObjectLocator) == 0x000008, "Wrong alignment on FUniversalObjectLocator");
static_assert(sizeof(FUniversalObjectLocator) == 0x000010, "Wrong size on FUniversalObjectLocator");
static_assert(offsetof(FUniversalObjectLocator, Fragments) == 0x000000, "Member 'FUniversalObjectLocator::Fragments' has a wrong offset!");

// ScriptStruct UniversalObjectLocator.UniversalObjectLocatorEmptyPayload
// 0x0001 (0x0001 - 0x0000)
struct FUniversalObjectLocatorEmptyPayload final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUniversalObjectLocatorEmptyPayload) == 0x000001, "Wrong alignment on FUniversalObjectLocatorEmptyPayload");
static_assert(sizeof(FUniversalObjectLocatorEmptyPayload) == 0x000001, "Wrong size on FUniversalObjectLocatorEmptyPayload");

}

