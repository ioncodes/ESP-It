#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WeatherVane

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_WeatherVane.B_WeatherVane_C
// 0x0088 (0x0320 - 0x0298)
class AB_WeatherVane_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WeatherVaneArrow;                               // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_WeatherVaneStand;                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             LocalTransform;                                    // 0x02C0(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_WeatherVane(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_WeatherVane_C">();
	}
	static class AB_WeatherVane_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_WeatherVane_C>();
	}
};
static_assert(alignof(AB_WeatherVane_C) == 0x000010, "Wrong alignment on AB_WeatherVane_C");
static_assert(sizeof(AB_WeatherVane_C) == 0x000320, "Wrong size on AB_WeatherVane_C");
static_assert(offsetof(AB_WeatherVane_C, UberGraphFrame) == 0x000298, "Member 'AB_WeatherVane_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_WeatherVane_C, PhysicsConstraint) == 0x0002A0, "Member 'AB_WeatherVane_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(AB_WeatherVane_C, SM_WeatherVaneArrow) == 0x0002A8, "Member 'AB_WeatherVane_C::SM_WeatherVaneArrow' has a wrong offset!");
static_assert(offsetof(AB_WeatherVane_C, SM_WeatherVaneStand) == 0x0002B0, "Member 'AB_WeatherVane_C::SM_WeatherVaneStand' has a wrong offset!");
static_assert(offsetof(AB_WeatherVane_C, DefaultSceneRoot) == 0x0002B8, "Member 'AB_WeatherVane_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_WeatherVane_C, LocalTransform) == 0x0002C0, "Member 'AB_WeatherVane_C::LocalTransform' has a wrong offset!");

}

