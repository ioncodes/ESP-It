#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BaseControlWithLabel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WB_BaseControlWithLabel.WB_BaseControlWithLabel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_BaseControlWithLabel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BaseControlWithLabel_C_PreConstruct) == 0x000001, "Wrong alignment on WB_BaseControlWithLabel_C_PreConstruct");
static_assert(sizeof(WB_BaseControlWithLabel_C_PreConstruct) == 0x000001, "Wrong size on WB_BaseControlWithLabel_C_PreConstruct");
static_assert(offsetof(WB_BaseControlWithLabel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_BaseControlWithLabel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_BaseControlWithLabel.WB_BaseControlWithLabel_C.OnPreviewKeyDown
// 0x0208 (0x0208 - 0x0000)
struct WB_BaseControlWithLabel_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0130(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_4;          // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_5;          // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x014E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x014F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0150(0x00B8)()
};
static_assert(alignof(WB_BaseControlWithLabel_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_BaseControlWithLabel_C_OnPreviewKeyDown");
static_assert(sizeof(WB_BaseControlWithLabel_C_OnPreviewKeyDown) == 0x000208, "Wrong size on WB_BaseControlWithLabel_C_OnPreviewKeyDown");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000130, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000148, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000149, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x00014A, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x00014B, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_4) == 0x00014C, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_5) == 0x00014D, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x00014E, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue_1) == 0x00014F, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000150, "Member 'WB_BaseControlWithLabel_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");

// Function WB_BaseControlWithLabel.WB_BaseControlWithLabel_C.ChangeTextColor
// 0x0038 (0x0038 - 0x0000)
struct WB_BaseControlWithLabel_C_ChangeTextColor final
{
public:
	struct FSlateColor                            InColorAndOpacity;                                 // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BD[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BaseControlWithLabel_C_ChangeTextColor) == 0x000008, "Wrong alignment on WB_BaseControlWithLabel_C_ChangeTextColor");
static_assert(sizeof(WB_BaseControlWithLabel_C_ChangeTextColor) == 0x000038, "Wrong size on WB_BaseControlWithLabel_C_ChangeTextColor");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, InColorAndOpacity) == 0x000000, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::InColorAndOpacity' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, CallFunc_Array_Get_Item) == 0x000028, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ChangeTextColor, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WB_BaseControlWithLabel_C_ChangeTextColor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WB_BaseControlWithLabel.WB_BaseControlWithLabel_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_BaseControlWithLabel_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BaseControlWithLabel_C_Tick) == 0x000004, "Wrong alignment on WB_BaseControlWithLabel_C_Tick");
static_assert(sizeof(WB_BaseControlWithLabel_C_Tick) == 0x00003C, "Wrong size on WB_BaseControlWithLabel_C_Tick");
static_assert(offsetof(WB_BaseControlWithLabel_C_Tick, MyGeometry) == 0x000000, "Member 'WB_BaseControlWithLabel_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_BaseControlWithLabel_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_BaseControlWithLabel.WB_BaseControlWithLabel_C.ExecuteUbergraph_WB_BaseControlWithLabel
// 0x0048 (0x0048 - 0x0000)
struct WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BE[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel) == 0x000004, "Wrong alignment on WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel");
static_assert(sizeof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel) == 0x000048, "Wrong size on WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, EntryPoint) == 0x000000, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, CallFunc_IsHovered_ReturnValue) == 0x000006, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, CallFunc_BooleanAND_ReturnValue) == 0x000007, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000008, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, K2Node_Event_IsDesignTime) == 0x000009, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, K2Node_Event_MyGeometry) == 0x00000C, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel, K2Node_Event_InDeltaTime) == 0x000044, "Member 'WB_BaseControlWithLabel_C_ExecuteUbergraph_WB_BaseControlWithLabel::K2Node_Event_InDeltaTime' has a wrong offset!");

}

