#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ScoreStatManager

#include "Basic.hpp"

#include "EHunterScoreStat_structs.hpp"
#include "EWitchScoreStat_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_ScoreStatManager.B_ScoreStatManager_C
// 0x0290 (0x02B8 - 0x0028)
class UB_ScoreStatManager_C final : public UObject
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         GameState;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<EHunterScoreStat, double>                HunterScoreStats;                                  // 0x0038(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EWitchScoreStat, double>                 WitchScoreStats;                                   // 0x0088(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EHunterScoreStat, int32>                 HunterStatAverageCounts;                           // 0x00D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EWitchScoreStat, int32>                  WitchStatAverageCounts;                            // 0x0128(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EHunterScoreStat, double>                HunterScoreStatWorth;                              // 0x0178(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EWitchScoreStat, double>                 WitchScoreStatWorth;                               // 0x01C8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EHunterScoreStat, double>                HunterScoreStatsReverse;                           // 0x0218(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EWitchScoreStat, double>                 WitchScoreStatsReverse;                            // 0x0268(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, int32 Count);
	void AddAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, int32 Count);
	void AddFromOtherStatManager(class UB_ScoreStatManager_C* SourceStatManager);
	void AddHunterScoreStat(EHunterScoreStat HunterScoreStat, double Value);
	void AddWitchScoreStat(EWitchScoreStat WitchScoreStat, double Value);
	void GetAllCalculatedStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats);
	void GetAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, double* AverageValue);
	void GetAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, double* AverageValue);
	void GetCalculatedHunterStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats);
	void GetCalculatedWitchStats(TArray<struct FSCalculatedScoreStat>* CalculatedScoreStats);
	void GetHunterScoreStat(EHunterScoreStat HunterScoreStat, double* Stat);
	void GetHunterValueToUseForCalculation(EHunterScoreStat HunterScoreStat, double* ValueToUse, double* OriginalValue);
	void GetWitchScoreStat(EWitchScoreStat WitchScoreStat, double* Stat);
	void GetWitchValueToUseForCalculation(EWitchScoreStat WitchScoreStat, double* ValueToUse, double* OriginalValue);
	void IsRecordingStats(bool* Param_IsRecordingStats);
	void UpdateAverageHunterScoreStat(EHunterScoreStat HunterScoreStat, double Value);
	void UpdateAverageWitchScoreStat(EWitchScoreStat WitchScoreStat, double Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_ScoreStatManager_C">();
	}
	static class UB_ScoreStatManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_ScoreStatManager_C>();
	}
};
static_assert(alignof(UB_ScoreStatManager_C) == 0x000008, "Wrong alignment on UB_ScoreStatManager_C");
static_assert(sizeof(UB_ScoreStatManager_C) == 0x0002B8, "Wrong size on UB_ScoreStatManager_C");
static_assert(offsetof(UB_ScoreStatManager_C, PlayerState) == 0x000028, "Member 'UB_ScoreStatManager_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, GameState) == 0x000030, "Member 'UB_ScoreStatManager_C::GameState' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, HunterScoreStats) == 0x000038, "Member 'UB_ScoreStatManager_C::HunterScoreStats' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, WitchScoreStats) == 0x000088, "Member 'UB_ScoreStatManager_C::WitchScoreStats' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, HunterStatAverageCounts) == 0x0000D8, "Member 'UB_ScoreStatManager_C::HunterStatAverageCounts' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, WitchStatAverageCounts) == 0x000128, "Member 'UB_ScoreStatManager_C::WitchStatAverageCounts' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, HunterScoreStatWorth) == 0x000178, "Member 'UB_ScoreStatManager_C::HunterScoreStatWorth' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, WitchScoreStatWorth) == 0x0001C8, "Member 'UB_ScoreStatManager_C::WitchScoreStatWorth' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, HunterScoreStatsReverse) == 0x000218, "Member 'UB_ScoreStatManager_C::HunterScoreStatsReverse' has a wrong offset!");
static_assert(offsetof(UB_ScoreStatManager_C, WitchScoreStatsReverse) == 0x000268, "Member 'UB_ScoreStatManager_C::WitchScoreStatsReverse' has a wrong offset!");

}

