#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MaterialListPopup

#include "Basic.hpp"

#include "WB_MaterialListPopup_classes.hpp"
#include "WB_MaterialListPopup_parameters.hpp"


namespace SDK
{

// Function WB_MaterialListPopup.WB_MaterialListPopup_C.BndEvt__WB_MaterialListPopup_Back_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature
// (BlueprintEvent)

void UWB_MaterialListPopup_C::BndEvt__WB_MaterialListPopup_Back_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "BndEvt__WB_MaterialListPopup_Back_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.CloseAndDeselectOverwrite
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_MaterialListPopup_C::CloseAndDeselectOverwrite()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "CloseAndDeselectOverwrite");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.ExecuteUbergraph_WB_MaterialListPopup
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_MaterialListPopup_C::ExecuteUbergraph_WB_MaterialListPopup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "ExecuteUbergraph_WB_MaterialListPopup");

	Params::WB_MaterialListPopup_C_ExecuteUbergraph_WB_MaterialListPopup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.GetIndividualItemDataAndFocus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      CategoryButton                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ESalvageCategory                        SalvageCategory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UB_TileViewData_C*>        Data                                                   (Parm, OutParm)
// TArray<bool>                            FocusNeeded                                            (Parm, OutParm)

void UWB_MaterialListPopup_C::GetIndividualItemDataAndFocus(class UUserWidget* CategoryButton, ESalvageCategory SalvageCategory, TArray<class UB_TileViewData_C*>* Data, TArray<bool>* FocusNeeded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "GetIndividualItemDataAndFocus");

	Params::WB_MaterialListPopup_C_GetIndividualItemDataAndFocus Parms{};

	Parms.CategoryButton = CategoryButton;
	Parms.SalvageCategory = SalvageCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (Data != nullptr)
		*Data = std::move(Parms.Data);

	if (FocusNeeded != nullptr)
		*FocusNeeded = std::move(Parms.FocusNeeded);
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.GetTileView
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UTileView*                        TileView                                               (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_MaterialListPopup_C::GetTileView(class UTileView** TileView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "GetTileView");

	Params::WB_MaterialListPopup_C_GetTileView Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TileView != nullptr)
		*TileView = Parms.TileView;
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.UpdateDataByButton
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_MaterialButton_C*             StartMaterialButton_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_MaterialListPopup_C::UpdateDataByButton(class UWB_MaterialButton_C* StartMaterialButton_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "UpdateDataByButton");

	Params::WB_MaterialListPopup_C_UpdateDataByButton Parms{};

	Parms.StartMaterialButton_0 = StartMaterialButton_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_MaterialListPopup.WB_MaterialListPopup_C.HasInitialSelection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// uint8                                   CurrentIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           IndexArray                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWB_MaterialListPopup_C::HasInitialSelection(uint8 CurrentIndex, TArray<uint8>& IndexArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_MaterialListPopup_C", "HasInitialSelection");

	Params::WB_MaterialListPopup_C_HasInitialSelection Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.IndexArray = std::move(IndexArray);

	UObject::ProcessEvent(Func, &Parms);

	IndexArray = std::move(Parms.IndexArray);

	return Parms.ReturnValue;
}

}

