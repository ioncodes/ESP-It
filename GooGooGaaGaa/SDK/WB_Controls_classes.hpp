#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Controls

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Controls.WB_Controls_C
// 0x0098 (0x0358 - 0x02C0)
class UWB_Controls_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           ControllerControls_Hunter;                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ControllerControls_Spectator;                      // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ControllerControls_Witch;                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Controls_Controller;                               // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Controls_Keyboard;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           KeyboardControls_Hunter;                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           KeyboardControls_Spectator;                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           KeyboardControls_Witch;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_ControllerControls;                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_GameControls;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        Switcher_KeyboardControls;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Vignette;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   WB_ControllerIcon;                                 // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   WB_ControllerIcon_C_0;                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   WB_ControllerIcon_C_1;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   WB_ControllerIcon_C_2;                             // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Team;                                              // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_WB_Controls(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Controls_C">();
	}
	static class UWB_Controls_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Controls_C>();
	}
};
static_assert(alignof(UWB_Controls_C) == 0x000008, "Wrong alignment on UWB_Controls_C");
static_assert(sizeof(UWB_Controls_C) == 0x000358, "Wrong size on UWB_Controls_C");
static_assert(offsetof(UWB_Controls_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_Controls_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, ControllerControls_Hunter) == 0x0002C8, "Member 'UWB_Controls_C::ControllerControls_Hunter' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, ControllerControls_Spectator) == 0x0002D0, "Member 'UWB_Controls_C::ControllerControls_Spectator' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, ControllerControls_Witch) == 0x0002D8, "Member 'UWB_Controls_C::ControllerControls_Witch' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Controls_Controller) == 0x0002E0, "Member 'UWB_Controls_C::Controls_Controller' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Controls_Keyboard) == 0x0002E8, "Member 'UWB_Controls_C::Controls_Keyboard' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, KeyboardControls_Hunter) == 0x0002F0, "Member 'UWB_Controls_C::KeyboardControls_Hunter' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, KeyboardControls_Spectator) == 0x0002F8, "Member 'UWB_Controls_C::KeyboardControls_Spectator' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, KeyboardControls_Witch) == 0x000300, "Member 'UWB_Controls_C::KeyboardControls_Witch' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Switcher_ControllerControls) == 0x000308, "Member 'UWB_Controls_C::Switcher_ControllerControls' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Switcher_GameControls) == 0x000310, "Member 'UWB_Controls_C::Switcher_GameControls' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Switcher_KeyboardControls) == 0x000318, "Member 'UWB_Controls_C::Switcher_KeyboardControls' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Vignette) == 0x000320, "Member 'UWB_Controls_C::Vignette' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, WB_ControllerIcon) == 0x000328, "Member 'UWB_Controls_C::WB_ControllerIcon' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, WB_ControllerIcon_C_0) == 0x000330, "Member 'UWB_Controls_C::WB_ControllerIcon_C_0' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, WB_ControllerIcon_C_1) == 0x000338, "Member 'UWB_Controls_C::WB_ControllerIcon_C_1' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, WB_ControllerIcon_C_2) == 0x000340, "Member 'UWB_Controls_C::WB_ControllerIcon_C_2' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, PlayerState) == 0x000348, "Member 'UWB_Controls_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWB_Controls_C, Team) == 0x000350, "Member 'UWB_Controls_C::Team' has a wrong offset!");

}

