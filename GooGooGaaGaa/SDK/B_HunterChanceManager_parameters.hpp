#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HunterChanceManager

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"


namespace SDK::Params
{

// Function B_HunterChanceManager.B_HunterChanceManager_C.AllocatePlayers
// 0x00B0 (0x00B0 - 0x0000)
struct B_HunterChanceManager_C_AllocatePlayers final
{
public:
	TArray<class APlayerState*>                   PlayerStates;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 CurrentNetId;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class APlayerState*                           CurrentPlayerState;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Sum;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0040(0x0020)()
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterChanceManager_C_AllocatePlayers) == 0x000008, "Wrong alignment on B_HunterChanceManager_C_AllocatePlayers");
static_assert(sizeof(B_HunterChanceManager_C_AllocatePlayers) == 0x0000B0, "Wrong size on B_HunterChanceManager_C_AllocatePlayers");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, PlayerStates) == 0x000000, "Member 'B_HunterChanceManager_C_AllocatePlayers::PlayerStates' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CurrentNetId) == 0x000010, "Member 'B_HunterChanceManager_C_AllocatePlayers::CurrentNetId' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CurrentPlayerState) == 0x000020, "Member 'B_HunterChanceManager_C_AllocatePlayers::CurrentPlayerState' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, Sum) == 0x000028, "Member 'B_HunterChanceManager_C_AllocatePlayers::Sum' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_HunterChanceManager_C_AllocatePlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_HunterChanceManager_C_AllocatePlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000040, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_UniqueNetIdToString_String) == 0x000060, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_UniqueNetIdToString_String' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Array_Get_Item) == 0x000078, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Max_ReturnValue) == 0x000084, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000090, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Map_Contains_ReturnValue) == 0x0000AC, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_AllocatePlayers, CallFunc_Not_PreBool_ReturnValue) == 0x0000AD, "Member 'B_HunterChanceManager_C_AllocatePlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_HunterChanceManager.B_HunterChanceManager_C.GetHunterPlayersByChance
// 0x0268 (0x0268 - 0x0000)
struct B_HunterChanceManager_C_GetHunterPlayersByChance final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   Players_0;                                         // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FString>                         InvolvedForRandom;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class FString>                         ElectedPlayers;                                    // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FString                                 CurrentPlayerId;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   PlayersToReturn;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        Roll;                                              // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, double>                   PlayerMax;                                         // 0x0060(0x0050)(Edit, BlueprintVisible)
	TMap<class FString, double>                   PlayerMin;                                         // 0x00B0(0x0050)(Edit, BlueprintVisible)
	double                                        MaxChance;                                         // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Map_Find_Value_1;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_4;                         // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_3;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_4;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_5;                         // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterChanceManager_C_GetHunterPlayersByChance) == 0x000008, "Wrong alignment on B_HunterChanceManager_C_GetHunterPlayersByChance");
static_assert(sizeof(B_HunterChanceManager_C_GetHunterPlayersByChance) == 0x000268, "Wrong size on B_HunterChanceManager_C_GetHunterPlayersByChance");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Amount) == 0x000000, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Amount' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Players_0) == 0x000008, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Players_0' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, InvolvedForRandom) == 0x000018, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::InvolvedForRandom' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, ElectedPlayers) == 0x000028, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::ElectedPlayers' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CurrentPlayerId) == 0x000038, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CurrentPlayerId' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, PlayersToReturn) == 0x000048, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::PlayersToReturn' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Roll) == 0x000058, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Roll' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, PlayerMax) == 0x000060, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::PlayerMax' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, PlayerMin) == 0x0000B0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::PlayerMin' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, MaxChance) == 0x000100, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::MaxChance' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Array_Index_Variable) == 0x000108, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Array_Index_Variable_1) == 0x00010C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue) == 0x000114, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_bool_True_if_break_was_hit_Variable) == 0x000118, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Array_Index_Variable_2) == 0x00011C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Not_PreBool_ReturnValue) == 0x000120, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Loop_Counter_Variable_1) == 0x000124, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Variable) == 0x000128, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue_1) == 0x00012C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue_2) == 0x000130, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Loop_Counter_Variable_2) == 0x000134, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Loop_Counter_Variable_3) == 0x000138, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue_3) == 0x00013C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue_4) == 0x000140, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Loop_Counter_Variable_4) == 0x000144, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_IntInt_ReturnValue_5) == 0x000148, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Array_Index_Variable_3) == 0x00014C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000150, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Get_Item) == 0x000158, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Get_Item_1) == 0x000170, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Get_Item_2) == 0x000188, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_BooleanAND_ReturnValue) == 0x000198, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Length_ReturnValue_2) == 0x00019C, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Length_ReturnValue_3) == 0x0001A4, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001A8, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value) == 0x0001B0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue) == 0x0001B8, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, Temp_int_Array_Index_Variable_4) == 0x0001BC, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Get_Item_3) == 0x0001C8, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_RemoveItem_ReturnValue) == 0x0001DC, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value_1) == 0x0001E0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue_1) == 0x0001E8, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Add_ReturnValue_1) == 0x0001EC, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Get_Item_4) == 0x0001F0, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Length_ReturnValue_4) == 0x000200, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value_2) == 0x000208, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue_2) == 0x000210, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_IntInt_ReturnValue_4) == 0x000211, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Array_Add_ReturnValue_2) == 0x000220, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value_3) == 0x000228, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue_3) == 0x000230, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value_4) == 0x000238, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue_4) == 0x000240, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000241, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000242, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_BooleanAND_ReturnValue_1) == 0x000243, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_RandomFloatInRange_ReturnValue) == 0x000248, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_Value_5) == 0x000250, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Map_Find_ReturnValue_5) == 0x000258, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_GetHunterPlayersByChance, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000260, "Member 'B_HunterChanceManager_C_GetHunterPlayersByChance::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_HunterChanceManager.B_HunterChanceManager_C.Normalize
// 0x0088 (0x0088 - 0x0000)
struct B_HunterChanceManager_C_Normalize final
{
public:
	double                                        Sum;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_HunterChanceManager_C_Normalize) == 0x000008, "Wrong alignment on B_HunterChanceManager_C_Normalize");
static_assert(sizeof(B_HunterChanceManager_C_Normalize) == 0x000088, "Wrong size on B_HunterChanceManager_C_Normalize");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, Sum) == 0x000000, "Member 'B_HunterChanceManager_C_Normalize::Sum' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'B_HunterChanceManager_C_Normalize::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_HunterChanceManager_C_Normalize::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'B_HunterChanceManager_C_Normalize::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'B_HunterChanceManager_C_Normalize::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Map_Find_Value) == 0x000040, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Map_Find_ReturnValue) == 0x000048, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Map_Find_ReturnValue_1) == 0x000070, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_HunterChanceManager_C_Normalize, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'B_HunterChanceManager_C_Normalize::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

