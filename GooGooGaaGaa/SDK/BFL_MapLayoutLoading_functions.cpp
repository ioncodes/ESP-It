#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_MapLayoutLoading

#include "Basic.hpp"

#include "BFL_MapLayoutLoading_classes.hpp"
#include "BFL_MapLayoutLoading_parameters.hpp"


namespace SDK
{

// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.AddToSwitchIdMapIfValidId
// (Static, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   ID                                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ActorToAdd                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_MapLayoutLoading_C::AddToSwitchIdMapIfValidId(const TMap<int32, class AActor*>& SwitchIdMap, const int32& ID, class AActor* ActorToAdd, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "AddToSwitchIdMapIfValidId");

	Params::BFL_MapLayoutLoading_C_AddToSwitchIdMapIfValidId Parms{};

	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.ID = ID;
	Parms.ActorToAdd = ActorToAdd;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.GetUniformScaleOfWeathervane
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       CorrectedTransform                                     (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_MapLayoutLoading_C::GetUniformScaleOfWeathervane(const struct FTransform& Transform, class UObject* __WorldContext, struct FTransform* CorrectedTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "GetUniformScaleOfWeathervane");

	Params::BFL_MapLayoutLoading_C_GetUniformScaleOfWeathervane Parms{};

	Parms.Transform = std::move(Transform);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CorrectedTransform != nullptr)
		*CorrectedTransform = std::move(Parms.CorrectedTransform);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadLights
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableLightToSave>    LightsToLoad                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_PlaceableLight_C*>     LoadedLights                                           (Parm, OutParm)

void UBFL_MapLayoutLoading_C::LoadLights(TScriptInterface<class IIMapLayoutLoading_C> Target, const TMap<int32, class AActor*>& SwitchIdMap, TArray<struct FPlaceableLightToSave>& LightsToLoad, class UObject* __WorldContext, TArray<class ABP_PlaceableLight_C*>* LoadedLights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "LoadLights");

	Params::BFL_MapLayoutLoading_C_LoadLights Parms{};

	Parms.Target = Target;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.LightsToLoad = std::move(LightsToLoad);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LightsToLoad = std::move(Parms.LightsToLoad);

	if (LoadedLights != nullptr)
		*LoadedLights = std::move(Parms.LoadedLights);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadMapLayout
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPropToSave>              PropsToLoad                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableStaticToSave>   StaticsToLoad                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableLightToSave>    LightsToLoad                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FSwitchToSave>            SwitchesToLoad                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class AB_StaticMeshProp_C*>      LoadedProps                                            (Parm, OutParm)
// TArray<class ABP_PlaceableStaticProp_C*>LoadedStatics                                          (Parm, OutParm)
// TArray<class ABP_PlaceableLight_C*>     LoadedLights                                           (Parm, OutParm)
// TArray<class ABP_Switch_C*>             LoadedSwitches                                         (Parm, OutParm)

void UBFL_MapLayoutLoading_C::LoadMapLayout(TScriptInterface<class IIMapLayoutLoading_C> Target, const TMap<int32, class AActor*>& SwitchIdMap, TArray<struct FPropToSave>& PropsToLoad, TArray<struct FPlaceableStaticToSave>& StaticsToLoad, TArray<struct FPlaceableLightToSave>& LightsToLoad, TArray<struct FSwitchToSave>& SwitchesToLoad, class UObject* __WorldContext, TArray<class AB_StaticMeshProp_C*>* LoadedProps, TArray<class ABP_PlaceableStaticProp_C*>* LoadedStatics, TArray<class ABP_PlaceableLight_C*>* LoadedLights, TArray<class ABP_Switch_C*>* LoadedSwitches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "LoadMapLayout");

	Params::BFL_MapLayoutLoading_C_LoadMapLayout Parms{};

	Parms.Target = Target;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.PropsToLoad = std::move(PropsToLoad);
	Parms.StaticsToLoad = std::move(StaticsToLoad);
	Parms.LightsToLoad = std::move(LightsToLoad);
	Parms.SwitchesToLoad = std::move(SwitchesToLoad);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PropsToLoad = std::move(Parms.PropsToLoad);
	StaticsToLoad = std::move(Parms.StaticsToLoad);
	LightsToLoad = std::move(Parms.LightsToLoad);
	SwitchesToLoad = std::move(Parms.SwitchesToLoad);

	if (LoadedProps != nullptr)
		*LoadedProps = std::move(Parms.LoadedProps);

	if (LoadedStatics != nullptr)
		*LoadedStatics = std::move(Parms.LoadedStatics);

	if (LoadedLights != nullptr)
		*LoadedLights = std::move(Parms.LoadedLights);

	if (LoadedSwitches != nullptr)
		*LoadedSwitches = std::move(Parms.LoadedSwitches);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadProps
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPropToSave>              PropsToLoad                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class AB_StaticMeshProp_C*>      LoadedProps                                            (Parm, OutParm)

void UBFL_MapLayoutLoading_C::LoadProps(TScriptInterface<class IIMapLayoutLoading_C> Target, const TMap<int32, class AActor*>& SwitchIdMap, TArray<struct FPropToSave>& PropsToLoad, class UObject* __WorldContext, TArray<class AB_StaticMeshProp_C*>* LoadedProps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "LoadProps");

	Params::BFL_MapLayoutLoading_C_LoadProps Parms{};

	Parms.Target = Target;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.PropsToLoad = std::move(PropsToLoad);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	PropsToLoad = std::move(Parms.PropsToLoad);

	if (LoadedProps != nullptr)
		*LoadedProps = std::move(Parms.LoadedProps);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadStatics
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FPlaceableStaticToSave>   StaticsToLoad                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_PlaceableStaticProp_C*>LoadedStatics                                          (Parm, OutParm)

void UBFL_MapLayoutLoading_C::LoadStatics(TScriptInterface<class IIMapLayoutLoading_C> Target, const TMap<int32, class AActor*>& SwitchIdMap, TArray<struct FPlaceableStaticToSave>& StaticsToLoad, class UObject* __WorldContext, TArray<class ABP_PlaceableStaticProp_C*>* LoadedStatics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "LoadStatics");

	Params::BFL_MapLayoutLoading_C_LoadStatics Parms{};

	Parms.Target = Target;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.StaticsToLoad = std::move(StaticsToLoad);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	StaticsToLoad = std::move(Parms.StaticsToLoad);

	if (LoadedStatics != nullptr)
		*LoadedStatics = std::move(Parms.LoadedStatics);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.LoadSwitches
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TMap<int32, class AActor*>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FSwitchToSave>            SwitchesToLoad                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class ABP_Switch_C*>             LoadedSwitches                                         (Parm, OutParm)

void UBFL_MapLayoutLoading_C::LoadSwitches(TScriptInterface<class IIMapLayoutLoading_C> Target, const TMap<int32, class AActor*>& SwitchIdMap, TArray<struct FSwitchToSave>& SwitchesToLoad, class UObject* __WorldContext, TArray<class ABP_Switch_C*>* LoadedSwitches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "LoadSwitches");

	Params::BFL_MapLayoutLoading_C_LoadSwitches Parms{};

	Parms.Target = Target;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.SwitchesToLoad = std::move(SwitchesToLoad);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	SwitchesToLoad = std::move(Parms.SwitchesToLoad);

	if (LoadedSwitches != nullptr)
		*LoadedSwitches = std::move(Parms.LoadedSwitches);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.SpawnPropOrActionProp
// (Static, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StartAwake                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFrozen                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Activated                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AB_StaticMeshProp_C*              SpawnedActor                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_MapLayoutLoading_C::SpawnPropOrActionProp(TScriptInterface<class IIMapLayoutLoading_C> Target, class UClass* Param_Class, const struct FTransform& Transform, bool StartAwake, bool IsFrozen, bool Activated, class UObject* __WorldContext, class AB_StaticMeshProp_C** SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "SpawnPropOrActionProp");

	Params::BFL_MapLayoutLoading_C_SpawnPropOrActionProp Parms{};

	Parms.Target = Target;
	Parms.Param_Class = Param_Class;
	Parms.Transform = std::move(Transform);
	Parms.StartAwake = StartAwake;
	Parms.IsFrozen = IsFrozen;
	Parms.Activated = Activated;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SpawnedActor != nullptr)
		*SpawnedActor = Parms.SpawnedActor;
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.SpawnStaticOrActionPlaceable
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IIMapLayoutLoading_C>Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Param_Class                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Activated                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABP_PlaceableStaticProp_C*        SpawnedActor                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBFL_MapLayoutLoading_C::SpawnStaticOrActionPlaceable(TScriptInterface<class IIMapLayoutLoading_C> Target, class UClass* Param_Class, const struct FTransform& Transform, bool Activated, class UObject* __WorldContext, class ABP_PlaceableStaticProp_C** SpawnedActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "SpawnStaticOrActionPlaceable");

	Params::BFL_MapLayoutLoading_C_SpawnStaticOrActionPlaceable Parms{};

	Parms.Target = Target;
	Parms.Param_Class = Param_Class;
	Parms.Transform = std::move(Transform);
	Parms.Activated = Activated;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SpawnedActor != nullptr)
		*SpawnedActor = Parms.SpawnedActor;
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreLights
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlaceableLight_C*>     Lights                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class AActor*, int32>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CurrentSwitchId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPlaceableLightToSave>    LightStructsToSave                                     (Parm, OutParm)

void UBFL_MapLayoutLoading_C::StoreLights(TArray<class ABP_PlaceableLight_C*>& Lights, const TMap<class AActor*, int32>& SwitchIdMap, const int32& CurrentSwitchId, class UObject* __WorldContext, TArray<struct FPlaceableLightToSave>* LightStructsToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "StoreLights");

	Params::BFL_MapLayoutLoading_C_StoreLights Parms{};

	Parms.Lights = std::move(Lights);
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.CurrentSwitchId = CurrentSwitchId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Lights = std::move(Parms.Lights);

	if (LightStructsToSave != nullptr)
		*LightStructsToSave = std::move(Parms.LightStructsToSave);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreMapLayout
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPropToSave>              PropsToSave                                            (Parm, OutParm)
// TArray<struct FPlaceableStaticToSave>   PlaceableStaticsToSave                                 (Parm, OutParm)
// TArray<struct FPlaceableLightToSave>    PlaceableLightsToSave                                  (Parm, OutParm)
// TArray<struct FSwitchToSave>            SwitchesToSave                                         (Parm, OutParm)

void UBFL_MapLayoutLoading_C::StoreMapLayout(class UObject* __WorldContext, TArray<struct FPropToSave>* PropsToSave, TArray<struct FPlaceableStaticToSave>* PlaceableStaticsToSave, TArray<struct FPlaceableLightToSave>* PlaceableLightsToSave, TArray<struct FSwitchToSave>* SwitchesToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "StoreMapLayout");

	Params::BFL_MapLayoutLoading_C_StoreMapLayout Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PropsToSave != nullptr)
		*PropsToSave = std::move(Parms.PropsToSave);

	if (PlaceableStaticsToSave != nullptr)
		*PlaceableStaticsToSave = std::move(Parms.PlaceableStaticsToSave);

	if (PlaceableLightsToSave != nullptr)
		*PlaceableLightsToSave = std::move(Parms.PlaceableLightsToSave);

	if (SwitchesToSave != nullptr)
		*SwitchesToSave = std::move(Parms.SwitchesToSave);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreProps
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AB_StaticMeshProp_C*>      Props                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class AActor*, int32>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CurrentSwitchId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPropToSave>              PropStructsToSave                                      (Parm, OutParm)

void UBFL_MapLayoutLoading_C::StoreProps(TArray<class AB_StaticMeshProp_C*>& Props, const TMap<class AActor*, int32>& SwitchIdMap, const int32& CurrentSwitchId, class UObject* __WorldContext, TArray<struct FPropToSave>* PropStructsToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "StoreProps");

	Params::BFL_MapLayoutLoading_C_StoreProps Parms{};

	Parms.Props = std::move(Props);
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.CurrentSwitchId = CurrentSwitchId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Props = std::move(Parms.Props);

	if (PropStructsToSave != nullptr)
		*PropStructsToSave = std::move(Parms.PropStructsToSave);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreStatics
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_PlaceableStaticProp_C*>Statics                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class AActor*, int32>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CurrentSwitchId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPlaceableStaticToSave>   StaticStructsToSave                                    (Parm, OutParm)

void UBFL_MapLayoutLoading_C::StoreStatics(TArray<class ABP_PlaceableStaticProp_C*>& Statics, const TMap<class AActor*, int32>& SwitchIdMap, const int32& CurrentSwitchId, class UObject* __WorldContext, TArray<struct FPlaceableStaticToSave>* StaticStructsToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "StoreStatics");

	Params::BFL_MapLayoutLoading_C_StoreStatics Parms{};

	Parms.Statics = std::move(Statics);
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.CurrentSwitchId = CurrentSwitchId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Statics = std::move(Parms.Statics);

	if (StaticStructsToSave != nullptr)
		*StaticStructsToSave = std::move(Parms.StaticStructsToSave);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.StoreSwitches
// (Static, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_Switch_C*>             Switches                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class AActor*, int32>              SwitchIdMap                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   CurrentSwitchId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSwitchToSave>            SwitchStructsToSave                                    (Parm, OutParm)

void UBFL_MapLayoutLoading_C::StoreSwitches(TArray<class ABP_Switch_C*>& Switches, const TMap<class AActor*, int32>& SwitchIdMap, const int32& CurrentSwitchId, class UObject* __WorldContext, TArray<struct FSwitchToSave>* SwitchStructsToSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_MapLayoutLoading_C", "StoreSwitches");

	Params::BFL_MapLayoutLoading_C_StoreSwitches Parms{};

	Parms.Switches = std::move(Switches);
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.CurrentSwitchId = CurrentSwitchId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Switches = std::move(Parms.Switches);

	if (SwitchStructsToSave != nullptr)
		*SwitchStructsToSave = std::move(Parms.SwitchStructsToSave);
}


// Function BFL_MapLayoutLoading.BFL_MapLayoutLoading_C.GetSwitchTargetIds
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ABP_Switch_C*                     SWITCH                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TMap<class AActor*, int32>              SwitchIdMap                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<int32>                           TargetIds                                              (Parm, OutParm)

void UBFL_MapLayoutLoading_C::GetSwitchTargetIds(class ABP_Switch_C* SWITCH, const TMap<class AActor*, int32>& SwitchIdMap, class UObject* __WorldContext, TArray<int32>* TargetIds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BFL_MapLayoutLoading_C", "GetSwitchTargetIds");

	Params::BFL_MapLayoutLoading_C_GetSwitchTargetIds Parms{};

	Parms.SWITCH = SWITCH;
	Parms.SwitchIdMap = std::move(SwitchIdMap);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetIds != nullptr)
		*TargetIds = std::move(Parms.TargetIds);
}

}

