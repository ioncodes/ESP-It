#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SnowRenderTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_SnowRenderTarget.B_SnowRenderTarget_C
// 0x0080 (0x0310 - 0x0290)
class AB_SnowRenderTarget_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               Terrain;                                           // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               ObjectCapture;                                     // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PainterMaterialInst;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Drawactors;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AActor*>                         SnowActors;                                        // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UMaterial*                              PainterMaterial;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CaptureHeight;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         GameState;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddInterpolatorToSnow(TArray<class AB_VisualIntepolator_C*>& Array);
	void AddToSnowNew(class AActor* Actor);
	void ExecuteUbergraph_B_SnowRenderTarget(int32 EntryPoint);
	void Init();
	bool IsMovingFastEnough(class AActor* Actor);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ResetSnow();
	void SetCaptureSize();
	void Update();
	void UpdateTerrainTarget();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_SnowRenderTarget_C">();
	}
	static class AB_SnowRenderTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_SnowRenderTarget_C>();
	}
};
static_assert(alignof(AB_SnowRenderTarget_C) == 0x000008, "Wrong alignment on AB_SnowRenderTarget_C");
static_assert(sizeof(AB_SnowRenderTarget_C) == 0x000310, "Wrong size on AB_SnowRenderTarget_C");
static_assert(offsetof(AB_SnowRenderTarget_C, UberGraphFrame) == 0x000290, "Member 'AB_SnowRenderTarget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, TextRender) == 0x000298, "Member 'AB_SnowRenderTarget_C::TextRender' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, Terrain) == 0x0002A0, "Member 'AB_SnowRenderTarget_C::Terrain' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, ObjectCapture) == 0x0002A8, "Member 'AB_SnowRenderTarget_C::ObjectCapture' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, Arrow) == 0x0002B0, "Member 'AB_SnowRenderTarget_C::Arrow' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, DefaultSceneRoot) == 0x0002B8, "Member 'AB_SnowRenderTarget_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, RenderTarget) == 0x0002C0, "Member 'AB_SnowRenderTarget_C::RenderTarget' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, PainterMaterialInst) == 0x0002C8, "Member 'AB_SnowRenderTarget_C::PainterMaterialInst' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, Drawactors) == 0x0002D0, "Member 'AB_SnowRenderTarget_C::Drawactors' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, SnowActors) == 0x0002E0, "Member 'AB_SnowRenderTarget_C::SnowActors' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, PainterMaterial) == 0x0002F0, "Member 'AB_SnowRenderTarget_C::PainterMaterial' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, Size) == 0x0002F8, "Member 'AB_SnowRenderTarget_C::Size' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, CaptureHeight) == 0x000300, "Member 'AB_SnowRenderTarget_C::CaptureHeight' has a wrong offset!");
static_assert(offsetof(AB_SnowRenderTarget_C, GameState) == 0x000308, "Member 'AB_SnowRenderTarget_C::GameState' has a wrong offset!");

}

