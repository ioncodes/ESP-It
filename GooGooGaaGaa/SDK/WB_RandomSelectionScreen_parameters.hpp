#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_RandomSelectionScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.ExecuteUbergraph_WB_RandomSelectionScreen
// 0x0020 (0x0020 - 0x0000)
struct WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50BE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen");
static_assert(sizeof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen) == 0x000020, "Wrong size on WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen");
static_assert(offsetof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen, EntryPoint) == 0x000000, "Member 'WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_RandomSelectionScreen_C_ExecuteUbergraph_WB_RandomSelectionScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_GameModeText_Text_0
// 0x0048 (0x0048 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_GameModeText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50BF[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0018)()
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_Get_GameModeText_Text_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0) == 0x000048, "Wrong size on WB_RandomSelectionScreen_C_Get_GameModeText_Text_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_GameModeText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_Get_GameModeText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'WB_RandomSelectionScreen_C_Get_GameModeText_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_Get_GameModeText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameModeText_Text_0, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'WB_RandomSelectionScreen_C_Get_GameModeText_Text_0::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_GameNameText_Text_0
// 0x00C0 (0x00C0 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_GameNameText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C0[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_Get_GameNameText_Text_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0) == 0x0000C0, "Wrong size on WB_RandomSelectionScreen_C_Get_GameNameText_Text_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, K2Node_MakeArray_Array) == 0x000098, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_GameNameText_Text_0, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WB_RandomSelectionScreen_C_Get_GameNameText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_HunterSkillsText_ColorAndOpacity_0
// 0x0030 (0x0030 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	uint8                                         Pad_50C1[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0) == 0x000030, "Wrong size on WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_ColorAndOpacity_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_HunterSkillsText_Visibility
// 0x000C (0x000C - 0x0000)
struct WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility) == 0x000004, "Wrong alignment on WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility) == 0x00000C, "Wrong size on WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, Temp_bool_Variable) == 0x000001, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, Temp_byte_Variable) == 0x000002, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility, K2Node_Select_Default) == 0x000009, "Member 'WB_RandomSelectionScreen_C_Get_HunterSkillsText_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_PlayersText_Text_0
// 0x0110 (0x0110 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_PlayersText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C2[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C3[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0040(0x0050)(HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0098(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F8(0x0018)()
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_Get_PlayersText_Text_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0) == 0x000110, "Wrong size on WB_RandomSelectionScreen_C_Get_PlayersText_Text_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_Min_ReturnValue) == 0x000038, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000040, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000090, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, K2Node_MakeStruct_FormatArgumentData_1) == 0x000098, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, K2Node_MakeArray_Array) == 0x0000E8, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_PlayersText_Text_0, CallFunc_Format_ReturnValue) == 0x0000F8, "Member 'WB_RandomSelectionScreen_C_Get_PlayersText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_WitchSkillsText_ColorAndOpacity_0
// 0x0030 (0x0030 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	uint8                                         Pad_50C4[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0) == 0x000030, "Wrong size on WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_ColorAndOpacity_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.Get_WitchSkillsText_Visibility
// 0x0010 (0x0010 - 0x0000)
struct WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewLocalVar_0;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C5[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility) == 0x000004, "Wrong alignment on WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility");
static_assert(sizeof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility) == 0x000010, "Wrong size on WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, NewLocalVar_0) == 0x000001, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, Temp_bool_Variable) == 0x000002, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, Temp_byte_Variable) == 0x000003, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, Temp_byte_Variable_1) == 0x000004, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, CallFunc_GetChildrenCount_ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility, K2Node_Select_Default) == 0x00000D, "Member 'WB_RandomSelectionScreen_C_Get_WitchSkillsText_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.GetInitialFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct WB_RandomSelectionScreen_C_GetInitialFocusWidget final
{
public:
	class UUserWidget*                            Param_InitialFocusWidget;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_GetInitialFocusWidget) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_GetInitialFocusWidget");
static_assert(sizeof(WB_RandomSelectionScreen_C_GetInitialFocusWidget) == 0x000008, "Wrong size on WB_RandomSelectionScreen_C_GetInitialFocusWidget");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetInitialFocusWidget, Param_InitialFocusWidget) == 0x000000, "Member 'WB_RandomSelectionScreen_C_GetInitialFocusWidget::Param_InitialFocusWidget' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.GetVisibility_0
// 0x0030 (0x0030 - 0x0000)
struct WB_RandomSelectionScreen_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasSkill;                                          // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C7[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Game_Mode;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_GetVisibility_0) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_GetVisibility_0");
static_assert(sizeof(WB_RandomSelectionScreen_C_GetVisibility_0) == 0x000030, "Wrong size on WB_RandomSelectionScreen_C_GetVisibility_0");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, HasSkill) == 0x000001, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::HasSkill' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, Temp_bool_Variable) == 0x000004, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, K2Node_Select_Default) == 0x000019, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, K2Node_ClassDynamicCast_AsB_Game_Mode) == 0x000020, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::K2Node_ClassDynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_GetVisibility_0, K2Node_ClassDynamicCast_bSuccess) == 0x000028, "Member 'WB_RandomSelectionScreen_C_GetVisibility_0::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.HunterSkillsLeftNavigation
// 0x0020 (0x0020 - 0x0000)
struct WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation final
{
public:
	EUINavigation                                 Param_Navigation;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation");
static_assert(sizeof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation) == 0x000020, "Wrong size on WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation");
static_assert(offsetof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation, Param_Navigation) == 0x000000, "Member 'WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation::Param_Navigation' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation, ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation, CallFunc_GetChildrenCount_ReturnValue) == 0x000010, "Member 'WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WB_RandomSelectionScreen_C_HunterSkillsLeftNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.OnPreviewKeyDown
// 0x02A0 (0x02A0 - 0x0000)
struct WB_RandomSelectionScreen_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0130(0x00B8)()
	struct FEventReply                            CallFunc_HandleSelectionScreenPreviewKeyDown_EventReply; // 0x01E8(0x00B8)()
};
static_assert(alignof(WB_RandomSelectionScreen_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_OnPreviewKeyDown");
static_assert(sizeof(WB_RandomSelectionScreen_C_OnPreviewKeyDown) == 0x0002A0, "Wrong size on WB_RandomSelectionScreen_C_OnPreviewKeyDown");
static_assert(offsetof(WB_RandomSelectionScreen_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_RandomSelectionScreen_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_RandomSelectionScreen_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_RandomSelectionScreen_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000130, "Member 'WB_RandomSelectionScreen_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_OnPreviewKeyDown, CallFunc_HandleSelectionScreenPreviewKeyDown_EventReply) == 0x0001E8, "Member 'WB_RandomSelectionScreen_C_OnPreviewKeyDown::CallFunc_HandleSelectionScreenPreviewKeyDown_EventReply' has a wrong offset!");

// Function WB_RandomSelectionScreen.WB_RandomSelectionScreen_C.SetReady
// 0x0038 (0x0038 - 0x0000)
struct WB_RandomSelectionScreen_C_SetReady final
{
public:
	bool                                          WantsToSpectate;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50CA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50CB[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_RandomSelectionScreen_C_SetReady) == 0x000008, "Wrong alignment on WB_RandomSelectionScreen_C_SetReady");
static_assert(sizeof(WB_RandomSelectionScreen_C_SetReady) == 0x000038, "Wrong size on WB_RandomSelectionScreen_C_SetReady");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, WantsToSpectate) == 0x000000, "Member 'WB_RandomSelectionScreen_C_SetReady::WantsToSpectate' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_RandomSelectionScreen_C_SetReady::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, K2Node_DynamicCast_AsB_Player_Controller) == 0x000010, "Member 'WB_RandomSelectionScreen_C_SetReady::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_RandomSelectionScreen_C_SetReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WB_RandomSelectionScreen_C_SetReady::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'WB_RandomSelectionScreen_C_SetReady::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_RandomSelectionScreen_C_SetReady, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_RandomSelectionScreen_C_SetReady::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

