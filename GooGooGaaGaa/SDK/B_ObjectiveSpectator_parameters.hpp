#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveSpectator

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_ObjectiveSpectator.B_ObjectiveSpectator_C.ExecuteUbergraph_B_ObjectiveSpectator
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator) == 0x000004, "Wrong alignment on B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator");
static_assert(sizeof(B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator) == 0x000008, "Wrong size on B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator");
static_assert(offsetof(B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator, EntryPoint) == 0x000000, "Member 'B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'B_ObjectiveSpectator_C_ExecuteUbergraph_B_ObjectiveSpectator::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function B_ObjectiveSpectator.B_ObjectiveSpectator_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectiveSpectator_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveSpectator_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ObjectiveSpectator_C_ReceiveTick");
static_assert(sizeof(B_ObjectiveSpectator_C_ReceiveTick) == 0x000004, "Wrong size on B_ObjectiveSpectator_C_ReceiveTick");
static_assert(offsetof(B_ObjectiveSpectator_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ObjectiveSpectator_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ObjectiveSpectator.B_ObjectiveSpectator_C.ShowSuitableSelectionScreen
// 0x0058 (0x0058 - 0x0000)
struct B_ObjectiveSpectator_C_ShowSuitableSelectionScreen final
{
public:
	class AB_ObjectiveGameState_C*                ObjectiveGameState;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3829[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen) == 0x000008, "Wrong alignment on B_ObjectiveSpectator_C_ShowSuitableSelectionScreen");
static_assert(sizeof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen) == 0x000058, "Wrong size on B_ObjectiveSpectator_C_ShowSuitableSelectionScreen");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, ObjectiveGameState) == 0x000000, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::ObjectiveGameState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, GameInstance) == 0x000008, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::GameInstance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000021, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_Greater_IntInt_ReturnValue) == 0x000023, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000028, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000030, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000048, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveSpectator_C_ShowSuitableSelectionScreen, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_ObjectiveSpectator_C_ShowSuitableSelectionScreen::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

