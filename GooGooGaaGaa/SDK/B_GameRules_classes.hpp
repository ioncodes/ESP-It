#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_GameRules

#include "Basic.hpp"

#include "S_MatchRules_structs.hpp"
#include "E_GameModifierType_structs.hpp"
#include "S_PowerupRules_structs.hpp"
#include "S_SkillRules_structs.hpp"
#include "E_PowerupRuleType_structs.hpp"
#include "S_GameModifier_structs.hpp"
#include "Engine_classes.hpp"
#include "E_SkillRuleType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_GameRules.B_GameRules_C
// 0x0040 (0x0068 - 0x0028)
class UB_GameRules_C final : public USaveGame
{
public:
	TArray<struct FS_SkillRules>                  SkillRules;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_MatchRules>                  MatchRules;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_GameModifier>                GameModifiers;                                     // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_PowerupRules>                PowerupRules;                                      // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void AddGameModifier(const struct FS_GameModifier& NewModifier);
	void AddPowerupRule(const struct FS_PowerupRules& NewPowerupRules);
	void AddSkillRule(const struct FS_SkillRules& NewSkillRule);
	void AreAnyRulesActive(bool* RulesActive);
	void DoesGameModifierExist(E_GameModifierType ModType, bool* ModExists, int32* ModIndex);
	void DoesPowerupRuleExist(E_PowerupRuleType Powerup, bool* PowerupExists, int32* PowerupIndex);
	void DoesSkillRuleExist(E_SkillRuleType SkillType, bool* RuleExists, int32* RuleIndex);
	void RemoveGameModifier(E_GameModifierType ModType);
	void RemovePowerupRule(E_PowerupRuleType Powerup);
	void RemoveSkillRule(E_SkillRuleType SkillType);
	void ResetAll();
	void Save(const class FString& Param_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_GameRules_C">();
	}
	static class UB_GameRules_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_GameRules_C>();
	}
};
static_assert(alignof(UB_GameRules_C) == 0x000008, "Wrong alignment on UB_GameRules_C");
static_assert(sizeof(UB_GameRules_C) == 0x000068, "Wrong size on UB_GameRules_C");
static_assert(offsetof(UB_GameRules_C, SkillRules) == 0x000028, "Member 'UB_GameRules_C::SkillRules' has a wrong offset!");
static_assert(offsetof(UB_GameRules_C, MatchRules) == 0x000038, "Member 'UB_GameRules_C::MatchRules' has a wrong offset!");
static_assert(offsetof(UB_GameRules_C, GameModifiers) == 0x000048, "Member 'UB_GameRules_C::GameModifiers' has a wrong offset!");
static_assert(offsetof(UB_GameRules_C, PowerupRules) == 0x000058, "Member 'UB_GameRules_C::PowerupRules' has a wrong offset!");

}

