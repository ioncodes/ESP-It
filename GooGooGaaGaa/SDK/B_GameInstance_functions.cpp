#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_GameInstance

#include "Basic.hpp"

#include "B_GameInstance_classes.hpp"
#include "B_GameInstance_parameters.hpp"


namespace SDK
{

// Function B_GameInstance.B_GameInstance_C.OnEOSLoginStarted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnEOSLoginStarted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnEOSLoginStarted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnGameStateLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnGameStateLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnGameStateLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.BackendLoginCompleted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSuccess                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::BackendLoginCompleted(bool bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "BackendLoginCompleted");

	Params::B_GameInstance_C_BackendLoginCompleted Parms{};

	Parms.bSuccess = bSuccess;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.BindGameModeEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::BindGameModeEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "BindGameModeEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.BindMasterServerManagerEvents
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::BindMasterServerManagerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "BindMasterServerManagerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.BindSaveGameManagerEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::BindSaveGameManagerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "BindSaveGameManagerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.BindUserControllerEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::BindUserControllerEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "BindUserControllerEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.CallUpdateFromOnlineSystem
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::CallUpdateFromOnlineSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "CallUpdateFromOnlineSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.ConnectUsingRawTcp
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::ConnectUsingRawTcp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ConnectUsingRawTcp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.CreateWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           WidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      UserWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::CreateWidget(class UClass* WidgetClass, class UUserWidget** UserWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "CreateWidget");

	Params::B_GameInstance_C_CreateWidget Parms{};

	Parms.WidgetClass = WidgetClass;

	UObject::ProcessEvent(Func, &Parms);

	if (UserWidget != nullptr)
		*UserWidget = Parms.UserWidget;
}


// Function B_GameInstance.B_GameInstance_C.DeactivateCustomRenderDepthOfActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::DeactivateCustomRenderDepthOfActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "DeactivateCustomRenderDepthOfActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.DebugRemoveOutlinShader
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::DebugRemoveOutlinShader()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "DebugRemoveOutlinShader");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.DestroySessionCaller
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::DestroySessionCaller()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "DestroySessionCaller");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.DirectConnect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             IpAdress                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UB_GameInstance_C::DirectConnect(const class FText& IpAdress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "DirectConnect");

	Params::B_GameInstance_C_DirectConnect Parms{};

	Parms.IpAdress = std::move(IpAdress);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.EOSLoginCompleted
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::EOSLoginCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "EOSLoginCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.ExecuteUbergraph_B_GameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::ExecuteUbergraph_B_GameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ExecuteUbergraph_B_GameInstance");

	Params::B_GameInstance_C_ExecuteUbergraph_B_GameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.Fill Skin Save Data If Empty
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_SkinSelection_C*               CurrentData                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UB_SkinSelection_C*               TestedData                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::Fill_Skin_Save_Data_If_Empty(class UB_SkinSelection_C* CurrentData, class UB_SkinSelection_C** TestedData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "Fill Skin Save Data If Empty");

	Params::B_GameInstance_C_Fill_Skin_Save_Data_If_Empty Parms{};

	Parms.CurrentData = CurrentData;

	UObject::ProcessEvent(Func, &Parms);

	if (TestedData != nullptr)
		*TestedData = Parms.TestedData;
}


// Function B_GameInstance.B_GameInstance_C.GetBestDedicatedServer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    JoinPreferredRegion                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    PreferMobification                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ObjectiveMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ServerFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FOnlineSessionSearchResultBP     ServerToJoin                                           (Parm, OutParm)

void UB_GameInstance_C::GetBestDedicatedServer(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, bool JoinPreferredRegion, bool PreferMobification, bool ObjectiveMode, bool* ServerFound, struct FOnlineSessionSearchResultBP* ServerToJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetBestDedicatedServer");

	Params::B_GameInstance_C_GetBestDedicatedServer Parms{};

	Parms.SessionResults = std::move(SessionResults);
	Parms.JoinPreferredRegion = JoinPreferredRegion;
	Parms.PreferMobification = PreferMobification;
	Parms.ObjectiveMode = ObjectiveMode;

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (ServerFound != nullptr)
		*ServerFound = Parms.ServerFound;

	if (ServerToJoin != nullptr)
		*ServerToJoin = std::move(Parms.ServerToJoin);
}


// Function B_GameInstance.B_GameInstance_C.GetBestPingServer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FOnlineSessionSearchResultBP     Server                                                 (Parm, OutParm)
// bool                                    FoundServer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetBestPingServer(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, struct FOnlineSessionSearchResultBP* Server, bool* FoundServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetBestPingServer");

	Params::B_GameInstance_C_GetBestPingServer Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (Server != nullptr)
		*Server = std::move(Parms.Server);

	if (FoundServer != nullptr)
		*FoundServer = Parms.FoundServer;
}


// Function B_GameInstance.B_GameInstance_C.GetBRGLoginCredentials
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetBRGLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetBRGLoginCredentials");

	Params::B_GameInstance_C_GetBRGLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.GetDedicatedServerLoginCredentials
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetDedicatedServerLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetDedicatedServerLoginCredentials");

	Params::B_GameInstance_C_GetDedicatedServerLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.GetFirstLocalPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                PlayerController                                       (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetFirstLocalPlayerController(class APlayerController** PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetFirstLocalPlayerController");

	Params::B_GameInstance_C_GetFirstLocalPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerController != nullptr)
		*PlayerController = Parms.PlayerController;
}


// Function B_GameInstance.B_GameInstance_C.GetIsCurrentlyInMatch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Param_IsCurrentlyInMatch                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetIsCurrentlyInMatch(bool* Param_IsCurrentlyInMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetIsCurrentlyInMatch");

	Params::B_GameInstance_C_GetIsCurrentlyInMatch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsCurrentlyInMatch != nullptr)
		*Param_IsCurrentlyInMatch = Parms.Param_IsCurrentlyInMatch;
}


// Function B_GameInstance.B_GameInstance_C.GetJoinableServers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ObjectiveMode                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FOnlineSessionSearchResultBP>Servers                                                (Parm, OutParm)

void UB_GameInstance_C::GetJoinableServers(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, bool ObjectiveMode, TArray<struct FOnlineSessionSearchResultBP>* Servers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetJoinableServers");

	Params::B_GameInstance_C_GetJoinableServers Parms{};

	Parms.SessionResults = std::move(SessionResults);
	Parms.ObjectiveMode = ObjectiveMode;

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (Servers != nullptr)
		*Servers = std::move(Parms.Servers);
}


// Function B_GameInstance.B_GameInstance_C.GetLoginAuthInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                ForController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           AuthInfo                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetLoginAuthInfo(class APlayerController* ForController, class FString* AuthInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetLoginAuthInfo");

	Params::B_GameInstance_C_GetLoginAuthInfo Parms{};

	Parms.ForController = ForController;

	UObject::ProcessEvent(Func, &Parms);

	if (AuthInfo != nullptr)
		*AuthInfo = std::move(Parms.AuthInfo);
}


// Function B_GameInstance.B_GameInstance_C.GetLoginAuthInfoForFirstLocalPC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           AuthInfo                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetLoginAuthInfoForFirstLocalPC(class FString* AuthInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetLoginAuthInfoForFirstLocalPC");

	Params::B_GameInstance_C_GetLoginAuthInfoForFirstLocalPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AuthInfo != nullptr)
		*AuthInfo = std::move(Parms.AuthInfo);
}


// Function B_GameInstance.B_GameInstance_C.GetLoginCredentials
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetLoginCredentials");

	Params::B_GameInstance_C_GetLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.GetMobificationServers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FOnlineSessionSearchResultBP>MobificationServers                                    (Parm, OutParm)

void UB_GameInstance_C::GetMobificationServers(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, TArray<struct FOnlineSessionSearchResultBP>* MobificationServers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetMobificationServers");

	Params::B_GameInstance_C_GetMobificationServers Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (MobificationServers != nullptr)
		*MobificationServers = std::move(Parms.MobificationServers);
}


// Function B_GameInstance.B_GameInstance_C.GetMostPopulatedServer
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FOnlineSessionSearchResultBP     Server                                                 (Parm, OutParm)
// bool                                    FoundServer                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetMostPopulatedServer(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, struct FOnlineSessionSearchResultBP* Server, bool* FoundServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetMostPopulatedServer");

	Params::B_GameInstance_C_GetMostPopulatedServer Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (Server != nullptr)
		*Server = std::move(Parms.Server);

	if (FoundServer != nullptr)
		*FoundServer = Parms.FoundServer;
}


// Function B_GameInstance.B_GameInstance_C.GetObjectiveServers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FOnlineSessionSearchResultBP>ObjectiveServers                                       (Parm, OutParm)
// bool                                    RunningGameToJoinFound                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetObjectiveServers(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, TArray<struct FOnlineSessionSearchResultBP>* ObjectiveServers, bool* RunningGameToJoinFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetObjectiveServers");

	Params::B_GameInstance_C_GetObjectiveServers Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (ObjectiveServers != nullptr)
		*ObjectiveServers = std::move(Parms.ObjectiveServers);

	if (RunningGameToJoinFound != nullptr)
		*RunningGameToJoinFound = Parms.RunningGameToJoinFound;
}


// Function B_GameInstance.B_GameInstance_C.GetPreferredServers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FOnlineSessionSearchResultBP>PreferredSessions                                      (Parm, OutParm)

void UB_GameInstance_C::GetPreferredServers(TArray<struct FOnlineSessionSearchResultBP>& SessionResults, TArray<struct FOnlineSessionSearchResultBP>* PreferredSessions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetPreferredServers");

	Params::B_GameInstance_C_GetPreferredServers Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);

	if (PreferredSessions != nullptr)
		*PreferredSessions = std::move(Parms.PreferredSessions);
}


// Function B_GameInstance.B_GameInstance_C.GetQuickmatchGamemodes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           SpecificGameModeName                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<class UClass*>                   QuickmatchModes                                        (Parm, OutParm)

void UB_GameInstance_C::GetQuickmatchGamemodes(const class FString& SpecificGameModeName, TArray<class UClass*>* QuickmatchModes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetQuickmatchGamemodes");

	Params::B_GameInstance_C_GetQuickmatchGamemodes Parms{};

	Parms.SpecificGameModeName = std::move(SpecificGameModeName);

	UObject::ProcessEvent(Func, &Parms);

	if (QuickmatchModes != nullptr)
		*QuickmatchModes = std::move(Parms.QuickmatchModes);
}


// Function B_GameInstance.B_GameInstance_C.GetRedpointLoginCredentials
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetRedpointLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetRedpointLoginCredentials");

	Params::B_GameInstance_C_GetRedpointLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.GetSteamLoginCredentials
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetSteamLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetSteamLoginCredentials");

	Params::B_GameInstance_C_GetSteamLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.GetSwitchLoginCredentials
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           UserName                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Password                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Locale                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           AccountType                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           OnlineSystemAuthInformation                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    AreCredentialsValid                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetSwitchLoginCredentials(class FString* UserName, class FString* Password, class FString* Locale, class FString* AccountType, class FString* OnlineSystemAuthInformation, bool* AreCredentialsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetSwitchLoginCredentials");

	Params::B_GameInstance_C_GetSwitchLoginCredentials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UserName != nullptr)
		*UserName = std::move(Parms.UserName);

	if (Password != nullptr)
		*Password = std::move(Parms.Password);

	if (Locale != nullptr)
		*Locale = std::move(Parms.Locale);

	if (AccountType != nullptr)
		*AccountType = std::move(Parms.AccountType);

	if (OnlineSystemAuthInformation != nullptr)
		*OnlineSystemAuthInformation = std::move(Parms.OnlineSystemAuthInformation);

	if (AreCredentialsValid != nullptr)
		*AreCredentialsValid = Parms.AreCredentialsValid;
}


// Function B_GameInstance.B_GameInstance_C.Handle Failure Error Code
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::Handle_Failure_Error_Code(int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "Handle Failure Error Code");

	Params::B_GameInstance_C_Handle_Failure_Error_Code Parms{};

	Parms.ErrorCode = ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.HandleGenericCommand
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::HandleGenericCommand(const class FString& Command)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HandleGenericCommand");

	Params::B_GameInstance_C_HandleGenericCommand Parms{};

	Parms.Command = std::move(Command);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.HandleInitializePlayersForMatchmaking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   UserIds                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           ObjectiveTeams                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_GameInstance_C::HandleInitializePlayersForMatchmaking(TArray<class FString>& UserIds, TArray<int32>& ObjectiveTeams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HandleInitializePlayersForMatchmaking");

	Params::B_GameInstance_C_HandleInitializePlayersForMatchmaking Parms{};

	Parms.UserIds = std::move(UserIds);
	Parms.ObjectiveTeams = std::move(ObjectiveTeams);

	UObject::ProcessEvent(Func, &Parms);

	UserIds = std::move(Parms.UserIds);
	ObjectiveTeams = std::move(Parms.ObjectiveTeams);
}


// Function B_GameInstance.B_GameInstance_C.HandleShowAccountAction
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bShowMessage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::HandleShowAccountAction(bool bShowMessage, int32 Code, const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HandleShowAccountAction");

	Params::B_GameInstance_C_HandleShowAccountAction Parms{};

	Parms.bShowMessage = bShowMessage;
	Parms.Code = Code;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.HandleTravelError
// (Event, Public, BlueprintEvent)
// Parameters:
// ETravelFailure                          FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::HandleTravelError(ETravelFailure FailureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HandleTravelError");

	Params::B_GameInstance_C_HandleTravelError Parms{};

	Parms.FailureType = FailureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.HostGame
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCustom                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UserGeneratedContent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::HostGame(bool IsCustom, bool UserGeneratedContent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HostGame");

	Params::B_GameInstance_C_HostGame Parms{};

	Parms.IsCustom = IsCustom;
	Parms.UserGeneratedContent = UserGeneratedContent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.HostGameDedicatedServer
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::HostGameDedicatedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "HostGameDedicatedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitalizeDedicatedServer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitalizeDedicatedServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitalizeDedicatedServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.Initialize
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitializeClient
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitializeClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitializeClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitializeClientManager
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitializeClientManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitializeClientManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitializeGameModes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitializeGameModes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitializeGameModes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitializeSkills
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitializeSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitializeSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitializeSkins
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitializeSkins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitializeSkins");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitMasterServerManager
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitMasterServerManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitMasterServerManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitMatchOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitMatchOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitMatchOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitNewMasterServerManager
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitNewMasterServerManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitNewMasterServerManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitQuestInterfaces
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitQuestInterfaces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitQuestInterfaces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.InitSaveGames
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::InitSaveGames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "InitSaveGames");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.JoinFromServerList
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOnlineSessionSearchResultBP     SearchResult                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UB_GameInstance_C::JoinFromServerList(const struct FOnlineSessionSearchResultBP& SearchResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "JoinFromServerList");

	Params::B_GameInstance_C_JoinFromServerList Parms{};

	Parms.SearchResult = std::move(SearchResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.JoinQuickMatchCustomGame
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>SessionResults                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_GameInstance_C::JoinQuickMatchCustomGame(TArray<struct FOnlineSessionSearchResultBP>& SessionResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "JoinQuickMatchCustomGame");

	Params::B_GameInstance_C_JoinQuickMatchCustomGame Parms{};

	Parms.SessionResults = std::move(SessionResults);

	UObject::ProcessEvent(Func, &Parms);

	SessionResults = std::move(Parms.SessionResults);
}


// Function B_GameInstance.B_GameInstance_C.JoinQuickMatchUsingNewServerBrowser
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::JoinQuickMatchUsingNewServerBrowser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "JoinQuickMatchUsingNewServerBrowser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.JoinQuickMatchUsingSessionFind
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::JoinQuickMatchUsingSessionFind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "JoinQuickMatchUsingSessionFind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.JoinSessionFromInvite
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FOnlineSessionSearchResultBP     SessionToJoin                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void UB_GameInstance_C::JoinSessionFromInvite(const struct FOnlineSessionSearchResultBP& SessionToJoin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "JoinSessionFromInvite");

	Params::B_GameInstance_C_JoinSessionFromInvite Parms{};

	Parms.SessionToJoin = std::move(SessionToJoin);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.LoadAudioSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::LoadAudioSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "LoadAudioSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.LoadInputSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::LoadInputSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "LoadInputSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.LoginScreenTimeoutHandler
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::LoginScreenTimeoutHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "LoginScreenTimeoutHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.NetCodeErrorToString
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENetworkFailure                         Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ErrorText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorTitle                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ErrorOut                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::NetCodeErrorToString(ENetworkFailure Error, const class FString& ErrorText, class FString* ErrorTitle, class FString* ErrorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "NetCodeErrorToString");

	Params::B_GameInstance_C_NetCodeErrorToString Parms{};

	Parms.Error = Error;
	Parms.ErrorText = std::move(ErrorText);

	UObject::ProcessEvent(Func, &Parms);

	if (ErrorTitle != nullptr)
		*ErrorTitle = std::move(Parms.ErrorTitle);

	if (ErrorOut != nullptr)
		*ErrorOut = std::move(Parms.ErrorOut);
}


// Function B_GameInstance.B_GameInstance_C.OnAfterLoginCompleted
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnAfterLoginCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnAfterLoginCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnAllSaveGamesLoaded_Event
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnAllSaveGamesLoaded_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnAllSaveGamesLoaded_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_24DC469A4EBBEE2F2FB50CB0893FEC02
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_24DC469A4EBBEE2F2FB50CB0893FEC02(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_24DC469A4EBBEE2F2FB50CB0893FEC02");

	Params::B_GameInstance_C_OnCallFailed_24DC469A4EBBEE2F2FB50CB0893FEC02 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_399C8BEA4D65C27F8943DABAC445F84C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_399C8BEA4D65C27F8943DABAC445F84C(bool bWasSuccessful, const struct FUniqueNetIdRepl& UserId, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_399C8BEA4D65C27F8943DABAC445F84C");

	Params::B_GameInstance_C_OnCallFailed_399C8BEA4D65C27F8943DABAC445F84C Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserId = std::move(UserId);
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_7C305E754DE72D5DACD2528392A524FF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_7C305E754DE72D5DACD2528392A524FF(bool bWasSuccessful, const struct FUniqueNetIdRepl& UserId, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_7C305E754DE72D5DACD2528392A524FF");

	Params::B_GameInstance_C_OnCallFailed_7C305E754DE72D5DACD2528392A524FF Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserId = std::move(UserId);
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_8BB34145411B8BA94B10A59EFF71E0CF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_8BB34145411B8BA94B10A59EFF71E0CF(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_8BB34145411B8BA94B10A59EFF71E0CF");

	Params::B_GameInstance_C_OnCallFailed_8BB34145411B8BA94B10A59EFF71E0CF Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_BED0C0C544BDA84E192C8B8C5BB82F72
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_BED0C0C544BDA84E192C8B8C5BB82F72(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_BED0C0C544BDA84E192C8B8C5BB82F72");

	Params::B_GameInstance_C_OnCallFailed_BED0C0C544BDA84E192C8B8C5BB82F72 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_CB75E000453710ACAA45C2ADD0B80AC6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOnJoinSessionCompleteResult_           Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_CB75E000453710ACAA45C2ADD0B80AC6(class FName Param_SessionName, EOnJoinSessionCompleteResult_ Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_CB75E000453710ACAA45C2ADD0B80AC6");

	Params::B_GameInstance_C_OnCallFailed_CB75E000453710ACAA45C2ADD0B80AC6 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_D7D987824E029A67C28C27A7944576BA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_D7D987824E029A67C28C27A7944576BA(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_D7D987824E029A67C28C27A7944576BA");

	Params::B_GameInstance_C_OnCallFailed_D7D987824E029A67C28C27A7944576BA Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_DE2BE46F4484E3CC5050769BC42D5D32
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_DE2BE46F4484E3CC5050769BC42D5D32(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_DE2BE46F4484E3CC5050769BC42D5D32");

	Params::B_GameInstance_C_OnCallFailed_DE2BE46F4484E3CC5050769BC42D5D32 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_DE990FDB4B0DC5A886D13582C2A33E2F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_DE990FDB4B0DC5A886D13582C2A33E2F(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_DE990FDB4B0DC5A886D13582C2A33E2F");

	Params::B_GameInstance_C_OnCallFailed_DE990FDB4B0DC5A886D13582C2A33E2F Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_F3E97BAF4ED76190FAED77A87373C204
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_F3E97BAF4ED76190FAED77A87373C204(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_F3E97BAF4ED76190FAED77A87373C204");

	Params::B_GameInstance_C_OnCallFailed_F3E97BAF4ED76190FAED77A87373C204 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_F48D3023411050490BA5D192B95E2377
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_F48D3023411050490BA5D192B95E2377(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_F48D3023411050490BA5D192B95E2377");

	Params::B_GameInstance_C_OnCallFailed_F48D3023411050490BA5D192B95E2377 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_FA9075FE47ED7DF7A837BC8B69A6DEB7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_FA9075FE47ED7DF7A837BC8B69A6DEB7(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_FA9075FE47ED7DF7A837BC8B69A6DEB7");

	Params::B_GameInstance_C_OnCallFailed_FA9075FE47ED7DF7A837BC8B69A6DEB7 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_FA9075FE47ED7DF7A837BC8B6D11725B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_FA9075FE47ED7DF7A837BC8B6D11725B(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_FA9075FE47ED7DF7A837BC8B6D11725B");

	Params::B_GameInstance_C_OnCallFailed_FA9075FE47ED7DF7A837BC8B6D11725B Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCallFailed_FA9075FE47ED7DF7A837BC8BC027921D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCallFailed_FA9075FE47ED7DF7A837BC8BC027921D(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCallFailed_FA9075FE47ED7DF7A837BC8BC027921D");

	Params::B_GameInstance_C_OnCallFailed_FA9075FE47ED7DF7A837BC8BC027921D Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCancelFindSessionsComplete_F3E97BAF4ED76190FAED77A87373C204
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCancelFindSessionsComplete_F3E97BAF4ED76190FAED77A87373C204(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCancelFindSessionsComplete_F3E97BAF4ED76190FAED77A87373C204");

	Params::B_GameInstance_C_OnCancelFindSessionsComplete_F3E97BAF4ED76190FAED77A87373C204 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnClientsInitializedForMatchMaking
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   UserIds                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<int32>                           ObjectiveTeam                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_GameInstance_C::OnClientsInitializedForMatchMaking(const TArray<class FString>& UserIds, const TArray<int32>& ObjectiveTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnClientsInitializedForMatchMaking");

	Params::B_GameInstance_C_OnClientsInitializedForMatchMaking Parms{};

	Parms.UserIds = std::move(UserIds);
	Parms.ObjectiveTeam = std::move(ObjectiveTeam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCreateSessionComplete_8BB34145411B8BA94B10A59EFF71E0CF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCreateSessionComplete_8BB34145411B8BA94B10A59EFF71E0CF(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCreateSessionComplete_8BB34145411B8BA94B10A59EFF71E0CF");

	Params::B_GameInstance_C_OnCreateSessionComplete_8BB34145411B8BA94B10A59EFF71E0CF Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnCreateSessionComplete_BED0C0C544BDA84E192C8B8C5BB82F72
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnCreateSessionComplete_BED0C0C544BDA84E192C8B8C5BB82F72(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnCreateSessionComplete_BED0C0C544BDA84E192C8B8C5BB82F72");

	Params::B_GameInstance_C_OnCreateSessionComplete_BED0C0C544BDA84E192C8B8C5BB82F72 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_24DC469A4EBBEE2F2FB50CB0893FEC02
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_24DC469A4EBBEE2F2FB50CB0893FEC02(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_24DC469A4EBBEE2F2FB50CB0893FEC02");

	Params::B_GameInstance_C_OnDestroySessionComplete_24DC469A4EBBEE2F2FB50CB0893FEC02 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_D7D987824E029A67C28C27A7944576BA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_D7D987824E029A67C28C27A7944576BA(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_D7D987824E029A67C28C27A7944576BA");

	Params::B_GameInstance_C_OnDestroySessionComplete_D7D987824E029A67C28C27A7944576BA Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_F48D3023411050490BA5D192B95E2377
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_F48D3023411050490BA5D192B95E2377(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_F48D3023411050490BA5D192B95E2377");

	Params::B_GameInstance_C_OnDestroySessionComplete_F48D3023411050490BA5D192B95E2377 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B69A6DEB7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B69A6DEB7(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B69A6DEB7");

	Params::B_GameInstance_C_OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B69A6DEB7 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B6D11725B
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B6D11725B(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B6D11725B");

	Params::B_GameInstance_C_OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8B6D11725B Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8BC027921D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8BC027921D(class FName Param_SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8BC027921D");

	Params::B_GameInstance_C_OnDestroySessionComplete_FA9075FE47ED7DF7A837BC8BC027921D Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnDidReceiveAccessToken
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnDidReceiveAccessToken()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnDidReceiveAccessToken");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnEOSLoginCompleted__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnEOSLoginCompleted__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnEOSLoginCompleted__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnFailure_9C77A34E405E7B30EEBF16902D7866AB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFailure_9C77A34E405E7B30EEBF16902D7866AB(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFailure_9C77A34E405E7B30EEBF16902D7866AB");

	Params::B_GameInstance_C_OnFailure_9C77A34E405E7B30EEBF16902D7866AB Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFailure_A658B1CE410F146D9874B998201CCD7E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFailure_A658B1CE410F146D9874B998201CCD7E(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFailure_A658B1CE410F146D9874B998201CCD7E");

	Params::B_GameInstance_C_OnFailure_A658B1CE410F146D9874B998201CCD7E Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFailure_B8A32B8D41B0B0301C158BA5C05ACB2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DownloadedString                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   QueryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFailure_B8A32B8D41B0B0301C158BA5C05ACB2A(const class FString& DownloadedString, int32 QueryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFailure_B8A32B8D41B0B0301C158BA5C05ACB2A");

	Params::B_GameInstance_C_OnFailure_B8A32B8D41B0B0301C158BA5C05ACB2A Parms{};

	Parms.DownloadedString = std::move(DownloadedString);
	Parms.QueryID = QueryID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFailure_C183C49B48BC64367BA6A7B2AFAA19D8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFailure_C183C49B48BC64367BA6A7B2AFAA19D8(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFailure_C183C49B48BC64367BA6A7B2AFAA19D8");

	Params::B_GameInstance_C_OnFailure_C183C49B48BC64367BA6A7B2AFAA19D8 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFailure_DBB036634F4016BA5FA6068CB9BCFA38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFailure_DBB036634F4016BA5FA6068CB9BCFA38(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFailure_DBB036634F4016BA5FA6068CB9BCFA38");

	Params::B_GameInstance_C_OnFailure_DBB036634F4016BA5FA6068CB9BCFA38 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFindSessionsComplete_DE2BE46F4484E3CC5050769BC42D5D32
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFindSessionsComplete_DE2BE46F4484E3CC5050769BC42D5D32(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFindSessionsComplete_DE2BE46F4484E3CC5050769BC42D5D32");

	Params::B_GameInstance_C_OnFindSessionsComplete_DE2BE46F4484E3CC5050769BC42D5D32 Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnFindSessionsComplete_DE990FDB4B0DC5A886D13582C2A33E2F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnFindSessionsComplete_DE990FDB4B0DC5A886D13582C2A33E2F(bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnFindSessionsComplete_DE990FDB4B0DC5A886D13582C2A33E2F");

	Params::B_GameInstance_C_OnFindSessionsComplete_DE990FDB4B0DC5A886D13582C2A33E2F Parms{};

	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnGameStateLoaded_Event
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnGameStateLoaded_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnGameStateLoaded_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnInitCompleted
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnInitCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnInitCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnInventoryDefinitionsLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnInventoryDefinitionsLoaded(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnInventoryDefinitionsLoaded");

	Params::B_GameInstance_C_OnInventoryDefinitionsLoaded Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnJoinSessionComplete_CB75E000453710ACAA45C2ADD0B80AC6
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_SessionName                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EOnJoinSessionCompleteResult_           Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnJoinSessionComplete_CB75E000453710ACAA45C2ADD0B80AC6(class FName Param_SessionName, EOnJoinSessionCompleteResult_ Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnJoinSessionComplete_CB75E000453710ACAA45C2ADD0B80AC6");

	Params::B_GameInstance_C_OnJoinSessionComplete_CB75E000453710ACAA45C2ADD0B80AC6 Parms{};

	Parms.Param_SessionName = Param_SessionName;
	Parms.Result = Result;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnLoadingMenuMapFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnLoadingMenuMapFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnLoadingMenuMapFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnLoginComplete_399C8BEA4D65C27F8943DABAC445F84C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnLoginComplete_399C8BEA4D65C27F8943DABAC445F84C(bool bWasSuccessful, const struct FUniqueNetIdRepl& UserId, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnLoginComplete_399C8BEA4D65C27F8943DABAC445F84C");

	Params::B_GameInstance_C_OnLoginComplete_399C8BEA4D65C27F8943DABAC445F84C Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserId = std::move(UserId);
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnLoginComplete_7C305E754DE72D5DACD2528392A524FF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FString                           Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnLoginComplete_7C305E754DE72D5DACD2528392A524FF(bool bWasSuccessful, const struct FUniqueNetIdRepl& UserId, const class FString& Error)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnLoginComplete_7C305E754DE72D5DACD2528392A524FF");

	Params::B_GameInstance_C_OnLoginComplete_7C305E754DE72D5DACD2528392A524FF Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.UserId = std::move(UserId);
	Parms.Error = std::move(Error);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnLoginCompleted
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnLoginCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnLoginCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnLoginFailed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ErrorCode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnLoginFailed(int32 ErrorCode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnLoginFailed");

	Params::B_GameInstance_C_OnLoginFailed Parms{};

	Parms.ErrorCode = ErrorCode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnMenuGameModeLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnMenuGameModeLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnMenuGameModeLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnMenuGameModeLoaded_Event
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnMenuGameModeLoaded_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnMenuGameModeLoaded_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnNetworkFailure
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ErrorText                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsServer                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnNetworkFailure(ENetworkFailure FailureType, const class FString& ErrorText, bool IsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnNetworkFailure");

	Params::B_GameInstance_C_OnNetworkFailure Parms{};

	Parms.FailureType = FailureType;
	Parms.ErrorText = std::move(ErrorText);
	Parms.IsServer = IsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnNewUserEstablished
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnNewUserEstablished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnNewUserEstablished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnNotifyQuestChange
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EQuestChangeReason                      Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   AccountQuestId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnNotifyQuestChange(EQuestChangeReason Reason, int64 AccountQuestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnNotifyQuestChange");

	Params::B_GameInstance_C_OnNotifyQuestChange Parms{};

	Parms.Reason = Reason;
	Parms.AccountQuestId = AccountQuestId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnNotifyQuestChangeNew
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EQuestChangeReason                      Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   AccountQuestId                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnNotifyQuestChangeNew(EQuestChangeReason Reason, int64 AccountQuestId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnNotifyQuestChangeNew");

	Params::B_GameInstance_C_OnNotifyQuestChangeNew Parms{};

	Parms.Reason = Reason;
	Parms.AccountQuestId = AccountQuestId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnPending_9C77A34E405E7B30EEBF16902D7866AB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnPending_9C77A34E405E7B30EEBF16902D7866AB(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnPending_9C77A34E405E7B30EEBF16902D7866AB");

	Params::B_GameInstance_C_OnPending_9C77A34E405E7B30EEBF16902D7866AB Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnPending_A658B1CE410F146D9874B998201CCD7E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnPending_A658B1CE410F146D9874B998201CCD7E(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnPending_A658B1CE410F146D9874B998201CCD7E");

	Params::B_GameInstance_C_OnPending_A658B1CE410F146D9874B998201CCD7E Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnPending_C183C49B48BC64367BA6A7B2AFAA19D8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnPending_C183C49B48BC64367BA6A7B2AFAA19D8(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnPending_C183C49B48BC64367BA6A7B2AFAA19D8");

	Params::B_GameInstance_C_OnPending_C183C49B48BC64367BA6A7B2AFAA19D8 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnPending_DBB036634F4016BA5FA6068CB9BCFA38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnPending_DBB036634F4016BA5FA6068CB9BCFA38(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnPending_DBB036634F4016BA5FA6068CB9BCFA38");

	Params::B_GameInstance_C_OnPending_DBB036634F4016BA5FA6068CB9BCFA38 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnReceiveRuntimeAccountInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// ERuntimeAccountFlags                    Param_Flags                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnReceiveRuntimeAccountInfo(ERuntimeAccountFlags Param_Flags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnReceiveRuntimeAccountInfo");

	Params::B_GameInstance_C_OnReceiveRuntimeAccountInfo Parms{};

	Parms.Param_Flags = Param_Flags;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnStartupPhasesCompleted
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::OnStartupPhasesCompleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnStartupPhasesCompleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.OnStatChangeNotificationReceived
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EStatChangeReason                       Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           StatApiName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int64                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnStatChangeNotificationReceived(EStatChangeReason Reason, const class FString& StatApiName, int64 NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnStatChangeNotificationReceived");

	Params::B_GameInstance_C_OnStatChangeNotificationReceived Parms{};

	Parms.Reason = Reason;
	Parms.StatApiName = std::move(StatApiName);
	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnSuccess_9C77A34E405E7B30EEBF16902D7866AB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnSuccess_9C77A34E405E7B30EEBF16902D7866AB(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnSuccess_9C77A34E405E7B30EEBF16902D7866AB");

	Params::B_GameInstance_C_OnSuccess_9C77A34E405E7B30EEBF16902D7866AB Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnSuccess_A658B1CE410F146D9874B998201CCD7E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnSuccess_A658B1CE410F146D9874B998201CCD7E(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnSuccess_A658B1CE410F146D9874B998201CCD7E");

	Params::B_GameInstance_C_OnSuccess_A658B1CE410F146D9874B998201CCD7E Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnSuccess_B8A32B8D41B0B0301C158BA5C05ACB2A
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DownloadedString                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   QueryID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnSuccess_B8A32B8D41B0B0301C158BA5C05ACB2A(const class FString& DownloadedString, int32 QueryID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnSuccess_B8A32B8D41B0B0301C158BA5C05ACB2A");

	Params::B_GameInstance_C_OnSuccess_B8A32B8D41B0B0301C158BA5C05ACB2A Parms{};

	Parms.DownloadedString = std::move(DownloadedString);
	Parms.QueryID = QueryID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnSuccess_C183C49B48BC64367BA6A7B2AFAA19D8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnSuccess_C183C49B48BC64367BA6A7B2AFAA19D8(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnSuccess_C183C49B48BC64367BA6A7B2AFAA19D8");

	Params::B_GameInstance_C_OnSuccess_C183C49B48BC64367BA6A7B2AFAA19D8 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnSuccess_DBB036634F4016BA5FA6068CB9BCFA38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnSuccess_DBB036634F4016BA5FA6068CB9BCFA38(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnSuccess_DBB036634F4016BA5FA6068CB9BCFA38");

	Params::B_GameInstance_C_OnSuccess_DBB036634F4016BA5FA6068CB9BCFA38 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnTimeout_9C77A34E405E7B30EEBF16902D7866AB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnTimeout_9C77A34E405E7B30EEBF16902D7866AB(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnTimeout_9C77A34E405E7B30EEBF16902D7866AB");

	Params::B_GameInstance_C_OnTimeout_9C77A34E405E7B30EEBF16902D7866AB Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnTimeout_A658B1CE410F146D9874B998201CCD7E
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnTimeout_A658B1CE410F146D9874B998201CCD7E(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnTimeout_A658B1CE410F146D9874B998201CCD7E");

	Params::B_GameInstance_C_OnTimeout_A658B1CE410F146D9874B998201CCD7E Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnTimeout_C183C49B48BC64367BA6A7B2AFAA19D8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnTimeout_C183C49B48BC64367BA6A7B2AFAA19D8(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnTimeout_C183C49B48BC64367BA6A7B2AFAA19D8");

	Params::B_GameInstance_C_OnTimeout_C183C49B48BC64367BA6A7B2AFAA19D8 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OnTimeout_DBB036634F4016BA5FA6068CB9BCFA38
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   PingMs                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OnTimeout_DBB036634F4016BA5FA6068CB9BCFA38(const class FString& ServerAddress, float PingMs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OnTimeout_DBB036634F4016BA5FA6068CB9BCFA38");

	Params::B_GameInstance_C_OnTimeout_DBB036634F4016BA5FA6068CB9BCFA38 Parms{};

	Parms.ServerAddress = std::move(ServerAddress);
	Parms.PingMs = PingMs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.OpenMatchByOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_MatchOptions_C*                MatchOptions                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::OpenMatchByOptions(class UB_MatchOptions_C* MatchOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "OpenMatchByOptions");

	Params::B_GameInstance_C_OpenMatchByOptions Parms{};

	Parms.MatchOptions = MatchOptions;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.ParseCommandLine
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           CommandLine                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::ParseCommandLine(const class FString& CommandLine)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ParseCommandLine");

	Params::B_GameInstance_C_ParseCommandLine Parms{};

	Parms.CommandLine = std::move(CommandLine);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.PerformClientLogin
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::PerformClientLogin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "PerformClientLogin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.PingQuickMatchServer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ServerAddress                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::PingQuickMatchServer(const class FString& ServerAddress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "PingQuickMatchServer");

	Params::B_GameInstance_C_PingQuickMatchServer Parms{};

	Parms.ServerAddress = std::move(ServerAddress);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.PingQuickMatchServers
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FOnlineSessionSearchResultBP>Sessions                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UB_GameInstance_C::PingQuickMatchServers(TArray<struct FOnlineSessionSearchResultBP>& Sessions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "PingQuickMatchServers");

	Params::B_GameInstance_C_PingQuickMatchServers Parms{};

	Parms.Sessions = std::move(Sessions);

	UObject::ProcessEvent(Func, &Parms);

	Sessions = std::move(Parms.Sessions);
}


// Function B_GameInstance.B_GameInstance_C.PostDelayedInit
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::PostDelayedInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "PostDelayedInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.QuickMatch
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::QuickMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "QuickMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.RandomizeMatchOptions
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::RandomizeMatchOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "RandomizeMatchOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UB_GameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.ReceiveShutdown
// (Event, Public, BlueprintEvent)

void UB_GameInstance_C::ReceiveShutdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ReceiveShutdown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.RefreshCustomRenderDepthOfActors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::RefreshCustomRenderDepthOfActors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "RefreshCustomRenderDepthOfActors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.RegisterSession
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOfficialServer                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::RegisterSession(bool IsOfficialServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "RegisterSession");

	Params::B_GameInstance_C_RegisterSession Parms{};

	Parms.IsOfficialServer = IsOfficialServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.ReloadInventory
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::ReloadInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ReloadInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.SessionInviteAccepted
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ControllerId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FUniqueNetIdRepl                 UserId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FOnlineSessionSearchResultBP     InviteResult                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UB_GameInstance_C::SessionInviteAccepted(bool bWasSuccessful, int32 ControllerId, const struct FUniqueNetIdRepl& UserId, const struct FOnlineSessionSearchResultBP& InviteResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "SessionInviteAccepted");

	Params::B_GameInstance_C_SessionInviteAccepted Parms{};

	Parms.bWasSuccessful = bWasSuccessful;
	Parms.ControllerId = ControllerId;
	Parms.UserId = std::move(UserId);
	Parms.InviteResult = std::move(InviteResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.SetIsCurrentlyInMatch
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsInMatch                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::SetIsCurrentlyInMatch(bool IsInMatch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "SetIsCurrentlyInMatch");

	Params::B_GameInstance_C_SetIsCurrentlyInMatch Parms{};

	Parms.IsInMatch = IsInMatch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.SetupOnlineSystems
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::SetupOnlineSystems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "SetupOnlineSystems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.ShowMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::ShowMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ShowMessage");

	Params::B_GameInstance_C_ShowMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_GameInstance.B_GameInstance_C.ShowSessionLockedMessage
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::ShowSessionLockedMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "ShowSessionLockedMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.StartLoginScreenTimeout
// (BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::StartLoginScreenTimeout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "StartLoginScreenTimeout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.StartPlayingState
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::StartPlayingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "StartPlayingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.TravelErrorToString
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ETravelFailure                          Error                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ErrorOut                                               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::TravelErrorToString(ETravelFailure Error, class FString* ErrorOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "TravelErrorToString");

	Params::B_GameInstance_C_TravelErrorToString Parms{};

	Parms.Error = Error;

	UObject::ProcessEvent(Func, &Parms);

	if (ErrorOut != nullptr)
		*ErrorOut = std::move(Parms.ErrorOut);
}


// Function B_GameInstance.B_GameInstance_C.UnbindPingReceivedEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::UnbindPingReceivedEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "UnbindPingReceivedEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.UnregisterSession
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::UnregisterSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "UnregisterSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.WaitForInitialUser
// (Public, BlueprintCallable, BlueprintEvent)

void UB_GameInstance_C::WaitForInitialUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "WaitForInitialUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_GameInstance.B_GameInstance_C.GetAccountNameFromAccountInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserOnlineAccountRef*            AccountInfo                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           AccountName                                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetAccountNameFromAccountInfo(class UUserOnlineAccountRef* AccountInfo, class FString* AccountName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetAccountNameFromAccountInfo");

	Params::B_GameInstance_C_GetAccountNameFromAccountInfo Parms{};

	Parms.AccountInfo = AccountInfo;

	UObject::ProcessEvent(Func, &Parms);

	if (AccountName != nullptr)
		*AccountName = std::move(Parms.AccountName);
}


// Function B_GameInstance.B_GameInstance_C.GetIsPublicForHosting
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsPublic                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetIsPublicForHosting(bool* IsPublic) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetIsPublicForHosting");

	Params::B_GameInstance_C_GetIsPublicForHosting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPublic != nullptr)
		*IsPublic = Parms.IsPublic;
}


// Function B_GameInstance.B_GameInstance_C.GetNativePlatformAccountName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           NativePlatformId                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NativePlatform                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UB_GameInstance_C::GetNativePlatformAccountName(class FString* NativePlatformId, class FString* NativePlatform) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetNativePlatformAccountName");

	Params::B_GameInstance_C_GetNativePlatformAccountName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NativePlatformId != nullptr)
		*NativePlatformId = std::move(Parms.NativePlatformId);

	if (NativePlatform != nullptr)
		*NativePlatform = std::move(Parms.NativePlatform);
}


// Function B_GameInstance.B_GameInstance_C.GetUniqueNetIdForFirstLocalPC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl                 UniqueNetId                                            (Parm, OutParm, HasGetValueTypeHash)

void UB_GameInstance_C::GetUniqueNetIdForFirstLocalPC(struct FUniqueNetIdRepl* UniqueNetId) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_GameInstance_C", "GetUniqueNetIdForFirstLocalPC");

	Params::B_GameInstance_C_GetUniqueNetIdForFirstLocalPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UniqueNetId != nullptr)
		*UniqueNetId = std::move(Parms.UniqueNetId);
}

}

