#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_FPSCounter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_FPSCounter.WB_FPSCounter_C.ExecuteUbergraph_WB_FPSCounter
// 0x0120 (0x0120 - 0x0000)
struct WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BD[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58BF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x002C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C0[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C1[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0108(0x0018)()
};
static_assert(alignof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter) == 0x000008, "Wrong alignment on WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter");
static_assert(sizeof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter) == 0x000120, "Wrong size on WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, EntryPoint) == 0x000000, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, Temp_byte_Variable) == 0x000004, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, Temp_real_Variable) == 0x000008, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, Temp_bool_Variable) == 0x000010, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_Event_MyGeometry) == 0x00002C, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_Event_InDeltaTime) == 0x000064, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000068, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, Temp_byte_Variable_1) == 0x000070, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_Select_Default) == 0x000072, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_FTrunc_ReturnValue) == 0x000090, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000098, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, K2Node_MakeArray_Array) == 0x0000F8, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter, CallFunc_Format_ReturnValue) == 0x000108, "Member 'WB_FPSCounter_C_ExecuteUbergraph_WB_FPSCounter::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WB_FPSCounter.WB_FPSCounter_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_FPSCounter_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_FPSCounter_C_Tick) == 0x000004, "Wrong alignment on WB_FPSCounter_C_Tick");
static_assert(sizeof(WB_FPSCounter_C_Tick) == 0x00003C, "Wrong size on WB_FPSCounter_C_Tick");
static_assert(offsetof(WB_FPSCounter_C_Tick, MyGeometry) == 0x000000, "Member 'WB_FPSCounter_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_FPSCounter_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_FPSCounter_C_Tick::InDeltaTime' has a wrong offset!");

}

