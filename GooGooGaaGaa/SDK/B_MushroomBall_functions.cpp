#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MushroomBall

#include "Basic.hpp"

#include "B_MushroomBall_classes.hpp"
#include "B_MushroomBall_parameters.hpp"


namespace SDK
{

// Function B_MushroomBall.B_MushroomBall_C.BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_MushroomBall_C::BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::B_MushroomBall_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AB_MushroomBall_C::BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::B_MushroomBall_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.ExecuteUbergraph_B_MushroomBall
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::ExecuteUbergraph_B_MushroomBall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "ExecuteUbergraph_B_MushroomBall");

	Params::B_MushroomBall_C_ExecuteUbergraph_B_MushroomBall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.GetFirstTransformVelocity
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APawn*                            Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::GetFirstTransformVelocity(class APawn* Instigator_0, struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "GetFirstTransformVelocity");

	Params::B_MushroomBall_C_GetFirstTransformVelocity Parms{};

	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function B_MushroomBall.B_MushroomBall_C.GetRandomMushroomBallChildTransform
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform AB_MushroomBall_C::GetRandomMushroomBallChildTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "GetRandomMushroomBallChildTransform");

	Params::B_MushroomBall_C_GetRandomMushroomBallChildTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_MushroomBall.B_MushroomBall_C.HandleEnvironmentHit
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::HandleEnvironmentHit(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "HandleEnvironmentHit");

	Params::B_MushroomBall_C_HandleEnvironmentHit Parms{};

	Parms.HitLocation_0 = std::move(HitLocation_0);
	Parms.HitNormal_0 = std::move(HitNormal_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.HandleHunterOrGarlicHit
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_Hunter_C*                      HitHunter                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::HandleHunterOrGarlicHit(class AB_Hunter_C* HitHunter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "HandleHunterOrGarlicHit");

	Params::B_MushroomBall_C_HandleHunterOrGarlicHit Parms{};

	Parms.HitHunter = HitHunter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.IncrementLifeTime
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::IncrementLifeTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "IncrementLifeTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayDestroyEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FirstIteration_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayDestroyEffects(const struct FVector& Location, bool FirstIteration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayDestroyEffects");

	Params::B_MushroomBall_C_PlayDestroyEffects Parms{};

	Parms.Location = std::move(Location);
	Parms.FirstIteration_0 = FirstIteration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayDestroyEffectsMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FirstIteration_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayDestroyEffectsMulticast(const struct FVector& Location, bool FirstIteration_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayDestroyEffectsMulticast");

	Params::B_MushroomBall_C_PlayDestroyEffectsMulticast Parms{};

	Parms.Location = std::move(Location);
	Parms.FirstIteration_0 = FirstIteration_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayFastDestroyEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayFastDestroyEffects(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayFastDestroyEffects");

	Params::B_MushroomBall_C_PlayFastDestroyEffects Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayFastDestroyEffectsMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayFastDestroyEffectsMulticast(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayFastDestroyEffectsMulticast");

	Params::B_MushroomBall_C_PlayFastDestroyEffectsMulticast Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayShootSound
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayShootSound(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayShootSound");

	Params::B_MushroomBall_C_PlayShootSound Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.PlayShootSoundMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::PlayShootSoundMulti(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "PlayShootSoundMulti");

	Params::B_MushroomBall_C_PlayShootSoundMulti Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_MushroomBall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.SpawnChildMushroomBall
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::SpawnChildMushroomBall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "SpawnChildMushroomBall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.SpawnMushroomArea
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::SpawnMushroomArea()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "SpawnMushroomArea");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.TearDown
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::TearDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.TearDownMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::TearDownMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearDownMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.TearDownPoolObject
// (Public, BlueprintCallable, BlueprintEvent)

void AB_MushroomBall_C::TearDownPoolObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearDownPoolObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_MushroomBall.B_MushroomBall_C.TearUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::TearUp(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearUp");

	Params::B_MushroomBall_C_TearUp Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Owner_0 = Owner_0;
	Parms.Instigator_0 = Instigator_0;
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.TearUpMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::TearUpMulticast(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearUpMulticast");

	Params::B_MushroomBall_C_TearUpMulticast Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Owner_0 = Owner_0;
	Parms.Instigator_0 = Instigator_0;
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.TearUpPoolObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       SpawnTransform                                         (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class APawn*                            Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::TearUpPoolObject(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "TearUpPoolObject");

	Params::B_MushroomBall_C_TearUpPoolObject Parms{};

	Parms.SpawnTransform = std::move(SpawnTransform);
	Parms.Owner_0 = Owner_0;
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_MushroomBall.B_MushroomBall_C.IsFirstMushroomInIteration
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FTransform                       Transform                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FirstIteration_0                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_MushroomBall_C::IsFirstMushroomInIteration(const struct FTransform& Transform, bool* FirstIteration_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_MushroomBall_C", "IsFirstMushroomInIteration");

	Params::B_MushroomBall_C_IsFirstMushroomInIteration Parms{};

	Parms.Transform = std::move(Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (FirstIteration_0 != nullptr)
		*FirstIteration_0 = Parms.FirstIteration_0;
}

}

