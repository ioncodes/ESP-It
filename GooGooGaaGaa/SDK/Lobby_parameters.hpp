#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lobby

#include "Basic.hpp"

#include "CoreOnline_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Lobby.LobbyBeaconClient.ClientLoginComplete
// 0x0038 (0x0038 - 0x0000)
struct LobbyBeaconClient_ClientLoginComplete final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasSuccessful;                                    // 0x0030(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(LobbyBeaconClient_ClientLoginComplete) == 0x000008, "Wrong alignment on LobbyBeaconClient_ClientLoginComplete");
static_assert(sizeof(LobbyBeaconClient_ClientLoginComplete) == 0x000038, "Wrong size on LobbyBeaconClient_ClientLoginComplete");
static_assert(offsetof(LobbyBeaconClient_ClientLoginComplete, InUniqueId) == 0x000000, "Member 'LobbyBeaconClient_ClientLoginComplete::InUniqueId' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ClientLoginComplete, bWasSuccessful) == 0x000030, "Member 'LobbyBeaconClient_ClientLoginComplete::bWasSuccessful' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ClientPlayerJoined
// 0x0040 (0x0040 - 0x0000)
struct LobbyBeaconClient_ClientPlayerJoined final
{
public:
	class FText                                   NewPlayerName;                                     // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0010(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ClientPlayerJoined) == 0x000008, "Wrong alignment on LobbyBeaconClient_ClientPlayerJoined");
static_assert(sizeof(LobbyBeaconClient_ClientPlayerJoined) == 0x000040, "Wrong size on LobbyBeaconClient_ClientPlayerJoined");
static_assert(offsetof(LobbyBeaconClient_ClientPlayerJoined, NewPlayerName) == 0x000000, "Member 'LobbyBeaconClient_ClientPlayerJoined::NewPlayerName' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ClientPlayerJoined, InUniqueId) == 0x000010, "Member 'LobbyBeaconClient_ClientPlayerJoined::InUniqueId' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ClientPlayerLeft
// 0x0030 (0x0030 - 0x0000)
struct LobbyBeaconClient_ClientPlayerLeft final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ClientPlayerLeft) == 0x000008, "Wrong alignment on LobbyBeaconClient_ClientPlayerLeft");
static_assert(sizeof(LobbyBeaconClient_ClientPlayerLeft) == 0x000030, "Wrong size on LobbyBeaconClient_ClientPlayerLeft");
static_assert(offsetof(LobbyBeaconClient_ClientPlayerLeft, InUniqueId) == 0x000000, "Member 'LobbyBeaconClient_ClientPlayerLeft::InUniqueId' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ClientSetInviteFlags
// 0x0014 (0x0014 - 0x0000)
struct LobbyBeaconClient_ClientSetInviteFlags final
{
public:
	struct FJoinabilitySettings                   Settings;                                          // 0x0000(0x0014)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ClientSetInviteFlags) == 0x000004, "Wrong alignment on LobbyBeaconClient_ClientSetInviteFlags");
static_assert(sizeof(LobbyBeaconClient_ClientSetInviteFlags) == 0x000014, "Wrong size on LobbyBeaconClient_ClientSetInviteFlags");
static_assert(offsetof(LobbyBeaconClient_ClientSetInviteFlags, Settings) == 0x000000, "Member 'LobbyBeaconClient_ClientSetInviteFlags::Settings' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ClientWasKicked
// 0x0010 (0x0010 - 0x0000)
struct LobbyBeaconClient_ClientWasKicked final
{
public:
	class FText                                   KickReason;                                        // 0x0000(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ClientWasKicked) == 0x000008, "Wrong alignment on LobbyBeaconClient_ClientWasKicked");
static_assert(sizeof(LobbyBeaconClient_ClientWasKicked) == 0x000010, "Wrong size on LobbyBeaconClient_ClientWasKicked");
static_assert(offsetof(LobbyBeaconClient_ClientWasKicked, KickReason) == 0x000000, "Member 'LobbyBeaconClient_ClientWasKicked::KickReason' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ServerCheat
// 0x0010 (0x0010 - 0x0000)
struct LobbyBeaconClient_ServerCheat final
{
public:
	class FString                                 Msg;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ServerCheat) == 0x000008, "Wrong alignment on LobbyBeaconClient_ServerCheat");
static_assert(sizeof(LobbyBeaconClient_ServerCheat) == 0x000010, "Wrong size on LobbyBeaconClient_ServerCheat");
static_assert(offsetof(LobbyBeaconClient_ServerCheat, Msg) == 0x000000, "Member 'LobbyBeaconClient_ServerCheat::Msg' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ServerKickPlayer
// 0x0040 (0x0040 - 0x0000)
struct LobbyBeaconClient_ServerKickPlayer final
{
public:
	struct FUniqueNetIdRepl                       PlayerToKick;                                      // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   Reason;                                            // 0x0030(0x0010)(ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ServerKickPlayer) == 0x000008, "Wrong alignment on LobbyBeaconClient_ServerKickPlayer");
static_assert(sizeof(LobbyBeaconClient_ServerKickPlayer) == 0x000040, "Wrong size on LobbyBeaconClient_ServerKickPlayer");
static_assert(offsetof(LobbyBeaconClient_ServerKickPlayer, PlayerToKick) == 0x000000, "Member 'LobbyBeaconClient_ServerKickPlayer::PlayerToKick' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ServerKickPlayer, Reason) == 0x000030, "Member 'LobbyBeaconClient_ServerKickPlayer::Reason' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ServerLoginPlayer
// 0x0050 (0x0050 - 0x0000)
struct LobbyBeaconClient_ServerLoginPlayer final
{
public:
	class FString                                 InSessionId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0010(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UrlString;                                         // 0x0040(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ServerLoginPlayer) == 0x000008, "Wrong alignment on LobbyBeaconClient_ServerLoginPlayer");
static_assert(sizeof(LobbyBeaconClient_ServerLoginPlayer) == 0x000050, "Wrong size on LobbyBeaconClient_ServerLoginPlayer");
static_assert(offsetof(LobbyBeaconClient_ServerLoginPlayer, InSessionId) == 0x000000, "Member 'LobbyBeaconClient_ServerLoginPlayer::InSessionId' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ServerLoginPlayer, InUniqueId) == 0x000010, "Member 'LobbyBeaconClient_ServerLoginPlayer::InUniqueId' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ServerLoginPlayer, UrlString) == 0x000040, "Member 'LobbyBeaconClient_ServerLoginPlayer::UrlString' has a wrong offset!");

// Function Lobby.LobbyBeaconClient.ServerSetPartyOwner
// 0x0060 (0x0060 - 0x0000)
struct LobbyBeaconClient_ServerSetPartyOwner final
{
public:
	struct FUniqueNetIdRepl                       InUniqueId;                                        // 0x0000(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUniqueNetIdRepl                       InPartyOwnerId;                                    // 0x0030(0x0030)(ConstParm, Parm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LobbyBeaconClient_ServerSetPartyOwner) == 0x000008, "Wrong alignment on LobbyBeaconClient_ServerSetPartyOwner");
static_assert(sizeof(LobbyBeaconClient_ServerSetPartyOwner) == 0x000060, "Wrong size on LobbyBeaconClient_ServerSetPartyOwner");
static_assert(offsetof(LobbyBeaconClient_ServerSetPartyOwner, InUniqueId) == 0x000000, "Member 'LobbyBeaconClient_ServerSetPartyOwner::InUniqueId' has a wrong offset!");
static_assert(offsetof(LobbyBeaconClient_ServerSetPartyOwner, InPartyOwnerId) == 0x000030, "Member 'LobbyBeaconClient_ServerSetPartyOwner::InPartyOwnerId' has a wrong offset!");

}

