#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PossessSkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_PossessNotWorkingReason_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"


namespace SDK::Params
{

// Function B_PossessSkill.B_PossessSkill_C.CanActivate
// 0x0005 (0x0005 - 0x0000)
struct B_PossessSkill_C_CanActivate final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOwnerIsTrapped_IsTrapped;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_CanActivate) == 0x000001, "Wrong alignment on B_PossessSkill_C_CanActivate");
static_assert(sizeof(B_PossessSkill_C_CanActivate) == 0x000005, "Wrong size on B_PossessSkill_C_CanActivate");
static_assert(offsetof(B_PossessSkill_C_CanActivate, ReturnValue) == 0x000000, "Member 'B_PossessSkill_C_CanActivate::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_CanActivate, CallFunc_GetOwnerIsTrapped_IsTrapped) == 0x000001, "Member 'B_PossessSkill_C_CanActivate::CallFunc_GetOwnerIsTrapped_IsTrapped' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_CanActivate, CallFunc_CanActivate_ReturnValue) == 0x000002, "Member 'B_PossessSkill_C_CanActivate::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'B_PossessSkill_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_CanActivate, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'B_PossessSkill_C_CanActivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.ExecuteUbergraph_B_PossessSkill
// 0x00B8 (0x00B8 - 0x0000)
struct B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Prop;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop_1;         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Prop_1;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill) == 0x000008, "Wrong alignment on B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill");
static_assert(sizeof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill) == 0x0000B8, "Wrong size on B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, EntryPoint) == 0x000000, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000018, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_GetOwner_ReturnValue_1) == 0x000028, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000030, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000058, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_CustomEvent_Prop) == 0x000060, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_CustomEvent_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_AsB_Static_Mesh_Prop_1) == 0x000080, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_AsB_Static_Mesh_Prop_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, K2Node_CustomEvent_Prop_1) == 0x000090, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::K2Node_CustomEvent_Prop_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_GetOwner_ReturnValue_2) == 0x000098, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A0, "Member 'B_PossessSkill_C_ExecuteUbergraph_B_PossessSkill::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.Fire
// 0x0010 (0x0010 - 0x0000)
struct B_PossessSkill_C_Fire final
{
public:
	class AB_StaticMeshProp_C*                    CallFunc_GetTargetProp_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_Fire) == 0x000008, "Wrong alignment on B_PossessSkill_C_Fire");
static_assert(sizeof(B_PossessSkill_C_Fire) == 0x000010, "Wrong size on B_PossessSkill_C_Fire");
static_assert(offsetof(B_PossessSkill_C_Fire, CallFunc_GetTargetProp_ReturnValue) == 0x000000, "Member 'B_PossessSkill_C_Fire::CallFunc_GetTargetProp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_Fire, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'B_PossessSkill_C_Fire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_Fire, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'B_PossessSkill_C_Fire::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.GetTargetProp
// 0x0040 (0x0040 - 0x0000)
struct B_PossessSkill_C_GetTargetProp final
{
public:
	class AB_StaticMeshProp_C*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetActorFromWitchAsPawn_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_GetTargetProp) == 0x000008, "Wrong alignment on B_PossessSkill_C_GetTargetProp");
static_assert(sizeof(B_PossessSkill_C_GetTargetProp) == 0x000040, "Wrong size on B_PossessSkill_C_GetTargetProp");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, ReturnValue) == 0x000000, "Member 'B_PossessSkill_C_GetTargetProp::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_PossessSkill_C_GetTargetProp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, CallFunc_GetActorFromWitchAsPawn_ReturnValue) == 0x000010, "Member 'B_PossessSkill_C_GetTargetProp::CallFunc_GetActorFromWitchAsPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'B_PossessSkill_C_GetTargetProp::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, K2Node_DynamicCast_AsB_Player_Controller) == 0x000020, "Member 'B_PossessSkill_C_GetTargetProp::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_PossessSkill_C_GetTargetProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000030, "Member 'B_PossessSkill_C_GetTargetProp::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_GetTargetProp, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_PossessSkill_C_GetTargetProp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.InitializeRules
// 0x0018 (0x0018 - 0x0000)
struct B_PossessSkill_C_InitializeRules final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSkillCooldown_Cooldown;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_cooldown_ImplicitCast;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_InitializeRules) == 0x000008, "Wrong alignment on B_PossessSkill_C_InitializeRules");
static_assert(sizeof(B_PossessSkill_C_InitializeRules) == 0x000018, "Wrong size on B_PossessSkill_C_InitializeRules");
static_assert(offsetof(B_PossessSkill_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_PossessSkill_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_InitializeRules, CallFunc_GetSkillCooldown_Cooldown) == 0x000008, "Member 'B_PossessSkill_C_InitializeRules::CallFunc_GetSkillCooldown_Cooldown' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_InitializeRules, K2Node_VariableSet_cooldown_ImplicitCast) == 0x000010, "Member 'B_PossessSkill_C_InitializeRules::K2Node_VariableSet_cooldown_ImplicitCast' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_PossessSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on B_PossessSkill_C_ReceiveTick");
static_assert(sizeof(B_PossessSkill_C_ReceiveTick) == 0x000004, "Wrong size on B_PossessSkill_C_ReceiveTick");
static_assert(offsetof(B_PossessSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_PossessSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.ShowPossessNotWorkingHelp
// 0x0050 (0x0050 - 0x0000)
struct B_PossessSkill_C_ShowPossessNotWorkingHelp final
{
public:
	E_PossessNotWorkingReason                     Reason;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetProp;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    CallFunc_GetTargetProp_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_HUD_C>              K2Node_DynamicCast_AsI_HUD;                        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_ShowPossessNotWorkingHelp) == 0x000008, "Wrong alignment on B_PossessSkill_C_ShowPossessNotWorkingHelp");
static_assert(sizeof(B_PossessSkill_C_ShowPossessNotWorkingHelp) == 0x000050, "Wrong size on B_PossessSkill_C_ShowPossessNotWorkingHelp");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, Reason) == 0x000000, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::Reason' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, TargetProp) == 0x000008, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::TargetProp' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, CallFunc_GetTargetProp_ReturnValue) == 0x000010, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::CallFunc_GetTargetProp_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, K2Node_DynamicCast_AsI_HUD) == 0x000038, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::K2Node_DynamicCast_AsI_HUD' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_ShowPossessNotWorkingHelp, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_PossessSkill_C_ShowPossessNotWorkingHelp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.SwitchPropMulti
// 0x0008 (0x0008 - 0x0000)
struct B_PossessSkill_C_SwitchPropMulti final
{
public:
	class AActor*                                 Prop;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_SwitchPropMulti) == 0x000008, "Wrong alignment on B_PossessSkill_C_SwitchPropMulti");
static_assert(sizeof(B_PossessSkill_C_SwitchPropMulti) == 0x000008, "Wrong size on B_PossessSkill_C_SwitchPropMulti");
static_assert(offsetof(B_PossessSkill_C_SwitchPropMulti, Prop) == 0x000000, "Member 'B_PossessSkill_C_SwitchPropMulti::Prop' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.SwitchPropServer
// 0x0008 (0x0008 - 0x0000)
struct B_PossessSkill_C_SwitchPropServer final
{
public:
	class AActor*                                 Prop;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_SwitchPropServer) == 0x000008, "Wrong alignment on B_PossessSkill_C_SwitchPropServer");
static_assert(sizeof(B_PossessSkill_C_SwitchPropServer) == 0x000008, "Wrong size on B_PossessSkill_C_SwitchPropServer");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServer, Prop) == 0x000000, "Member 'B_PossessSkill_C_SwitchPropServer::Prop' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.SwitchPropServerFunction
// 0x00F0 (0x00F0 - 0x0000)
struct B_PossessSkill_C_SwitchPropServerFunction final
{
public:
	class AActor*                                 Prop;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSleeping;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    StaticMeshProp;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PropToTransformInto;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LastControlledProp;                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   PropPawnPhysics;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop_1;         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop_2;         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRuntimePropData                       K2Node_MakeStruct_RuntimePropData;                 // 0x0060(0x0038)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   CallFunc_SetProp_SpawnedProp;                      // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIProp_C>              K2Node_DynamicCast_AsIProp;                        // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMaxHealth_MaxHealth;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_SwitchPropServerFunction) == 0x000008, "Wrong alignment on B_PossessSkill_C_SwitchPropServerFunction");
static_assert(sizeof(B_PossessSkill_C_SwitchPropServerFunction) == 0x0000F0, "Wrong size on B_PossessSkill_C_SwitchPropServerFunction");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, Prop) == 0x000000, "Member 'B_PossessSkill_C_SwitchPropServerFunction::Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, IsSleeping) == 0x000008, "Member 'B_PossessSkill_C_SwitchPropServerFunction::IsSleeping' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, StaticMeshProp) == 0x000010, "Member 'B_PossessSkill_C_SwitchPropServerFunction::StaticMeshProp' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, PropToTransformInto) == 0x000018, "Member 'B_PossessSkill_C_SwitchPropServerFunction::PropToTransformInto' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, LastControlledProp) == 0x000020, "Member 'B_PossessSkill_C_SwitchPropServerFunction::LastControlledProp' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, PropPawnPhysics) == 0x000028, "Member 'B_PossessSkill_C_SwitchPropServerFunction::PropPawnPhysics' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000030, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_CanActivate_ReturnValue) == 0x000039, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsB_Static_Mesh_Prop_1) == 0x000040, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsB_Static_Mesh_Prop_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsB_Static_Mesh_Prop_2) == 0x000050, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsB_Static_Mesh_Prop_2' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_MakeStruct_RuntimePropData) == 0x000060, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_MakeStruct_RuntimePropData' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_BooleanOR_ReturnValue_1) == 0x000099, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_BooleanAND_ReturnValue) == 0x00009B, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_GetOwner_ReturnValue) == 0x0000A0, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x0000A8, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsB_Witch) == 0x0000B8, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_SetProp_SpawnedProp) == 0x0000C8, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_SetProp_SpawnedProp' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_AsIProp) == 0x0000D0, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_AsIProp' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'B_PossessSkill_C_SwitchPropServerFunction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_SwitchPropServerFunction, CallFunc_GetMaxHealth_MaxHealth) == 0x0000E8, "Member 'B_PossessSkill_C_SwitchPropServerFunction::CallFunc_GetMaxHealth_MaxHealth' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.TestTransforms
// 0x0220 (0x0220 - 0x0000)
struct B_PossessSkill_C_TestTransforms final
{
public:
	class AActor*                                 PropToCheck;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanPossess;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        TestOffsets;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransformTest_ValidTransform;             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0xF];                                      // 0x01B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TransformTest_Transform;                  // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_TestTransforms) == 0x000010, "Wrong alignment on B_PossessSkill_C_TestTransforms");
static_assert(sizeof(B_PossessSkill_C_TestTransforms) == 0x000220, "Wrong size on B_PossessSkill_C_TestTransforms");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, PropToCheck) == 0x000000, "Member 'B_PossessSkill_C_TestTransforms::PropToCheck' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CanPossess) == 0x000008, "Member 'B_PossessSkill_C_TestTransforms::CanPossess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, TestOffsets) == 0x000010, "Member 'B_PossessSkill_C_TestTransforms::TestOffsets' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, K2Node_MakeArray_Array) == 0x000020, "Member 'B_PossessSkill_C_TestTransforms::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_PossessSkill_C_TestTransforms::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_PossessSkill_C_TestTransforms::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000040, "Member 'B_PossessSkill_C_TestTransforms::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_PossessSkill_C_TestTransforms::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, K2Node_MakeArray_Array_1) == 0x000070, "Member 'B_PossessSkill_C_TestTransforms::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_TransformTest_ValidTransform) == 0x0001B0, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_TransformTest_ValidTransform' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TestTransforms, CallFunc_TransformTest_Transform) == 0x0001C0, "Member 'B_PossessSkill_C_TestTransforms::CallFunc_TransformTest_Transform' has a wrong offset!");

// Function B_PossessSkill.B_PossessSkill_C.TickTargetProp
// 0x0058 (0x0058 - 0x0000)
struct B_PossessSkill_C_TickTargetProp final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_PossessTrace_Prop;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PossessTrace_bHitSomething;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PossessSkill_C_TickTargetProp) == 0x000008, "Wrong alignment on B_PossessSkill_C_TickTargetProp");
static_assert(sizeof(B_PossessSkill_C_TickTargetProp) == 0x000058, "Wrong size on B_PossessSkill_C_TickTargetProp");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000020, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, K2Node_DynamicCast_AsPawn) == 0x000028, "Member 'B_PossessSkill_C_TickTargetProp::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_PossessSkill_C_TickTargetProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_PossessTrace_Prop) == 0x000038, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_PossessTrace_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_PossessTrace_bHitSomething) == 0x000040, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_PossessTrace_bHitSomething' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000048, "Member 'B_PossessSkill_C_TickTargetProp::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'B_PossessSkill_C_TickTargetProp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PossessSkill_C_TickTargetProp, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'B_PossessSkill_C_TickTargetProp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

