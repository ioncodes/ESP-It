#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WitchPortal

#include "Basic.hpp"

#include "EHighlightChannel_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_WitchPortal.B_WitchPortal_C.SetHighlightChannel
// 0x0001 (0x0001 - 0x0000)
struct B_WitchPortal_C_SetHighlightChannel final
{
public:
	EHighlightChannel                             Channel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPortal_C_SetHighlightChannel) == 0x000001, "Wrong alignment on B_WitchPortal_C_SetHighlightChannel");
static_assert(sizeof(B_WitchPortal_C_SetHighlightChannel) == 0x000001, "Wrong size on B_WitchPortal_C_SetHighlightChannel");
static_assert(offsetof(B_WitchPortal_C_SetHighlightChannel, Channel) == 0x000000, "Member 'B_WitchPortal_C_SetHighlightChannel::Channel' has a wrong offset!");

// Function B_WitchPortal.B_WitchPortal_C.SetHighlight
// 0x0003 (0x0003 - 0x0000)
struct B_WitchPortal_C_SetHighlight final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshHighlight_Highlightable;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPortal_C_SetHighlight) == 0x000001, "Wrong alignment on B_WitchPortal_C_SetHighlight");
static_assert(sizeof(B_WitchPortal_C_SetHighlight) == 0x000003, "Wrong size on B_WitchPortal_C_SetHighlight");
static_assert(offsetof(B_WitchPortal_C_SetHighlight, Highlighted) == 0x000000, "Member 'B_WitchPortal_C_SetHighlight::Highlighted' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_SetHighlight, ForcedBoolean) == 0x000001, "Member 'B_WitchPortal_C_SetHighlight::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_SetHighlight, CallFunc_RefreshHighlight_Highlightable) == 0x000002, "Member 'B_WitchPortal_C_SetHighlight::CallFunc_RefreshHighlight_Highlightable' has a wrong offset!");

// Function B_WitchPortal.B_WitchPortal_C.RefreshHighlight
// 0x0020 (0x0020 - 0x0000)
struct B_WitchPortal_C_RefreshHighlight final
{
public:
	bool                                          Highlightable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPortal_C_RefreshHighlight) == 0x000008, "Wrong alignment on B_WitchPortal_C_RefreshHighlight");
static_assert(sizeof(B_WitchPortal_C_RefreshHighlight) == 0x000020, "Wrong size on B_WitchPortal_C_RefreshHighlight");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, Highlightable) == 0x000000, "Member 'B_WitchPortal_C_RefreshHighlight::Highlightable' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_WitchPortal_C_RefreshHighlight::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_WitchPortal_C_RefreshHighlight::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_WitchPortal_C_RefreshHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x000019, "Member 'B_WitchPortal_C_RefreshHighlight::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'B_WitchPortal_C_RefreshHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_RefreshHighlight, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'B_WitchPortal_C_RefreshHighlight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_WitchPortal.B_WitchPortal_C.ExecuteUbergraph_B_WitchPortal
// 0x01B8 (0x01B8 - 0x0000)
struct B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchEnded_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_PlayerController;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0070(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWitchActor_ReturnActor;                // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_TrailEffect_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHighlightChannel                             K2Node_Event_Channel;                              // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal) == 0x000008, "Wrong alignment on B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal");
static_assert(sizeof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal) == 0x0001B8, "Wrong size on B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, EntryPoint) == 0x000000, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_AsB_Game_Mode) == 0x000018, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_HasMatchEnded_ReturnValue) == 0x000031, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_HasMatchEnded_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetOwningPlayer_PlayerController) == 0x000038, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetOwningPlayer_PlayerController' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000049, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000050, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_OtherActor) == 0x000058, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_OtherComp) == 0x000060, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000068, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_bFromSweep) == 0x00006C, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_ComponentBoundEvent_SweepResult) == 0x000070, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetObjectClass_ReturnValue) == 0x000168, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_ClassIsChildOf_ReturnValue) == 0x000170, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetInstigator_ReturnValue) == 0x000178, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetObjectClass_ReturnValue_1) == 0x000180, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetObjectClass_ReturnValue_2) == 0x000188, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000190, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000191, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_IsValid_ReturnValue) == 0x000192, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetWitchActor_ReturnActor) == 0x000198, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetWitchActor_ReturnActor' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_BooleanAND_ReturnValue) == 0x0001A0, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_GetComponentByClass_ReturnValue) == 0x0001A8, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_BooleanOR_ReturnValue) == 0x0001B0, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_IsValid_ReturnValue_1) == 0x0001B1, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_BooleanOR_ReturnValue_1) == 0x0001B2, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, CallFunc_SetHighlight_ForcedBoolean) == 0x0001B3, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal, K2Node_Event_Channel) == 0x0001B4, "Member 'B_WitchPortal_C_ExecuteUbergraph_B_WitchPortal::K2Node_Event_Channel' has a wrong offset!");

// Function B_WitchPortal.B_WitchPortal_C.BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_WitchPortal_C_BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

