#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LightColorPopup

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ESalvageCategory_structs.hpp"


namespace SDK::Params
{

// Function WB_LightColorPopup.WB_LightColorPopup_C.ExecuteUbergraph_WB_LightColorPopup
// 0x0010 (0x0010 - 0x0000)
struct WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_WorldSettingsTab_C*                 CallFunc_WidgetGetParentOfClass_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup) == 0x000008, "Wrong alignment on WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup");
static_assert(sizeof(WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup) == 0x000010, "Wrong size on WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup");
static_assert(offsetof(WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup, EntryPoint) == 0x000000, "Member 'WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup, CallFunc_WidgetGetParentOfClass_ReturnValue) == 0x000008, "Member 'WB_LightColorPopup_C_ExecuteUbergraph_WB_LightColorPopup::CallFunc_WidgetGetParentOfClass_ReturnValue' has a wrong offset!");

// Function WB_LightColorPopup.WB_LightColorPopup_C.GetIndividualItemDataAndFocus
// 0x00B8 (0x00B8 - 0x0000)
struct WB_LightColorPopup_C_GetIndividualItemDataAndFocus final
{
public:
	class UUserWidget*                            CategoryButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESalvageCategory                              SalvageCategory;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CA[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_TileViewData_C*>              Data;                                              // 0x0010(0x0010)(Parm, OutParm)
	TArray<bool>                                  FocusNeeded;                                       // 0x0020(0x0010)(Parm, OutParm)
	class UB_LightColorButtonData_C*              CurrentData;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentColor;                                      // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  FocusArray;                                        // 0x0050(0x0010)(Edit, BlueprintVisible)
	TArray<class UB_LightColorButtonData_C*>      DataArray;                                         // 0x0060(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CB[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInitialSelection_IsSelected;           // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CC[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CD[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_LightColorButtonData_C*              CallFunc_CreateObject_Object;                      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus) == 0x000008, "Wrong alignment on WB_LightColorPopup_C_GetIndividualItemDataAndFocus");
static_assert(sizeof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus) == 0x0000B8, "Wrong size on WB_LightColorPopup_C_GetIndividualItemDataAndFocus");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CategoryButton) == 0x000000, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CategoryButton' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, SalvageCategory) == 0x000008, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::SalvageCategory' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, Data) == 0x000010, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::Data' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, FocusNeeded) == 0x000020, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::FocusNeeded' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CurrentData) == 0x000030, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CurrentData' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CurrentColor) == 0x000038, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CurrentColor' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, FocusArray) == 0x000050, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::FocusArray' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, DataArray) == 0x000060, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::DataArray' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, Temp_int_Array_Index_Variable) == 0x000070, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Array_Get_Item) == 0x000080, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_HasInitialSelection_IsSelected) == 0x00009D, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_HasInitialSelection_IsSelected' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_CreateObject_Object) == 0x0000A8, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_GetIndividualItemDataAndFocus, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'WB_LightColorPopup_C_GetIndividualItemDataAndFocus::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WB_LightColorPopup.WB_LightColorPopup_C.GetTileView
// 0x0008 (0x0008 - 0x0000)
struct WB_LightColorPopup_C_GetTileView final
{
public:
	class UTileView*                              TileView;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorPopup_C_GetTileView) == 0x000008, "Wrong alignment on WB_LightColorPopup_C_GetTileView");
static_assert(sizeof(WB_LightColorPopup_C_GetTileView) == 0x000008, "Wrong size on WB_LightColorPopup_C_GetTileView");
static_assert(offsetof(WB_LightColorPopup_C_GetTileView, TileView) == 0x000000, "Member 'WB_LightColorPopup_C_GetTileView::TileView' has a wrong offset!");

// Function WB_LightColorPopup.WB_LightColorPopup_C.HasInitialSelection
// 0x0068 (0x0068 - 0x0000)
struct WB_LightColorPopup_C_HasInitialSelection final
{
public:
	struct FVector                                CurrentColor;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlaceableLight_C*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CF[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorPopup_C_HasInitialSelection) == 0x000008, "Wrong alignment on WB_LightColorPopup_C_HasInitialSelection");
static_assert(sizeof(WB_LightColorPopup_C_HasInitialSelection) == 0x000068, "Wrong size on WB_LightColorPopup_C_HasInitialSelection");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CurrentColor) == 0x000000, "Member 'WB_LightColorPopup_C_HasInitialSelection::CurrentColor' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, IsSelected) == 0x000018, "Member 'WB_LightColorPopup_C_HasInitialSelection::IsSelected' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CallFunc_Normal_ReturnValue) == 0x000020, "Member 'WB_LightColorPopup_C_HasInitialSelection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_LightColorPopup_C_HasInitialSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CallFunc_Array_IsEmpty_ReturnValue) == 0x000040, "Member 'WB_LightColorPopup_C_HasInitialSelection::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CallFunc_Normal_ReturnValue_1) == 0x000048, "Member 'WB_LightColorPopup_C_HasInitialSelection::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_LightColorPopup_C_HasInitialSelection, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000060, "Member 'WB_LightColorPopup_C_HasInitialSelection::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

}

