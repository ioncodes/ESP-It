#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_WitchIt

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BFL_WitchIt.BFL_WitchIt_C.IsNativePlatformSteam
// 0x0048 (0x0048 - 0x0000)
struct BFL_WitchIt_C_IsNativePlatformSteam final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSteam;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatformId; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatform; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_IsNativePlatformSteam) == 0x000008, "Wrong alignment on BFL_WitchIt_C_IsNativePlatformSteam");
static_assert(sizeof(BFL_WitchIt_C_IsNativePlatformSteam) == 0x000048, "Wrong size on BFL_WitchIt_C_IsNativePlatformSteam");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, __WorldContext) == 0x000008, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, IsSteam) == 0x000010, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::IsSteam' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, CallFunc_GetBGameInstance_ReturnValue) == 0x000018, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, CallFunc_GetNativePlatformAccountName_NativePlatformId) == 0x000020, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::CallFunc_GetNativePlatformAccountName_NativePlatformId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, CallFunc_GetNativePlatformAccountName_NativePlatform) == 0x000030, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::CallFunc_GetNativePlatformAccountName_NativePlatform' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsNativePlatformSteam, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000040, "Member 'BFL_WitchIt_C_IsNativePlatformSteam::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetProductUserIdFromPlayerState
// 0x0050 (0x0050 - 0x0000)
struct BFL_WitchIt_C_GetProductUserIdFromPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlatformId;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetProductUserId_ProductUserId;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProductUserId_PlatformType;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetProductUserIdFromPlayerState) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetProductUserIdFromPlayerState");
static_assert(sizeof(BFL_WitchIt_C_GetProductUserIdFromPlayerState) == 0x000050, "Wrong size on BFL_WitchIt_C_GetProductUserIdFromPlayerState");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, PlayerState) == 0x000000, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, __WorldContext) == 0x000008, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, PlatformId) == 0x000010, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::PlatformId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, K2Node_DynamicCast_AsB_Player_State) == 0x000020, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, CallFunc_GetProductUserId_ProductUserId) == 0x000030, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::CallFunc_GetProductUserId_ProductUserId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetProductUserIdFromPlayerState, CallFunc_GetProductUserId_PlatformType) == 0x000040, "Member 'BFL_WitchIt_C_GetProductUserIdFromPlayerState::CallFunc_GetProductUserId_PlatformType' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.IsSessionUsageAllowed
// 0x0028 (0x0028 - 0x0000)
struct BFL_WitchIt_C_IsSessionUsageAllowed final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAllowed;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRuntimeAccountFlag_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_IsSessionUsageAllowed) == 0x000008, "Wrong alignment on BFL_WitchIt_C_IsSessionUsageAllowed");
static_assert(sizeof(BFL_WitchIt_C_IsSessionUsageAllowed) == 0x000028, "Wrong size on BFL_WitchIt_C_IsSessionUsageAllowed");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, __WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, bIsAllowed) == 0x000008, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::bIsAllowed' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, CallFunc_GetNewMasterServerManager_ReturnValue) == 0x000018, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::CallFunc_GetNewMasterServerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, CallFunc_HasRuntimeAccountFlag_ReturnValue) == 0x000020, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::CallFunc_HasRuntimeAccountFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_IsSessionUsageAllowed, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BFL_WitchIt_C_IsSessionUsageAllowed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetUniqueNetIdFromFirstLocalPlayer
// 0x0078 (0x0078 - 0x0000)
struct BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       NewParam;                                          // 0x0010(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId; // 0x0048(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer");
static_assert(sizeof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer) == 0x000078, "Wrong size on BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer");
static_assert(offsetof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer, WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer::WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer, __WorldContext) == 0x000008, "Member 'BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer, NewParam) == 0x000010, "Member 'BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer::NewParam' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer, CallFunc_GetBGameInstance_ReturnValue) == 0x000040, "Member 'BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer, CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId) == 0x000048, "Member 'BFL_WitchIt_C_GetUniqueNetIdFromFirstLocalPlayer::CallFunc_GetUniqueNetIdForFirstLocalPC_UniqueNetId' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetNativePlatformAccountIdFromPlayerState
// 0x0030 (0x0030 - 0x0000)
struct BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlatformId;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState");
static_assert(sizeof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState) == 0x000030, "Wrong size on BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState, PlayerState) == 0x000000, "Member 'BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState, __WorldContext) == 0x000008, "Member 'BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState, PlatformId) == 0x000010, "Member 'BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState::PlatformId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState, K2Node_DynamicCast_AsB_Player_State) == 0x000020, "Member 'BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BFL_WitchIt_C_GetNativePlatformAccountIdFromPlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetNativePlatformAccountId
// 0x0048 (0x0048 - 0x0000)
struct BFL_WitchIt_C_GetNativePlatformAccountId final
{
public:
	class UObject*                                WorldContext;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlatformId;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatformId; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatform; // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetNativePlatformAccountId) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetNativePlatformAccountId");
static_assert(sizeof(BFL_WitchIt_C_GetNativePlatformAccountId) == 0x000048, "Wrong size on BFL_WitchIt_C_GetNativePlatformAccountId");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, __WorldContext) == 0x000008, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, PlatformId) == 0x000010, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::PlatformId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, CallFunc_GetBGameInstance_ReturnValue) == 0x000020, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, CallFunc_GetNativePlatformAccountName_NativePlatformId) == 0x000028, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::CallFunc_GetNativePlatformAccountName_NativePlatformId' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetNativePlatformAccountId, CallFunc_GetNativePlatformAccountName_NativePlatform) == 0x000038, "Member 'BFL_WitchIt_C_GetNativePlatformAccountId::CallFunc_GetNativePlatformAccountName_NativePlatform' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.UseNewServerBrowser
// 0x0030 (0x0030 - 0x0000)
struct BFL_WitchIt_C_UseNewServerBrowser final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Out;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMasterServerSubsystem*                 CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNewMasterServerManager*                CallFunc_GetNewMasterServerManager_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewMasterServerManager_C*            K2Node_DynamicCast_AsB_New_Master_Server_Manager;  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_UseNewServerBrowser) == 0x000008, "Wrong alignment on BFL_WitchIt_C_UseNewServerBrowser");
static_assert(sizeof(BFL_WitchIt_C_UseNewServerBrowser) == 0x000030, "Wrong size on BFL_WitchIt_C_UseNewServerBrowser");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, __WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_UseNewServerBrowser::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, Out) == 0x000008, "Member 'BFL_WitchIt_C_UseNewServerBrowser::Out' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000010, "Member 'BFL_WitchIt_C_UseNewServerBrowser::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, CallFunc_GetNewMasterServerManager_ReturnValue) == 0x000018, "Member 'BFL_WitchIt_C_UseNewServerBrowser::CallFunc_GetNewMasterServerManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, K2Node_DynamicCast_AsB_New_Master_Server_Manager) == 0x000020, "Member 'BFL_WitchIt_C_UseNewServerBrowser::K2Node_DynamicCast_AsB_New_Master_Server_Manager' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BFL_WitchIt_C_UseNewServerBrowser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_UseNewServerBrowser, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BFL_WitchIt_C_UseNewServerBrowser::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameState
// 0x0028 (0x0028 - 0x0000)
struct BFL_WitchIt_C_GetBGameState final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetBGameState) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetBGameState");
static_assert(sizeof(BFL_WitchIt_C_GetBGameState) == 0x000028, "Wrong size on BFL_WitchIt_C_GetBGameState");
static_assert(offsetof(BFL_WitchIt_C_GetBGameState, __WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_GetBGameState::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameState, ReturnValue) == 0x000008, "Member 'BFL_WitchIt_C_GetBGameState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameState, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BFL_WitchIt_C_GetBGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameState, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'BFL_WitchIt_C_GetBGameState::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BFL_WitchIt_C_GetBGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameMode
// 0x0028 (0x0028 - 0x0000)
struct BFL_WitchIt_C_GetBGameMode final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetBGameMode) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetBGameMode");
static_assert(sizeof(BFL_WitchIt_C_GetBGameMode) == 0x000028, "Wrong size on BFL_WitchIt_C_GetBGameMode");
static_assert(offsetof(BFL_WitchIt_C_GetBGameMode, __WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_GetBGameMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameMode, ReturnValue) == 0x000008, "Member 'BFL_WitchIt_C_GetBGameMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameMode, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BFL_WitchIt_C_GetBGameMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameMode, K2Node_DynamicCast_AsB_Game_Mode) == 0x000018, "Member 'BFL_WitchIt_C_GetBGameMode::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BFL_WitchIt_C_GetBGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BFL_WitchIt.BFL_WitchIt_C.GetBGameInstance
// 0x0028 (0x0028 - 0x0000)
struct BFL_WitchIt_C_GetBGameInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_WitchIt_C_GetBGameInstance) == 0x000008, "Wrong alignment on BFL_WitchIt_C_GetBGameInstance");
static_assert(sizeof(BFL_WitchIt_C_GetBGameInstance) == 0x000028, "Wrong size on BFL_WitchIt_C_GetBGameInstance");
static_assert(offsetof(BFL_WitchIt_C_GetBGameInstance, __WorldContext) == 0x000000, "Member 'BFL_WitchIt_C_GetBGameInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameInstance, ReturnValue) == 0x000008, "Member 'BFL_WitchIt_C_GetBGameInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BFL_WitchIt_C_GetBGameInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameInstance, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'BFL_WitchIt_C_GetBGameInstance::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(BFL_WitchIt_C_GetBGameInstance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BFL_WitchIt_C_GetBGameInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

