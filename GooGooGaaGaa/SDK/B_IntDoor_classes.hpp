#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_IntDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_IntDoor.B_IntDoor_C
// 0x00D0 (0x0360 - 0x0290)
class AB_IntDoor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UB_HitBlinker_C*                        B_HitBlinker;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PropBlocker2;                                      // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          PropBlocker;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_DoorFrame;                                      // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Door;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C8[0x8];                                      // 0x02C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalTransform;                                    // 0x02D0(0x0060)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            Doors;                                             // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          ClosedOnHide;                                      // 0x0340(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Health;                                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destructable;                                      // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Alive;                                             // 0x0351(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0352(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         DestructionEffect;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void BlinkMulti();
	void BndEvt__SM_Door_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void DestroyDoor();
	void DestroyDoorMulti();
	void DoorHit(const struct FHitResult& Hit);
	void ExecuteUbergraph_B_IntDoor(int32 EntryPoint);
	void LockDoor();
	void OnRep_Dead();
	void ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UnlockDoor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_IntDoor_C">();
	}
	static class AB_IntDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_IntDoor_C>();
	}
};
static_assert(alignof(AB_IntDoor_C) == 0x000010, "Wrong alignment on AB_IntDoor_C");
static_assert(sizeof(AB_IntDoor_C) == 0x000360, "Wrong size on AB_IntDoor_C");
static_assert(offsetof(AB_IntDoor_C, UberGraphFrame) == 0x000290, "Member 'AB_IntDoor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, B_HitBlinker) == 0x000298, "Member 'AB_IntDoor_C::B_HitBlinker' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, PropBlocker2) == 0x0002A0, "Member 'AB_IntDoor_C::PropBlocker2' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, PropBlocker) == 0x0002A8, "Member 'AB_IntDoor_C::PropBlocker' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, SM_DoorFrame) == 0x0002B0, "Member 'AB_IntDoor_C::SM_DoorFrame' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, PhysicsConstraint) == 0x0002B8, "Member 'AB_IntDoor_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, SM_Door) == 0x0002C0, "Member 'AB_IntDoor_C::SM_Door' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, LocalTransform) == 0x0002D0, "Member 'AB_IntDoor_C::LocalTransform' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, Doors) == 0x000330, "Member 'AB_IntDoor_C::Doors' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, ClosedOnHide) == 0x000340, "Member 'AB_IntDoor_C::ClosedOnHide' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, Health) == 0x000348, "Member 'AB_IntDoor_C::Health' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, Destructable) == 0x000350, "Member 'AB_IntDoor_C::Destructable' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, Alive) == 0x000351, "Member 'AB_IntDoor_C::Alive' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, Dead) == 0x000352, "Member 'AB_IntDoor_C::Dead' has a wrong offset!");
static_assert(offsetof(AB_IntDoor_C, DestructionEffect) == 0x000358, "Member 'AB_IntDoor_C::DestructionEffect' has a wrong offset!");

}

