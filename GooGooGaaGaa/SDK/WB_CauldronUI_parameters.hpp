#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CauldronUI

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function WB_CauldronUI.WB_CauldronUI_C.CheckForWantedProp
// 0x0028 (0x0028 - 0x0000)
struct WB_CauldronUI_C_CheckForWantedProp final
{
public:
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DAF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_CheckForWantedProp) == 0x000008, "Wrong alignment on WB_CauldronUI_C_CheckForWantedProp");
static_assert(sizeof(WB_CauldronUI_C_CheckForWantedProp) == 0x000028, "Wrong size on WB_CauldronUI_C_CheckForWantedProp");
static_assert(offsetof(WB_CauldronUI_C_CheckForWantedProp, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000000, "Member 'WB_CauldronUI_C_CheckForWantedProp::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_CheckForWantedProp, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000008, "Member 'WB_CauldronUI_C_CheckForWantedProp::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_CheckForWantedProp, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_CauldronUI_C_CheckForWantedProp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_CheckForWantedProp, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WB_CauldronUI_C_CheckForWantedProp::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_CheckForWantedProp, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'WB_CauldronUI_C_CheckForWantedProp::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function WB_CauldronUI.WB_CauldronUI_C.ExecuteUbergraph_WB_CauldronUI
// 0x0058 (0x0058 - 0x0000)
struct WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB1[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x001C(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI) == 0x000008, "Wrong alignment on WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI");
static_assert(sizeof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI) == 0x000058, "Wrong size on WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, EntryPoint) == 0x000000, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, K2Node_DynamicCast_AsB_Player_State) == 0x000010, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, K2Node_Event_MyGeometry) == 0x00001C, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI, K2Node_Event_InDeltaTime) == 0x000054, "Member 'WB_CauldronUI_C_ExecuteUbergraph_WB_CauldronUI::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_CauldronUI.WB_CauldronUI_C.GetColorAndOpacity_0
// 0x0020 (0x0020 - 0x0000)
struct WB_CauldronUI_C_GetColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_GetColorAndOpacity_0) == 0x000004, "Wrong alignment on WB_CauldronUI_C_GetColorAndOpacity_0");
static_assert(sizeof(WB_CauldronUI_C_GetColorAndOpacity_0) == 0x000020, "Wrong size on WB_CauldronUI_C_GetColorAndOpacity_0");
static_assert(offsetof(WB_CauldronUI_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'WB_CauldronUI_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetColorAndOpacity_0, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'WB_CauldronUI_C_GetColorAndOpacity_0::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function WB_CauldronUI.WB_CauldronUI_C.GetVisibility_0
// 0x000B (0x000B - 0x0000)
struct WB_CauldronUI_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_GetVisibility_0) == 0x000001, "Wrong alignment on WB_CauldronUI_C_GetVisibility_0");
static_assert(sizeof(WB_CauldronUI_C_GetVisibility_0) == 0x00000B, "Wrong size on WB_CauldronUI_C_GetVisibility_0");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_CauldronUI_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_byte_Variable_2) == 0x000004, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_byte_Variable_3) == 0x000005, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, Temp_byte_Variable_4) == 0x000006, "Member 'WB_CauldronUI_C_GetVisibility_0::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, CallFunc_IsValidClass_ReturnValue) == 0x000007, "Member 'WB_CauldronUI_C_GetVisibility_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'WB_CauldronUI_C_GetVisibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, K2Node_Select_Default) == 0x000009, "Member 'WB_CauldronUI_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_0, K2Node_Select_Default_1) == 0x00000A, "Member 'WB_CauldronUI_C_GetVisibility_0::K2Node_Select_Default_1' has a wrong offset!");

// Function WB_CauldronUI.WB_CauldronUI_C.GetVisibility_1
// 0x0020 (0x0020 - 0x0000)
struct WB_CauldronUI_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DB2[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_GetVisibility_1) == 0x000008, "Wrong alignment on WB_CauldronUI_C_GetVisibility_1");
static_assert(sizeof(WB_CauldronUI_C_GetVisibility_1) == 0x000020, "Wrong size on WB_CauldronUI_C_GetVisibility_1");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'WB_CauldronUI_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, Temp_byte_Variable) == 0x000001, "Member 'WB_CauldronUI_C_GetVisibility_1::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_CauldronUI_C_GetVisibility_1::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_CauldronUI_C_GetVisibility_1::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_CauldronUI_C_GetVisibility_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, Temp_byte_Variable_1) == 0x000019, "Member 'WB_CauldronUI_C_GetVisibility_1::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, Temp_bool_Variable) == 0x00001A, "Member 'WB_CauldronUI_C_GetVisibility_1::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_GetVisibility_1, K2Node_Select_Default) == 0x00001B, "Member 'WB_CauldronUI_C_GetVisibility_1::K2Node_Select_Default' has a wrong offset!");

// Function WB_CauldronUI.WB_CauldronUI_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CauldronUI_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CauldronUI_C_Tick) == 0x000004, "Wrong alignment on WB_CauldronUI_C_Tick");
static_assert(sizeof(WB_CauldronUI_C_Tick) == 0x00003C, "Wrong size on WB_CauldronUI_C_Tick");
static_assert(offsetof(WB_CauldronUI_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CauldronUI_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CauldronUI_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CauldronUI_C_Tick::InDeltaTime' has a wrong offset!");

}

