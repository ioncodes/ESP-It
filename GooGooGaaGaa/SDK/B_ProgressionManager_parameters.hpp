#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ProgressionManager

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_ProgressionManager.B_ProgressionManager_C.DidLoadOnlineStats
// 0x0001 (0x0001 - 0x0000)
struct B_ProgressionManager_C_DidLoadOnlineStats final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_DidLoadOnlineStats) == 0x000001, "Wrong alignment on B_ProgressionManager_C_DidLoadOnlineStats");
static_assert(sizeof(B_ProgressionManager_C_DidLoadOnlineStats) == 0x000001, "Wrong size on B_ProgressionManager_C_DidLoadOnlineStats");
static_assert(offsetof(B_ProgressionManager_C_DidLoadOnlineStats, Success) == 0x000000, "Member 'B_ProgressionManager_C_DidLoadOnlineStats::Success' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.DidStoreStats
// 0x0001 (0x0001 - 0x0000)
struct B_ProgressionManager_C_DidStoreStats final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_DidStoreStats) == 0x000001, "Wrong alignment on B_ProgressionManager_C_DidStoreStats");
static_assert(sizeof(B_ProgressionManager_C_DidStoreStats) == 0x000001, "Wrong size on B_ProgressionManager_C_DidStoreStats");
static_assert(offsetof(B_ProgressionManager_C_DidStoreStats, Success) == 0x000000, "Member 'B_ProgressionManager_C_DidStoreStats::Success' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.ExecuteUbergraph_B_ProgressionManager
// 0x0080 (0x0080 - 0x0000)
struct B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Success)>                 K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          K2Node_Event_InGameInstance;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success_1;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetExp_Exp;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_Level;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrestigeLevel_PrestigeLevel;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPrestigeExp_PrestigeExp;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Success;                        // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_1;  // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_2;  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result_3;  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager) == 0x000008, "Wrong alignment on B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager");
static_assert(sizeof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager) == 0x000080, "Wrong size on B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, EntryPoint) == 0x000000, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_Event_InGameInstance) == 0x000030, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_Event_InGameInstance' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_Not_PreBool_ReturnValue_2) == 0x000038, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000040, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_CustomEvent_Success_1) == 0x000049, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_CustomEvent_Success_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetExp_Exp) == 0x00004C, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetLevel_Level) == 0x000050, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetLevel_Level' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetPrestigeLevel_PrestigeLevel) == 0x000054, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetPrestigeLevel_PrestigeLevel' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetPrestigeExp_PrestigeExp) == 0x000058, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetPrestigeExp_PrestigeExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, K2Node_CustomEvent_Success) == 0x00005C, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::K2Node_CustomEvent_Success' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000060, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetStatsAndAchievementsManager_Result_1) == 0x000068, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetStatsAndAchievementsManager_Result_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetStatsAndAchievementsManager_Result_2) == 0x000070, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetStatsAndAchievementsManager_Result_2' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager, CallFunc_GetStatsAndAchievementsManager_Result_3) == 0x000078, "Member 'B_ProgressionManager_C_ExecuteUbergraph_B_ProgressionManager::CallFunc_GetStatsAndAchievementsManager_Result_3' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetCurrentPendingLevelUpsLocal
// 0x0050 (0x0050 - 0x0000)
struct B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal final
{
public:
	int32                                         PendingLevelUps;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PendingLevelUpCount;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Exp;                                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal");
static_assert(sizeof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal) == 0x000050, "Wrong size on B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, PendingLevelUps) == 0x000000, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::PendingLevelUps' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, PendingLevelUpCount) == 0x000004, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::PendingLevelUpCount' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, Level) == 0x000008, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::Level' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, Exp) == 0x00000C, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, Temp_int_Variable) == 0x000010, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, Temp_int_Variable_1) == 0x00001C, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_Add_IntInt_ReturnValue_2) == 0x000020, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_GetFloatValue_ReturnValue) == 0x000030, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000040, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal, CallFunc_FTrunc_A_ImplicitCast) == 0x000048, "Member 'B_ProgressionManager_C_GetCurrentPendingLevelUpsLocal::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetExp
// 0x0028 (0x0028 - 0x0000)
struct B_ProgressionManager_C_GetExp final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetExp) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetExp");
static_assert(sizeof(B_ProgressionManager_C_GetExp) == 0x000028, "Wrong size on B_ProgressionManager_C_GetExp");
static_assert(offsetof(B_ProgressionManager_C_GetExp, Exp) == 0x000000, "Member 'B_ProgressionManager_C_GetExp::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExp, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000008, "Member 'B_ProgressionManager_C_GetExp::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GetExp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExp, CallFunc_GetStat_ResultValue) == 0x000018, "Member 'B_ProgressionManager_C_GetExp::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExp, CallFunc_GetStat_ResultWasFound) == 0x000020, "Member 'B_ProgressionManager_C_GetExp::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExp, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000024, "Member 'B_ProgressionManager_C_GetExp::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetExpPercentalLocal
// 0x0028 (0x0028 - 0x0000)
struct B_ProgressionManager_C_GetExpPercentalLocal final
{
public:
	double                                        Exp;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentalExp;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExpLocal_MaxExp;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetExpPercentalLocal) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetExpPercentalLocal");
static_assert(sizeof(B_ProgressionManager_C_GetExpPercentalLocal) == 0x000028, "Wrong size on B_ProgressionManager_C_GetExpPercentalLocal");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalLocal, Exp) == 0x000000, "Member 'B_ProgressionManager_C_GetExpPercentalLocal::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalLocal, PercentalExp) == 0x000008, "Member 'B_ProgressionManager_C_GetExpPercentalLocal::PercentalExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalLocal, CallFunc_GetMaxExpLocal_MaxExp) == 0x000010, "Member 'B_ProgressionManager_C_GetExpPercentalLocal::CallFunc_GetMaxExpLocal_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalLocal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'B_ProgressionManager_C_GetExpPercentalLocal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalLocal, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_ProgressionManager_C_GetExpPercentalLocal::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetExpPercentalPrestige
// 0x0028 (0x0028 - 0x0000)
struct B_ProgressionManager_C_GetExpPercentalPrestige final
{
public:
	double                                        Exp;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentalExp;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExpPrestige_MaxExp;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetExpPercentalPrestige) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetExpPercentalPrestige");
static_assert(sizeof(B_ProgressionManager_C_GetExpPercentalPrestige) == 0x000028, "Wrong size on B_ProgressionManager_C_GetExpPercentalPrestige");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalPrestige, Exp) == 0x000000, "Member 'B_ProgressionManager_C_GetExpPercentalPrestige::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalPrestige, PercentalExp) == 0x000008, "Member 'B_ProgressionManager_C_GetExpPercentalPrestige::PercentalExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalPrestige, CallFunc_GetMaxExpPrestige_MaxExp) == 0x000010, "Member 'B_ProgressionManager_C_GetExpPercentalPrestige::CallFunc_GetMaxExpPrestige_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalPrestige, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'B_ProgressionManager_C_GetExpPercentalPrestige::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetExpPercentalPrestige, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_ProgressionManager_C_GetExpPercentalPrestige::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetLevel
// 0x0030 (0x0030 - 0x0000)
struct B_ProgressionManager_C_GetLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetLevel) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetLevel");
static_assert(sizeof(B_ProgressionManager_C_GetLevel) == 0x000030, "Wrong size on B_ProgressionManager_C_GetLevel");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, Level) == 0x000000, "Member 'B_ProgressionManager_C_GetLevel::Level' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000008, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_Min_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_GetStat_ResultValue) == 0x000018, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_GetStat_ResultWasFound) == 0x000020, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000024, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetLevel, CallFunc_Min_ReturnValue_1) == 0x000028, "Member 'B_ProgressionManager_C_GetLevel::CallFunc_Min_ReturnValue_1' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExp
// 0x0030 (0x0030 - 0x0000)
struct B_ProgressionManager_C_GetMaxExp final
{
public:
	int32                                         MaxExp;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_Level;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetMaxExp) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetMaxExp");
static_assert(sizeof(B_ProgressionManager_C_GetMaxExp) == 0x000030, "Wrong size on B_ProgressionManager_C_GetMaxExp");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, MaxExp) == 0x000000, "Member 'B_ProgressionManager_C_GetMaxExp::MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_GetLevel_Level) == 0x000004, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_GetLevel_Level' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000020, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExp, CallFunc_FTrunc_A_ImplicitCast) == 0x000028, "Member 'B_ProgressionManager_C_GetMaxExp::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExpLocal
// 0x0028 (0x0028 - 0x0000)
struct B_ProgressionManager_C_GetMaxExpLocal final
{
public:
	int32                                         MaxExp;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetMaxExpLocal) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetMaxExpLocal");
static_assert(sizeof(B_ProgressionManager_C_GetMaxExpLocal) == 0x000028, "Wrong size on B_ProgressionManager_C_GetMaxExpLocal");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, MaxExp) == 0x000000, "Member 'B_ProgressionManager_C_GetMaxExpLocal::MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000018, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpLocal, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'B_ProgressionManager_C_GetMaxExpLocal::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetMaxExpPrestige
// 0x0028 (0x0028 - 0x0000)
struct B_ProgressionManager_C_GetMaxExpPrestige final
{
public:
	int32                                         MaxExp;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetMaxExpPrestige) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetMaxExpPrestige");
static_assert(sizeof(B_ProgressionManager_C_GetMaxExpPrestige) == 0x000028, "Wrong size on B_ProgressionManager_C_GetMaxExpPrestige");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, MaxExp) == 0x000000, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000018, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetMaxExpPrestige, CallFunc_FTrunc_A_ImplicitCast) == 0x000020, "Member 'B_ProgressionManager_C_GetMaxExpPrestige::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetPrestigeExp
// 0x0020 (0x0020 - 0x0000)
struct B_ProgressionManager_C_GetPrestigeExp final
{
public:
	int32                                         PrestigeExp_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetPrestigeExp) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetPrestigeExp");
static_assert(sizeof(B_ProgressionManager_C_GetPrestigeExp) == 0x000020, "Wrong size on B_ProgressionManager_C_GetPrestigeExp");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeExp, PrestigeExp_0) == 0x000000, "Member 'B_ProgressionManager_C_GetPrestigeExp::PrestigeExp_0' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeExp, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000008, "Member 'B_ProgressionManager_C_GetPrestigeExp::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeExp, CallFunc_GetStat_ResultValue) == 0x000010, "Member 'B_ProgressionManager_C_GetPrestigeExp::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeExp, CallFunc_GetStat_ResultWasFound) == 0x000018, "Member 'B_ProgressionManager_C_GetPrestigeExp::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeExp, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x00001C, "Member 'B_ProgressionManager_C_GetPrestigeExp::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetPrestigeLevel
// 0x0020 (0x0020 - 0x0000)
struct B_ProgressionManager_C_GetPrestigeLevel final
{
public:
	int32                                         PrestigeLevel_0;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetPrestigeLevel) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetPrestigeLevel");
static_assert(sizeof(B_ProgressionManager_C_GetPrestigeLevel) == 0x000020, "Wrong size on B_ProgressionManager_C_GetPrestigeLevel");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeLevel, PrestigeLevel_0) == 0x000000, "Member 'B_ProgressionManager_C_GetPrestigeLevel::PrestigeLevel_0' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeLevel, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000008, "Member 'B_ProgressionManager_C_GetPrestigeLevel::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeLevel, CallFunc_GetStat_ResultValue) == 0x000010, "Member 'B_ProgressionManager_C_GetPrestigeLevel::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeLevel, CallFunc_GetStat_ResultWasFound) == 0x000018, "Member 'B_ProgressionManager_C_GetPrestigeLevel::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetPrestigeLevel, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x00001C, "Member 'B_ProgressionManager_C_GetPrestigeLevel::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetRoundsPlayed
// 0x0038 (0x0038 - 0x0000)
struct B_ProgressionManager_C_GetRoundsPlayed final
{
public:
	int32                                         RoundsPlayed;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetStat_ResultValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStat_ResultWasFound;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_Int64ToInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetRoundsPlayed) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetRoundsPlayed");
static_assert(sizeof(B_ProgressionManager_C_GetRoundsPlayed) == 0x000038, "Wrong size on B_ProgressionManager_C_GetRoundsPlayed");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, RoundsPlayed) == 0x000000, "Member 'B_ProgressionManager_C_GetRoundsPlayed::RoundsPlayed' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, Temp_bool_Variable) == 0x000004, "Member 'B_ProgressionManager_C_GetRoundsPlayed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, Temp_int_Variable) == 0x000008, "Member 'B_ProgressionManager_C_GetRoundsPlayed::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, Temp_int_Variable_1) == 0x00000C, "Member 'B_ProgressionManager_C_GetRoundsPlayed::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000010, "Member 'B_ProgressionManager_C_GetRoundsPlayed::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, CallFunc_WithEditor_ReturnValue) == 0x000018, "Member 'B_ProgressionManager_C_GetRoundsPlayed::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, CallFunc_GetStat_ResultValue) == 0x000020, "Member 'B_ProgressionManager_C_GetRoundsPlayed::CallFunc_GetStat_ResultValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, CallFunc_GetStat_ResultWasFound) == 0x000028, "Member 'B_ProgressionManager_C_GetRoundsPlayed::CallFunc_GetStat_ResultWasFound' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, K2Node_Select_Default) == 0x00002C, "Member 'B_ProgressionManager_C_GetRoundsPlayed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GetRoundsPlayed, CallFunc_Conv_Int64ToInt_ReturnValue) == 0x000030, "Member 'B_ProgressionManager_C_GetRoundsPlayed::CallFunc_Conv_Int64ToInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GrantExp
// 0x0040 (0x0040 - 0x0000)
struct B_ProgressionManager_C_GrantExp final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelUps;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LevelUpCount;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPendingLevelUpsLocal_PendingLevelUps; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingLevelUp_PendingLevelUp;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExp_Exp;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GrantExp) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GrantExp");
static_assert(sizeof(B_ProgressionManager_C_GrantExp) == 0x000040, "Wrong size on B_ProgressionManager_C_GrantExp");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, Exp) == 0x000000, "Member 'B_ProgressionManager_C_GrantExp::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, LevelUps) == 0x000004, "Member 'B_ProgressionManager_C_GrantExp::LevelUps' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, LevelUpCount) == 0x000008, "Member 'B_ProgressionManager_C_GrantExp::LevelUpCount' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, Temp_int_Variable) == 0x00000C, "Member 'B_ProgressionManager_C_GrantExp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000010, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_GetCurrentPendingLevelUpsLocal_PendingLevelUps) == 0x000018, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_GetCurrentPendingLevelUpsLocal_PendingLevelUps' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_IsPendingLevelUp_PendingLevelUp) == 0x000024, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_IsPendingLevelUp_PendingLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000028, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_GetExp_Exp) == 0x000030, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantExp, CallFunc_SetStat_Result) == 0x000038, "Member 'B_ProgressionManager_C_GrantExp::CallFunc_SetStat_Result' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GrantPendingLevelUp
// 0x0040 (0x0040 - 0x0000)
struct B_ProgressionManager_C_GrantPendingLevelUp final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExp_MaxExp;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetExp_Exp;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingLevelUp_PendingLevelUp;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevel_Level;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result_1;                         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GrantPendingLevelUp) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GrantPendingLevelUp");
static_assert(sizeof(B_ProgressionManager_C_GrantPendingLevelUp) == 0x000040, "Wrong size on B_ProgressionManager_C_GrantPendingLevelUp");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000000, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_GetMaxExp_MaxExp) == 0x000008, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_GetMaxExp_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_GetExp_Exp) == 0x00000C, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_IsPendingLevelUp_PendingLevelUp) == 0x000014, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_IsPendingLevelUp_PendingLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_SetStat_Result) == 0x000020, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_SetStat_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_GetLevel_Level) == 0x000024, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_GetLevel_Level' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000030, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUp, CallFunc_SetStat_Result_1) == 0x000038, "Member 'B_ProgressionManager_C_GrantPendingLevelUp::CallFunc_SetStat_Result_1' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GrantPendingLevelUpLocal
// 0x0014 (0x0014 - 0x0000)
struct B_ProgressionManager_C_GrantPendingLevelUpLocal final
{
public:
	bool                                          CallFunc_IsPendingLevelUpLocal_PendingLevelUp;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExpLocal_MaxExp;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GrantPendingLevelUpLocal) == 0x000004, "Wrong alignment on B_ProgressionManager_C_GrantPendingLevelUpLocal");
static_assert(sizeof(B_ProgressionManager_C_GrantPendingLevelUpLocal) == 0x000014, "Wrong size on B_ProgressionManager_C_GrantPendingLevelUpLocal");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUpLocal, CallFunc_IsPendingLevelUpLocal_PendingLevelUp) == 0x000000, "Member 'B_ProgressionManager_C_GrantPendingLevelUpLocal::CallFunc_IsPendingLevelUpLocal_PendingLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUpLocal, Temp_int_Variable) == 0x000004, "Member 'B_ProgressionManager_C_GrantPendingLevelUpLocal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUpLocal, CallFunc_GetMaxExpLocal_MaxExp) == 0x000008, "Member 'B_ProgressionManager_C_GrantPendingLevelUpLocal::CallFunc_GetMaxExpLocal_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUpLocal, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_ProgressionManager_C_GrantPendingLevelUpLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPendingLevelUpLocal, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_GrantPendingLevelUpLocal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GrantPrestigeExpLocal
// 0x0008 (0x0008 - 0x0000)
struct B_ProgressionManager_C_GrantPrestigeExpLocal final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GrantPrestigeExpLocal) == 0x000004, "Wrong alignment on B_ProgressionManager_C_GrantPrestigeExpLocal");
static_assert(sizeof(B_ProgressionManager_C_GrantPrestigeExpLocal) == 0x000008, "Wrong size on B_ProgressionManager_C_GrantPrestigeExpLocal");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeExpLocal, Exp) == 0x000000, "Member 'B_ProgressionManager_C_GrantPrestigeExpLocal::Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeExpLocal, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'B_ProgressionManager_C_GrantPrestigeExpLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GrantPrestigeLevelUpLocal
// 0x0014 (0x0014 - 0x0000)
struct B_ProgressionManager_C_GrantPrestigeLevelUpLocal final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxExpPrestige_MaxExp;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrestigeLevelUpLocal_IsPrestigeLevelUp; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal) == 0x000004, "Wrong alignment on B_ProgressionManager_C_GrantPrestigeLevelUpLocal");
static_assert(sizeof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal) == 0x000014, "Wrong size on B_ProgressionManager_C_GrantPrestigeLevelUpLocal");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal, Temp_int_Variable) == 0x000000, "Member 'B_ProgressionManager_C_GrantPrestigeLevelUpLocal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal, CallFunc_GetMaxExpPrestige_MaxExp) == 0x000004, "Member 'B_ProgressionManager_C_GrantPrestigeLevelUpLocal::CallFunc_GetMaxExpPrestige_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_GrantPrestigeLevelUpLocal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'B_ProgressionManager_C_GrantPrestigeLevelUpLocal::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_GrantPrestigeLevelUpLocal, CallFunc_IsPrestigeLevelUpLocal_IsPrestigeLevelUp) == 0x000010, "Member 'B_ProgressionManager_C_GrantPrestigeLevelUpLocal::CallFunc_IsPrestigeLevelUpLocal_IsPrestigeLevelUp' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.IncrementRoundsPlayed
// 0x0020 (0x0020 - 0x0000)
struct B_ProgressionManager_C_IncrementRoundsPlayed final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRoundsPlayed_RoundsPlayed;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStat_Result;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_IncrementRoundsPlayed) == 0x000008, "Wrong alignment on B_ProgressionManager_C_IncrementRoundsPlayed");
static_assert(sizeof(B_ProgressionManager_C_IncrementRoundsPlayed) == 0x000020, "Wrong size on B_ProgressionManager_C_IncrementRoundsPlayed");
static_assert(offsetof(B_ProgressionManager_C_IncrementRoundsPlayed, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000000, "Member 'B_ProgressionManager_C_IncrementRoundsPlayed::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IncrementRoundsPlayed, CallFunc_GetRoundsPlayed_RoundsPlayed) == 0x000008, "Member 'B_ProgressionManager_C_IncrementRoundsPlayed::CallFunc_GetRoundsPlayed_RoundsPlayed' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IncrementRoundsPlayed, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_ProgressionManager_C_IncrementRoundsPlayed::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IncrementRoundsPlayed, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_IncrementRoundsPlayed::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IncrementRoundsPlayed, CallFunc_SetStat_Result) == 0x000018, "Member 'B_ProgressionManager_C_IncrementRoundsPlayed::CallFunc_SetStat_Result' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct B_ProgressionManager_C_Initialize final
{
public:
	class UGameInstance*                          InGameInstance;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_Initialize) == 0x000008, "Wrong alignment on B_ProgressionManager_C_Initialize");
static_assert(sizeof(B_ProgressionManager_C_Initialize) == 0x000008, "Wrong size on B_ProgressionManager_C_Initialize");
static_assert(offsetof(B_ProgressionManager_C_Initialize, InGameInstance) == 0x000000, "Member 'B_ProgressionManager_C_Initialize::InGameInstance' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.IsPendingLevelUp
// 0x0014 (0x0014 - 0x0000)
struct B_ProgressionManager_C_IsPendingLevelUp final
{
public:
	bool                                          PendingLevelUp;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxExp_MaxExp;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetExp_Exp;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_IsPendingLevelUp) == 0x000004, "Wrong alignment on B_ProgressionManager_C_IsPendingLevelUp");
static_assert(sizeof(B_ProgressionManager_C_IsPendingLevelUp) == 0x000014, "Wrong size on B_ProgressionManager_C_IsPendingLevelUp");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, PendingLevelUp) == 0x000000, "Member 'B_ProgressionManager_C_IsPendingLevelUp::PendingLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, CallFunc_GetMaxExp_MaxExp) == 0x000004, "Member 'B_ProgressionManager_C_IsPendingLevelUp::CallFunc_GetMaxExp_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, CallFunc_Less_IntInt_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_IsPendingLevelUp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, CallFunc_GetExp_Exp) == 0x00000C, "Member 'B_ProgressionManager_C_IsPendingLevelUp::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'B_ProgressionManager_C_IsPendingLevelUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUp, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'B_ProgressionManager_C_IsPendingLevelUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.IsPendingLevelUpLocal
// 0x000C (0x000C - 0x0000)
struct B_ProgressionManager_C_IsPendingLevelUpLocal final
{
public:
	bool                                          PendingLevelUp;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxExpLocal_MaxExp;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_IsPendingLevelUpLocal) == 0x000004, "Wrong alignment on B_ProgressionManager_C_IsPendingLevelUpLocal");
static_assert(sizeof(B_ProgressionManager_C_IsPendingLevelUpLocal) == 0x00000C, "Wrong size on B_ProgressionManager_C_IsPendingLevelUpLocal");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUpLocal, PendingLevelUp) == 0x000000, "Member 'B_ProgressionManager_C_IsPendingLevelUpLocal::PendingLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUpLocal, CallFunc_GetMaxExpLocal_MaxExp) == 0x000004, "Member 'B_ProgressionManager_C_IsPendingLevelUpLocal::CallFunc_GetMaxExpLocal_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPendingLevelUpLocal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_IsPendingLevelUpLocal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.IsPrestigeLevelUpLocal
// 0x000C (0x000C - 0x0000)
struct B_ProgressionManager_C_IsPrestigeLevelUpLocal final
{
public:
	bool                                          IsPrestigeLevelUp;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxExpPrestige_MaxExp;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_IsPrestigeLevelUpLocal) == 0x000004, "Wrong alignment on B_ProgressionManager_C_IsPrestigeLevelUpLocal");
static_assert(sizeof(B_ProgressionManager_C_IsPrestigeLevelUpLocal) == 0x00000C, "Wrong size on B_ProgressionManager_C_IsPrestigeLevelUpLocal");
static_assert(offsetof(B_ProgressionManager_C_IsPrestigeLevelUpLocal, IsPrestigeLevelUp) == 0x000000, "Member 'B_ProgressionManager_C_IsPrestigeLevelUpLocal::IsPrestigeLevelUp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPrestigeLevelUpLocal, CallFunc_GetMaxExpPrestige_MaxExp) == 0x000004, "Member 'B_ProgressionManager_C_IsPrestigeLevelUpLocal::CallFunc_GetMaxExpPrestige_MaxExp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_IsPrestigeLevelUpLocal, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'B_ProgressionManager_C_IsPrestigeLevelUpLocal::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.RefreshLocalProgress
// 0x0008 (0x0008 - 0x0000)
struct B_ProgressionManager_C_RefreshLocalProgress final
{
public:
	int32                                         CallFunc_GetExp_Exp;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_Level;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_RefreshLocalProgress) == 0x000004, "Wrong alignment on B_ProgressionManager_C_RefreshLocalProgress");
static_assert(sizeof(B_ProgressionManager_C_RefreshLocalProgress) == 0x000008, "Wrong size on B_ProgressionManager_C_RefreshLocalProgress");
static_assert(offsetof(B_ProgressionManager_C_RefreshLocalProgress, CallFunc_GetExp_Exp) == 0x000000, "Member 'B_ProgressionManager_C_RefreshLocalProgress::CallFunc_GetExp_Exp' has a wrong offset!");
static_assert(offsetof(B_ProgressionManager_C_RefreshLocalProgress, CallFunc_GetLevel_Level) == 0x000004, "Member 'B_ProgressionManager_C_RefreshLocalProgress::CallFunc_GetLevel_Level' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.ResetAllExpAndLevel
// 0x0008 (0x0008 - 0x0000)
struct B_ProgressionManager_C_ResetAllExpAndLevel final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    CallFunc_GetStatsAndAchievementsManager_Result;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_ResetAllExpAndLevel) == 0x000008, "Wrong alignment on B_ProgressionManager_C_ResetAllExpAndLevel");
static_assert(sizeof(B_ProgressionManager_C_ResetAllExpAndLevel) == 0x000008, "Wrong size on B_ProgressionManager_C_ResetAllExpAndLevel");
static_assert(offsetof(B_ProgressionManager_C_ResetAllExpAndLevel, CallFunc_GetStatsAndAchievementsManager_Result) == 0x000000, "Member 'B_ProgressionManager_C_ResetAllExpAndLevel::CallFunc_GetStatsAndAchievementsManager_Result' has a wrong offset!");

// Function B_ProgressionManager.B_ProgressionManager_C.GetStatsAndAchievementsManager
// 0x0008 (0x0008 - 0x0000)
struct B_ProgressionManager_C_GetStatsAndAchievementsManager final
{
public:
	class UB_NewStatsAndAchievementsManager_C*    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ProgressionManager_C_GetStatsAndAchievementsManager) == 0x000008, "Wrong alignment on B_ProgressionManager_C_GetStatsAndAchievementsManager");
static_assert(sizeof(B_ProgressionManager_C_GetStatsAndAchievementsManager) == 0x000008, "Wrong size on B_ProgressionManager_C_GetStatsAndAchievementsManager");
static_assert(offsetof(B_ProgressionManager_C_GetStatsAndAchievementsManager, Result) == 0x000000, "Member 'B_ProgressionManager_C_GetStatsAndAchievementsManager::Result' has a wrong offset!");

}

