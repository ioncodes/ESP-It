#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_AnnouncerSystem

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.CheckForLastWitch
// 0x0088 (0x0088 - 0x0000)
struct B_AnnouncerSystem_C_CheckForLastWitch final
{
public:
	class AB_PlayerState_C*                       LastWitch0;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         WitchCount;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D94[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D95[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D96[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameState_C*                     K2Node_DynamicCast_AsB_Seek_Game_State;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D97[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D98[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_CheckForLastWitch) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_CheckForLastWitch");
static_assert(sizeof(B_AnnouncerSystem_C_CheckForLastWitch) == 0x000088, "Wrong size on B_AnnouncerSystem_C_CheckForLastWitch");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, LastWitch0) == 0x000000, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::LastWitch0' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, WitchCount) == 0x000008, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::WitchCount' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, Temp_int_Variable) == 0x00000C, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_GetPlayerOrBotName_Name) == 0x000030, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_AsB_Seek_Game_State) == 0x000058, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_AsB_Seek_Game_State' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000062, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, Temp_int_Array_Index_Variable) == 0x000064, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_AsB_Player_State) == 0x000070, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_CheckForLastWitch, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000080, "Member 'B_AnnouncerSystem_C_CheckForLastWitch::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.AreKillsInTimeRange
// 0x0038 (0x0038 - 0x0000)
struct B_AnnouncerSystem_C_AreKillsInTimeRange final
{
public:
	struct FDateTime                              CurrentKill;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              PreviousKill;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D99[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_Subtract_DateTimeDateTime_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTotalSeconds_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FFloor_A_ImplicitCast;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_AreKillsInTimeRange) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_AreKillsInTimeRange");
static_assert(sizeof(B_AnnouncerSystem_C_AreKillsInTimeRange) == 0x000038, "Wrong size on B_AnnouncerSystem_C_AreKillsInTimeRange");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CurrentKill) == 0x000000, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CurrentKill' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, PreviousKill) == 0x000008, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::PreviousKill' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, ReturnValue) == 0x000010, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CallFunc_Subtract_DateTimeDateTime_ReturnValue) == 0x000018, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CallFunc_Subtract_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CallFunc_GetTotalSeconds_ReturnValue) == 0x000020, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CallFunc_GetTotalSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CallFunc_FFloor_ReturnValue) == 0x000024, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_AreKillsInTimeRange, CallFunc_FFloor_A_ImplicitCast) == 0x000030, "Member 'B_AnnouncerSystem_C_AreKillsInTimeRange::CallFunc_FFloor_A_ImplicitCast' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.RegisterKillAndCheckForMultiKill
// 0x00E0 (0x00E0 - 0x0000)
struct B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill final
{
public:
	class AB_PlayerState_C*                       Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       LocalKiller;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CurrentTimestamp;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Magnitude;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDateTime>                      TimeStamps;                                        // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9D[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9E[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreKillsInTimeRange_ReturnValue;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9F[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A0(0x0018)()
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA0[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill");
static_assert(sizeof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill) == 0x0000E0, "Wrong size on B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Killer) == 0x000000, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Killer' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, LocalKiller) == 0x000008, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::LocalKiller' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CurrentTimestamp) == 0x000010, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CurrentTimestamp' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Magnitude) == 0x000018, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Magnitude' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, TimeStamps) == 0x000020, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::TimeStamps' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000038, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Temp_bool_True_if_break_was_hit_Variable) == 0x00003D, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_GetPlayerOrBotName_Name) == 0x000048, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, K2Node_DynamicCast_AsB_Game_State) == 0x000058, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Temp_int_Variable) == 0x000080, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_InRange_IntInt_ReturnValue) == 0x000084, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Array_Get_Item) == 0x000090, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000098, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_AreKillsInTimeRange_ReturnValue) == 0x000099, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_AreKillsInTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, Temp_int_Variable_1) == 0x00009C, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A0, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_UtcNow_ReturnValue) == 0x0000C0, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000D8, "Member 'B_AnnouncerSystem_C_RegisterKillAndCheckForMultiKill::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.SERVER_OnKill
// 0x0008 (0x0008 - 0x0000)
struct B_AnnouncerSystem_C_SERVER_OnKill final
{
public:
	class AB_PlayerState_C*                       Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_SERVER_OnKill) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_SERVER_OnKill");
static_assert(sizeof(B_AnnouncerSystem_C_SERVER_OnKill) == 0x000008, "Wrong size on B_AnnouncerSystem_C_SERVER_OnKill");
static_assert(offsetof(B_AnnouncerSystem_C_SERVER_OnKill, Killer) == 0x000000, "Member 'B_AnnouncerSystem_C_SERVER_OnKill::Killer' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.SERVER_OnWitchHooked
// 0x0010 (0x0010 - 0x0000)
struct B_AnnouncerSystem_C_SERVER_OnWitchHooked final
{
public:
	class FString                                 Hooker;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_SERVER_OnWitchHooked) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_SERVER_OnWitchHooked");
static_assert(sizeof(B_AnnouncerSystem_C_SERVER_OnWitchHooked) == 0x000010, "Wrong size on B_AnnouncerSystem_C_SERVER_OnWitchHooked");
static_assert(offsetof(B_AnnouncerSystem_C_SERVER_OnWitchHooked, Hooker) == 0x000000, "Member 'B_AnnouncerSystem_C_SERVER_OnWitchHooked::Hooker' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.MULTI_OnLastWitch
// 0x0010 (0x0010 - 0x0000)
struct B_AnnouncerSystem_C_MULTI_OnLastWitch final
{
public:
	class FString                                 LastWitchName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_MULTI_OnLastWitch) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_MULTI_OnLastWitch");
static_assert(sizeof(B_AnnouncerSystem_C_MULTI_OnLastWitch) == 0x000010, "Wrong size on B_AnnouncerSystem_C_MULTI_OnLastWitch");
static_assert(offsetof(B_AnnouncerSystem_C_MULTI_OnLastWitch, LastWitchName) == 0x000000, "Member 'B_AnnouncerSystem_C_MULTI_OnLastWitch::LastWitchName' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.OnLastWitch__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct B_AnnouncerSystem_C_OnLastWitch__DelegateSignature final
{
public:
	class FString                                 LastWitchName;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_OnLastWitch__DelegateSignature) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_OnLastWitch__DelegateSignature");
static_assert(sizeof(B_AnnouncerSystem_C_OnLastWitch__DelegateSignature) == 0x000010, "Wrong size on B_AnnouncerSystem_C_OnLastWitch__DelegateSignature");
static_assert(offsetof(B_AnnouncerSystem_C_OnLastWitch__DelegateSignature, LastWitchName) == 0x000000, "Member 'B_AnnouncerSystem_C_OnLastWitch__DelegateSignature::LastWitchName' has a wrong offset!");

// Function B_AnnouncerSystem.B_AnnouncerSystem_C.ExecuteUbergraph_B_AnnouncerSystem
// 0x00A8 (0x00A8 - 0x0000)
struct B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_CustomEvent_Killer;                         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Hooker;                         // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA5[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const class FString& LastWitchName)> K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA6[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_LastWitchName;                  // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem) == 0x000008, "Wrong alignment on B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem");
static_assert(sizeof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem) == 0x0000A8, "Wrong size on B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, EntryPoint) == 0x000000, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_CustomEvent_Killer) == 0x000008, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_AsWB_HUD) == 0x000030, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_AsWB_HUD' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_CustomEvent_Hooker) == 0x000040, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_CustomEvent_Hooker' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_GetGameState_ReturnValue) == 0x000050, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_AsB_Game_State) == 0x000070, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, K2Node_CustomEvent_LastWitchName) == 0x000090, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::K2Node_CustomEvent_LastWitchName' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000A0, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'B_AnnouncerSystem_C_ExecuteUbergraph_B_AnnouncerSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

