#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerScore

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_PlayerScore.WB_PlayerScore_C.ExecuteUbergraph_WB_PlayerScore
// 0x0004 (0x0004 - 0x0000)
struct WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore) == 0x000004, "Wrong alignment on WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore");
static_assert(sizeof(WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore) == 0x000004, "Wrong size on WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore");
static_assert(offsetof(WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore, EntryPoint) == 0x000000, "Member 'WB_PlayerScore_C_ExecuteUbergraph_WB_PlayerScore::EntryPoint' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_1StPlace_Visibility_0
// 0x0004 (0x0004 - 0x0000)
struct WB_PlayerScore_C_Get_1StPlace_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScore_C_Get_1StPlace_Visibility_0) == 0x000001, "Wrong alignment on WB_PlayerScore_C_Get_1StPlace_Visibility_0");
static_assert(sizeof(WB_PlayerScore_C_Get_1StPlace_Visibility_0) == 0x000004, "Wrong size on WB_PlayerScore_C_Get_1StPlace_Visibility_0");
static_assert(offsetof(WB_PlayerScore_C_Get_1StPlace_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_1StPlace_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_1StPlace_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WB_PlayerScore_C_Get_1StPlace_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_1StPlace_Visibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000002, "Member 'WB_PlayerScore_C_Get_1StPlace_Visibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_1StPlace_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WB_PlayerScore_C_Get_1StPlace_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_Name_Text_0
// 0x0030 (0x0030 - 0x0000)
struct WB_PlayerScore_C_Get_Name_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0018(0x0018)()
};
static_assert(alignof(WB_PlayerScore_C_Get_Name_Text_0) == 0x000008, "Wrong alignment on WB_PlayerScore_C_Get_Name_Text_0");
static_assert(sizeof(WB_PlayerScore_C_Get_Name_Text_0) == 0x000030, "Wrong size on WB_PlayerScore_C_Get_Name_Text_0");
static_assert(offsetof(WB_PlayerScore_C_Get_Name_Text_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_Name_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_Name_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000018, "Member 'WB_PlayerScore_C_Get_Name_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_PlaceText_Text_0
// 0x0038 (0x0038 - 0x0000)
struct WB_PlayerScore_C_Get_PlaceText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(WB_PlayerScore_C_Get_PlaceText_Text_0) == 0x000008, "Wrong alignment on WB_PlayerScore_C_Get_PlaceText_Text_0");
static_assert(sizeof(WB_PlayerScore_C_Get_PlaceText_Text_0) == 0x000038, "Wrong size on WB_PlayerScore_C_Get_PlaceText_Text_0");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Text_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_PlaceText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Text_0, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_PlayerScore_C_Get_PlaceText_Text_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WB_PlayerScore_C_Get_PlaceText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_PlaceText_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_PlayerScore_C_Get_PlaceText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScore_C_Get_PlaceText_Visibility_0) == 0x000001, "Wrong alignment on WB_PlayerScore_C_Get_PlaceText_Visibility_0");
static_assert(sizeof(WB_PlayerScore_C_Get_PlaceText_Visibility_0) == 0x000006, "Wrong size on WB_PlayerScore_C_Get_PlaceText_Visibility_0");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_PlaceText_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_PlayerScore_C_Get_PlaceText_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_ScoreText_Text_0
// 0x0030 (0x0030 - 0x0000)
struct WB_PlayerScore_C_Get_ScoreText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WB_PlayerScore_C_Get_ScoreText_Text_0) == 0x000008, "Wrong alignment on WB_PlayerScore_C_Get_ScoreText_Text_0");
static_assert(sizeof(WB_PlayerScore_C_Get_ScoreText_Text_0) == 0x000030, "Wrong size on WB_PlayerScore_C_Get_ScoreText_Text_0");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Text_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_ScoreText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WB_PlayerScore_C_Get_ScoreText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Get_ScoreText_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_PlayerScore_C_Get_ScoreText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScore_C_Get_ScoreText_Visibility_0) == 0x000001, "Wrong alignment on WB_PlayerScore_C_Get_ScoreText_Visibility_0");
static_assert(sizeof(WB_PlayerScore_C_Get_ScoreText_Visibility_0) == 0x000006, "Wrong size on WB_PlayerScore_C_Get_ScoreText_Visibility_0");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Get_ScoreText_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_PlayerScore_C_Get_ScoreText_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_PlayerScore.WB_PlayerScore_C.Update
// 0x0020 (0x0020 - 0x0000)
struct WB_PlayerScore_C_Update final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36DD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       CallFunc_GetPlayerStateById_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_PlayerScore_C_Update) == 0x000008, "Wrong alignment on WB_PlayerScore_C_Update");
static_assert(sizeof(WB_PlayerScore_C_Update) == 0x000020, "Wrong size on WB_PlayerScore_C_Update");
static_assert(offsetof(WB_PlayerScore_C_Update, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'WB_PlayerScore_C_Update::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Update, K2Node_DynamicCast_AsB_Game_State) == 0x000008, "Member 'WB_PlayerScore_C_Update::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Update, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_PlayerScore_C_Update::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_PlayerScore_C_Update, CallFunc_GetPlayerStateById_ReturnValue) == 0x000018, "Member 'WB_PlayerScore_C_Update::CallFunc_GetPlayerStateById_ReturnValue' has a wrong offset!");

}

