#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_BaseButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "WB_BaseControl_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_BaseButton.WB_BaseButton_C
// 0x0458 (0x0750 - 0x02F8)
#pragma pack(push, 0x1)
class alignas(0x10) UWB_BaseButton_C : public UWB_BaseControl_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ButtonRef;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UTextBlock*>                     LabelRefs;                                         // 0x0308(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UTextBlock*                             LabelRef;                                          // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FButtonStyle                           ButtonStyle;                                       // 0x0320(0x03F0)(Edit, BlueprintVisible)
	class FText                                   LabelText;                                         // 0x0710(0x0010)(Edit, BlueprintVisible)
	struct FSlateColor                            LabelTextColor;                                    // 0x0720(0x0014)(Edit, BlueprintVisible)
	struct FSlateColor                            LabelTextColorFocused;                             // 0x0734(0x0014)(Edit, BlueprintVisible)

public:
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	bool HasFocusInGamePadMode();
	void ExecuteUbergraph_WB_BaseButton(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_BaseButton_C">();
	}
	static class UWB_BaseButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_BaseButton_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UWB_BaseButton_C) == 0x000010, "Wrong alignment on UWB_BaseButton_C");
static_assert(sizeof(UWB_BaseButton_C) == 0x000750, "Wrong size on UWB_BaseButton_C");
static_assert(offsetof(UWB_BaseButton_C, UberGraphFrame) == 0x0002F8, "Member 'UWB_BaseButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, ButtonRef) == 0x000300, "Member 'UWB_BaseButton_C::ButtonRef' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, LabelRefs) == 0x000308, "Member 'UWB_BaseButton_C::LabelRefs' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, LabelRef) == 0x000318, "Member 'UWB_BaseButton_C::LabelRef' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, ButtonStyle) == 0x000320, "Member 'UWB_BaseButton_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, LabelText) == 0x000710, "Member 'UWB_BaseButton_C::LabelText' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, LabelTextColor) == 0x000720, "Member 'UWB_BaseButton_C::LabelTextColor' has a wrong offset!");
static_assert(offsetof(UWB_BaseButton_C, LabelTextColorFocused) == 0x000734, "Member 'UWB_BaseButton_C::LabelTextColorFocused' has a wrong offset!");

}

