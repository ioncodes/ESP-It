#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PlayerState

#include "Basic.hpp"

#include "SSelectedSkills_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ESkillCategory_structs.hpp"
#include "SClientItemUnlock_structs.hpp"
#include "Engine_structs.hpp"
#include "AdvancedSessions_structs.hpp"
#include "SGrantedItem_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function B_PlayerState.B_PlayerState_C.GetHunterMovementSkill
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_GetHunterMovementSkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2963[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetHunterMovementSkill) == 0x000008, "Wrong alignment on B_PlayerState_C_GetHunterMovementSkill");
static_assert(sizeof(B_PlayerState_C_GetHunterMovementSkill) == 0x000018, "Wrong size on B_PlayerState_C_GetHunterMovementSkill");
static_assert(offsetof(B_PlayerState_C_GetHunterMovementSkill, ReturnValue) == 0x000000, "Member 'B_PlayerState_C_GetHunterMovementSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterMovementSkill, Temp_bool_Variable) == 0x000008, "Member 'B_PlayerState_C_GetHunterMovementSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterMovementSkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000009, "Member 'B_PlayerState_C_GetHunterMovementSkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterMovementSkill, K2Node_Select_Default) == 0x000010, "Member 'B_PlayerState_C_GetHunterMovementSkill::K2Node_Select_Default' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetHunterUtilitySkill
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_GetHunterUtilitySkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2964[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetHunterUtilitySkill) == 0x000008, "Wrong alignment on B_PlayerState_C_GetHunterUtilitySkill");
static_assert(sizeof(B_PlayerState_C_GetHunterUtilitySkill) == 0x000018, "Wrong size on B_PlayerState_C_GetHunterUtilitySkill");
static_assert(offsetof(B_PlayerState_C_GetHunterUtilitySkill, ReturnValue) == 0x000000, "Member 'B_PlayerState_C_GetHunterUtilitySkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterUtilitySkill, Temp_bool_Variable) == 0x000008, "Member 'B_PlayerState_C_GetHunterUtilitySkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterUtilitySkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000009, "Member 'B_PlayerState_C_GetHunterUtilitySkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetHunterUtilitySkill, K2Node_Select_Default) == 0x000010, "Member 'B_PlayerState_C_GetHunterUtilitySkill::K2Node_Select_Default' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetWitchMovementSkill
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_GetWitchMovementSkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2965[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetWitchMovementSkill) == 0x000008, "Wrong alignment on B_PlayerState_C_GetWitchMovementSkill");
static_assert(sizeof(B_PlayerState_C_GetWitchMovementSkill) == 0x000018, "Wrong size on B_PlayerState_C_GetWitchMovementSkill");
static_assert(offsetof(B_PlayerState_C_GetWitchMovementSkill, ReturnValue) == 0x000000, "Member 'B_PlayerState_C_GetWitchMovementSkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchMovementSkill, Temp_bool_Variable) == 0x000008, "Member 'B_PlayerState_C_GetWitchMovementSkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchMovementSkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000009, "Member 'B_PlayerState_C_GetWitchMovementSkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchMovementSkill, K2Node_Select_Default) == 0x000010, "Member 'B_PlayerState_C_GetWitchMovementSkill::K2Node_Select_Default' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetWitchUtilitySkill
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_GetWitchUtilitySkill final
{
public:
	class UClass*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2966[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetWitchUtilitySkill) == 0x000008, "Wrong alignment on B_PlayerState_C_GetWitchUtilitySkill");
static_assert(sizeof(B_PlayerState_C_GetWitchUtilitySkill) == 0x000018, "Wrong size on B_PlayerState_C_GetWitchUtilitySkill");
static_assert(offsetof(B_PlayerState_C_GetWitchUtilitySkill, ReturnValue) == 0x000000, "Member 'B_PlayerState_C_GetWitchUtilitySkill::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchUtilitySkill, Temp_bool_Variable) == 0x000008, "Member 'B_PlayerState_C_GetWitchUtilitySkill::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchUtilitySkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000009, "Member 'B_PlayerState_C_GetWitchUtilitySkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetWitchUtilitySkill, K2Node_Select_Default) == 0x000010, "Member 'B_PlayerState_C_GetWitchUtilitySkill::K2Node_Select_Default' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetHunterMovementSkill
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_SetHunterMovementSkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetHunterMovementSkill) == 0x000008, "Wrong alignment on B_PlayerState_C_SetHunterMovementSkill");
static_assert(sizeof(B_PlayerState_C_SetHunterMovementSkill) == 0x000010, "Wrong size on B_PlayerState_C_SetHunterMovementSkill");
static_assert(offsetof(B_PlayerState_C_SetHunterMovementSkill, Skill) == 0x000000, "Member 'B_PlayerState_C_SetHunterMovementSkill::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetHunterMovementSkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_SetHunterMovementSkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetHunterUtilitySkill
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_SetHunterUtilitySkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetHunterUtilitySkill) == 0x000008, "Wrong alignment on B_PlayerState_C_SetHunterUtilitySkill");
static_assert(sizeof(B_PlayerState_C_SetHunterUtilitySkill) == 0x000010, "Wrong size on B_PlayerState_C_SetHunterUtilitySkill");
static_assert(offsetof(B_PlayerState_C_SetHunterUtilitySkill, Skill) == 0x000000, "Member 'B_PlayerState_C_SetHunterUtilitySkill::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetHunterUtilitySkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_SetHunterUtilitySkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetWitchMovementSkill
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_SetWitchMovementSkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetWitchMovementSkill) == 0x000008, "Wrong alignment on B_PlayerState_C_SetWitchMovementSkill");
static_assert(sizeof(B_PlayerState_C_SetWitchMovementSkill) == 0x000010, "Wrong size on B_PlayerState_C_SetWitchMovementSkill");
static_assert(offsetof(B_PlayerState_C_SetWitchMovementSkill, Skill) == 0x000000, "Member 'B_PlayerState_C_SetWitchMovementSkill::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetWitchMovementSkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_SetWitchMovementSkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetWitchUtilitySkill
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_SetWitchUtilitySkill final
{
public:
	class UClass*                                 Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveGameMode_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetWitchUtilitySkill) == 0x000008, "Wrong alignment on B_PlayerState_C_SetWitchUtilitySkill");
static_assert(sizeof(B_PlayerState_C_SetWitchUtilitySkill) == 0x000010, "Wrong size on B_PlayerState_C_SetWitchUtilitySkill");
static_assert(offsetof(B_PlayerState_C_SetWitchUtilitySkill, Skill) == 0x000000, "Member 'B_PlayerState_C_SetWitchUtilitySkill::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetWitchUtilitySkill, CallFunc_IsObjectiveGameMode_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_SetWitchUtilitySkill::CallFunc_IsObjectiveGameMode_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.OnRep_PlayerIconAssetId
// 0x0040 (0x0040 - 0x0000)
struct B_PlayerState_C_OnRep_PlayerIconAssetId final
{
public:
	TSoftClassPtr<class UClass>                   CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue; // 0x0000(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsB_Skin_Icon_Base;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_OnRep_PlayerIconAssetId) == 0x000008, "Wrong alignment on B_PlayerState_C_OnRep_PlayerIconAssetId");
static_assert(sizeof(B_PlayerState_C_OnRep_PlayerIconAssetId) == 0x000040, "Wrong size on B_PlayerState_C_OnRep_PlayerIconAssetId");
static_assert(offsetof(B_PlayerState_C_OnRep_PlayerIconAssetId, CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_OnRep_PlayerIconAssetId::CallFunc_GetSoftClassReferenceFromPrimaryAssetId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_PlayerIconAssetId, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_OnRep_PlayerIconAssetId::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_PlayerIconAssetId, K2Node_ClassDynamicCast_AsB_Skin_Icon_Base) == 0x000030, "Member 'B_PlayerState_C_OnRep_PlayerIconAssetId::K2Node_ClassDynamicCast_AsB_Skin_Icon_Base' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_PlayerIconAssetId, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'B_PlayerState_C_OnRep_PlayerIconAssetId::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.HandleGrantedExtraItems
// 0x0080 (0x0080 - 0x0000)
struct B_PlayerState_C_HandleGrantedExtraItems final
{
public:
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSClientItemUnlock>             ClientItemUnlocks;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2967[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2968[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSClientItemUnlock                     CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSClientItemUnlock>             CallFunc_GetClientItemUnlocks_ClientItemUnlocks;   // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_HandleGrantedExtraItems) == 0x000008, "Wrong alignment on B_PlayerState_C_HandleGrantedExtraItems");
static_assert(sizeof(B_PlayerState_C_HandleGrantedExtraItems) == 0x000080, "Wrong size on B_PlayerState_C_HandleGrantedExtraItems");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, GrantedItems) == 0x000000, "Member 'B_PlayerState_C_HandleGrantedExtraItems::GrantedItems' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, ClientItemUnlocks) == 0x000010, "Member 'B_PlayerState_C_HandleGrantedExtraItems::ClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_PlayerState_C_HandleGrantedExtraItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_PlayerState_C_HandleGrantedExtraItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, K2Node_DynamicCast_AsB_Game_Instance) == 0x000038, "Member 'B_PlayerState_C_HandleGrantedExtraItems::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_PlayerState_C_HandleGrantedExtraItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_GetClientItemUnlocks_ClientItemUnlocks) == 0x000060, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_GetClientItemUnlocks_ClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedExtraItems, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'B_PlayerState_C_HandleGrantedExtraItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.IsLocalReady
// 0x0001 (0x0001 - 0x0000)
struct B_PlayerState_C_IsLocalReady final
{
public:
	bool                                          Param_IsLocalReady;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_IsLocalReady) == 0x000001, "Wrong alignment on B_PlayerState_C_IsLocalReady");
static_assert(sizeof(B_PlayerState_C_IsLocalReady) == 0x000001, "Wrong size on B_PlayerState_C_IsLocalReady");
static_assert(offsetof(B_PlayerState_C_IsLocalReady, Param_IsLocalReady) == 0x000000, "Member 'B_PlayerState_C_IsLocalReady::Param_IsLocalReady' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.HandleIsReady
// 0x0058 (0x0058 - 0x0000)
struct B_PlayerState_C_HandleIsReady final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2969[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_SeekGameMode_C*                      K2Node_DynamicCast_AsB_Seek_Game_Mode;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsABot_ReturnValue;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296B[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_HandleIsReady) == 0x000008, "Wrong alignment on B_PlayerState_C_HandleIsReady");
static_assert(sizeof(B_PlayerState_C_HandleIsReady) == 0x000058, "Wrong size on B_PlayerState_C_HandleIsReady");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_AsB_Game_State) == 0x000008, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000011, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_AsB_Seek_Game_Mode) == 0x000028, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_AsB_Seek_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_IsABot_ReturnValue) == 0x000031, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_IsABot_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_GetGameMode_ReturnValue_1) == 0x000038, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'B_PlayerState_C_HandleIsReady::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_AsB_Game_Mode) == 0x000048, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleIsReady, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_PlayerState_C_HandleIsReady::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.IsObjectiveGameMode
// 0x0020 (0x0020 - 0x0000)
struct B_PlayerState_C_IsObjectiveGameMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_IsObjectiveGameMode) == 0x000008, "Wrong alignment on B_PlayerState_C_IsObjectiveGameMode");
static_assert(sizeof(B_PlayerState_C_IsObjectiveGameMode) == 0x000020, "Wrong size on B_PlayerState_C_IsObjectiveGameMode");
static_assert(offsetof(B_PlayerState_C_IsObjectiveGameMode, ReturnValue) == 0x000000, "Member 'B_PlayerState_C_IsObjectiveGameMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsObjectiveGameMode, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_IsObjectiveGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsObjectiveGameMode, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'B_PlayerState_C_IsObjectiveGameMode::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsObjectiveGameMode, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_IsObjectiveGameMode::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetSelectedSkillForTeam
// 0x0048 (0x0048 - 0x0000)
struct B_PlayerState_C_GetSelectedSkillForTeam final
{
public:
	ETeamID                                       Param_Team;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESkillCategory                                SkillCategory;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Skill;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bPlayingObjective;                                 // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_296F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWitchUtilitySkill_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2970[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWitchMovementSkill_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetHunterMovementSkill_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetHunterUtilitySkill_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetSelectedSkillForTeam) == 0x000008, "Wrong alignment on B_PlayerState_C_GetSelectedSkillForTeam");
static_assert(sizeof(B_PlayerState_C_GetSelectedSkillForTeam) == 0x000048, "Wrong size on B_PlayerState_C_GetSelectedSkillForTeam");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, Param_Team) == 0x000000, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::Param_Team' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, SkillCategory) == 0x000001, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::SkillCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, Skill) == 0x000008, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, bPlayingObjective) == 0x000010, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::bPlayingObjective' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, CallFunc_GetWitchUtilitySkill_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::CallFunc_GetWitchUtilitySkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, CallFunc_GetWitchMovementSkill_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::CallFunc_GetWitchMovementSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, CallFunc_GetHunterMovementSkill_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::CallFunc_GetHunterMovementSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, CallFunc_GetHunterUtilitySkill_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::CallFunc_GetHunterUtilitySkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, K2Node_SwitchEnum_CmpSuccess_1) == 0x000040, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkillForTeam, K2Node_SwitchEnum_CmpSuccess_2) == 0x000041, "Member 'B_PlayerState_C_GetSelectedSkillForTeam::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.HandleGrantXP
// 0x0098 (0x0098 - 0x0000)
struct B_PlayerState_C_HandleGrantXP final
{
public:
	int32                                         Param_TotalXP;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeXP;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_WinBonusXP;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CatchXP;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_LastWitchXP;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2971[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2972[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2973[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2974[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLevel_Level;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2975[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2976[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GrantExp_LevelUps;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_HandleGrantXP) == 0x000008, "Wrong alignment on B_PlayerState_C_HandleGrantXP");
static_assert(sizeof(B_PlayerState_C_HandleGrantXP) == 0x000098, "Wrong size on B_PlayerState_C_HandleGrantXP");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, Param_TotalXP) == 0x000000, "Member 'B_PlayerState_C_HandleGrantXP::Param_TotalXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, TimeXP) == 0x000004, "Member 'B_PlayerState_C_HandleGrantXP::TimeXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, Param_WinBonusXP) == 0x000008, "Member 'B_PlayerState_C_HandleGrantXP::Param_WinBonusXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, Param_CatchXP) == 0x00000C, "Member 'B_PlayerState_C_HandleGrantXP::Param_CatchXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, Param_LastWitchXP) == 0x000010, "Member 'B_PlayerState_C_HandleGrantXP::Param_LastWitchXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_AsB_Game_Instance) == 0x000038, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetGameInstance_ReturnValue_1) == 0x000048, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000050, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetLevel_Level) == 0x00005C, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetLevel_Level' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetGameInstance_ReturnValue_2) == 0x000060, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000070, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GrantExp_LevelUps) == 0x00007C, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GrantExp_LevelUps' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, CallFunc_GetGameInstance_ReturnValue_3) == 0x000080, "Member 'B_PlayerState_C_HandleGrantXP::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000088, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantXP, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'B_PlayerState_C_HandleGrantXP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetFirstActiveBuff
// 0x0040 (0x0040 - 0x0000)
struct B_PlayerState_C_GetFirstActiveBuff final
{
public:
	class UClass*                                 Buff;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Buff_C*                              ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2977[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Buff_C*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2978[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetFirstActiveBuff) == 0x000008, "Wrong alignment on B_PlayerState_C_GetFirstActiveBuff");
static_assert(sizeof(B_PlayerState_C_GetFirstActiveBuff) == 0x000040, "Wrong size on B_PlayerState_C_GetFirstActiveBuff");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, Buff) == 0x000000, "Member 'B_PlayerState_C_GetFirstActiveBuff::Buff' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, ReturnValue) == 0x000008, "Member 'B_PlayerState_C_GetFirstActiveBuff::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_PlayerState_C_GetFirstActiveBuff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'B_PlayerState_C_GetFirstActiveBuff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetFirstActiveBuff, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_GetFirstActiveBuff::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.IsBuffAlreadyActive
// 0x0040 (0x0040 - 0x0000)
struct B_PlayerState_C_IsBuffAlreadyActive final
{
public:
	class UClass*                                 Buff;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2979[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297A[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Buff_C*                              CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_IsBuffAlreadyActive) == 0x000008, "Wrong alignment on B_PlayerState_C_IsBuffAlreadyActive");
static_assert(sizeof(B_PlayerState_C_IsBuffAlreadyActive) == 0x000040, "Wrong size on B_PlayerState_C_IsBuffAlreadyActive");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, Buff) == 0x000000, "Member 'B_PlayerState_C_IsBuffAlreadyActive::Buff' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, ReturnValue) == 0x000008, "Member 'B_PlayerState_C_IsBuffAlreadyActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'B_PlayerState_C_IsBuffAlreadyActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_PlayerState_C_IsBuffAlreadyActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_IsBuffAlreadyActive, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_IsBuffAlreadyActive::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.HandleGrantedCauldronItems
// 0x0080 (0x0080 - 0x0000)
struct B_PlayerState_C_HandleGrantedCauldronItems final
{
public:
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FSClientItemUnlock>             ClientItemUnlocks;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSClientItemUnlock                     CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSClientItemUnlock>             CallFunc_GetClientItemUnlocks_ClientItemUnlocks;   // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_HandleGrantedCauldronItems) == 0x000008, "Wrong alignment on B_PlayerState_C_HandleGrantedCauldronItems");
static_assert(sizeof(B_PlayerState_C_HandleGrantedCauldronItems) == 0x000080, "Wrong size on B_PlayerState_C_HandleGrantedCauldronItems");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, GrantedItems) == 0x000000, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::GrantedItems' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, ClientItemUnlocks) == 0x000010, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::ClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, K2Node_DynamicCast_AsB_Game_Instance) == 0x000038, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_GetClientItemUnlocks_ClientItemUnlocks) == 0x000060, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_GetClientItemUnlocks_ClientItemUnlocks' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_HandleGrantedCauldronItems, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'B_PlayerState_C_HandleGrantedCauldronItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.CheckServerStatsSaved
// 0x0030 (0x0030 - 0x0000)
struct B_PlayerState_C_CheckServerStatsSaved final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_CheckServerStatsSaved) == 0x000008, "Wrong alignment on B_PlayerState_C_CheckServerStatsSaved");
static_assert(sizeof(B_PlayerState_C_CheckServerStatsSaved) == 0x000030, "Wrong size on B_PlayerState_C_CheckServerStatsSaved");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_PlayerState_C_CheckServerStatsSaved::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_PlayerState_C_CheckServerStatsSaved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_CheckServerStatsSaved, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00002A, "Member 'B_PlayerState_C_CheckServerStatsSaved::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.Check Server Stats Initialization
// 0x0030 (0x0030 - 0x0000)
struct B_PlayerState_C_Check_Server_Stats_Initialization final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_Check_Server_Stats_Initialization) == 0x000008, "Wrong alignment on B_PlayerState_C_Check_Server_Stats_Initialization");
static_assert(sizeof(B_PlayerState_C_Check_Server_Stats_Initialization) == 0x000030, "Wrong size on B_PlayerState_C_Check_Server_Stats_Initialization");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_Check_Server_Stats_Initialization, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00002A, "Member 'B_PlayerState_C_Check_Server_Stats_Initialization::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.ProceedIdleKick
// 0x0090 (0x0090 - 0x0000)
struct B_PlayerState_C_ProceedIdleKick final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2980[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0018(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2981[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0068(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_ProceedIdleKick) == 0x000008, "Wrong alignment on B_PlayerState_C_ProceedIdleKick");
static_assert(sizeof(B_PlayerState_C_ProceedIdleKick) == 0x000090, "Wrong size on B_PlayerState_C_ProceedIdleKick");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, K2Node_MakeArray_Array) == 0x000008, "Member 'B_PlayerState_C_ProceedIdleKick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_Format_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, K2Node_DynamicCast_AsB_Game_Instance) == 0x000048, "Member 'B_PlayerState_C_ProceedIdleKick::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'B_PlayerState_C_ProceedIdleKick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, K2Node_MakeArray_Array_1) == 0x000058, "Member 'B_PlayerState_C_ProceedIdleKick::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_Format_ReturnValue_1) == 0x000068, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ProceedIdleKick, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000080, "Member 'B_PlayerState_C_ProceedIdleKick::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.OnRep_Team
// 0x0050 (0x0050 - 0x0000)
struct B_PlayerState_C_OnRep_Team final
{
public:
	TArray<class AB_BasePickup_C*>                AllPickups;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2982[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_BasePickup_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2983[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_BasePickup_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(B_PlayerState_C_OnRep_Team) == 0x000008, "Wrong alignment on B_PlayerState_C_OnRep_Team");
static_assert(sizeof(B_PlayerState_C_OnRep_Team) == 0x000050, "Wrong size on B_PlayerState_C_OnRep_Team");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, AllPickups) == 0x000000, "Member 'B_PlayerState_C_OnRep_Team::AllPickups' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_PlayerState_C_OnRep_Team::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'B_PlayerState_C_OnRep_Team::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003D, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_Team, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'B_PlayerState_C_OnRep_Team::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetSelectedSkill
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_GetSelectedSkill final
{
public:
	ESkillCategory                                SkillCategory;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2984[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Skill;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetSelectedSkillForTeam_Skill;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetSelectedSkill) == 0x000008, "Wrong alignment on B_PlayerState_C_GetSelectedSkill");
static_assert(sizeof(B_PlayerState_C_GetSelectedSkill) == 0x000018, "Wrong size on B_PlayerState_C_GetSelectedSkill");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkill, SkillCategory) == 0x000000, "Member 'B_PlayerState_C_GetSelectedSkill::SkillCategory' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkill, Skill) == 0x000008, "Member 'B_PlayerState_C_GetSelectedSkill::Skill' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetSelectedSkill, CallFunc_GetSelectedSkillForTeam_Skill) == 0x000010, "Member 'B_PlayerState_C_GetSelectedSkill::CallFunc_GetSelectedSkillForTeam_Skill' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.OnRep_SelectedTeam
// 0x0060 (0x0060 - 0x0000)
struct B_PlayerState_C_OnRep_SelectedTeam final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2985[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2986[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2987[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameMode_C*                          K2Node_DynamicCast_AsB_Game_Mode;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2988[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_OnRep_SelectedTeam) == 0x000008, "Wrong alignment on B_PlayerState_C_OnRep_SelectedTeam");
static_assert(sizeof(B_PlayerState_C_OnRep_SelectedTeam) == 0x000060, "Wrong size on B_PlayerState_C_OnRep_SelectedTeam");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000028, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000029, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_AsB_Game_Mode) == 0x000040, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_AsB_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_AsB_Game_Instance) == 0x000050, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'B_PlayerState_C_OnRep_SelectedTeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_BooleanOR_ReturnValue) == 0x000059, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnRep_SelectedTeam, CallFunc_BooleanOR_ReturnValue_1) == 0x00005A, "Member 'B_PlayerState_C_OnRep_SelectedTeam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.AddPropChecked
// 0x0018 (0x0018 - 0x0000)
struct B_PlayerState_C_AddPropChecked final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DamageType;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_AddPropChecked) == 0x000008, "Wrong alignment on B_PlayerState_C_AddPropChecked");
static_assert(sizeof(B_PlayerState_C_AddPropChecked) == 0x000018, "Wrong size on B_PlayerState_C_AddPropChecked");
static_assert(offsetof(B_PlayerState_C_AddPropChecked, Actor) == 0x000000, "Member 'B_PlayerState_C_AddPropChecked::Actor' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_AddPropChecked, Damage) == 0x000008, "Member 'B_PlayerState_C_AddPropChecked::Damage' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_AddPropChecked, DamageType) == 0x000010, "Member 'B_PlayerState_C_AddPropChecked::DamageType' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.AddPropCheckedOwningClient
// 0x0008 (0x0008 - 0x0000)
struct B_PlayerState_C_AddPropCheckedOwningClient final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_AddPropCheckedOwningClient) == 0x000008, "Wrong alignment on B_PlayerState_C_AddPropCheckedOwningClient");
static_assert(sizeof(B_PlayerState_C_AddPropCheckedOwningClient) == 0x000008, "Wrong size on B_PlayerState_C_AddPropCheckedOwningClient");
static_assert(offsetof(B_PlayerState_C_AddPropCheckedOwningClient, Actor) == 0x000000, "Member 'B_PlayerState_C_AddPropCheckedOwningClient::Actor' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GrantExp
// 0x0014 (0x0014 - 0x0000)
struct B_PlayerState_C_GrantExp final
{
public:
	int32                                         TotalAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeExp;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_WinBonusXP;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_CatchXP;                                     // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_LastWitchXP;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GrantExp) == 0x000004, "Wrong alignment on B_PlayerState_C_GrantExp");
static_assert(sizeof(B_PlayerState_C_GrantExp) == 0x000014, "Wrong size on B_PlayerState_C_GrantExp");
static_assert(offsetof(B_PlayerState_C_GrantExp, TotalAmount) == 0x000000, "Member 'B_PlayerState_C_GrantExp::TotalAmount' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GrantExp, TimeExp) == 0x000004, "Member 'B_PlayerState_C_GrantExp::TimeExp' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GrantExp, Param_WinBonusXP) == 0x000008, "Member 'B_PlayerState_C_GrantExp::Param_WinBonusXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GrantExp, Param_CatchXP) == 0x00000C, "Member 'B_PlayerState_C_GrantExp::Param_CatchXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GrantExp, Param_LastWitchXP) == 0x000010, "Member 'B_PlayerState_C_GrantExp::Param_LastWitchXP' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_PlayerState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_ReceiveTick) == 0x000004, "Wrong alignment on B_PlayerState_C_ReceiveTick");
static_assert(sizeof(B_PlayerState_C_ReceiveTick) == 0x000004, "Wrong size on B_PlayerState_C_ReceiveTick");
static_assert(offsetof(B_PlayerState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_PlayerState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.ReplicateIconAndLevel
// 0x0058 (0x0058 - 0x0000)
struct B_PlayerState_C_ReplicateIconAndLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_PrestigeLevel;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        SkinIcon;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       StandardSkills;                                    // 0x0018(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       ObjectiveSkills;                                   // 0x0038(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_ReplicateIconAndLevel) == 0x000008, "Wrong alignment on B_PlayerState_C_ReplicateIconAndLevel");
static_assert(sizeof(B_PlayerState_C_ReplicateIconAndLevel) == 0x000058, "Wrong size on B_PlayerState_C_ReplicateIconAndLevel");
static_assert(offsetof(B_PlayerState_C_ReplicateIconAndLevel, Level) == 0x000000, "Member 'B_PlayerState_C_ReplicateIconAndLevel::Level' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ReplicateIconAndLevel, Param_PrestigeLevel) == 0x000004, "Member 'B_PlayerState_C_ReplicateIconAndLevel::Param_PrestigeLevel' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ReplicateIconAndLevel, SkinIcon) == 0x000008, "Member 'B_PlayerState_C_ReplicateIconAndLevel::SkinIcon' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ReplicateIconAndLevel, StandardSkills) == 0x000018, "Member 'B_PlayerState_C_ReplicateIconAndLevel::StandardSkills' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ReplicateIconAndLevel, ObjectiveSkills) == 0x000038, "Member 'B_PlayerState_C_ReplicateIconAndLevel::ObjectiveSkills' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GrantCauldronItems
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_GrantCauldronItems final
{
public:
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_PlayerState_C_GrantCauldronItems) == 0x000008, "Wrong alignment on B_PlayerState_C_GrantCauldronItems");
static_assert(sizeof(B_PlayerState_C_GrantCauldronItems) == 0x000010, "Wrong size on B_PlayerState_C_GrantCauldronItems");
static_assert(offsetof(B_PlayerState_C_GrantCauldronItems, GrantedItems) == 0x000000, "Member 'B_PlayerState_C_GrantCauldronItems::GrantedItems' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GrantDropExp
// 0x0008 (0x0008 - 0x0000)
struct B_PlayerState_C_GrantDropExp final
{
public:
	int32                                         StartAmount;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmount;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GrantDropExp) == 0x000004, "Wrong alignment on B_PlayerState_C_GrantDropExp");
static_assert(sizeof(B_PlayerState_C_GrantDropExp) == 0x000008, "Wrong size on B_PlayerState_C_GrantDropExp");
static_assert(offsetof(B_PlayerState_C_GrantDropExp, StartAmount) == 0x000000, "Member 'B_PlayerState_C_GrantDropExp::StartAmount' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GrantDropExp, MaxAmount) == 0x000004, "Member 'B_PlayerState_C_GrantDropExp::MaxAmount' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.AddBuff
// 0x0008 (0x0008 - 0x0000)
struct B_PlayerState_C_AddBuff final
{
public:
	class UClass*                                 Buff;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_AddBuff) == 0x000008, "Wrong alignment on B_PlayerState_C_AddBuff");
static_assert(sizeof(B_PlayerState_C_AddBuff) == 0x000008, "Wrong size on B_PlayerState_C_AddBuff");
static_assert(offsetof(B_PlayerState_C_AddBuff, Buff) == 0x000000, "Member 'B_PlayerState_C_AddBuff::Buff' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GrantExtraItems
// 0x0010 (0x0010 - 0x0000)
struct B_PlayerState_C_GrantExtraItems final
{
public:
	TArray<struct FSGrantedItem>                  GrantedItems;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_PlayerState_C_GrantExtraItems) == 0x000008, "Wrong alignment on B_PlayerState_C_GrantExtraItems");
static_assert(sizeof(B_PlayerState_C_GrantExtraItems) == 0x000010, "Wrong size on B_PlayerState_C_GrantExtraItems");
static_assert(offsetof(B_PlayerState_C_GrantExtraItems, GrantedItems) == 0x000000, "Member 'B_PlayerState_C_GrantExtraItems::GrantedItems' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetPlayerData
// 0x0050 (0x0050 - 0x0000)
struct B_PlayerState_C_SetPlayerData final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_PrestigeLevel;                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Icon;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       StandardSkills;                                    // 0x0010(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       ObjectiveSkills;                                   // 0x0030(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetPlayerData) == 0x000008, "Wrong alignment on B_PlayerState_C_SetPlayerData");
static_assert(sizeof(B_PlayerState_C_SetPlayerData) == 0x000050, "Wrong size on B_PlayerState_C_SetPlayerData");
static_assert(offsetof(B_PlayerState_C_SetPlayerData, Level) == 0x000000, "Member 'B_PlayerState_C_SetPlayerData::Level' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetPlayerData, Param_PrestigeLevel) == 0x000004, "Member 'B_PlayerState_C_SetPlayerData::Param_PrestigeLevel' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetPlayerData, Icon) == 0x000008, "Member 'B_PlayerState_C_SetPlayerData::Icon' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetPlayerData, StandardSkills) == 0x000010, "Member 'B_PlayerState_C_SetPlayerData::StandardSkills' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetPlayerData, ObjectiveSkills) == 0x000030, "Member 'B_PlayerState_C_SetPlayerData::ObjectiveSkills' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SERVER_SetIsTalking
// 0x0001 (0x0001 - 0x0000)
struct B_PlayerState_C_SERVER_SetIsTalking final
{
public:
	bool                                          Param_bIsTalking;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SERVER_SetIsTalking) == 0x000001, "Wrong alignment on B_PlayerState_C_SERVER_SetIsTalking");
static_assert(sizeof(B_PlayerState_C_SERVER_SetIsTalking) == 0x000001, "Wrong size on B_PlayerState_C_SERVER_SetIsTalking");
static_assert(offsetof(B_PlayerState_C_SERVER_SetIsTalking, Param_bIsTalking) == 0x000000, "Member 'B_PlayerState_C_SERVER_SetIsTalking::Param_bIsTalking' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.SetPrestigeLevelOwningClient
// 0x0008 (0x0008 - 0x0000)
struct B_PlayerState_C_SetPrestigeLevelOwningClient final
{
public:
	int32                                         Param_PrestigeLevel;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PrestigeExperience;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_SetPrestigeLevelOwningClient) == 0x000004, "Wrong alignment on B_PlayerState_C_SetPrestigeLevelOwningClient");
static_assert(sizeof(B_PlayerState_C_SetPrestigeLevelOwningClient) == 0x000008, "Wrong size on B_PlayerState_C_SetPrestigeLevelOwningClient");
static_assert(offsetof(B_PlayerState_C_SetPrestigeLevelOwningClient, Param_PrestigeLevel) == 0x000000, "Member 'B_PlayerState_C_SetPrestigeLevelOwningClient::Param_PrestigeLevel' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_SetPrestigeLevelOwningClient, PrestigeExperience) == 0x000004, "Member 'B_PlayerState_C_SetPrestigeLevelOwningClient::PrestigeExperience' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.RequestUserAccountId
// 0x0030 (0x0030 - 0x0000)
struct B_PlayerState_C_RequestUserAccountId final
{
public:
	class FString                                 Param_ProductUserId;                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 AccountType;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 NativePlatformId;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_RequestUserAccountId) == 0x000008, "Wrong alignment on B_PlayerState_C_RequestUserAccountId");
static_assert(sizeof(B_PlayerState_C_RequestUserAccountId) == 0x000030, "Wrong size on B_PlayerState_C_RequestUserAccountId");
static_assert(offsetof(B_PlayerState_C_RequestUserAccountId, Param_ProductUserId) == 0x000000, "Member 'B_PlayerState_C_RequestUserAccountId::Param_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_RequestUserAccountId, AccountType) == 0x000010, "Member 'B_PlayerState_C_RequestUserAccountId::AccountType' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_RequestUserAccountId, NativePlatformId) == 0x000020, "Member 'B_PlayerState_C_RequestUserAccountId::NativePlatformId' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.OnPropChecked__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct B_PlayerState_C_OnPropChecked__DelegateSignature final
{
public:
	class AB_PlayerState_C*                       Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Prop;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DamageType;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_OnPropChecked__DelegateSignature) == 0x000008, "Wrong alignment on B_PlayerState_C_OnPropChecked__DelegateSignature");
static_assert(sizeof(B_PlayerState_C_OnPropChecked__DelegateSignature) == 0x000020, "Wrong size on B_PlayerState_C_OnPropChecked__DelegateSignature");
static_assert(offsetof(B_PlayerState_C_OnPropChecked__DelegateSignature, Player) == 0x000000, "Member 'B_PlayerState_C_OnPropChecked__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnPropChecked__DelegateSignature, Prop) == 0x000008, "Member 'B_PlayerState_C_OnPropChecked__DelegateSignature::Prop' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnPropChecked__DelegateSignature, Damage) == 0x000010, "Member 'B_PlayerState_C_OnPropChecked__DelegateSignature::Damage' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_OnPropChecked__DelegateSignature, DamageType) == 0x000018, "Member 'B_PlayerState_C_OnPropChecked__DelegateSignature::DamageType' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.ExecuteUbergraph_B_PlayerState
// 0x03D0 (0x03D0 - 0x0000)
struct B_PlayerState_C_ExecuteUbergraph_B_PlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2989[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ScoreStatManager_C*                  CallFunc_CreateObject_Object;                      // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Damage;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_DamageType;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddPropChecked_WasNotChecked;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddPropChecked_WasNotChecked_1;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298A[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TotalAmount;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TimeExp;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WinBonusXP;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_CatchXP;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LastWitchXP;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298B[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUpdating_IsUpdating;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298C[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Level_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PrestigeLevel_2;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPrimaryAssetId                        K2Node_CustomEvent_SkinIcon;                       // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_CustomEvent_StandardSkills_1;               // 0x0080(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_CustomEvent_ObjectiveSkills_1;              // 0x00A0(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298D[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSGrantedItem>                  K2Node_CustomEvent_GrantedItems_1;                 // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 CallFunc_CollectSkinUnlocks_UnlockedItemIds;       // 0x00E8(0x0010)(ReferenceParm)
	int32                                         K2Node_CustomEvent_StartAmount;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MaxAmount;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Buff;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Buff_C*                              CallFunc_GetFirstActiveBuff_ReturnValue;           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBuffAlreadyActive_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298E[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_CheckedPropsManager_C*               CallFunc_CreateObject_Object_1;                    // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_298F[0x2];                                     // 0x0192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2990[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2991[0x6];                                     // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD;                       // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2992[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSGrantedItem>                  K2Node_CustomEvent_GrantedItems;                   // 0x01D8(0x0010)(ConstParm, ReferenceParm)
	int32                                         K2Node_CustomEvent_Level;                          // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PrestigeLevel_1;                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Icon;                           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_CustomEvent_StandardSkills;                 // 0x01F8(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSSelectedSkills                       K2Node_CustomEvent_ObjectiveSkills;                // 0x0218(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2993[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPrimaryAssetId                        CallFunc_GetPrimaryAssetIdFromClass_ReturnValue;   // 0x024C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2994[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2995[0x7];                                     // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsTalking;                     // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2996[0x6];                                     // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2997[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2998[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PrestigeLevel;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PrestigeExperience;             // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2999[0x6];                                     // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ProductUserId;                  // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_AccountType;                    // 0x02D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_NativePlatformId;               // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299A[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299B[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_2;               // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0332(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299C[0x5];                                     // 0x0333(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNativeOnlineSystemName_Out;            // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativeOnlineSystemName_PlatformType;   // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299D[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Buff_C*                              CallFunc_Array_Get_Item;                           // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Buff_C*                              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299E[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_BP_GetUniqueId_ReturnValue;               // 0x0388(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue; // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState) == 0x000010, "Wrong alignment on B_PlayerState_C_ExecuteUbergraph_B_PlayerState");
static_assert(sizeof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState) == 0x0003D0, "Wrong size on B_PlayerState_C_ExecuteUbergraph_B_PlayerState");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, EntryPoint) == 0x000000, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_CreateObject_Object) == 0x000008, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Actor_1) == 0x000010, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Damage) == 0x000018, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Damage' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_DamageType) == 0x000020, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_DamageType' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Actor) == 0x000028, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_AddPropChecked_WasNotChecked) == 0x000030, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_AddPropChecked_WasNotChecked' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_AddPropChecked_WasNotChecked_1) == 0x000031, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_AddPropChecked_WasNotChecked_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_TotalAmount) == 0x000040, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_TotalAmount' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_TimeExp) == 0x000044, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_TimeExp' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_WinBonusXP) == 0x000048, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_WinBonusXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_CatchXP) == 0x00004C, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_CatchXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_LastWitchXP) == 0x000050, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_LastWitchXP' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance) == 0x000058, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_HasAuthority_ReturnValue) == 0x000061, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_IsUpdating_IsUpdating) == 0x000062, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_IsUpdating_IsUpdating' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_Event_DeltaSeconds) == 0x000064, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Level_1) == 0x000068, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Level_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_PrestigeLevel_2) == 0x00006C, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_PrestigeLevel_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_SkinIcon) == 0x000070, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_SkinIcon' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_StandardSkills_1) == 0x000080, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_StandardSkills_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_ObjectiveSkills_1) == 0x0000A0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_ObjectiveSkills_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000C0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0000C8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_GrantedItems_1) == 0x0000D8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_GrantedItems_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_CollectSkinUnlocks_UnlockedItemIds) == 0x0000E8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_CollectSkinUnlocks_UnlockedItemIds' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_StartAmount) == 0x0000F8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_StartAmount' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_MaxAmount) == 0x0000FC, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_MaxAmount' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Buff) == 0x000100, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Buff' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetFirstActiveBuff_ReturnValue) == 0x000108, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetFirstActiveBuff_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_IsBuffAlreadyActive_ReturnValue) == 0x000110, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_IsBuffAlreadyActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_CreateObject_Object_1) == 0x000118, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_CreateObject_Object_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000120, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameState_ReturnValue) == 0x000180, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_State) == 0x000188, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_2) == 0x000190, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000191, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Array_Length_ReturnValue) == 0x000194, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_2) == 0x000198, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0001A0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_3) == 0x0001A8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameState_ReturnValue_1) == 0x0001B0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_State_1) == 0x0001B8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_4) == 0x0001C0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001C1, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsWB_HUD) == 0x0001C8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsWB_HUD' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_5) == 0x0001D0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_GrantedItems) == 0x0001D8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_GrantedItems' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Level) == 0x0001E8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_PrestigeLevel_1) == 0x0001EC, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_PrestigeLevel_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_Icon) == 0x0001F0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_Icon' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_StandardSkills) == 0x0001F8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_StandardSkills' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_ObjectiveSkills) == 0x000218, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_ObjectiveSkills' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_3) == 0x000238, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000240, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_6) == 0x000248, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetPrimaryAssetIdFromClass_ReturnValue) == 0x00024C, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetPrimaryAssetIdFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_4) == 0x000260, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_5) == 0x000268, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000270, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_7) == 0x000278, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x000280, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_8) == 0x000288, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_bIsTalking) == 0x000289, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_bIsTalking' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_6) == 0x000290, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000298, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_9) == 0x0002A0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, Temp_int_Loop_Counter_Variable) == 0x0002A4, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x0002A8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x0002AC, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_PrestigeLevel) == 0x0002B0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_PrestigeLevel' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_PrestigeExperience) == 0x0002B4, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_PrestigeExperience' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002B8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0002B9, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_ProductUserId) == 0x0002C0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_AccountType) == 0x0002D0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_AccountType' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_CustomEvent_NativePlatformId) == 0x0002E0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_CustomEvent_NativePlatformId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_7) == 0x0002F0, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x0002F8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_10) == 0x000300, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameInstance_ReturnValue_8) == 0x000308, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x000310, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_11) == 0x000318, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetGameState_ReturnValue_2) == 0x000320, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_AsB_Game_State_2) == 0x000328, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_AsB_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, K2Node_DynamicCast_bSuccess_12) == 0x000330, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000331, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000332, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetNativeOnlineSystemName_Out) == 0x000338, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetNativeOnlineSystemName_Out' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetNativeOnlineSystemName_PlatformType) == 0x000348, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetNativeOnlineSystemName_PlatformType' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_GetPlayerController_ReturnValue) == 0x000358, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, Temp_int_Array_Index_Variable) == 0x000360, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000368, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Array_Get_Item) == 0x000370, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_FinishSpawningActor_ReturnValue) == 0x000378, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Array_Add_ReturnValue) == 0x000380, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_BP_GetUniqueId_ReturnValue) == 0x000388, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_BP_GetUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_ExecuteUbergraph_B_PlayerState, CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue) == 0x0003B8, "Member 'B_PlayerState_C_ExecuteUbergraph_B_PlayerState::CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetProductUserId
// 0x0020 (0x0020 - 0x0000)
struct B_PlayerState_C_GetProductUserId final
{
public:
	class FString                                 Param_ProductUserId;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Param_PlatformType;                                // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetProductUserId) == 0x000008, "Wrong alignment on B_PlayerState_C_GetProductUserId");
static_assert(sizeof(B_PlayerState_C_GetProductUserId) == 0x000020, "Wrong size on B_PlayerState_C_GetProductUserId");
static_assert(offsetof(B_PlayerState_C_GetProductUserId, Param_ProductUserId) == 0x000000, "Member 'B_PlayerState_C_GetProductUserId::Param_ProductUserId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetProductUserId, Param_PlatformType) == 0x000010, "Member 'B_PlayerState_C_GetProductUserId::Param_PlatformType' has a wrong offset!");

// Function B_PlayerState.B_PlayerState_C.GetNativeOnlineSystemName
// 0x01A8 (0x01A8 - 0x0000)
struct B_PlayerState_C_GetNativeOnlineSystemName final
{
public:
	bool                                          UseRedpointSystem;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Out;                                               // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Param_PlatformType;                                // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A0[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUniqueNetIdRepl                       CallFunc_BP_GetUniqueId_ReturnValue;               // 0x0038(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformInfo_NativePlatformId;   // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformInfo_NativePlatform;     // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNativePlatformInfo_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A1[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FUniqueNetIdRepl                       CallFunc_BP_GetUniqueId_ReturnValue_1;             // 0x00C0(0x0030)(HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue_1; // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      CallFunc_GetBGameInstance_ReturnValue_1;           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatformId; // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetNativePlatformAccountName_NativePlatform; // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UCustomLogSubsystem*                    CallFunc_GetEngineSubsystem_ReturnValue_1;         // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FBPUniqueNetId                         CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId; // 0x0178(0x0020)()
	class FString                                 CallFunc_UniqueNetIdToString_String;               // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PlayerState_C_GetNativeOnlineSystemName) == 0x000008, "Wrong alignment on B_PlayerState_C_GetNativeOnlineSystemName");
static_assert(sizeof(B_PlayerState_C_GetNativeOnlineSystemName) == 0x0001A8, "Wrong size on B_PlayerState_C_GetNativeOnlineSystemName");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, UseRedpointSystem) == 0x000000, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::UseRedpointSystem' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, Out) == 0x000008, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::Out' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, Param_PlatformType) == 0x000018, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::Param_PlatformType' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetBGameInstance_ReturnValue) == 0x000028, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetBGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_BP_GetUniqueId_ReturnValue) == 0x000038, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_BP_GetUniqueId_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetNativePlatformInfo_NativePlatformId) == 0x000068, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetNativePlatformInfo_NativePlatformId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetNativePlatformInfo_NativePlatform) == 0x000078, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetNativePlatformInfo_NativePlatform' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetNativePlatformInfo_ReturnValue) == 0x000088, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetNativePlatformInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue) == 0x000090, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_BP_GetUniqueId_ReturnValue_1) == 0x0000C0, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_BP_GetUniqueId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue_1) == 0x000100, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Conv_FUniqueNetIdReplToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000110, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetBGameInstance_ReturnValue_1) == 0x000120, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetBGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000128, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetNativePlatformAccountName_NativePlatformId) == 0x000138, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetNativePlatformAccountName_NativePlatformId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetNativePlatformAccountName_NativePlatform) == 0x000148, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetNativePlatformAccountName_NativePlatform' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000158, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000160, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetEngineSubsystem_ReturnValue_1) == 0x000170, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetEngineSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId) == 0x000178, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_GetUniqueNetIDFromPlayerState_UniqueNetId' has a wrong offset!");
static_assert(offsetof(B_PlayerState_C_GetNativeOnlineSystemName, CallFunc_UniqueNetIdToString_String) == 0x000198, "Member 'B_PlayerState_C_GetNativeOnlineSystemName::CallFunc_UniqueNetIdToString_String' has a wrong offset!");

}

