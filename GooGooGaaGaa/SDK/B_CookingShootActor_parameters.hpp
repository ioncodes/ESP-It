#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CookingShootActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function B_CookingShootActor.B_CookingShootActor_C.Act
// 0x0030 (0x0030 - 0x0000)
struct B_CookingShootActor_C_Act final
{
public:
	class AB_CookingTask_C*                       CookingTask;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C01[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingTask_C*                       K2Node_DynamicCast_AsB_Cooking_Task;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingShootActor_C_Act) == 0x000008, "Wrong alignment on B_CookingShootActor_C_Act");
static_assert(sizeof(B_CookingShootActor_C_Act) == 0x000030, "Wrong size on B_CookingShootActor_C_Act");
static_assert(offsetof(B_CookingShootActor_C_Act, CookingTask) == 0x000000, "Member 'B_CookingShootActor_C_Act::CookingTask' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, CallFunc_Array_Get_Item) == 0x000008, "Member 'B_CookingShootActor_C_Act::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'B_CookingShootActor_C_Act::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'B_CookingShootActor_C_Act::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, K2Node_DynamicCast_AsB_Cooking_Task) == 0x000020, "Member 'B_CookingShootActor_C_Act::K2Node_DynamicCast_AsB_Cooking_Task' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_CookingShootActor_C_Act::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_Act, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'B_CookingShootActor_C_Act::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_CookingShootActor.B_CookingShootActor_C.ExecuteUbergraph_B_CookingShootActor
// 0x0020 (0x0020 - 0x0000)
struct B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C02[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingTask_C*                       K2Node_DynamicCast_AsB_Cooking_Task;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor) == 0x000008, "Wrong alignment on B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor");
static_assert(sizeof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor) == 0x000020, "Wrong size on B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor");
static_assert(offsetof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor, EntryPoint) == 0x000000, "Member 'B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor, K2Node_DynamicCast_AsB_Cooking_Task) == 0x000010, "Member 'B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor::K2Node_DynamicCast_AsB_Cooking_Task' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_CookingShootActor_C_ExecuteUbergraph_B_CookingShootActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_CookingShootActor.B_CookingShootActor_C.PickMesh
// 0x00F8 (0x00F8 - 0x0000)
struct B_CookingShootActor_C_PickMesh final
{
public:
	class UStaticMesh*                            Static_Mesh;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingShootActor_C_PickMesh) == 0x000008, "Wrong alignment on B_CookingShootActor_C_PickMesh");
static_assert(sizeof(B_CookingShootActor_C_PickMesh) == 0x0000F8, "Wrong size on B_CookingShootActor_C_PickMesh");
static_assert(offsetof(B_CookingShootActor_C_PickMesh, Static_Mesh) == 0x000000, "Member 'B_CookingShootActor_C_PickMesh::Static_Mesh' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_PickMesh, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x000008, "Member 'B_CookingShootActor_C_PickMesh::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_PickMesh, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000F0, "Member 'B_CookingShootActor_C_PickMesh::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function B_CookingShootActor.B_CookingShootActor_C.React
// 0x0180 (0x0180 - 0x0000)
struct B_CookingShootActor_C_React final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingTask_C*                       K2Node_DynamicCast_AsB_Cooking_Task;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C03[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CookingField_C*                      K2Node_DynamicCast_AsB_Cooking_Field;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C04[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingDummy_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingShootActor_C_React) == 0x000010, "Wrong alignment on B_CookingShootActor_C_React");
static_assert(sizeof(B_CookingShootActor_C_React) == 0x000180, "Wrong size on B_CookingShootActor_C_React");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'B_CookingShootActor_C_React::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, K2Node_DynamicCast_AsB_Cooking_Task) == 0x000008, "Member 'B_CookingShootActor_C_React::K2Node_DynamicCast_AsB_Cooking_Task' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_CookingShootActor_C_React::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, K2Node_DynamicCast_AsB_Cooking_Field) == 0x000018, "Member 'B_CookingShootActor_C_React::K2Node_DynamicCast_AsB_Cooking_Field' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'B_CookingShootActor_C_React::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'B_CookingShootActor_C_React::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakTransform_Location) == 0x000090, "Member 'B_CookingShootActor_C_React::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'B_CookingShootActor_C_React::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakTransform_Scale) == 0x0000C0, "Member 'B_CookingShootActor_C_React::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakVector_X) == 0x0000D8, "Member 'B_CookingShootActor_C_React::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakVector_Y) == 0x0000E0, "Member 'B_CookingShootActor_C_React::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BreakVector_Z) == 0x0000E8, "Member 'B_CookingShootActor_C_React::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'B_CookingShootActor_C_React::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'B_CookingShootActor_C_React::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'B_CookingShootActor_C_React::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000170, "Member 'B_CookingShootActor_C_React::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_React, CallFunc_FinishSpawningActor_ReturnValue) == 0x000178, "Member 'B_CookingShootActor_C_React::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function B_CookingShootActor.B_CookingShootActor_C.UpdateRecipeSign
// 0x0040 (0x0040 - 0x0000)
struct B_CookingShootActor_C_UpdateRecipeSign final
{
public:
	class UStaticMesh*                            New_Ingredient;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingTask_C*                       CookingTask;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C05[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Array_Get_Item_1;                         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C06[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingTask_C*                       K2Node_DynamicCast_AsB_Cooking_Task;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingShootActor_C_UpdateRecipeSign) == 0x000008, "Wrong alignment on B_CookingShootActor_C_UpdateRecipeSign");
static_assert(sizeof(B_CookingShootActor_C_UpdateRecipeSign) == 0x000040, "Wrong size on B_CookingShootActor_C_UpdateRecipeSign");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, New_Ingredient) == 0x000000, "Member 'B_CookingShootActor_C_UpdateRecipeSign::New_Ingredient' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CookingTask) == 0x000008, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CookingTask' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CallFunc_Array_Get_Item) == 0x000010, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CallFunc_Array_Get_Item_1) == 0x000018, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'B_CookingShootActor_C_UpdateRecipeSign::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, K2Node_DynamicCast_AsB_Cooking_Task) == 0x000030, "Member 'B_CookingShootActor_C_UpdateRecipeSign::K2Node_DynamicCast_AsB_Cooking_Task' has a wrong offset!");
static_assert(offsetof(B_CookingShootActor_C_UpdateRecipeSign, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_CookingShootActor_C_UpdateRecipeSign::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

