#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Poster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Poster.B_Poster_C.InpActEvt_K_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0");
static_assert(sizeof(B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0");
static_assert(offsetof(B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'B_Poster_C_InpActEvt_K_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function B_Poster.B_Poster_C.ExecuteUbergraph_B_Poster
// 0x0170 (0x0170 - 0x0000)
struct B_Poster_C_ExecuteUbergraph_B_Poster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x0068(0x00F8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Poster_C_ExecuteUbergraph_B_Poster) == 0x000008, "Wrong alignment on B_Poster_C_ExecuteUbergraph_B_Poster");
static_assert(sizeof(B_Poster_C_ExecuteUbergraph_B_Poster) == 0x000170, "Wrong size on B_Poster_C_ExecuteUbergraph_B_Poster");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, EntryPoint) == 0x000000, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_BreakVector_X) == 0x000008, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_BreakVector_Y) == 0x000010, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_BreakVector_Z) == 0x000018, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, K2Node_InputKeyEvent_Key) == 0x000020, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x000068, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000160, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000164, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_Poster_C_ExecuteUbergraph_B_Poster, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000168, "Member 'B_Poster_C_ExecuteUbergraph_B_Poster::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

}

