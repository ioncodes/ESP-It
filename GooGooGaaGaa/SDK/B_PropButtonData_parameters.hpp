#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PropButtonData

#include "Basic.hpp"


namespace SDK::Params
{

// Function B_PropButtonData.B_PropButtonData_C.Compare
// 0x0020 (0x0020 - 0x0000)
struct B_PropButtonData_C_Compare final
{
public:
	class UB_TileViewData_C*                      TargetData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMatch;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_PropButtonData_C*                    K2Node_DynamicCast_AsB_Prop_Button_Data;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_PropButtonData_C_Compare) == 0x000008, "Wrong alignment on B_PropButtonData_C_Compare");
static_assert(sizeof(B_PropButtonData_C_Compare) == 0x000020, "Wrong size on B_PropButtonData_C_Compare");
static_assert(offsetof(B_PropButtonData_C_Compare, TargetData) == 0x000000, "Member 'B_PropButtonData_C_Compare::TargetData' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, IsMatch) == 0x000008, "Member 'B_PropButtonData_C_Compare::IsMatch' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, K2Node_DynamicCast_AsB_Prop_Button_Data) == 0x000010, "Member 'B_PropButtonData_C_Compare::K2Node_DynamicCast_AsB_Prop_Button_Data' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_PropButtonData_C_Compare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'B_PropButtonData_C_Compare::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x00001A, "Member 'B_PropButtonData_C_Compare::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_PropButtonData_C_Compare, CallFunc_IsValidClass_ReturnValue) == 0x00001B, "Member 'B_PropButtonData_C_Compare::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

}

