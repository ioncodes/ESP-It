#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerInformation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PlayerInformation.WB_PlayerInformation_C
// 0x00B0 (0x0390 - 0x02E0)
class UWB_PlayerInformation_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PlayerFocusAnim;                                   // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWB_ControllerIconWithLabel_C*          ControllerIcon_ChangeUser;                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIconWithLabel_C*          ControllerIcon_PlayerIconSelection;                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TabButton_C*                        FriendScreenButton;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      LoadingAccountLevelThrobber;                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 NotifyIcon;                                        // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Level;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_PlayerName;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerIcon_C*                       WB_PlayerIcon;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_SmallXPBar_C*                       WB_SmallXPBar;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   PlayerIconSelectionText;                           // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FLinearColor                           IconBorderColor;                                   // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   AccountPickerText;                                 // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            LevelColor;                                        // 0x0378(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__WB_PlayerInformation_FriendScreenButton_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WB_PlayerInformation(int32 EntryPoint);
	ESlateVisibility Get_ControllerIcon_PlayerIconSelection_Visibility_0();
	ESlateVisibility Get_LoadingAccountLevelThrobber_Visibility_0();
	struct FSlateColor Get_Text_Level_ColorAndOpacity_0();
	ESlateVisibility Get_Text_Level_Visibility_0();
	class FText Get_Text_PlayerName_Text();
	ESlateVisibility GetAccountPickerTextVisibility();
	class FText GetLevel();
	void GetPlayerIcon(TSoftObjectPtr<class UObject>* ResourceObject);
	void OnActiveUserInfoUpdated_Event(const struct FSlateBrush& IconBrush, const class FString& DisplayString);
	void OnClicked__DelegateSignature();
	struct FEventReply OnFocusReceived(const struct FGeometry& MyGeometry, const struct FFocusEvent& InFocusEvent);
	void OnLoaded_00E1A6144D5BDA6BB9ABC594B660323A(class UObject* Loaded);
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdatePlayerIconAndNotify();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PlayerInformation_C">();
	}
	static class UWB_PlayerInformation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PlayerInformation_C>();
	}
};
static_assert(alignof(UWB_PlayerInformation_C) == 0x000008, "Wrong alignment on UWB_PlayerInformation_C");
static_assert(sizeof(UWB_PlayerInformation_C) == 0x000390, "Wrong size on UWB_PlayerInformation_C");
static_assert(offsetof(UWB_PlayerInformation_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_PlayerInformation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, PlayerFocusAnim) == 0x0002E8, "Member 'UWB_PlayerInformation_C::PlayerFocusAnim' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, ControllerIcon_ChangeUser) == 0x0002F0, "Member 'UWB_PlayerInformation_C::ControllerIcon_ChangeUser' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, ControllerIcon_PlayerIconSelection) == 0x0002F8, "Member 'UWB_PlayerInformation_C::ControllerIcon_PlayerIconSelection' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, FriendScreenButton) == 0x000300, "Member 'UWB_PlayerInformation_C::FriendScreenButton' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, LoadingAccountLevelThrobber) == 0x000308, "Member 'UWB_PlayerInformation_C::LoadingAccountLevelThrobber' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, NotifyIcon) == 0x000310, "Member 'UWB_PlayerInformation_C::NotifyIcon' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, Text_Level) == 0x000318, "Member 'UWB_PlayerInformation_C::Text_Level' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, Text_PlayerName) == 0x000320, "Member 'UWB_PlayerInformation_C::Text_PlayerName' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, WB_PlayerIcon) == 0x000328, "Member 'UWB_PlayerInformation_C::WB_PlayerIcon' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, WB_SmallXPBar) == 0x000330, "Member 'UWB_PlayerInformation_C::WB_SmallXPBar' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, PlayerIconSelectionText) == 0x000338, "Member 'UWB_PlayerInformation_C::PlayerIconSelectionText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, IconBorderColor) == 0x000348, "Member 'UWB_PlayerInformation_C::IconBorderColor' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, OnClicked) == 0x000358, "Member 'UWB_PlayerInformation_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, AccountPickerText) == 0x000368, "Member 'UWB_PlayerInformation_C::AccountPickerText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerInformation_C, LevelColor) == 0x000378, "Member 'UWB_PlayerInformation_C::LevelColor' has a wrong offset!");

}

