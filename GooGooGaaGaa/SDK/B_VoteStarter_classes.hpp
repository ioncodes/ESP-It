#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_VoteStarter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_VoteStarter.B_VoteStarter_C
// 0x0028 (0x02B8 - 0x0290)
class AB_VoteStarter_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_Poster;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               VotingPlayerState;                                 // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          IsVoteViewer;                                      // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_VoteStarter(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_VoteStarter_C">();
	}
	static class AB_VoteStarter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_VoteStarter_C>();
	}
};
static_assert(alignof(AB_VoteStarter_C) == 0x000008, "Wrong alignment on AB_VoteStarter_C");
static_assert(sizeof(AB_VoteStarter_C) == 0x0002B8, "Wrong size on AB_VoteStarter_C");
static_assert(offsetof(AB_VoteStarter_C, UberGraphFrame) == 0x000290, "Member 'AB_VoteStarter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_VoteStarter_C, SM_Poster) == 0x000298, "Member 'AB_VoteStarter_C::SM_Poster' has a wrong offset!");
static_assert(offsetof(AB_VoteStarter_C, DefaultSceneRoot) == 0x0002A0, "Member 'AB_VoteStarter_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_VoteStarter_C, VotingPlayerState) == 0x0002A8, "Member 'AB_VoteStarter_C::VotingPlayerState' has a wrong offset!");
static_assert(offsetof(AB_VoteStarter_C, IsVoteViewer) == 0x0002B0, "Member 'AB_VoteStarter_C::IsVoteViewer' has a wrong offset!");

}

