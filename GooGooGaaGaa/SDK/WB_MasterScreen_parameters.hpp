#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MasterScreen

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "PropWitchHuntModule_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_MasterScreen.WB_MasterScreen_C.CheckForGamePadMode
// 0x0070 (0x0070 - 0x0000)
struct WB_MasterScreen_C_CheckForGamePadMode final
{
public:
	struct FKeyEvent                              Input;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0048(0x0018)(HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_CheckForGamePadMode) == 0x000008, "Wrong alignment on WB_MasterScreen_C_CheckForGamePadMode");
static_assert(sizeof(WB_MasterScreen_C_CheckForGamePadMode) == 0x000070, "Wrong size on WB_MasterScreen_C_CheckForGamePadMode");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, Input) == 0x000000, "Member 'WB_MasterScreen_C_CheckForGamePadMode::Input' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'WB_MasterScreen_C_CheckForGamePadMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, CallFunc_GetKey_ReturnValue) == 0x000048, "Member 'WB_MasterScreen_C_CheckForGamePadMode::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000060, "Member 'WB_MasterScreen_C_CheckForGamePadMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WB_MasterScreen_C_CheckForGamePadMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CheckForGamePadMode, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000069, "Member 'WB_MasterScreen_C_CheckForGamePadMode::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.CloseOverlayWidget
// 0x0038 (0x0038 - 0x0000)
struct WB_MasterScreen_C_CloseOverlayWidget final
{
public:
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5338[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5339[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_CloseOverlayWidget) == 0x000008, "Wrong alignment on WB_MasterScreen_C_CloseOverlayWidget");
static_assert(sizeof(WB_MasterScreen_C_CloseOverlayWidget) == 0x000038, "Wrong size on WB_MasterScreen_C_CloseOverlayWidget");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, CallFunc_GetChildrenCount_ReturnValue) == 0x000000, "Member 'WB_MasterScreen_C_CloseOverlayWidget::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_MasterScreen_C_CloseOverlayWidget::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_CloseOverlayWidget::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_MasterScreen_C_CloseOverlayWidget::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_MasterScreen_C_CloseOverlayWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, CallFunc_GetChildAt_ReturnValue) == 0x000028, "Member 'WB_MasterScreen_C_CloseOverlayWidget::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_CloseOverlayWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'WB_MasterScreen_C_CloseOverlayWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.ExecuteUbergraph_WB_MasterScreen
// 0x0040 (0x0040 - 0x0000)
struct WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen) == 0x000004, "Wrong alignment on WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen");
static_assert(sizeof(WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen) == 0x000040, "Wrong size on WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen");
static_assert(offsetof(WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen, EntryPoint) == 0x000000, "Member 'WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_MasterScreen_C_ExecuteUbergraph_WB_MasterScreen::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.Get_GamePadModeBorder_Visibility_0
// 0x0006 (0x0006 - 0x0000)
struct WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0) == 0x000001, "Wrong alignment on WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0");
static_assert(sizeof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0) == 0x000006, "Wrong size on WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, CallFunc_IsGamepadMode_ReturnValue) == 0x000004, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0, K2Node_Select_Default) == 0x000005, "Member 'WB_MasterScreen_C_Get_GamePadModeBorder_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.Get_MessageBoxCanvas_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533B[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0) == 0x000008, "Wrong alignment on WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0");
static_assert(sizeof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0) == 0x000020, "Wrong size on WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, Temp_byte_Variable) == 0x000001, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, Temp_byte_Variable_1) == 0x000019, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, Temp_bool_Variable) == 0x00001A, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0, K2Node_Select_Default) == 0x00001B, "Member 'WB_MasterScreen_C_Get_MessageBoxCanvas_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.Get_OverlayWidgetBorder_Visibility_0
// 0x000C (0x000C - 0x0000)
struct WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0) == 0x000004, "Wrong alignment on WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0");
static_assert(sizeof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0) == 0x00000C, "Wrong size on WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, Temp_bool_Variable) == 0x000001, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, Temp_byte_Variable) == 0x000002, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, Temp_byte_Variable_1) == 0x000003, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0, K2Node_Select_Default) == 0x000009, "Member 'WB_MasterScreen_C_Get_OverlayWidgetBorder_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.GetCurrentOpenedScreenWidgetFunction
// 0x0028 (0x0028 - 0x0000)
struct WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction) == 0x000008, "Wrong alignment on WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction");
static_assert(sizeof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction) == 0x000028, "Wrong size on WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, Widget) == 0x000000, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, Temp_int_Variable) == 0x000008, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_GetChildrenCount_ReturnValue) == 0x00000C, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_GetChildrenCount_ReturnValue_1) == 0x000020, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction, CallFunc_DoesImplementInterface_ReturnValue) == 0x000025, "Member 'WB_MasterScreen_C_GetCurrentOpenedScreenWidgetFunction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.GetCurrentScreenWidget
// 0x0018 (0x0018 - 0x0000)
struct WB_MasterScreen_C_GetCurrentScreenWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_GetCurrentScreenWidget) == 0x000008, "Wrong alignment on WB_MasterScreen_C_GetCurrentScreenWidget");
static_assert(sizeof(WB_MasterScreen_C_GetCurrentScreenWidget) == 0x000018, "Wrong size on WB_MasterScreen_C_GetCurrentScreenWidget");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentScreenWidget, Widget) == 0x000000, "Member 'WB_MasterScreen_C_GetCurrentScreenWidget::Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentScreenWidget, CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget) == 0x000008, "Member 'WB_MasterScreen_C_GetCurrentScreenWidget::CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetCurrentScreenWidget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_GetCurrentScreenWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_MasterScreen_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EInputMode                                    CallFunc_GetInputMode_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_GetVisibility_0) == 0x000008, "Wrong alignment on WB_MasterScreen_C_GetVisibility_0");
static_assert(sizeof(WB_MasterScreen_C_GetVisibility_0) == 0x000020, "Wrong size on WB_MasterScreen_C_GetVisibility_0");
static_assert(offsetof(WB_MasterScreen_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'WB_MasterScreen_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetVisibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_MasterScreen_C_GetVisibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetVisibility_0, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_GetVisibility_0::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetVisibility_0, CallFunc_GetInputMode_ReturnValue) == 0x000018, "Member 'WB_MasterScreen_C_GetVisibility_0::CallFunc_GetInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetVisibility_0, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'WB_MasterScreen_C_GetVisibility_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.GetWidgetToHandleInput
// 0x0048 (0x0048 - 0x0000)
struct WB_MasterScreen_C_GetWidgetToHandleInput final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                LocalWidget;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533D[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533E[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_GetWidgetToHandleInput) == 0x000008, "Wrong alignment on WB_MasterScreen_C_GetWidgetToHandleInput");
static_assert(sizeof(WB_MasterScreen_C_GetWidgetToHandleInput) == 0x000048, "Wrong size on WB_MasterScreen_C_GetWidgetToHandleInput");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, Widget) == 0x000000, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, LocalWidget) == 0x000008, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::LocalWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget) == 0x000010, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_GetChildrenCount_ReturnValue) == 0x00002C, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_GetChildAt_ReturnValue) == 0x000038, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_GetWidgetToHandleInput, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WB_MasterScreen_C_GetWidgetToHandleInput::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.InitialFocus
// 0x00F8 (0x00F8 - 0x0000)
struct WB_MasterScreen_C_InitialFocus final
{
public:
	class UUserWidget*                            FocusableWidget;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5340[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_InitialFocusWidget; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5341[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5342[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue_1;           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5343[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen_1;               // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5344[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_InitialFocusWidget_1; // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen_2;               // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5345[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetInitialFocusWidget_InitialFocusWidget_2; // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5346[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5347[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_BaseControl_C*                      CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParentVisible_isParentVisible;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_InitialFocus) == 0x000008, "Wrong alignment on WB_MasterScreen_C_InitialFocus");
static_assert(sizeof(WB_MasterScreen_C_InitialFocus) == 0x0000F8, "Wrong size on WB_MasterScreen_C_InitialFocus");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, FocusableWidget) == 0x000000, "Member 'WB_MasterScreen_C_InitialFocus::FocusableWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget) == 0x000028, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_AsIMenu_Screen) == 0x000030, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_AsIMenu_Screen' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetInitialFocusWidget_InitialFocusWidget) == 0x000048, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetInitialFocusWidget_InitialFocusWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetObjectClass_ReturnValue) == 0x000058, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetChildrenCount_ReturnValue) == 0x000064, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetChildrenCount_ReturnValue_1) == 0x00006C, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetChildrenCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetChildAt_ReturnValue) == 0x000070, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000078, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_AsIMenu_Screen_1) == 0x000080, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_AsIMenu_Screen_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetChildAt_ReturnValue_1) == 0x000098, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetInitialFocusWidget_InitialFocusWidget_1) == 0x0000A0, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetInitialFocusWidget_InitialFocusWidget_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_AsIMenu_Screen_2) == 0x0000A8, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_AsIMenu_Screen_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetInitialFocusWidget_InitialFocusWidget_2) == 0x0000C0, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetInitialFocusWidget_InitialFocusWidget_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsValid_ReturnValue_3) == 0x0000C9, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CA, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000CB, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000D0, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0000D8, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'WB_MasterScreen_C_InitialFocus::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsParentVisible_isParentVisible) == 0x0000F1, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsParentVisible_isParentVisible' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_IsValid_ReturnValue_4) == 0x0000F2, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_InitialFocus, CallFunc_BooleanAND_ReturnValue) == 0x0000F3, "Member 'WB_MasterScreen_C_InitialFocus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.isParentVisible
// 0x0020 (0x0020 - 0x0000)
struct WB_MasterScreen_C_IsParentVisible final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsParentVisible;                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5348[0x5];                                     // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsParentVisible_isParentVisible;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_IsParentVisible) == 0x000008, "Wrong alignment on WB_MasterScreen_C_IsParentVisible");
static_assert(sizeof(WB_MasterScreen_C_IsParentVisible) == 0x000020, "Wrong size on WB_MasterScreen_C_IsParentVisible");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, Widget) == 0x000000, "Member 'WB_MasterScreen_C_IsParentVisible::Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, Param_IsParentVisible) == 0x000008, "Member 'WB_MasterScreen_C_IsParentVisible::Param_IsParentVisible' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WB_MasterScreen_C_IsParentVisible::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, CallFunc_IsVisible_ReturnValue) == 0x00000A, "Member 'WB_MasterScreen_C_IsParentVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, CallFunc_GetParent_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_IsParentVisible::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsParentVisible, CallFunc_IsParentVisible_isParentVisible) == 0x000018, "Member 'WB_MasterScreen_C_IsParentVisible::CallFunc_IsParentVisible_isParentVisible' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.IsScreenOpen
// 0x0030 (0x0030 - 0x0000)
struct WB_MasterScreen_C_IsScreenOpen final
{
public:
	class UUserWidget*                            ScreenWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5349[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534B[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_IsScreenOpen) == 0x000008, "Wrong alignment on WB_MasterScreen_C_IsScreenOpen");
static_assert(sizeof(WB_MasterScreen_C_IsScreenOpen) == 0x000030, "Wrong size on WB_MasterScreen_C_IsScreenOpen");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, ScreenWidget) == 0x000000, "Member 'WB_MasterScreen_C_IsScreenOpen::ScreenWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, IsOpen) == 0x000008, "Member 'WB_MasterScreen_C_IsScreenOpen::IsOpen' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, Temp_int_Variable) == 0x00000C, "Member 'WB_MasterScreen_C_IsScreenOpen::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_GetChildrenCount_ReturnValue) == 0x000018, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001C, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_IsScreenOpen, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WB_MasterScreen_C_IsScreenOpen::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.On_OverlayWidgetBorder_MouseButtonDown_0
// 0x0220 (0x0220 - 0x0000)
struct WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0) == 0x000008, "Wrong alignment on WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0");
static_assert(sizeof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0) == 0x000220, "Wrong size on WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0");
static_assert(offsetof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0, MouseEvent) == 0x000038, "Member 'WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0, ReturnValue) == 0x0000B0, "Member 'WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WB_MasterScreen_C_On_OverlayWidgetBorder_MouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.OnFocusReceived
// 0x01B0 (0x01B0 - 0x0000)
struct WB_MasterScreen_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
};
static_assert(alignof(WB_MasterScreen_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_MasterScreen_C_OnFocusReceived");
static_assert(sizeof(WB_MasterScreen_C_OnFocusReceived) == 0x0001B0, "Wrong size on WB_MasterScreen_C_OnFocusReceived");
static_assert(offsetof(WB_MasterScreen_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_MasterScreen_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_MasterScreen_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WB_MasterScreen_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.OnMouseMove
// 0x03D0 (0x03D0 - 0x0000)
struct WB_MasterScreen_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnMouseMove_ReturnValue;                  // 0x0188(0x00B8)()
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0243(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534C[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnMouseMove_ReturnValue_1;                // 0x0250(0x00B8)()
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534D[0x7];                                     // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0318(0x00B8)()
};
static_assert(alignof(WB_MasterScreen_C_OnMouseMove) == 0x000008, "Wrong alignment on WB_MasterScreen_C_OnMouseMove");
static_assert(sizeof(WB_MasterScreen_C_OnMouseMove) == 0x0003D0, "Wrong size on WB_MasterScreen_C_OnMouseMove");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WB_MasterScreen_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WB_MasterScreen_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000168, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_BreakVector2D_X) == 0x000178, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_BreakVector2D_Y) == 0x000180, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_OnMouseMove_ReturnValue) == 0x000188, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_OnMouseMove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000240, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000241, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_IsGamepadMode_ReturnValue) == 0x000242, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x000243, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_GetGameInstance_ReturnValue) == 0x000248, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_OnMouseMove_ReturnValue_1) == 0x000250, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_OnMouseMove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, K2Node_DynamicCast_AsB_Game_Instance) == 0x000308, "Member 'WB_MasterScreen_C_OnMouseMove::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, K2Node_DynamicCast_bSuccess) == 0x000310, "Member 'WB_MasterScreen_C_OnMouseMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000318, "Member 'WB_MasterScreen_C_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.OnMouseWheel
// 0x0308 (0x0308 - 0x0000)
struct WB_MasterScreen_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534E[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534F[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnMouseWheel_ReturnValue;                 // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0240(0x00B8)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_OnMouseWheel) == 0x000008, "Wrong alignment on WB_MasterScreen_C_OnMouseWheel");
static_assert(sizeof(WB_MasterScreen_C_OnMouseWheel) == 0x000308, "Wrong size on WB_MasterScreen_C_OnMouseWheel");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, MouseEvent) == 0x000038, "Member 'WB_MasterScreen_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, ReturnValue) == 0x0000B0, "Member 'WB_MasterScreen_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_GetGameInstance_ReturnValue) == 0x000168, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000170, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, K2Node_DynamicCast_AsB_Game_Instance) == 0x000178, "Member 'WB_MasterScreen_C_OnMouseWheel::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'WB_MasterScreen_C_OnMouseWheel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000181, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000182, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_IsValid_ReturnValue) == 0x000183, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_IsValid_ReturnValue_1) == 0x000184, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_OnMouseWheel_ReturnValue) == 0x000188, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_OnMouseWheel_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x000240, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0002F8, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnMouseWheel, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'WB_MasterScreen_C_OnMouseWheel::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.OnPreviewKeyDown
// 0x0350 (0x0350 - 0x0000)
struct WB_MasterScreen_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetGamepadBackKey_ReturnValue;            // 0x0130(0x0018)(HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetWidgetToHandleInput_Widget;            // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen;                 // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5350[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_2;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_3;          // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5351[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	class UWidget*                                CallFunc_GetWidgetToHandleInput_Widget_1;          // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen_1;               // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5352[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5353[0x7];                                     // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetWidgetToHandleInput_Widget_2;          // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIMenuScreen_C>        K2Node_DynamicCast_AsIMenu_Screen_2;               // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5354[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnPreviewKeyDown_ReturnValue;             // 0x0298(0x00B8)()
};
static_assert(alignof(WB_MasterScreen_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_MasterScreen_C_OnPreviewKeyDown");
static_assert(sizeof(WB_MasterScreen_C_OnPreviewKeyDown) == 0x000350, "Wrong size on WB_MasterScreen_C_OnPreviewKeyDown");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetGamepadBackKey_ReturnValue) == 0x000130, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetGamepadBackKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetWidgetToHandleInput_Widget) == 0x000148, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetWidgetToHandleInput_Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_AsIMenu_Screen) == 0x000150, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_AsIMenu_Screen' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000168, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000180, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000181, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_2) == 0x000182, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_3) == 0x000183, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x000184, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetWidgetToHandleInput_Widget_1) == 0x000240, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetWidgetToHandleInput_Widget_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_AsIMenu_Screen_1) == 0x000248, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_AsIMenu_Screen_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_bSuccess_1) == 0x000258, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetGameInstance_ReturnValue) == 0x000260, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_AsB_Game_Instance) == 0x000268, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_bSuccess_2) == 0x000270, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_GetWidgetToHandleInput_Widget_2) == 0x000278, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_GetWidgetToHandleInput_Widget_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_AsIMenu_Screen_2) == 0x000280, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_AsIMenu_Screen_2' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, K2Node_DynamicCast_bSuccess_3) == 0x000290, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewKeyDown, CallFunc_OnPreviewKeyDown_ReturnValue) == 0x000298, "Member 'WB_MasterScreen_C_OnPreviewKeyDown::CallFunc_OnPreviewKeyDown_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.OnPreviewMouseButtonDown
// 0x0238 (0x0238 - 0x0000)
struct WB_MasterScreen_C_OnPreviewMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5355[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_OnPreviewMouseButtonDown_ReturnValue;     // 0x0180(0x00B8)()
};
static_assert(alignof(WB_MasterScreen_C_OnPreviewMouseButtonDown) == 0x000008, "Wrong alignment on WB_MasterScreen_C_OnPreviewMouseButtonDown");
static_assert(sizeof(WB_MasterScreen_C_OnPreviewMouseButtonDown) == 0x000238, "Wrong size on WB_MasterScreen_C_OnPreviewMouseButtonDown");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, MouseEvent) == 0x000038, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, CallFunc_GetGameInstance_ReturnValue) == 0x000168, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, K2Node_DynamicCast_AsB_Game_Instance) == 0x000170, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_OnPreviewMouseButtonDown, CallFunc_OnPreviewMouseButtonDown_ReturnValue) == 0x000180, "Member 'WB_MasterScreen_C_OnPreviewMouseButtonDown::CallFunc_OnPreviewMouseButtonDown_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.RegisterFocusedControl
// 0x0030 (0x0030 - 0x0000)
struct WB_MasterScreen_C_RegisterFocusedControl final
{
public:
	class UWB_BaseControl_C*                      FocusedControl;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_RegisterFocusedControl) == 0x000008, "Wrong alignment on WB_MasterScreen_C_RegisterFocusedControl");
static_assert(sizeof(WB_MasterScreen_C_RegisterFocusedControl) == 0x000030, "Wrong size on WB_MasterScreen_C_RegisterFocusedControl");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, FocusedControl) == 0x000000, "Member 'WB_MasterScreen_C_RegisterFocusedControl::FocusedControl' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget) == 0x000008, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_GetCurrentOpenedScreenWidgetFunction_Widget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'WB_MasterScreen_C_RegisterFocusedControl::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_MasterScreen_C_RegisterFocusedControl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002B, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_BooleanAND_ReturnValue) == 0x00002C, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_RegisterFocusedControl, CallFunc_Map_Remove_ReturnValue) == 0x00002D, "Member 'WB_MasterScreen_C_RegisterFocusedControl::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_MasterScreen_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MasterScreen_C_Tick) == 0x000004, "Wrong alignment on WB_MasterScreen_C_Tick");
static_assert(sizeof(WB_MasterScreen_C_Tick) == 0x00003C, "Wrong size on WB_MasterScreen_C_Tick");
static_assert(offsetof(WB_MasterScreen_C_Tick, MyGeometry) == 0x000000, "Member 'WB_MasterScreen_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_MasterScreen_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_MasterScreen.WB_MasterScreen_C.TryFindFocusableWidget
// 0x0068 (0x0068 - 0x0000)
struct WB_MasterScreen_C_TryFindFocusableWidget final
{
public:
	class UUserWidget*                            UserWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundFocus;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5356[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CurrentFocusableWidget;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    ChildWidgets;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyUserFocus_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5357[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryFindFocusableWidget_FoundFocus;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5358[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5359[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_WidgetGetChildrenOfClass_ChildWidgets;    // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WB_MasterScreen_C_TryFindFocusableWidget) == 0x000008, "Wrong alignment on WB_MasterScreen_C_TryFindFocusableWidget");
static_assert(sizeof(WB_MasterScreen_C_TryFindFocusableWidget) == 0x000068, "Wrong size on WB_MasterScreen_C_TryFindFocusableWidget");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, UserWidget) == 0x000000, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::UserWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, FoundFocus) == 0x000008, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::FoundFocus' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CurrentFocusableWidget) == 0x000010, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CurrentFocusableWidget' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, ChildWidgets) == 0x000018, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::ChildWidgets' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_HasAnyUserFocus_ReturnValue) == 0x000034, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_HasAnyUserFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_Array_Get_Item) == 0x000038, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_TryFindFocusableWidget_FoundFocus) == 0x000040, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_TryFindFocusableWidget_FoundFocus' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000050, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MasterScreen_C_TryFindFocusableWidget, CallFunc_WidgetGetChildrenOfClass_ChildWidgets) == 0x000058, "Member 'WB_MasterScreen_C_TryFindFocusableWidget::CallFunc_WidgetGetChildrenOfClass_ChildWidgets' has a wrong offset!");

}

