#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Items

#include "Basic.hpp"

#include "BFL_Items_classes.hpp"
#include "BFL_Items_parameters.hpp"


namespace SDK
{

// Function BFL_Items.BFL_Items_C.GetClientItemUnlocks
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSGrantedItem>            GrantedItems                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UB_InventoryManager_C*            InventoryManager                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FromCauldron                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSClientItemUnlock>       ClientItemUnlocks                                      (Parm, OutParm)

void UBFL_Items_C::GetClientItemUnlocks(TArray<struct FSGrantedItem>& GrantedItems, class UB_InventoryManager_C* InventoryManager, bool FromCauldron, class UObject* __WorldContext, TArray<struct FSClientItemUnlock>* ClientItemUnlocks)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_Items_C", "GetClientItemUnlocks");

	Params::BFL_Items_C_GetClientItemUnlocks Parms{};

	Parms.GrantedItems = std::move(GrantedItems);
	Parms.InventoryManager = InventoryManager;
	Parms.FromCauldron = FromCauldron;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	GrantedItems = std::move(Parms.GrantedItems);

	if (ClientItemUnlocks != nullptr)
		*ClientItemUnlocks = std::move(Parms.ClientItemUnlocks);
}


// Function BFL_Items.BFL_Items_C.TryAddItemToClientItemUnlockList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSClientItemUnlock>       InClientItemUnlocks                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UB_InventoryManager_C*            InventoryManager                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemDefId                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemQuantity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FromCauldron                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRecipe                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    HasBeenAdded                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBFL_Items_C::TryAddItemToClientItemUnlockList(TArray<struct FSClientItemUnlock>& InClientItemUnlocks, class UB_InventoryManager_C* InventoryManager, int32 ItemDefId, int32 ItemQuantity, bool FromCauldron, bool IsRecipe, class UObject* __WorldContext, bool* HasBeenAdded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BFL_Items_C", "TryAddItemToClientItemUnlockList");

	Params::BFL_Items_C_TryAddItemToClientItemUnlockList Parms{};

	Parms.InClientItemUnlocks = std::move(InClientItemUnlocks);
	Parms.InventoryManager = InventoryManager;
	Parms.ItemDefId = ItemDefId;
	Parms.ItemQuantity = ItemQuantity;
	Parms.FromCauldron = FromCauldron;
	Parms.IsRecipe = IsRecipe;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	InClientItemUnlocks = std::move(Parms.InClientItemUnlocks);

	if (HasBeenAdded != nullptr)
		*HasBeenAdded = Parms.HasBeenAdded;
}

}

