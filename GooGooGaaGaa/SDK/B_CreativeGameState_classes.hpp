#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CreativeGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_GameState_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_CreativeGameState.B_CreativeGameState_C
// 0x0040 (0x05F0 - 0x05B0)
class AB_CreativeGameState_C final : public AB_GameState_C
{
public:
	uint8                                         Pad_4823[0x7];                                     // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_B_CreativeGameState_C;              // 0x05B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FString                                 CurrentLayoutName;                                 // 0x05B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         CurrentPropAmount;                                 // 0x05C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPropAmount;                                     // 0x05CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentPlaceableStaticAmount;                      // 0x05D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPlaceableStaticAmount;                          // 0x05D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnTogglePlayTest;                                  // 0x05D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsPlayTestMode;                                    // 0x05E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)

public:
	void OnTogglePlayTest__DelegateSignature(bool HasPlayTestStarted);
	void ExecuteUbergraph_B_CreativeGameState(int32 EntryPoint);
	void HasRoundStarted(bool* RoundHasStarted);
	void HasTrackingStarted(bool* Param_HasTrackingStarted);
	bool IsPhysicsEnabled();
	void IsRoundEnd(bool* RoundIsEnd);
	void LoadLayoutMulticast(const class FString& LayoutName);
	void OnRep_IsPlayTestMode();
	void PlayerSelectActorMulticast(class AActor* Actor, class APlayerState* Player_State);
	void PlayerUnselectActorForEditingMulticast(class AActor* Actor, const struct FTransform& Transform);
	void ResetSnow();
	void SaveLayoutMulticast(const class FString& LayoutName, bool IsAutoSave);
	void TogglePlayTest(bool HasPlayTestStarted);
	void TogglePlayTestMultiCast(bool HasPlayTestStarted);
	void UpdateActorTransform(class AActor* Actor, const struct FTransform& NewTransform);
	void UpdateEditedActorTransform(class AActor* Actor, const struct FTransform& Transform);

	void IsMapLayoutAlreadySaved(bool* IsAlreadySaved) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_CreativeGameState_C">();
	}
	static class AB_CreativeGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_CreativeGameState_C>();
	}
};
static_assert(alignof(AB_CreativeGameState_C) == 0x000008, "Wrong alignment on AB_CreativeGameState_C");
static_assert(sizeof(AB_CreativeGameState_C) == 0x0005F0, "Wrong size on AB_CreativeGameState_C");
static_assert(offsetof(AB_CreativeGameState_C, UberGraphFrame_B_CreativeGameState_C) == 0x0005B0, "Member 'AB_CreativeGameState_C::UberGraphFrame_B_CreativeGameState_C' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, CurrentLayoutName) == 0x0005B8, "Member 'AB_CreativeGameState_C::CurrentLayoutName' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, CurrentPropAmount) == 0x0005C8, "Member 'AB_CreativeGameState_C::CurrentPropAmount' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, MaxPropAmount) == 0x0005CC, "Member 'AB_CreativeGameState_C::MaxPropAmount' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, CurrentPlaceableStaticAmount) == 0x0005D0, "Member 'AB_CreativeGameState_C::CurrentPlaceableStaticAmount' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, MaxPlaceableStaticAmount) == 0x0005D4, "Member 'AB_CreativeGameState_C::MaxPlaceableStaticAmount' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, OnTogglePlayTest) == 0x0005D8, "Member 'AB_CreativeGameState_C::OnTogglePlayTest' has a wrong offset!");
static_assert(offsetof(AB_CreativeGameState_C, IsPlayTestMode) == 0x0005E8, "Member 'AB_CreativeGameState_C::IsPlayTestMode' has a wrong offset!");

}

