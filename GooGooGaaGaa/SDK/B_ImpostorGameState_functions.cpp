#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorGameState

#include "Basic.hpp"

#include "B_ImpostorGameState_classes.hpp"
#include "B_ImpostorGameState_parameters.hpp"


namespace SDK
{

// Function B_ImpostorGameState.B_ImpostorGameState_C.EvaluateMeetingVotes
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::EvaluateMeetingVotes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "EvaluateMeetingVotes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ExecuteUbergraph_B_ImpostorGameState
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::ExecuteUbergraph_B_ImpostorGameState(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ExecuteUbergraph_B_ImpostorGameState");

	Params::B_ImpostorGameState_C_ExecuteUbergraph_B_ImpostorGameState Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.FadeIntoMeetingSequence
// (BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::FadeIntoMeetingSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "FadeIntoMeetingSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.FadeIntoTeamCamera
// (BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::FadeIntoTeamCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "FadeIntoTeamCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.FinishMeetingSequence
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::FinishMeetingSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "FinishMeetingSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.GetHunterSkin
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AB_ImpostorPlayerState_C*         PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHunterSkin                      HunterSkin                                             (Parm, OutParm, NoDestructor)

void AB_ImpostorGameState_C::GetHunterSkin(class AB_ImpostorPlayerState_C* PlayerState, struct FHunterSkin* HunterSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "GetHunterSkin");

	Params::B_ImpostorGameState_C_GetHunterSkin Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);

	if (HunterSkin != nullptr)
		*HunterSkin = std::move(Parms.HunterSkin);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.GetPlayerColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AB_ImpostorGameState_C::GetPlayerColor(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "GetPlayerColor");

	Params::B_ImpostorGameState_C_GetPlayerColor Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.GetPlayerToVoteOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerState*                     PlayerState                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::GetPlayerToVoteOut(class APlayerState** PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "GetPlayerToVoteOut");

	Params::B_ImpostorGameState_C_GetPlayerToVoteOut Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerState != nullptr)
		*PlayerState = Parms.PlayerState;
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.HandleSpawnVoteCard
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PlayerState_C*                 PlayerState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::HandleSpawnVoteCard(class AB_PlayerState_C* PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "HandleSpawnVoteCard");

	Params::B_ImpostorGameState_C_HandleSpawnVoteCard Parms{};

	Parms.PlayerState = PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.HasRoundStarted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RoundHasStarted                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::HasRoundStarted(bool* RoundHasStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "HasRoundStarted");

	Params::B_ImpostorGameState_C_HasRoundStarted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RoundHasStarted != nullptr)
		*RoundHasStarted = Parms.RoundHasStarted;
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.IsRoundEnd
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RoundIsEnd                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::IsRoundEnd(bool* RoundIsEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "IsRoundEnd");

	Params::B_ImpostorGameState_C_IsRoundEnd Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RoundIsEnd != nullptr)
		*RoundIsEnd = Parms.RoundIsEnd;
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.IsTickingCooldowns
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    TickingCooldowns                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::IsTickingCooldowns(bool* TickingCooldowns)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "IsTickingCooldowns");

	Params::B_ImpostorGameState_C_IsTickingCooldowns Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TickingCooldowns != nullptr)
		*TickingCooldowns = Parms.TickingCooldowns;
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.OnRep_MeetingState
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::OnRep_MeetingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "OnRep_MeetingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.OnRep_State
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "OnRep_State");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ImpostorGameState_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ReceiveTick");

	Params::B_ImpostorGameState_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.SetHuntersAndCorpsesVisibility
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorGameState_C::SetHuntersAndCorpsesVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "SetHuntersAndCorpsesVisibility");

	Params::B_ImpostorGameState_C_SetHuntersAndCorpsesVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ShowMeetingSequence
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::ShowMeetingSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ShowMeetingSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ShowTeamCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::ShowTeamCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ShowTeamCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.ShowTeamCameraMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::ShowTeamCameraMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "ShowTeamCameraMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.StopAllSabotages
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::StopAllSabotages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "StopAllSabotages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorGameState.B_ImpostorGameState_C.StopAllTasks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AB_ImpostorGameState_C::StopAllTasks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorGameState_C", "StopAllTasks");

	UObject::ProcessEvent(Func, nullptr);
}

}

