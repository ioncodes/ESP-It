#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SkinFunctionLibrary

#include "Basic.hpp"

#include "B_SkinFunctionLibrary_classes.hpp"
#include "B_SkinFunctionLibrary_parameters.hpp"


namespace SDK
{

// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.GetRarityInfo
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EB_Rarity                               Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)
// struct FLinearColor                     Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::GetRarityInfo(EB_Rarity Rarity, class UObject* __WorldContext, class FText* Param_Name, struct FLinearColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "GetRarityInfo");

	Params::B_SkinFunctionLibrary_C_GetRarityInfo Parms{};

	Parms.Rarity = Rarity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.GetWitchSkinClasses
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FWitchSkin                       WitchSkin                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class UClass*> UB_SkinFunctionLibrary_C::GetWitchSkinClasses(const struct FWitchSkin& WitchSkin, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "GetWitchSkinClasses");

	Params::B_SkinFunctionLibrary_C_GetWitchSkinClasses Parms{};

	Parms.WitchSkin = std::move(WitchSkin);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.IsIconSlot
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Slot                                  Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_SkinFunctionLibrary_C::IsIconSlot(E_Slot Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "IsIconSlot");

	Params::B_SkinFunctionLibrary_C_IsIconSlot Parms{};

	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.IsHunterSlot
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Slot                                  Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_SkinFunctionLibrary_C::IsHunterSlot(E_Slot Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "IsHunterSlot");

	Params::B_SkinFunctionLibrary_C_IsHunterSlot Parms{};

	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.IsWitchSlot
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Slot                                  Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_SkinFunctionLibrary_C::IsWitchSlot(E_Slot Slot, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "IsWitchSlot");

	Params::B_SkinFunctionLibrary_C_IsWitchSlot Parms{};

	Parms.Slot = Slot;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.GetSteamItemNameFromID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   DefinitionId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)

void UB_SkinFunctionLibrary_C::GetSteamItemNameFromID(int32 DefinitionId, class UObject* __WorldContext, class FText* Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "GetSteamItemNameFromID");

	Params::B_SkinFunctionLibrary_C_GetSteamItemNameFromID Parms{};

	Parms.DefinitionId = DefinitionId;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.SortSkinClassArrayByRarity
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_ItemInfo>              ItemInfos                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_ItemInfo>              SortedItemInfos                                        (Parm, OutParm)

void UB_SkinFunctionLibrary_C::SortSkinClassArrayByRarity(TArray<struct FS_ItemInfo>& ItemInfos, class UObject* __WorldContext, TArray<struct FS_ItemInfo>* SortedItemInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "SortSkinClassArrayByRarity");

	Params::B_SkinFunctionLibrary_C_SortSkinClassArrayByRarity Parms{};

	Parms.ItemInfos = std::move(ItemInfos);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	ItemInfos = std::move(Parms.ItemInfos);

	if (SortedItemInfos != nullptr)
		*SortedItemInfos = std::move(Parms.SortedItemInfos);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.SortRecipeClassArrayByRarity
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FS_RecipeInfo>            RecipeInfos                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_RecipeInfo>            SortedRecipeInfos                                      (Parm, OutParm)

void UB_SkinFunctionLibrary_C::SortRecipeClassArrayByRarity(TArray<struct FS_RecipeInfo>& RecipeInfos, class UObject* __WorldContext, TArray<struct FS_RecipeInfo>* SortedRecipeInfos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "SortRecipeClassArrayByRarity");

	Params::B_SkinFunctionLibrary_C_SortRecipeClassArrayByRarity Parms{};

	Parms.RecipeInfos = std::move(RecipeInfos);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	RecipeInfos = std::move(Parms.RecipeInfos);

	if (SortedRecipeInfos != nullptr)
		*SortedRecipeInfos = std::move(Parms.SortedRecipeInfos);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.GetRaritySortingValue
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EB_Rarity                               Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UB_SkinFunctionLibrary_C::GetRaritySortingValue(EB_Rarity Rarity, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "GetRaritySortingValue");

	Params::B_SkinFunctionLibrary_C_GetRaritySortingValue Parms{};

	Parms.Rarity = Rarity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.IsHighQualityRecipe
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EB_Rarity                               Rariry                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_SkinFunctionLibrary_C::IsHighQualityRecipe(EB_Rarity Rariry, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "IsHighQualityRecipe");

	Params::B_SkinFunctionLibrary_C_IsHighQualityRecipe Parms{};

	Parms.Rariry = Rariry;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.IsHighQualityItem
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EB_Rarity                               Rarity                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_SkinFunctionLibrary_C::IsHighQualityItem(EB_Rarity Rarity, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "IsHighQualityItem");

	Params::B_SkinFunctionLibrary_C_IsHighQualityItem Parms{};

	Parms.Rarity = Rarity;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.DestroySkinSelectionScenes
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::DestroySkinSelectionScenes(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "DestroySkinSelectionScenes");

	Params::B_SkinFunctionLibrary_C_DestroySkinSelectionScenes Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.GetIngredientInfo
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Ingredients                           Ingredient                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   DefId                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EB_Rarity                               Rarity                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Texture                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   SpawnEffect                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::GetIngredientInfo(E_Ingredients Ingredient, class UObject* __WorldContext, int32* DefId, EB_Rarity* Rarity, class UTexture2D** Texture, class UNiagaraSystem** SpawnEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "GetIngredientInfo");

	Params::B_SkinFunctionLibrary_C_GetIngredientInfo Parms{};

	Parms.Ingredient = Ingredient;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (DefId != nullptr)
		*DefId = Parms.DefId;

	if (Rarity != nullptr)
		*Rarity = Parms.Rarity;

	if (Texture != nullptr)
		*Texture = Parms.Texture;

	if (SpawnEffect != nullptr)
		*SpawnEffect = Parms.SpawnEffect;
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.AnimBPVelocityClamp
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LastLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimInstance*                    AnimBP                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    TooFast                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::AnimBPVelocityClamp(struct FVector& LastLocation, class UAnimInstance* AnimBP, class UObject* __WorldContext, bool* TooFast, struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "AnimBPVelocityClamp");

	Params::B_SkinFunctionLibrary_C_AnimBPVelocityClamp Parms{};

	Parms.LastLocation = std::move(LastLocation);
	Parms.AnimBP = AnimBP;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	LastLocation = std::move(Parms.LastLocation);

	if (TooFast != nullptr)
		*TooFast = Parms.TooFast;

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.ApplyHunterHeadOffset
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Head                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Hat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::ApplyHunterHeadOffset(class AActor* Head, class AActor* Hat, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "ApplyHunterHeadOffset");

	Params::B_SkinFunctionLibrary_C_ApplyHunterHeadOffset Parms{};

	Parms.Head = Head;
	Parms.Hat = Hat;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_SkinFunctionLibrary.B_SkinFunctionLibrary_C.UpdateSkinColor
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FB_SkinColor                     SkinColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_SkinFunctionLibrary_C::UpdateSkinColor(TArray<class AActor*>& Array, const struct FB_SkinColor& SkinColor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_SkinFunctionLibrary_C", "UpdateSkinColor");

	Params::B_SkinFunctionLibrary_C_UpdateSkinColor Parms{};

	Parms.Array = std::move(Array);
	Parms.SkinColor = std::move(SkinColor);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}

}

