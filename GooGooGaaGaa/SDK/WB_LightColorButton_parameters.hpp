#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_LightColorButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_LightColorButton.WB_LightColorButton_C.GetBorderColor
// 0x0020 (0x0020 - 0x0000)
struct WB_LightColorButton_C_GetBorderColor final
{
public:
	struct FLinearColor                           Param_Color;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorButton_C_GetBorderColor) == 0x000004, "Wrong alignment on WB_LightColorButton_C_GetBorderColor");
static_assert(sizeof(WB_LightColorButton_C_GetBorderColor) == 0x000020, "Wrong size on WB_LightColorButton_C_GetBorderColor");
static_assert(offsetof(WB_LightColorButton_C_GetBorderColor, Param_Color) == 0x000000, "Member 'WB_LightColorButton_C_GetBorderColor::Param_Color' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetBorderColor, K2Node_MakeStruct_LinearColor) == 0x000010, "Member 'WB_LightColorButton_C_GetBorderColor::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function WB_LightColorButton.WB_LightColorButton_C.Clicked
// 0x0080 (0x0080 - 0x0000)
struct WB_LightColorButton_C_Clicked final
{
public:
	class UWB_LightColorTab_C*                    LightColorTabParent;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_WorldSettingsTab_C*                 WorldsettingsTabParent;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EA[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativePlayerController_C*          K2Node_DynamicCast_AsB_Creative_Player_Controller; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LightColorTab_C*                    K2Node_DynamicCast_AsWB_Light_Color_Tab;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_PlaceableLight_C*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47ED[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_LightColorPopup_C*                  K2Node_DynamicCast_AsWB_Light_Color_Popup;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EE[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetColorConsideringBrightness_NewColor;   // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorButton_C_Clicked) == 0x000008, "Wrong alignment on WB_LightColorButton_C_Clicked");
static_assert(sizeof(WB_LightColorButton_C_Clicked) == 0x000080, "Wrong size on WB_LightColorButton_C_Clicked");
static_assert(offsetof(WB_LightColorButton_C_Clicked, LightColorTabParent) == 0x000000, "Member 'WB_LightColorButton_C_Clicked::LightColorTabParent' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, WorldsettingsTabParent) == 0x000008, "Member 'WB_LightColorButton_C_Clicked::WorldsettingsTabParent' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WB_LightColorButton_C_Clicked::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WB_LightColorButton_C_Clicked::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WB_LightColorButton_C_Clicked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'WB_LightColorButton_C_Clicked::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_AsB_Creative_Player_Controller) == 0x000028, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_AsB_Creative_Player_Controller' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_AsWB_Light_Color_Tab) == 0x000038, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_AsWB_Light_Color_Tab' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_LightColorButton_C_Clicked::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'WB_LightColorButton_C_Clicked::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'WB_LightColorButton_C_Clicked::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_AsWB_Light_Color_Popup) == 0x000058, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_AsWB_Light_Color_Popup' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'WB_LightColorButton_C_Clicked::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_Clicked, CallFunc_GetColorConsideringBrightness_NewColor) == 0x000068, "Member 'WB_LightColorButton_C_Clicked::CallFunc_GetColorConsideringBrightness_NewColor' has a wrong offset!");

// Function WB_LightColorButton.WB_LightColorButton_C.SetIndividualParameters
// 0x0010 (0x0010 - 0x0000)
struct WB_LightColorButton_C_SetIndividualParameters final
{
public:
	class UB_LightColorButtonData_C*              K2Node_DynamicCast_AsB_Light_Color_Button_Data;    // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorButton_C_SetIndividualParameters) == 0x000008, "Wrong alignment on WB_LightColorButton_C_SetIndividualParameters");
static_assert(sizeof(WB_LightColorButton_C_SetIndividualParameters) == 0x000010, "Wrong size on WB_LightColorButton_C_SetIndividualParameters");
static_assert(offsetof(WB_LightColorButton_C_SetIndividualParameters, K2Node_DynamicCast_AsB_Light_Color_Button_Data) == 0x000000, "Member 'WB_LightColorButton_C_SetIndividualParameters::K2Node_DynamicCast_AsB_Light_Color_Button_Data' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_SetIndividualParameters, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'WB_LightColorButton_C_SetIndividualParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WB_LightColorButton.WB_LightColorButton_C.GetIcon
// 0x0090 (0x0090 - 0x0000)
struct WB_LightColorButton_C_GetIcon final
{
public:
	TSoftObjectPtr<class UObject>                 ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	class UMaterial*                              ColorMaterial;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UWB_GridButton_C>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0058(0x0028)(InstancedReference, UObjectWrapper, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_LightColorButton_C_GetIcon) == 0x000008, "Wrong alignment on WB_LightColorButton_C_GetIcon");
static_assert(sizeof(WB_LightColorButton_C_GetIcon) == 0x000090, "Wrong size on WB_LightColorButton_C_GetIcon");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, ReturnValue) == 0x000000, "Member 'WB_LightColorButton_C_GetIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, ColorMaterial) == 0x000028, "Member 'WB_LightColorButton_C_GetIcon::ColorMaterial' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, CallFunc_BreakVector_X) == 0x000030, "Member 'WB_LightColorButton_C_GetIcon::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, CallFunc_BreakVector_Y) == 0x000038, "Member 'WB_LightColorButton_C_GetIcon::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, CallFunc_BreakVector_Z) == 0x000040, "Member 'WB_LightColorButton_C_GetIcon::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, K2Node_MakeStruct_LinearColor) == 0x000048, "Member 'WB_LightColorButton_C_GetIcon::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000058, "Member 'WB_LightColorButton_C_GetIcon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, K2Node_MakeStruct_R_ImplicitCast) == 0x000080, "Member 'WB_LightColorButton_C_GetIcon::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, K2Node_MakeStruct_G_ImplicitCast) == 0x000084, "Member 'WB_LightColorButton_C_GetIcon::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_LightColorButton_C_GetIcon, K2Node_MakeStruct_B_ImplicitCast) == 0x000088, "Member 'WB_LightColorButton_C_GetIcon::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

}

