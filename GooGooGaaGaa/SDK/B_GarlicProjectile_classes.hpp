#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_GarlicProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_GarlicProjectile.B_GarlicProjectile_C
// 0x0038 (0x02D0 - 0x0298)
class AB_GarlicProjectile_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_GarlicTrail;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GarlicCloveClass;                                  // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLifeTime;                                   // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AttachGarlicClove(class USceneComponent* Parent);
	void ExecuteUbergraph_B_GarlicProjectile(int32 EntryPoint);
	void IncrementLifeSpanTimer();
	void PlayDestroyEffects(const struct FVector& Location);
	void PlayDestroyEffectsMulti(const struct FVector& Location);
	void ReceiveBeginPlay();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void TearDown();
	void TearDownMulti();
	void TearDownPoolObject();
	void TearUp(const struct FTransform& SpawnTransform, class AActor* Param_Owner, class APawn* Param_Instigator);
	void TearUpMulti(const struct FTransform& Transform, class AActor* Param_Owner, class APawn* Param_Instigator);
	void TearUpPoolObject(const struct FTransform& SpawnTransform, class AActor* Param_Owner, class APawn* Param_Instigator);
	void UpdateVelocityVector();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_GarlicProjectile_C">();
	}
	static class AB_GarlicProjectile_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_GarlicProjectile_C>();
	}
};
static_assert(alignof(AB_GarlicProjectile_C) == 0x000008, "Wrong alignment on AB_GarlicProjectile_C");
static_assert(sizeof(AB_GarlicProjectile_C) == 0x0002D0, "Wrong size on AB_GarlicProjectile_C");
static_assert(offsetof(AB_GarlicProjectile_C, UberGraphFrame) == 0x000298, "Member 'AB_GarlicProjectile_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, NS_GarlicTrail) == 0x0002A0, "Member 'AB_GarlicProjectile_C::NS_GarlicTrail' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, StaticMesh) == 0x0002A8, "Member 'AB_GarlicProjectile_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, Sphere) == 0x0002B0, "Member 'AB_GarlicProjectile_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, ProjectileMovement) == 0x0002B8, "Member 'AB_GarlicProjectile_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, GarlicCloveClass) == 0x0002C0, "Member 'AB_GarlicProjectile_C::GarlicCloveClass' has a wrong offset!");
static_assert(offsetof(AB_GarlicProjectile_C, CurrentLifeTime) == 0x0002C8, "Member 'AB_GarlicProjectile_C::CurrentLifeTime' has a wrong offset!");

}

