#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PotatoParameters

#include "Basic.hpp"

#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_PotatoParameters.B_PotatoParameters_C
// 0x0060 (0x00B8 - 0x0058)
class UB_PotatoParameters_C final : public USkillParameters
{
public:
	bool                                          IsProjectile;                                      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C7[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Cooldown;                                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ManualFireCooldown;                                // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StaminaCost;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Velocity;                                          // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileHealth;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GravityScale;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PushStrength;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileScale;                                   // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Projectiles;                                       // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C8[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spread;                                            // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FText GetFormattedTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_PotatoParameters_C">();
	}
	static class UB_PotatoParameters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_PotatoParameters_C>();
	}
};
static_assert(alignof(UB_PotatoParameters_C) == 0x000008, "Wrong alignment on UB_PotatoParameters_C");
static_assert(sizeof(UB_PotatoParameters_C) == 0x0000B8, "Wrong size on UB_PotatoParameters_C");
static_assert(offsetof(UB_PotatoParameters_C, IsProjectile) == 0x000058, "Member 'UB_PotatoParameters_C::IsProjectile' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, Cooldown) == 0x000060, "Member 'UB_PotatoParameters_C::Cooldown' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, ManualFireCooldown) == 0x000068, "Member 'UB_PotatoParameters_C::ManualFireCooldown' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, StaminaCost) == 0x000070, "Member 'UB_PotatoParameters_C::StaminaCost' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, Velocity) == 0x000078, "Member 'UB_PotatoParameters_C::Velocity' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, Damage) == 0x000080, "Member 'UB_PotatoParameters_C::Damage' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, ProjectileHealth) == 0x000088, "Member 'UB_PotatoParameters_C::ProjectileHealth' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, GravityScale) == 0x000090, "Member 'UB_PotatoParameters_C::GravityScale' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, PushStrength) == 0x000098, "Member 'UB_PotatoParameters_C::PushStrength' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, ProjectileScale) == 0x0000A0, "Member 'UB_PotatoParameters_C::ProjectileScale' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, Projectiles) == 0x0000A8, "Member 'UB_PotatoParameters_C::Projectiles' has a wrong offset!");
static_assert(offsetof(UB_PotatoParameters_C, Spread) == 0x0000B0, "Member 'UB_PotatoParameters_C::Spread' has a wrong offset!");

}

