#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Sessions

#include "Basic.hpp"

#include "OnlineSubsystemBlueprints_structs.hpp"


namespace SDK::Params
{

// Function BFL_Sessions.BFL_Sessions_C.GetDedicatedAddressAndID
// 0x0228 (0x0228 - 0x0000)
struct BFL_Sessions_C_GetDedicatedAddressAndID final
{
public:
	struct FOnlineSessionSearchResultBP           Session;                                           // 0x0000(0x01B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x01B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Address;                                           // 0x01C0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ServerID;                                          // 0x01D0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class UOnlineSessionSubsystem*                CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetResolvedConnectStringBySearchResult_bWasSuccessful; // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359E[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetResolvedConnectStringBySearchResult_OutConnectInfo; // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Sessions_C_GetDedicatedAddressAndID) == 0x000008, "Wrong alignment on BFL_Sessions_C_GetDedicatedAddressAndID");
static_assert(sizeof(BFL_Sessions_C_GetDedicatedAddressAndID) == 0x000228, "Wrong size on BFL_Sessions_C_GetDedicatedAddressAndID");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, Session) == 0x000000, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::Session' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, __WorldContext) == 0x0001B8, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, Address) == 0x0001C0, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::Address' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, ServerID) == 0x0001D0, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::ServerID' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x0001E0, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_GetResolvedConnectStringBySearchResult_bWasSuccessful) == 0x0001E8, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_GetResolvedConnectStringBySearchResult_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_GetResolvedConnectStringBySearchResult_OutConnectInfo) == 0x0001F0, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_GetResolvedConnectStringBySearchResult_OutConnectInfo' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_Split_LeftS) == 0x000200, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_Split_RightS) == 0x000210, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetDedicatedAddressAndID, CallFunc_Split_ReturnValue) == 0x000220, "Member 'BFL_Sessions_C_GetDedicatedAddressAndID::CallFunc_Split_ReturnValue' has a wrong offset!");

// Function BFL_Sessions.BFL_Sessions_C.GetExtraSessionSettings
// 0x0210 (0x0210 - 0x0000)
struct BFL_Sessions_C_GetExtraSessionSettings final
{
public:
	struct FOnlineSessionSearchResultBP           Session;                                           // 0x0000(0x01B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x01B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FOnlineSessionSettingBP> ExtraSettings;                                     // 0x01C0(0x0050)(Parm, OutParm)
};
static_assert(alignof(BFL_Sessions_C_GetExtraSessionSettings) == 0x000008, "Wrong alignment on BFL_Sessions_C_GetExtraSessionSettings");
static_assert(sizeof(BFL_Sessions_C_GetExtraSessionSettings) == 0x000210, "Wrong size on BFL_Sessions_C_GetExtraSessionSettings");
static_assert(offsetof(BFL_Sessions_C_GetExtraSessionSettings, Session) == 0x000000, "Member 'BFL_Sessions_C_GetExtraSessionSettings::Session' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetExtraSessionSettings, __WorldContext) == 0x0001B8, "Member 'BFL_Sessions_C_GetExtraSessionSettings::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetExtraSessionSettings, ExtraSettings) == 0x0001C0, "Member 'BFL_Sessions_C_GetExtraSessionSettings::ExtraSettings' has a wrong offset!");

// Function BFL_Sessions.BFL_Sessions_C.GetSessionMaxPlayers
// 0x01C8 (0x01C8 - 0x0000)
struct BFL_Sessions_C_GetSessionMaxPlayers final
{
public:
	struct FOnlineSessionSearchResultBP           Session;                                           // 0x0000(0x01B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x01B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPlayers;                                        // 0x01C0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Sessions_C_GetSessionMaxPlayers) == 0x000008, "Wrong alignment on BFL_Sessions_C_GetSessionMaxPlayers");
static_assert(sizeof(BFL_Sessions_C_GetSessionMaxPlayers) == 0x0001C8, "Wrong size on BFL_Sessions_C_GetSessionMaxPlayers");
static_assert(offsetof(BFL_Sessions_C_GetSessionMaxPlayers, Session) == 0x000000, "Member 'BFL_Sessions_C_GetSessionMaxPlayers::Session' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionMaxPlayers, __WorldContext) == 0x0001B8, "Member 'BFL_Sessions_C_GetSessionMaxPlayers::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionMaxPlayers, MaxPlayers) == 0x0001C0, "Member 'BFL_Sessions_C_GetSessionMaxPlayers::MaxPlayers' has a wrong offset!");

// Function BFL_Sessions.BFL_Sessions_C.GetSessionSettingValue
// 0x0060 (0x0060 - 0x0000)
struct BFL_Sessions_C_GetSessionSettingValue final
{
public:
	struct FOnlineSessionSettingBP                SessionSetting;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          As_Bool;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359F[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         As_Int;                                            // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         As_Float;                                          // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         As_Int_64;                                         // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 As_String;                                         // 0x0050(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Sessions_C_GetSessionSettingValue) == 0x000008, "Wrong alignment on BFL_Sessions_C_GetSessionSettingValue");
static_assert(sizeof(BFL_Sessions_C_GetSessionSettingValue) == 0x000060, "Wrong size on BFL_Sessions_C_GetSessionSettingValue");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, SessionSetting) == 0x000000, "Member 'BFL_Sessions_C_GetSessionSettingValue::SessionSetting' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, __WorldContext) == 0x000030, "Member 'BFL_Sessions_C_GetSessionSettingValue::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, As_Bool) == 0x000038, "Member 'BFL_Sessions_C_GetSessionSettingValue::As_Bool' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, As_Int) == 0x00003C, "Member 'BFL_Sessions_C_GetSessionSettingValue::As_Int' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, As_Float) == 0x000040, "Member 'BFL_Sessions_C_GetSessionSettingValue::As_Float' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, As_Int_64) == 0x000048, "Member 'BFL_Sessions_C_GetSessionSettingValue::As_Int_64' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_GetSessionSettingValue, As_String) == 0x000050, "Member 'BFL_Sessions_C_GetSessionSettingValue::As_String' has a wrong offset!");

// Function BFL_Sessions.BFL_Sessions_C.IsSessionDedicatedServer
// 0x0280 (0x0280 - 0x0000)
struct BFL_Sessions_C_IsSessionDedicatedServer final
{
public:
	struct FOnlineSessionSearchResultBP           Session;                                           // 0x0000(0x01B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x01B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Dedicated;                                      // 0x01C0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A1[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x01C4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A2[0x4];                                     // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FOnlineSessionSettingBP> CallFunc_GetExtraSessionSettings_ExtraSettings;    // 0x01D0(0x0050)()
	struct FOnlineSessionSettingBP                CallFunc_Map_Find_Value;                           // 0x0220(0x0030)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSessionSettingValue_As_Bool;           // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A3[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSessionSettingValue_As_Int;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSessionSettingValue_As_Float;          // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35A4[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_GetSessionSettingValue_As_Int_64;         // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSessionSettingValue_As_String;         // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Sessions_C_IsSessionDedicatedServer) == 0x000008, "Wrong alignment on BFL_Sessions_C_IsSessionDedicatedServer");
static_assert(sizeof(BFL_Sessions_C_IsSessionDedicatedServer) == 0x000280, "Wrong size on BFL_Sessions_C_IsSessionDedicatedServer");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, Session) == 0x000000, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::Session' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, __WorldContext) == 0x0001B8, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, Is_Dedicated) == 0x0001C0, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::Is_Dedicated' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, Temp_name_Variable) == 0x0001C4, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetExtraSessionSettings_ExtraSettings) == 0x0001D0, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetExtraSessionSettings_ExtraSettings' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_Map_Find_Value) == 0x000220, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_Map_Find_ReturnValue) == 0x000250, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetSessionSettingValue_As_Bool) == 0x000251, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetSessionSettingValue_As_Bool' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetSessionSettingValue_As_Int) == 0x000254, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetSessionSettingValue_As_Int' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetSessionSettingValue_As_Float) == 0x000258, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetSessionSettingValue_As_Float' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetSessionSettingValue_As_Int_64) == 0x000260, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetSessionSettingValue_As_Int_64' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_GetSessionSettingValue_As_String) == 0x000268, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_GetSessionSettingValue_As_String' has a wrong offset!");
static_assert(offsetof(BFL_Sessions_C_IsSessionDedicatedServer, CallFunc_BooleanAND_ReturnValue) == 0x000278, "Member 'BFL_Sessions_C_IsSessionDedicatedServer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

