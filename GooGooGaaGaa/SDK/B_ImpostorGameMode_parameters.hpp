#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorGameMode

#include "Basic.hpp"

#include "ETeamID_structs.hpp"
#include "E_TaskType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.AreEnoughPlayersReady
// 0x0050 (0x0050 - 0x0000)
struct B_ImpostorGameMode_C_AreEnoughPlayersReady final
{
public:
	bool                                          AreReady;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ReadyPlayers;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfAllPlayersAreReady_IsReady;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_AreEnoughPlayersReady) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_AreEnoughPlayersReady");
static_assert(sizeof(B_ImpostorGameMode_C_AreEnoughPlayersReady) == 0x000050, "Wrong size on B_ImpostorGameMode_C_AreEnoughPlayersReady");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, AreReady) == 0x000000, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::AreReady' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, ReadyPlayers) == 0x000004, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::ReadyPlayers' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_CheckIfAllPlayersAreReady_IsReady) == 0x000008, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_CheckIfAllPlayersAreReady_IsReady' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000009, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_WithEditor_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, Temp_int_Array_Index_Variable) == 0x000014, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, Temp_int_Variable) == 0x000024, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_AreEnoughPlayersReady, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'B_ImpostorGameMode_C_AreEnoughPlayersReady::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.CheckMeetingVotes
// 0x00A0 (0x00A0 - 0x0000)
struct B_ImpostorGameMode_C_CheckMeetingVotes final
{
public:
	class AB_ImpostorPlayerState_C*               CurrentPlayerState;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerToVoteOut_PlayerState;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_2;      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_CheckMeetingVotes) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_CheckMeetingVotes");
static_assert(sizeof(B_ImpostorGameMode_C_CheckMeetingVotes) == 0x0000A0, "Wrong size on B_ImpostorGameMode_C_CheckMeetingVotes");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CurrentPlayerState) == 0x000000, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CurrentPlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_GetGameState_ReturnValue_1) == 0x000020, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000028, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_GetPlayerToVoteOut_PlayerState) == 0x000038, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_GetPlayerToVoteOut_PlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, Temp_int_Array_Index_Variable) == 0x000040, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_GetGameState_ReturnValue_2) == 0x000048, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_GetGameState_ReturnValue_3) == 0x000050, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_AsB_Impostor_Game_State_2) == 0x000058, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_AsB_Impostor_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_AsB_Player_State) == 0x000078, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000088, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Less_IntInt_ReturnValue) == 0x000091, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000098, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckMeetingVotes, CallFunc_Not_PreBool_ReturnValue_1) == 0x00009B, "Member 'B_ImpostorGameMode_C_CheckMeetingVotes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.CheckTeamWin
// 0x00F0 (0x00F0 - 0x0000)
struct B_ImpostorGameMode_C_CheckTeamWin final
{
public:
	int32                                         AliveHunters;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AliveImpostors;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               CurrentPlayer;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  CallFunc_Map_Values_Values;                        // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x1];                                       // 0x00AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_CheckTeamWin) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_CheckTeamWin");
static_assert(sizeof(B_ImpostorGameMode_C_CheckTeamWin) == 0x0000F0, "Wrong size on B_ImpostorGameMode_C_CheckTeamWin");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, AliveHunters) == 0x000000, "Member 'B_ImpostorGameMode_C_CheckTeamWin::AliveHunters' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, AliveImpostors) == 0x000004, "Member 'B_ImpostorGameMode_C_CheckTeamWin::AliveImpostors' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CurrentPlayer) == 0x000008, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Variable) == 0x000014, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_WithEditor_ReturnValue) == 0x000048, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_AsB_Player_State) == 0x000060, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000070, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000079, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_BooleanAND_ReturnValue_1) == 0x00007C, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Not_PreBool_ReturnValue_1) == 0x000084, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Less_IntInt_ReturnValue_1) == 0x000085, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_BooleanAND_ReturnValue_2) == 0x00008D, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Map_Values_Values) == 0x000090, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Length_ReturnValue_2) == 0x0000A4, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A8, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000A9, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000AA, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Variable_1) == 0x0000AC, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B0, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B4, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, Temp_int_Array_Index_Variable_2) == 0x0000B8, "Member 'B_ImpostorGameMode_C_CheckTeamWin::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_AsB_Player_State_1) == 0x0000C8, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_bSuccess_2) == 0x0000D0, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x0000D8, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, K2Node_DynamicCast_bSuccess_3) == 0x0000E0, "Member 'B_ImpostorGameMode_C_CheckTeamWin::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E4, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000E8, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E9, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_CheckTeamWin, CallFunc_BooleanAND_ReturnValue_3) == 0x0000EA, "Member 'B_ImpostorGameMode_C_CheckTeamWin::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.ExecuteUbergraph_B_ImpostorGameMode
// 0x0020 (0x0020 - 0x0000)
struct B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode");
static_assert(sizeof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode) == 0x000020, "Wrong size on B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode");
static_assert(offsetof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode, EntryPoint) == 0x000000, "Member 'B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorGameMode_C_ExecuteUbergraph_B_ImpostorGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetTaskCount
// 0x0030 (0x0030 - 0x0000)
struct B_ImpostorGameMode_C_GetTaskCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_GetTaskCount) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_GetTaskCount");
static_assert(sizeof(B_ImpostorGameMode_C_GetTaskCount) == 0x000030, "Wrong size on B_ImpostorGameMode_C_GetTaskCount");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, ReturnValue) == 0x000000, "Member 'B_ImpostorGameMode_C_GetTaskCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount) == 0x000008, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_ImpostorGameMode_C_GetTaskCount::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ImpostorGameMode_C_GetTaskCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetTaskCount, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'B_ImpostorGameMode_C_GetTaskCount::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetWitchCount
// 0x0030 (0x0030 - 0x0000)
struct B_ImpostorGameMode_C_GetWitchCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_GetWitchCount) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_GetWitchCount");
static_assert(sizeof(B_ImpostorGameMode_C_GetWitchCount) == 0x000030, "Wrong size on B_ImpostorGameMode_C_GetWitchCount");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, ReturnValue) == 0x000000, "Member 'B_ImpostorGameMode_C_GetWitchCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount) == 0x000008, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_GetPlayersWhoWantsToPlayCount_PlayersWhoWantsToPlayCount' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_Map_Find_Value) == 0x000018, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_Map_Find_ReturnValue) == 0x00001C, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_ImpostorGameMode_C_GetWitchCount::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ImpostorGameMode_C_GetWitchCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_GetWitchCount, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'B_ImpostorGameMode_C_GetWitchCount::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleEndMatch
// 0x0040 (0x0040 - 0x0000)
struct B_ImpostorGameMode_C_HandleEndMatch final
{
public:
	ETeamID                                       WinnerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceRegardlessOfEnd;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_HandleEndMatch) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_HandleEndMatch");
static_assert(sizeof(B_ImpostorGameMode_C_HandleEndMatch) == 0x000040, "Wrong size on B_ImpostorGameMode_C_HandleEndMatch");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, WinnerTeam) == 0x000000, "Member 'B_ImpostorGameMode_C_HandleEndMatch::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, ForceRegardlessOfEnd) == 0x000001, "Member 'B_ImpostorGameMode_C_HandleEndMatch::ForceRegardlessOfEnd' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ImpostorGameMode_C_HandleEndMatch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, K2Node_DynamicCast_AsB_Game_State) == 0x000010, "Member 'B_ImpostorGameMode_C_HandleEndMatch::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorGameMode_C_HandleEndMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, CallFunc_GetGameState_ReturnValue_1) == 0x000020, "Member 'B_ImpostorGameMode_C_HandleEndMatch::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000028, "Member 'B_ImpostorGameMode_C_HandleEndMatch::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000030, "Member 'B_ImpostorGameMode_C_HandleEndMatch::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ImpostorGameMode_C_HandleEndMatch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'B_ImpostorGameMode_C_HandleEndMatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleEndMatch, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'B_ImpostorGameMode_C_HandleEndMatch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleGrantExp
// 0x00A8 (0x00A8 - 0x0000)
struct B_ImpostorGameMode_C_HandleGrantExp final
{
public:
	class AB_PlayerState_C*                       CurrentPlayerState;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalGrantedXp;                                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WinBonusXP;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalXP;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TimeXP;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Playtime;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInWinnerTeam_InWinnerTeam;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetBaseXPNumerator_Numerator;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerPlayTime_Playtime;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetPlaytimeFitsDatetime_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_HandleGrantExp) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_HandleGrantExp");
static_assert(sizeof(B_ImpostorGameMode_C_HandleGrantExp) == 0x0000A8, "Wrong size on B_ImpostorGameMode_C_HandleGrantExp");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CurrentPlayerState) == 0x000000, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CurrentPlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, TotalGrantedXp) == 0x000008, "Member 'B_ImpostorGameMode_C_HandleGrantExp::TotalGrantedXp' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, WinBonusXP) == 0x00000C, "Member 'B_ImpostorGameMode_C_HandleGrantExp::WinBonusXP' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, TotalXP) == 0x000010, "Member 'B_ImpostorGameMode_C_HandleGrantExp::TotalXP' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, TimeXP) == 0x000014, "Member 'B_ImpostorGameMode_C_HandleGrantExp::TimeXP' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, Playtime) == 0x000018, "Member 'B_ImpostorGameMode_C_HandleGrantExp::Playtime' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetGameInstance_ReturnValue_1) == 0x000038, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000040, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetGameInstance_ReturnValue_2) == 0x000050, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000058, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'B_ImpostorGameMode_C_HandleGrantExp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_IsPlayerInWinnerTeam_InWinnerTeam) == 0x000061, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_IsPlayerInWinnerTeam_InWinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetBaseXPNumerator_Numerator) == 0x000070, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetBaseXPNumerator_Numerator' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_FTrunc_ReturnValue) == 0x000080, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_Min_ReturnValue) == 0x000084, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_FTrunc_ReturnValue_1) == 0x000098, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetPlayerPlayTime_Playtime) == 0x00009C, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetPlayerPlayTime_Playtime' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleGrantExp, CallFunc_GetPlaytimeFitsDatetime_ReturnValue) == 0x0000A0, "Member 'B_ImpostorGameMode_C_HandleGrantExp::CallFunc_GetPlaytimeFitsDatetime_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleShouldGameStart
// 0x0002 (0x0002 - 0x0000)
struct B_ImpostorGameMode_C_HandleShouldGameStart final
{
public:
	bool                                          IsReady;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreEnoughPlayersReady_AreReady;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_HandleShouldGameStart) == 0x000001, "Wrong alignment on B_ImpostorGameMode_C_HandleShouldGameStart");
static_assert(sizeof(B_ImpostorGameMode_C_HandleShouldGameStart) == 0x000002, "Wrong size on B_ImpostorGameMode_C_HandleShouldGameStart");
static_assert(offsetof(B_ImpostorGameMode_C_HandleShouldGameStart, IsReady) == 0x000000, "Member 'B_ImpostorGameMode_C_HandleShouldGameStart::IsReady' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleShouldGameStart, CallFunc_AreEnoughPlayersReady_AreReady) == 0x000001, "Member 'B_ImpostorGameMode_C_HandleShouldGameStart::CallFunc_AreEnoughPlayersReady_AreReady' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.HandleStartMatch
// 0x0180 (0x0180 - 0x0000)
struct B_ImpostorGameMode_C_HandleStartMatch final
{
public:
	class AB_ImpostorPlayerState_C*               CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_1;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_2;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_3;                         // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_3;             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_2;    // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerController_C*          K2Node_DynamicCast_AsB_Impostor_Player_Controller; // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Select_Default;                             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13A[0x2];                                      // 0x013A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Now_ReturnValue;                          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_HandleStartMatch) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_HandleStartMatch");
static_assert(sizeof(B_ImpostorGameMode_C_HandleStartMatch) == 0x000180, "Wrong size on B_ImpostorGameMode_C_HandleStartMatch");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CurrentPlayer) == 0x000000, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_byte_Variable) == 0x000030, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_1) == 0x000038, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Array_Index_Variable_3) == 0x000040, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Get_Item) == 0x000048, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Player_State) == 0x000058, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Player_State_1) == 0x000068, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000078, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_2) == 0x000088, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_byte_Variable_1) == 0x000090, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Get_Item_2) == 0x000098, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Player_State_2) == 0x0000A8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Player_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x0000B8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_3) == 0x0000C8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_4) == 0x0000D0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x0000D8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Get_Item_3) == 0x0000E8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Array_Length_ReturnValue_3) == 0x0000F0, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Player_State_3) == 0x0000F8, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Player_State_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_6) == 0x000100, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Less_IntInt_ReturnValue_1) == 0x000101, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Player_State_2) == 0x000108, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Player_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_7) == 0x000110, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Player_Controller) == 0x000118, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_8) == 0x000120, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_bool_Variable) == 0x000121, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_5) == 0x000128, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000130, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_9) == 0x000138, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_Select_Default) == 0x000139, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Loop_Counter_Variable_2) == 0x00013C, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Less_IntInt_ReturnValue_2) == 0x000140, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Not_PreBool_ReturnValue) == 0x000141, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Add_IntInt_ReturnValue_2) == 0x000144, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameState_ReturnValue_6) == 0x000148, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_AsB_Game_State) == 0x000150, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, K2Node_DynamicCast_bSuccess_10) == 0x000158, "Member 'B_ImpostorGameMode_C_HandleStartMatch::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000159, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Not_PreBool_ReturnValue_1) == 0x00015A, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Now_ReturnValue) == 0x000160, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Now_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000168, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, Temp_int_Loop_Counter_Variable_3) == 0x000170, "Member 'B_ImpostorGameMode_C_HandleStartMatch::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Less_IntInt_ReturnValue_3) == 0x000174, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_Add_IntInt_ReturnValue_3) == 0x000178, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_HandleStartMatch, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00017C, "Member 'B_ImpostorGameMode_C_HandleStartMatch::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.IsPlayerInWinnerTeam
// 0x0038 (0x0038 - 0x0000)
struct B_ImpostorGameMode_C_IsPlayerInWinnerTeam final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InWinnerTeam;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_IsPlayerInWinnerTeam");
static_assert(sizeof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam) == 0x000038, "Wrong size on B_ImpostorGameMode_C_IsPlayerInWinnerTeam");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, PlayerState) == 0x000000, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, InWinnerTeam) == 0x000008, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::InWinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, Temp_bool_Variable) == 0x000009, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000010, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, Temp_byte_Variable) == 0x000019, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_AsB_Game_State) == 0x000028, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_IsPlayerInWinnerTeam, K2Node_Select_Default) == 0x000031, "Member 'B_ImpostorGameMode_C_IsPlayerInWinnerTeam::K2Node_Select_Default' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomImpostorSelection
// 0x00F0 (0x00F0 - 0x0000)
struct B_ImpostorGameMode_C_RandomImpostorSelection final
{
public:
	int32                                         WitchCount;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   ElectedPlayers;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AB_PlayerState_C*>               PendingPlayerTeamChoice;                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AB_PlayerState_C*                       CurrentPlayer;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerState*>                   CallFunc_GetHunterPlayersByChance_Players;         // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetWitchCount_ReturnValue;                // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_RandomImpostorSelection) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_RandomImpostorSelection");
static_assert(sizeof(B_ImpostorGameMode_C_RandomImpostorSelection) == 0x0000F0, "Wrong size on B_ImpostorGameMode_C_RandomImpostorSelection");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, WitchCount) == 0x000000, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::WitchCount' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, ElectedPlayers) == 0x000008, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::ElectedPlayers' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, PendingPlayerTeamChoice) == 0x000018, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::PendingPlayerTeamChoice' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CurrentPlayer) == 0x000028, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_AsB_Game_Instance) == 0x000050, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000060, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetGameInstance_ReturnValue_1) == 0x000070, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetGameState_ReturnValue_1) == 0x000078, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000080, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetHunterPlayersByChance_Players) == 0x000090, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetHunterPlayersByChance_Players' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_GetWitchCount_ReturnValue) == 0x0000A0, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_GetWitchCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_AsB_Player_State) == 0x0000B0, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x0000D0, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Less_IntInt_ReturnValue) == 0x0000D9, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Not_PreBool_ReturnValue) == 0x0000E1, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E4, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomImpostorSelection, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'B_ImpostorGameMode_C_RandomImpostorSelection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomPlayerColors
// 0x0080 (0x0080 - 0x0000)
struct B_ImpostorGameMode_C_RandomPlayerColors final
{
public:
	int32                                         IndexIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 AvailableIndices;                                  // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_RandomPlayerColors) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_RandomPlayerColors");
static_assert(sizeof(B_ImpostorGameMode_C_RandomPlayerColors) == 0x000080, "Wrong size on B_ImpostorGameMode_C_RandomPlayerColors");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, IndexIndex) == 0x000000, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::IndexIndex' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, AvailableIndices) == 0x000008, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::AvailableIndices' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, Temp_int_Variable) == 0x000028, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000049, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000050, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Array_Length_ReturnValue_1) == 0x000064, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_RandomInteger_ReturnValue) == 0x000068, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomPlayerColors, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'B_ImpostorGameMode_C_RandomPlayerColors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RandomTasksForPlayers
// 0x0140 (0x0140 - 0x0000)
struct B_ImpostorGameMode_C_RandomTasksForPlayers final
{
public:
	E_TaskType                                    TaskToGive;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TaskType>                            SelectedTasksForPlayer;                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<E_TaskType>                            AvailableTasksForPlayer;                           // 0x0018(0x0010)(Edit, BlueprintVisible)
	class AB_ImpostorPlayerState_C*               CurrentPlayer;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<E_TaskType>                            AvailableTaskTypes;                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class AB_TaskStarter_C*>               AllTaskStarters;                                   // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTaskCount_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_TaskStarter_C*                       CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TaskType                                    CallFunc_Map_Find_Value;                           // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7[0x1];                                       // 0x00C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TaskType                                    CallFunc_Array_Get_Item_1;                         // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TaskType                                    CallFunc_Array_Get_Item_3;                         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_TaskStarter_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0130(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ImpostorGameMode_C_RandomTasksForPlayers) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_RandomTasksForPlayers");
static_assert(sizeof(B_ImpostorGameMode_C_RandomTasksForPlayers) == 0x000140, "Wrong size on B_ImpostorGameMode_C_RandomTasksForPlayers");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, TaskToGive) == 0x000000, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::TaskToGive' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, SelectedTasksForPlayer) == 0x000008, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::SelectedTasksForPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, AvailableTasksForPlayer) == 0x000018, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::AvailableTasksForPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CurrentPlayer) == 0x000028, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, AvailableTaskTypes) == 0x000030, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::AvailableTaskTypes' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, AllTaskStarters) == 0x000040, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::AllTaskStarters' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Array_Index_Variable) == 0x000050, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000060, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006A, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_BooleanAND_ReturnValue) == 0x00006B, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_GetGameState_ReturnValue_1) == 0x000070, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000078, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000094, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_GetGameState_ReturnValue_2) == 0x000098, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Loop_Counter_Variable_2) == 0x0000A0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_WithEditor_ReturnValue) == 0x0000AD, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_GetTaskCount_ReturnValue) == 0x0000B0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_GetTaskCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Map_Find_Value) == 0x0000C5, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Map_Find_ReturnValue) == 0x0000C6, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_AddUnique_ReturnValue) == 0x0000C8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000CC, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0000CD, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Map_Contains_ReturnValue) == 0x0000CE, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0000D0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue_2) == 0x0000D4, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_RandomInteger_ReturnValue) == 0x0000DC, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Get_Item_1) == 0x0000E1, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue_4) == 0x0000E4, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_BooleanOR_ReturnValue) == 0x0000E9, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, Temp_int_Array_Index_Variable_2) == 0x0000EC, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_AsB_Player_State) == 0x000100, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000110, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, K2Node_DynamicCast_bSuccess_3) == 0x000118, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Get_Item_3) == 0x000119, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Length_ReturnValue_5) == 0x00011C, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Add_ReturnValue) == 0x000120, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Less_IntInt_ReturnValue_3) == 0x000124, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RandomTasksForPlayers, CallFunc_GetAllActorsOfClass_OutActors) == 0x000130, "Member 'B_ImpostorGameMode_C_RandomTasksForPlayers::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RemoveAllCorpses
// 0x0040 (0x0040 - 0x0000)
struct B_ImpostorGameMode_C_RemoveAllCorpses final
{
public:
	TArray<class AB_HunterFrog_C*>                FrogHunters;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_HunterFrog_C*>                CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class AB_HunterFrog_C*                        CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_RemoveAllCorpses) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_RemoveAllCorpses");
static_assert(sizeof(B_ImpostorGameMode_C_RemoveAllCorpses) == 0x000040, "Wrong size on B_ImpostorGameMode_C_RemoveAllCorpses");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, FrogHunters) == 0x000000, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::FrogHunters' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RemoveAllCorpses, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'B_ImpostorGameMode_C_RemoveAllCorpses::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.RespawnAllPlayers
// 0x01D0 (0x01D0 - 0x0000)
struct B_ImpostorGameMode_C_RespawnAllPlayers final
{
public:
	class AB_PlayerState_C*                       CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_SpawningOffset; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0080(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_168[0x8];                                      // 0x0168(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_RespawnAllPlayers) == 0x000010, "Wrong alignment on B_ImpostorGameMode_C_RespawnAllPlayers");
static_assert(sizeof(B_ImpostorGameMode_C_RespawnAllPlayers) == 0x0001D0, "Wrong size on B_ImpostorGameMode_C_RespawnAllPlayers");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CurrentPlayer) == 0x000000, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, Temp_class_Variable) == 0x000008, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, Temp_class_Variable_1) == 0x000010, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, K2Node_DynamicCast_AsB_Player_State) == 0x000038, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, Temp_bool_Variable) == 0x00004C, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004E, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, K2Node_Select_Default) == 0x000050, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_ReturnValue) == 0x000058, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_SpawningOffset) == 0x000060, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_GetPlayerStartToSpawnAtAndOccupyIt_SpawningOffset' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_GetTransform_ReturnValue) == 0x000080, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakTransform_Rotation) == 0x0000F8, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakTransform_Scale) == 0x000110, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_Add_VectorVector_ReturnValue) == 0x000128, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakRotator_Roll) == 0x000140, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakRotator_Pitch) == 0x000144, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_BreakRotator_Yaw) == 0x000148, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_MakeRotator_ReturnValue) == 0x000150, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_RespawnAllPlayers, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'B_ImpostorGameMode_C_RespawnAllPlayers::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.SpawnPlayer
// 0x01B0 (0x01B0 - 0x0000)
struct B_ImpostorGameMode_C_SpawnPlayer final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Class_0;                                           // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State;      // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               K2Node_DynamicCast_AsB_Impostor_Player_State_1;    // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_HunterFrog_C*                        CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_SpawnPlayer) == 0x000010, "Wrong alignment on B_ImpostorGameMode_C_SpawnPlayer");
static_assert(sizeof(B_ImpostorGameMode_C_SpawnPlayer) == 0x0001B0, "Wrong size on B_ImpostorGameMode_C_SpawnPlayer");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, Transform) == 0x000000, "Member 'B_ImpostorGameMode_C_SpawnPlayer::Transform' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, Class_0) == 0x000060, "Member 'B_ImpostorGameMode_C_SpawnPlayer::Class_0' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, PlayerController) == 0x000068, "Member 'B_ImpostorGameMode_C_SpawnPlayer::PlayerController' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000078, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000080, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_FinishSpawningActor_ReturnValue) == 0x000090, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_AsPawn) == 0x000098, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BreakTransform_Location) == 0x0000A8, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BreakTransform_Rotation) == 0x0000C0, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BreakTransform_Scale) == 0x0000D8, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F0, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_AsB_Impostor_Player_State) == 0x000108, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_AsB_Impostor_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_bSuccess_2) == 0x000110, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000180, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_AsB_Impostor_Player_State_1) == 0x000188, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_AsB_Impostor_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'B_ImpostorGameMode_C_SpawnPlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000198, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_SpawnPlayer, CallFunc_BooleanAND_ReturnValue) == 0x0001A0, "Member 'B_ImpostorGameMode_C_SpawnPlayer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.StartMeeting
// 0x00C8 (0x00C8 - 0x0000)
struct B_ImpostorGameMode_C_StartMeeting final
{
public:
	class AB_ImpostorPlayerState_C*               FoundPlayerState;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorPlayerState_C*               ReporterPlayerState;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_2;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_3;      // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_4;      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_5;      // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_6;      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyGlobalSabotageActive_ReturnValue;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_StartMeeting) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_StartMeeting");
static_assert(sizeof(B_ImpostorGameMode_C_StartMeeting) == 0x0000C8, "Wrong size on B_ImpostorGameMode_C_StartMeeting");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, FoundPlayerState) == 0x000000, "Member 'B_ImpostorGameMode_C_StartMeeting::FoundPlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, ReporterPlayerState) == 0x000008, "Member 'B_ImpostorGameMode_C_StartMeeting::ReporterPlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_1) == 0x000018, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000020, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000030, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003A, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, Temp_int_Variable) == 0x00003C, "Member 'B_ImpostorGameMode_C_StartMeeting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_2) == 0x000040, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_3) == 0x000048, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_2) == 0x000050, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_3) == 0x000060, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_4) == 0x000070, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_4) == 0x000078, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_5) == 0x000088, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_5) == 0x000090, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_5) == 0x000098, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_IsValid_ReturnValue_1) == 0x0000A2, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_IsValid_ReturnValue_2) == 0x0000A3, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A4, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_GetGameState_ReturnValue_6) == 0x0000A8, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_AsB_Impostor_Game_State_6) == 0x0000B8, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_AsB_Impostor_Game_State_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, K2Node_DynamicCast_bSuccess_6) == 0x0000C0, "Member 'B_ImpostorGameMode_C_StartMeeting::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_IsAnyGlobalSabotageActive_ReturnValue) == 0x0000C1, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_IsAnyGlobalSabotageActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C3, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_BooleanOR_ReturnValue) == 0x0000C4, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_StartMeeting, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C5, "Member 'B_ImpostorGameMode_C_StartMeeting::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.TimerFinished
// 0x0180 (0x0180 - 0x0000)
struct B_ImpostorGameMode_C_TimerFinished final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_1;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_2;      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_3;      // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_4;      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_GetPlayerToVoteOut_PlayerState;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_5;      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_6;      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_7;      // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_8;      // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_10;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_9;      // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_10;     // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_11;              // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_12;              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_11;     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_12;     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_13;              // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ImpostorGameState_C*                 K2Node_DynamicCast_AsB_Impostor_Game_State_13;     // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_TimerFinished) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_TimerFinished");
static_assert(sizeof(B_ImpostorGameMode_C_TimerFinished) == 0x000180, "Wrong size on B_ImpostorGameMode_C_TimerFinished");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_1) == 0x000008, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State) == 0x000010, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_1) == 0x000020, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_2) == 0x000030, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_3) == 0x000038, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_2) == 0x000040, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_3) == 0x000050, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_4) == 0x000060, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_4) == 0x000068, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_4) == 0x000070, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetPlayerToVoteOut_PlayerState) == 0x000078, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetPlayerToVoteOut_PlayerState' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_5) == 0x000080, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_5) == 0x000088, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Player_State) == 0x000098, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_6) == 0x0000A0, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_6) == 0x0000A8, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_6) == 0x0000B0, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_6' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_7) == 0x0000B8, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000B9, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_7) == 0x0000C0, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C8, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_7) == 0x0000D0, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_7' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_8) == 0x0000D8, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Hunter) == 0x0000E0, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_9) == 0x0000E8, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_8) == 0x0000F0, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_8) == 0x0000F8, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_8' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_10) == 0x000100, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000101, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_9) == 0x000108, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_10) == 0x000110, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_9) == 0x000118, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_9' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_11) == 0x000120, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_10) == 0x000128, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_10' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_12) == 0x000130, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_IsValid_ReturnValue) == 0x000131, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_11) == 0x000138, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_12) == 0x000140, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_11) == 0x000148, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_11' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_13) == 0x000150, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_12) == 0x000158, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_12' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_14) == 0x000160, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, CallFunc_GetGameState_ReturnValue_13) == 0x000168, "Member 'B_ImpostorGameMode_C_TimerFinished::CallFunc_GetGameState_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_AsB_Impostor_Game_State_13) == 0x000170, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_AsB_Impostor_Game_State_13' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_TimerFinished, K2Node_DynamicCast_bSuccess_15) == 0x000178, "Member 'B_ImpostorGameMode_C_TimerFinished::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.UnoccupyAllPlayerStarts
// 0x0090 (0x0090 - 0x0000)
struct B_ImpostorGameMode_C_UnoccupyAllPlayerStarts final
{
public:
	TArray<class AActor*>                         PlayerStarts;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerStart_C>       K2Node_DynamicCast_AsIPlayer_Start;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerStart_C>       K2Node_DynamicCast_AsIPlayer_Start_1;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_HunterPlayerStart_C*>         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0070(0x0010)(ReferenceParm)
	TArray<class ABP_HunterPlayerStart_C*>        CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0080(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_UnoccupyAllPlayerStarts");
static_assert(sizeof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts) == 0x000090, "Wrong size on B_ImpostorGameMode_C_UnoccupyAllPlayerStarts");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, PlayerStarts) == 0x000000, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::PlayerStarts' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Array_Length_ReturnValue_1) == 0x000014, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, K2Node_DynamicCast_AsIPlayer_Start) == 0x000028, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::K2Node_DynamicCast_AsIPlayer_Start' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, K2Node_DynamicCast_AsIPlayer_Start_1) == 0x000058, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::K2Node_DynamicCast_AsIPlayer_Start_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Less_IntInt_ReturnValue_1) == 0x000069, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_GetAllActorsOfClass_OutActors) == 0x000070, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ImpostorGameMode_C_UnoccupyAllPlayerStarts, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000080, "Member 'B_ImpostorGameMode_C_UnoccupyAllPlayerStarts::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetPlayObjectiveId
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorGameMode_C_GetPlayObjectiveId final
{
public:
	int64                                         ObjectiveId;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_GetPlayObjectiveId) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_GetPlayObjectiveId");
static_assert(sizeof(B_ImpostorGameMode_C_GetPlayObjectiveId) == 0x000008, "Wrong size on B_ImpostorGameMode_C_GetPlayObjectiveId");
static_assert(offsetof(B_ImpostorGameMode_C_GetPlayObjectiveId, ObjectiveId) == 0x000000, "Member 'B_ImpostorGameMode_C_GetPlayObjectiveId::ObjectiveId' has a wrong offset!");

// Function B_ImpostorGameMode.B_ImpostorGameMode_C.GetWinObjectiveId
// 0x0008 (0x0008 - 0x0000)
struct B_ImpostorGameMode_C_GetWinObjectiveId final
{
public:
	int64                                         ObjectiveId;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ImpostorGameMode_C_GetWinObjectiveId) == 0x000008, "Wrong alignment on B_ImpostorGameMode_C_GetWinObjectiveId");
static_assert(sizeof(B_ImpostorGameMode_C_GetWinObjectiveId) == 0x000008, "Wrong size on B_ImpostorGameMode_C_GetWinObjectiveId");
static_assert(offsetof(B_ImpostorGameMode_C_GetWinObjectiveId, ObjectiveId) == 0x000000, "Member 'B_ImpostorGameMode_C_GetWinObjectiveId::ObjectiveId' has a wrong offset!");

}

