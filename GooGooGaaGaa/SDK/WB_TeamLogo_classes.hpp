#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TeamLogo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_TeamLogo.WB_TeamLogo_C
// 0x0028 (0x02E8 - 0x02C0)
class UWB_TeamLogo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Logo;                                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Name_WB_TeamLogo_C;                                // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       TeamLogo;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ETeamID                                       TeamID;                                            // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_TeamLogo(int32 EntryPoint);
	struct FSlateBrush Get_Logo_Brush_0();
	class FText Get_Name_Text_0();
	void PreConstruct(bool IsDesignTime);
	void UpdateLogos();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_TeamLogo_C">();
	}
	static class UWB_TeamLogo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_TeamLogo_C>();
	}
};
static_assert(alignof(UWB_TeamLogo_C) == 0x000008, "Wrong alignment on UWB_TeamLogo_C");
static_assert(sizeof(UWB_TeamLogo_C) == 0x0002E8, "Wrong size on UWB_TeamLogo_C");
static_assert(offsetof(UWB_TeamLogo_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_TeamLogo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_TeamLogo_C, Logo) == 0x0002C8, "Member 'UWB_TeamLogo_C::Logo' has a wrong offset!");
static_assert(offsetof(UWB_TeamLogo_C, Name_WB_TeamLogo_C) == 0x0002D0, "Member 'UWB_TeamLogo_C::Name_WB_TeamLogo_C' has a wrong offset!");
static_assert(offsetof(UWB_TeamLogo_C, TeamLogo) == 0x0002D8, "Member 'UWB_TeamLogo_C::TeamLogo' has a wrong offset!");
static_assert(offsetof(UWB_TeamLogo_C, TeamID) == 0x0002E0, "Member 'UWB_TeamLogo_C::TeamID' has a wrong offset!");

}

