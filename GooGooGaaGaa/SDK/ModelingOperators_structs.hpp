#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelingOperators

#include "Basic.hpp"


namespace SDK
{

// Enum ModelingOperators.ERecomputeUVsPropertiesUnwrapType
// NumValues: 0x0005
enum class ERecomputeUVsPropertiesUnwrapType : uint32
{
	ExpMap                                   = 0,
	Conformal                                = 1,
	SpectralConformal                        = 2,
	IslandMerging                            = 3,
	ERecomputeUVsPropertiesUnwrapType_MAX    = 4,
};

// Enum ModelingOperators.ERecomputeUVsPropertiesIslandMode
// NumValues: 0x0003
enum class ERecomputeUVsPropertiesIslandMode : uint32
{
	PolyGroups                               = 0,
	ExistingUVs                              = 1,
	ERecomputeUVsPropertiesIslandMode_MAX    = 2,
};

// Enum ModelingOperators.ERecomputeUVsToolOrientationMode
// NumValues: 0x0003
enum class ERecomputeUVsToolOrientationMode : uint32
{
	None                                     = 0,
	MinBounds                                = 1,
	ERecomputeUVsToolOrientationMode_MAX     = 2,
};

// Enum ModelingOperators.ERecomputeUVsPropertiesLayoutType
// NumValues: 0x0006
enum class ERecomputeUVsPropertiesLayoutType : uint32
{
	None                                     = 0,
	Repack                                   = 1,
	NormalizeToExistingBounds                = 2,
	NormalizeToBounds                        = 3,
	NormalizeToWorld                         = 4,
	ERecomputeUVsPropertiesLayoutType_MAX    = 5,
};

// Enum ModelingOperators.EFlattenCurveMethod
// NumValues: 0x0006
enum class EFlattenCurveMethod : uint8
{
	DoNotFlatten                             = 0,
	ToBestFitPlane                           = 1,
	AlongX                                   = 2,
	AlongY                                   = 3,
	AlongZ                                   = 4,
	EFlattenCurveMethod_MAX                  = 5,
};

// Enum ModelingOperators.ECombineCurvesMethod
// NumValues: 0x0006
enum class ECombineCurvesMethod : uint8
{
	LeaveSeparate                            = 0,
	Union                                    = 1,
	Intersect                                = 2,
	Difference                               = 3,
	ExclusiveOr                              = 4,
	ECombineCurvesMethod_MAX                 = 5,
};

// Enum ModelingOperators.EOffsetClosedCurvesMethod
// NumValues: 0x0004
enum class EOffsetClosedCurvesMethod : uint8
{
	DoNotOffset                              = 0,
	OffsetOuterSide                          = 1,
	OffsetBothSides                          = 2,
	EOffsetClosedCurvesMethod_MAX            = 3,
};

// Enum ModelingOperators.EOffsetOpenCurvesMethod
// NumValues: 0x0003
enum class EOffsetOpenCurvesMethod : uint8
{
	TreatAsClosed                            = 0,
	Offset                                   = 1,
	EOffsetOpenCurvesMethod_MAX              = 2,
};

// Enum ModelingOperators.EOffsetJoinMethod
// NumValues: 0x0004
enum class EOffsetJoinMethod : uint8
{
	Square                                   = 0,
	Miter                                    = 1,
	Round                                    = 2,
	EOffsetJoinMethod_MAX                    = 3,
};

// Enum ModelingOperators.EOpenCurveEndShapes
// NumValues: 0x0004
enum class EOpenCurveEndShapes : uint8
{
	Square                                   = 0,
	Round                                    = 1,
	Butt                                     = 2,
	EOpenCurveEndShapes_MAX                  = 3,
};

// Enum ModelingOperators.EUVLayoutType
// NumValues: 0x0005
enum class EUVLayoutType : uint32
{
	Transform                                = 0,
	Stack                                    = 1,
	Repack                                   = 2,
	Normalize                                = 3,
	EUVLayoutType_MAX                        = 4,
};

// Enum ModelingOperators.ENormalCalculationMethod
// NumValues: 0x0004
enum class ENormalCalculationMethod : uint8
{
	AreaWeighted                             = 0,
	AngleWeighted                            = 1,
	AreaAngleWeighting                       = 2,
	ENormalCalculationMethod_MAX             = 3,
};

// Enum ModelingOperators.ESplitNormalMethod
// NumValues: 0x0006
enum class ESplitNormalMethod : uint8
{
	UseExistingTopology                      = 0,
	FaceNormalThreshold                      = 1,
	FaceGroupID                              = 2,
	PerTriangle                              = 3,
	PerVertex                                = 4,
	ESplitNormalMethod_MAX                   = 5,
};

// Enum ModelingOperators.EHoleFillOpFillType
// NumValues: 0x0006
enum class EHoleFillOpFillType : uint8
{
	TriangleFan                              = 0,
	PolygonEarClipping                       = 1,
	Planar                                   = 2,
	Minimal                                  = 3,
	Smooth                                   = 4,
	EHoleFillOpFillType_MAX                  = 5,
};

// Enum ModelingOperators.ERemeshType
// NumValues: 0x0004
enum class ERemeshType : uint8
{
	Standard                                 = 0,
	FullPass                                 = 1,
	NormalFlow                               = 2,
	ERemeshType_MAX                          = 3,
};

// Enum ModelingOperators.ERemeshSmoothingType
// NumValues: 0x0004
enum class ERemeshSmoothingType : uint8
{
	Uniform                                  = 0,
	Cotangent                                = 1,
	MeanValue                                = 2,
	ERemeshSmoothingType_MAX                 = 3,
};

// Enum ModelingOperators.ECSGOperation
// NumValues: 0x0005
enum class ECSGOperation : uint8
{
	DifferenceAB                             = 0,
	DifferenceBA                             = 1,
	Intersect                                = 2,
	Union                                    = 3,
	ECSGOperation_MAX                        = 4,
};

// Enum ModelingOperators.ETrimOperation
// NumValues: 0x0003
enum class ETrimOperation : uint8
{
	TrimA                                    = 0,
	TrimB                                    = 1,
	ETrimOperation_MAX                       = 2,
};

// Enum ModelingOperators.ETrimSide
// NumValues: 0x0003
enum class ETrimSide : uint8
{
	RemoveInside                             = 0,
	RemoveOutside                            = 1,
	ETrimSide_MAX                            = 2,
};

// Enum ModelingOperators.EMorphologyOperation
// NumValues: 0x0005
enum class EMorphologyOperation : uint8
{
	Dilate                                   = 0,
	Contract                                 = 1,
	Close                                    = 2,
	Open                                     = 3,
	EMorphologyOperation_MAX                 = 4,
};

// Enum ModelingOperators.EUVProjectionMethod
// NumValues: 0x0005
enum class EUVProjectionMethod : uint8
{
	Box                                      = 0,
	Cylinder                                 = 1,
	Plane                                    = 2,
	ExpMap                                   = 3,
	EUVProjectionMethod_MAX                  = 4,
};

}

