#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ChickenSkill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_ChickenSkill.B_ChickenSkill_C.ExecuteUbergraph_B_ChickenSkill
// 0x0010 (0x0010 - 0x0000)
struct B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill) == 0x000004, "Wrong alignment on B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill");
static_assert(sizeof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill) == 0x000010, "Wrong size on B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill");
static_assert(offsetof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill, EntryPoint) == 0x000000, "Member 'B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill, CallFunc_CanActivate_ReturnValue) == 0x000004, "Member 'B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'B_ChickenSkill_C_ExecuteUbergraph_B_ChickenSkill::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ChickenSkill.B_ChickenSkill_C.InitializeRules
// 0x0018 (0x0018 - 0x0000)
struct B_ChickenSkill_C_InitializeRules final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSkillCooldown_Cooldown;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_cooldown_ImplicitCast;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChickenSkill_C_InitializeRules) == 0x000008, "Wrong alignment on B_ChickenSkill_C_InitializeRules");
static_assert(sizeof(B_ChickenSkill_C_InitializeRules) == 0x000018, "Wrong size on B_ChickenSkill_C_InitializeRules");
static_assert(offsetof(B_ChickenSkill_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_ChickenSkill_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_InitializeRules, CallFunc_GetSkillCooldown_Cooldown) == 0x000008, "Member 'B_ChickenSkill_C_InitializeRules::CallFunc_GetSkillCooldown_Cooldown' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_InitializeRules, K2Node_VariableSet_cooldown_ImplicitCast) == 0x000010, "Member 'B_ChickenSkill_C_InitializeRules::K2Node_VariableSet_cooldown_ImplicitCast' has a wrong offset!");

// Function B_ChickenSkill.B_ChickenSkill_C.PlayChickenIsReadySound
// 0x0050 (0x0050 - 0x0000)
struct B_ChickenSkill_C_PlayChickenIsReadySound final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Accessor__GetPlayerController_IsValid;    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_Accessor__GetPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlaySoundAtLocation_PitchMultiplier_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChickenSkill_C_PlayChickenIsReadySound) == 0x000008, "Wrong alignment on B_ChickenSkill_C_PlayChickenIsReadySound");
static_assert(sizeof(B_ChickenSkill_C_PlayChickenIsReadySound) == 0x000050, "Wrong size on B_ChickenSkill_C_PlayChickenIsReadySound");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000010, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_Accessor__GetPlayerController_IsValid) == 0x000038, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_Accessor__GetPlayerController_IsValid' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_Accessor__GetPlayerController_ReturnValue) == 0x000040, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_Accessor__GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ChickenSkill_C_PlayChickenIsReadySound, CallFunc_PlaySoundAtLocation_PitchMultiplier_ImplicitCast) == 0x00004C, "Member 'B_ChickenSkill_C_PlayChickenIsReadySound::CallFunc_PlaySoundAtLocation_PitchMultiplier_ImplicitCast' has a wrong offset!");

// Function B_ChickenSkill.B_ChickenSkill_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ChickenSkill_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ChickenSkill_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ChickenSkill_C_ReceiveTick");
static_assert(sizeof(B_ChickenSkill_C_ReceiveTick) == 0x000004, "Wrong size on B_ChickenSkill_C_ReceiveTick");
static_assert(offsetof(B_ChickenSkill_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ChickenSkill_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

