#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Rocket

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_Rocket.B_Rocket_C.StartFuse
// 0x0060 (0x0060 - 0x0000)
struct B_Rocket_C_StartFuse final
{
public:
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Rocket_C_StartFuse) == 0x000010, "Wrong alignment on B_Rocket_C_StartFuse");
static_assert(sizeof(B_Rocket_C_StartFuse) == 0x000060, "Wrong size on B_Rocket_C_StartFuse");
static_assert(offsetof(B_Rocket_C_StartFuse, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000000, "Member 'B_Rocket_C_StartFuse::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function B_Rocket.B_Rocket_C.ApplyExplosion
// 0x00F0 (0x00F0 - 0x0000)
struct B_Rocket_C_ApplyExplosion final
{
public:
	bool                                          CallFunc_IsPendingKill_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C40[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0008(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_Rocket_C_ApplyExplosion) == 0x000008, "Wrong alignment on B_Rocket_C_ApplyExplosion");
static_assert(sizeof(B_Rocket_C_ApplyExplosion) == 0x0000F0, "Wrong size on B_Rocket_C_ApplyExplosion");
static_assert(offsetof(B_Rocket_C_ApplyExplosion, CallFunc_IsPendingKill_ReturnValue) == 0x000000, "Member 'B_Rocket_C_ApplyExplosion::CallFunc_IsPendingKill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_ApplyExplosion, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'B_Rocket_C_ApplyExplosion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_ApplyExplosion, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000008, "Member 'B_Rocket_C_ApplyExplosion::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");

// Function B_Rocket.B_Rocket_C.PushRocket
// 0x0110 (0x0110 - 0x0000)
struct B_Rocket_C_PushRocket final
{
public:
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C41[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_CreativeGameState_C*                 K2Node_DynamicCast_AsB_Creative_Game_State;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C42[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Rocket_C_PushRocket) == 0x000008, "Wrong alignment on B_Rocket_C_PushRocket");
static_assert(sizeof(B_Rocket_C_PushRocket) == 0x000110, "Wrong size on B_Rocket_C_PushRocket");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000000, "Member 'B_Rocket_C_PushRocket::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_Rocket_C_PushRocket::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'B_Rocket_C_PushRocket::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, K2Node_DynamicCast_AsB_Game_State) == 0x000028, "Member 'B_Rocket_C_PushRocket::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_Rocket_C_PushRocket::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, K2Node_DynamicCast_AsB_Creative_Game_State) == 0x000038, "Member 'B_Rocket_C_PushRocket::K2Node_DynamicCast_AsB_Creative_Game_State' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_Rocket_C_PushRocket::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_GetUpVector_ReturnValue) == 0x000048, "Member 'B_Rocket_C_PushRocket::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Cross_VectorVector_ReturnValue) == 0x000060, "Member 'B_Rocket_C_PushRocket::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x000078, "Member 'B_Rocket_C_PushRocket::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000090, "Member 'B_Rocket_C_PushRocket::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A8, "Member 'B_Rocket_C_PushRocket::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C0, "Member 'B_Rocket_C_PushRocket::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_VInterpTo_ReturnValue) == 0x0000D8, "Member 'B_Rocket_C_PushRocket::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'B_Rocket_C_PushRocket::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_PushRocket, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000108, "Member 'B_Rocket_C_PushRocket::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function B_Rocket.B_Rocket_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_Rocket_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Rocket_C_ReceiveTick) == 0x000004, "Wrong alignment on B_Rocket_C_ReceiveTick");
static_assert(sizeof(B_Rocket_C_ReceiveTick) == 0x000004, "Wrong size on B_Rocket_C_ReceiveTick");
static_assert(offsetof(B_Rocket_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_Rocket_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_Rocket.B_Rocket_C.ExecuteUbergraph_B_Rocket
// 0x0008 (0x0008 - 0x0000)
struct B_Rocket_C_ExecuteUbergraph_B_Rocket final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_Rocket_C_ExecuteUbergraph_B_Rocket) == 0x000004, "Wrong alignment on B_Rocket_C_ExecuteUbergraph_B_Rocket");
static_assert(sizeof(B_Rocket_C_ExecuteUbergraph_B_Rocket) == 0x000008, "Wrong size on B_Rocket_C_ExecuteUbergraph_B_Rocket");
static_assert(offsetof(B_Rocket_C_ExecuteUbergraph_B_Rocket, EntryPoint) == 0x000000, "Member 'B_Rocket_C_ExecuteUbergraph_B_Rocket::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_Rocket_C_ExecuteUbergraph_B_Rocket, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'B_Rocket_C_ExecuteUbergraph_B_Rocket::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

