#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CheckBoxWithLabelSmall

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.ChangeActiveWidget
// 0x0018 (0x0018 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetActiveWidget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget) == 0x000008, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget) == 0x000018, "Wrong size on WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget, Widget) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget::Widget' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget, CallFunc_GetActiveWidget_ReturnValue) == 0x000008, "Member 'WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget::CallFunc_GetActiveWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'WB_CheckBoxWithLabelSmall_C_ChangeActiveWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_Tick) == 0x000004, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_Tick");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_Tick) == 0x00003C, "Wrong size on WB_CheckBoxWithLabelSmall_C_Tick");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CheckBoxWithLabelSmall_C_Tick::InDeltaTime' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.OnGamePadModeChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event final
{
public:
	bool                                          bGamePadMode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event, bGamePadMode) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_OnGamePadModeChanged_Event::bGamePadMode' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.ChangeControllerLayout
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout final
{
public:
	bool                                          GamePadMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout, GamePadMode) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_ChangeControllerLayout::GamePadMode' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_BndEvt__WB_CheckBoxWithLabelSmall_CheckBox_223_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.OnCheckStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature) == 0x000001, "Wrong size on WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_OnCheckStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function WB_CheckBoxWithLabelSmall.WB_CheckBoxWithLabelSmall_C.ExecuteUbergraph_WB_CheckBoxWithLabelSmall
// 0x0070 (0x0070 - 0x0000)
struct WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4793[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bGamePadMode)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4794[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bGamePadMode;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_GamePadMode;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMode_ReturnValue;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall) == 0x000008, "Wrong alignment on WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall");
static_assert(sizeof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall) == 0x000070, "Wrong size on WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, EntryPoint) == 0x000000, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_ComponentBoundEvent_bIsChecked) == 0x000004, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_Event_bIsExpanded) == 0x000005, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_Event_bIsExpanded' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_Event_bIsSelected) == 0x000006, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_Event_MyGeometry) == 0x000008, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_DynamicCast_AsB_Game_Instance) == 0x000060, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_CustomEvent_bGamePadMode) == 0x000069, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_CustomEvent_bGamePadMode' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, K2Node_CustomEvent_GamePadMode) == 0x00006A, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::K2Node_CustomEvent_GamePadMode' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00006B, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, CallFunc_Not_PreBool_ReturnValue) == 0x00006C, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall, CallFunc_IsGamepadMode_ReturnValue) == 0x00006D, "Member 'WB_CheckBoxWithLabelSmall_C_ExecuteUbergraph_WB_CheckBoxWithLabelSmall::CallFunc_IsGamepadMode_ReturnValue' has a wrong offset!");

}

