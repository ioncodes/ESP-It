#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemRedpointEOS

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"
#include "OnlineSubsystemUtils_classes.hpp"
#include "OnlineSubsystemRedpointEOS_structs.hpp"


namespace SDK
{

// Class OnlineSubsystemRedpointEOS.EOSControlChannel
// 0x0220 (0x02A0 - 0x0080)
class UEOSControlChannel final : public UControlChannel
{
public:
	uint8                                         Pad_1E9B[0x220];                                   // 0x0080(0x0220)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSControlChannel">();
	}
	static class UEOSControlChannel* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSControlChannel>();
	}
};
static_assert(alignof(UEOSControlChannel) == 0x000008, "Wrong alignment on UEOSControlChannel");
static_assert(sizeof(UEOSControlChannel) == 0x0002A0, "Wrong size on UEOSControlChannel");

// Class OnlineSubsystemRedpointEOS.EOSIpNetConnection
// 0x0000 (0x1E88 - 0x1E88)
class UEOSIpNetConnection final : public UIpConnection
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSIpNetConnection">();
	}
	static class UEOSIpNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSIpNetConnection>();
	}
};
static_assert(alignof(UEOSIpNetConnection) == 0x000008, "Wrong alignment on UEOSIpNetConnection");
static_assert(sizeof(UEOSIpNetConnection) == 0x001E88, "Wrong size on UEOSIpNetConnection");

// Class OnlineSubsystemRedpointEOS.EOSNetConnection
// 0x0010 (0x1E08 - 0x1DF8)
class UEOSNetConnection final : public UNetConnection
{
public:
	uint8                                         Pad_1E9C[0x10];                                    // 0x1DF8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSNetConnection">();
	}
	static class UEOSNetConnection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSNetConnection>();
	}
};
static_assert(alignof(UEOSNetConnection) == 0x000008, "Wrong alignment on UEOSNetConnection");
static_assert(sizeof(UEOSNetConnection) == 0x001E08, "Wrong size on UEOSNetConnection");

// Class OnlineSubsystemRedpointEOS.EOSNetDriver
// 0x0078 (0x0918 - 0x08A0)
class UEOSNetDriver final : public UIpNetDriver
{
public:
	uint8                                         Pad_1E9D[0x68];                                    // 0x08A0(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UEOSNetConnection*>              PendingConnectionClose;                            // 0x0908(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSNetDriver">();
	}
	static class UEOSNetDriver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSNetDriver>();
	}
};
static_assert(alignof(UEOSNetDriver) == 0x000008, "Wrong alignment on UEOSNetDriver");
static_assert(sizeof(UEOSNetDriver) == 0x000918, "Wrong size on UEOSNetDriver");
static_assert(offsetof(UEOSNetDriver, PendingConnectionClose) == 0x000908, "Member 'UEOSNetDriver::PendingConnectionClose' has a wrong offset!");

// Class OnlineSubsystemRedpointEOS.EOSSubsystem
// 0x0038 (0x0068 - 0x0030)
class UEOSSubsystem final : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_             OnAddWidgetToViewport;                             // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveWidgetFromViewport;                        // 0x0040(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1E9E[0x18];                                    // 0x0050(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSSubsystem">();
	}
	static class UEOSSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSSubsystem>();
	}
};
static_assert(alignof(UEOSSubsystem) == 0x000008, "Wrong alignment on UEOSSubsystem");
static_assert(sizeof(UEOSSubsystem) == 0x000068, "Wrong size on UEOSSubsystem");
static_assert(offsetof(UEOSSubsystem, OnAddWidgetToViewport) == 0x000030, "Member 'UEOSSubsystem::OnAddWidgetToViewport' has a wrong offset!");
static_assert(offsetof(UEOSSubsystem, OnRemoveWidgetFromViewport) == 0x000040, "Member 'UEOSSubsystem::OnRemoveWidgetFromViewport' has a wrong offset!");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_EnterDevicePinCode_Context
// 0x0010 (0x0038 - 0x0028)
class UEOSUserInterface_EnterDevicePinCode_Context final : public UObject
{
public:
	uint8                                         Pad_1E9F[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CancelLogin();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_EnterDevicePinCode_Context">();
	}
	static class UEOSUserInterface_EnterDevicePinCode_Context* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSUserInterface_EnterDevicePinCode_Context>();
	}
};
static_assert(alignof(UEOSUserInterface_EnterDevicePinCode_Context) == 0x000008, "Wrong alignment on UEOSUserInterface_EnterDevicePinCode_Context");
static_assert(sizeof(UEOSUserInterface_EnterDevicePinCode_Context) == 0x000038, "Wrong size on UEOSUserInterface_EnterDevicePinCode_Context");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_EnterDevicePinCode
// 0x0000 (0x0028 - 0x0028)
class IEOSUserInterface_EnterDevicePinCode final : public IInterface
{
public:
	void SetupUserInterface(class UEOSUserInterface_EnterDevicePinCode_Context* Context, const class FString& VerificationUrl, const class FString& PinCode);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_EnterDevicePinCode">();
	}
	static class IEOSUserInterface_EnterDevicePinCode* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEOSUserInterface_EnterDevicePinCode>();
	}
};
static_assert(alignof(IEOSUserInterface_EnterDevicePinCode) == 0x000008, "Wrong alignment on IEOSUserInterface_EnterDevicePinCode");
static_assert(sizeof(IEOSUserInterface_EnterDevicePinCode) == 0x000028, "Wrong size on IEOSUserInterface_EnterDevicePinCode");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context
// 0x0010 (0x0038 - 0x0028)
class UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context final : public UObject
{
public:
	uint8                                         Pad_1EA0[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SelectedCandidates(const TArray<struct FEOSUserInterface_CandidateEOSAccount>& Param_SelectedCandidates);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context">();
	}
	static class UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context>();
	}
};
static_assert(alignof(UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context) == 0x000008, "Wrong alignment on UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context");
static_assert(sizeof(UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context) == 0x000038, "Wrong size on UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform
// 0x0000 (0x0028 - 0x0028)
class IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform final : public IInterface
{
public:
	void SetupUserInterface(class UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context* Context, const TArray<struct FEOSUserInterface_CandidateEOSAccount>& AvailableCandidates);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform">();
	}
	static class IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform>();
	}
};
static_assert(alignof(IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform) == 0x000008, "Wrong alignment on IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform");
static_assert(sizeof(IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform) == 0x000028, "Wrong size on IEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SelectEOSAccount_Context
// 0x0010 (0x0038 - 0x0028)
class UEOSUserInterface_SelectEOSAccount_Context final : public UObject
{
public:
	uint8                                         Pad_1EA1[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SelectCandidate(const struct FEOSUserInterface_CandidateEOSAccount& SelectedCandidate);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SelectEOSAccount_Context">();
	}
	static class UEOSUserInterface_SelectEOSAccount_Context* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSUserInterface_SelectEOSAccount_Context>();
	}
};
static_assert(alignof(UEOSUserInterface_SelectEOSAccount_Context) == 0x000008, "Wrong alignment on UEOSUserInterface_SelectEOSAccount_Context");
static_assert(sizeof(UEOSUserInterface_SelectEOSAccount_Context) == 0x000038, "Wrong size on UEOSUserInterface_SelectEOSAccount_Context");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SelectEOSAccount
// 0x0000 (0x0028 - 0x0028)
class IEOSUserInterface_SelectEOSAccount final : public IInterface
{
public:
	void SetupUserInterface(class UEOSUserInterface_SelectEOSAccount_Context* Context, const TArray<struct FEOSUserInterface_CandidateEOSAccount>& AvailableCandidates);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SelectEOSAccount">();
	}
	static class IEOSUserInterface_SelectEOSAccount* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEOSUserInterface_SelectEOSAccount>();
	}
};
static_assert(alignof(IEOSUserInterface_SelectEOSAccount) == 0x000008, "Wrong alignment on IEOSUserInterface_SelectEOSAccount");
static_assert(sizeof(IEOSUserInterface_SelectEOSAccount) == 0x000028, "Wrong size on IEOSUserInterface_SelectEOSAccount");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SignInOrCreateAccount_Context
// 0x0010 (0x0038 - 0x0028)
class UEOSUserInterface_SignInOrCreateAccount_Context final : public UObject
{
public:
	uint8                                         Pad_1EA2[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SelectChoice(EEOSUserInterface_SignInOrCreateAccount_Choice SelectedChoice);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SignInOrCreateAccount_Context">();
	}
	static class UEOSUserInterface_SignInOrCreateAccount_Context* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSUserInterface_SignInOrCreateAccount_Context>();
	}
};
static_assert(alignof(UEOSUserInterface_SignInOrCreateAccount_Context) == 0x000008, "Wrong alignment on UEOSUserInterface_SignInOrCreateAccount_Context");
static_assert(sizeof(UEOSUserInterface_SignInOrCreateAccount_Context) == 0x000038, "Wrong size on UEOSUserInterface_SignInOrCreateAccount_Context");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SignInOrCreateAccount
// 0x0000 (0x0028 - 0x0028)
class IEOSUserInterface_SignInOrCreateAccount final : public IInterface
{
public:
	void SetupUserInterface(class UEOSUserInterface_SignInOrCreateAccount_Context* Context);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SignInOrCreateAccount">();
	}
	static class IEOSUserInterface_SignInOrCreateAccount* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEOSUserInterface_SignInOrCreateAccount>();
	}
};
static_assert(alignof(IEOSUserInterface_SignInOrCreateAccount) == 0x000008, "Wrong alignment on IEOSUserInterface_SignInOrCreateAccount");
static_assert(sizeof(IEOSUserInterface_SignInOrCreateAccount) == 0x000028, "Wrong size on IEOSUserInterface_SignInOrCreateAccount");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SwitchToCrossPlatformAccount_Context
// 0x0010 (0x0038 - 0x0028)
class UEOSUserInterface_SwitchToCrossPlatformAccount_Context final : public UObject
{
public:
	uint8                                         Pad_1EA3[0x10];                                    // 0x0028(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SelectChoice(EEOSUserInterface_SwitchToCrossPlatformAccount_Choice SelectedChoice);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SwitchToCrossPlatformAccount_Context">();
	}
	static class UEOSUserInterface_SwitchToCrossPlatformAccount_Context* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSUserInterface_SwitchToCrossPlatformAccount_Context>();
	}
};
static_assert(alignof(UEOSUserInterface_SwitchToCrossPlatformAccount_Context) == 0x000008, "Wrong alignment on UEOSUserInterface_SwitchToCrossPlatformAccount_Context");
static_assert(sizeof(UEOSUserInterface_SwitchToCrossPlatformAccount_Context) == 0x000038, "Wrong size on UEOSUserInterface_SwitchToCrossPlatformAccount_Context");

// Class OnlineSubsystemRedpointEOS.EOSUserInterface_SwitchToCrossPlatformAccount
// 0x0000 (0x0028 - 0x0028)
class IEOSUserInterface_SwitchToCrossPlatformAccount final : public IInterface
{
public:
	void SetupUserInterface(class UEOSUserInterface_SwitchToCrossPlatformAccount_Context* Context, const class FString& EpicAccountName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSUserInterface_SwitchToCrossPlatformAccount">();
	}
	static class IEOSUserInterface_SwitchToCrossPlatformAccount* GetDefaultObj()
	{
		return GetDefaultObjImpl<IEOSUserInterface_SwitchToCrossPlatformAccount>();
	}
};
static_assert(alignof(IEOSUserInterface_SwitchToCrossPlatformAccount) == 0x000008, "Wrong alignment on IEOSUserInterface_SwitchToCrossPlatformAccount");
static_assert(sizeof(IEOSUserInterface_SwitchToCrossPlatformAccount) == 0x000028, "Wrong size on IEOSUserInterface_SwitchToCrossPlatformAccount");

// Class OnlineSubsystemRedpointEOS.RecentPlayersWorldSubsystem
// 0x0060 (0x0090 - 0x0030)
class URecentPlayersWorldSubsystem final : public UWorldSubsystem
{
public:
	uint8                                         Pad_1EA4[0x60];                                    // 0x0030(0x0060)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RecentPlayersWorldSubsystem">();
	}
	static class URecentPlayersWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<URecentPlayersWorldSubsystem>();
	}
};
static_assert(alignof(URecentPlayersWorldSubsystem) == 0x000008, "Wrong alignment on URecentPlayersWorldSubsystem");
static_assert(sizeof(URecentPlayersWorldSubsystem) == 0x000090, "Wrong size on URecentPlayersWorldSubsystem");

}

