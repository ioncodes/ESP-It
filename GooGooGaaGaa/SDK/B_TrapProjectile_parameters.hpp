#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_TrapProjectile

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_TrapProjectile.B_TrapProjectile_C.AddForceToPrimitiveComponent
// 0x0120 (0x0120 - 0x0000)
struct B_TrapProjectile_C_AddForceToPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    SuckComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWitch;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_AddForceToPrimitiveComponent) == 0x000008, "Wrong alignment on B_TrapProjectile_C_AddForceToPrimitiveComponent");
static_assert(sizeof(B_TrapProjectile_C_AddForceToPrimitiveComponent) == 0x000120, "Wrong size on B_TrapProjectile_C_AddForceToPrimitiveComponent");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, SuckComponent) == 0x000000, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::SuckComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, IsWitch) == 0x000008, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::IsWitch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000030, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000058, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000070, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Normal_ReturnValue) == 0x000078, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000A8, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0000C0, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x0000F0, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_AddForceToPrimitiveComponent, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000108, "Member 'B_TrapProjectile_C_AddForceToPrimitiveComponent::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BeginOverlapPropSphere
// 0x0028 (0x0028 - 0x0000)
struct B_TrapProjectile_C_BeginOverlapPropSphere final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapPrimitiveComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592C[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_BeginOverlapPropSphere) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BeginOverlapPropSphere");
static_assert(sizeof(B_TrapProjectile_C_BeginOverlapPropSphere) == 0x000028, "Wrong size on B_TrapProjectile_C_BeginOverlapPropSphere");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, OverlapActor) == 0x000000, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::OverlapActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, OverlapPrimitiveComponent) == 0x000008, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::OverlapPrimitiveComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, CallFunc_GetSuckedWitchesCount_Count) == 0x000010, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000018, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapPropSphere, CallFunc_Array_AddUnique_ReturnValue) == 0x000024, "Member 'B_TrapProjectile_C_BeginOverlapPropSphere::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BeginOverlapWitchSphere
// 0x00B0 (0x00B0 - 0x0000)
struct B_TrapProjectile_C_BeginOverlapWitchSphere final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapPrimitiveComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewLocalVar_0;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592D[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592F[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5930[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5931[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_DecoyProp_C*                         K2Node_DynamicCast_AsB_Decoy_Prop;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5932[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_DecoyWitch_C*                        K2Node_DynamicCast_AsB_Decoy_Witch;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5933[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5934[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5935[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_BeginOverlapWitchSphere) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BeginOverlapWitchSphere");
static_assert(sizeof(B_TrapProjectile_C_BeginOverlapWitchSphere) == 0x0000B0, "Wrong size on B_TrapProjectile_C_BeginOverlapWitchSphere");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, OverlapActor) == 0x000000, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::OverlapActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, OverlapPrimitiveComponent) == 0x000008, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::OverlapPrimitiveComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, NewLocalVar_0) == 0x000010, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetInstigator_ReturnValue) == 0x000028, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue) == 0x000030, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue_1) == 0x000038, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000041, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue_2) == 0x000048, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000051, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_AsB_Decoy_Prop) == 0x000068, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_AsB_Decoy_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_BooleanOR_ReturnValue_1) == 0x000071, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_AsB_Decoy_Witch) == 0x000078, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_AsB_Decoy_Witch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000084, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_GetSuckedWitchesCount_Count) == 0x000088, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_Array_AddUnique_ReturnValue_2) == 0x00008C, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000090, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_AsB_Witch) == 0x0000A0, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, K2Node_DynamicCast_bSuccess_3) == 0x0000A8, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginOverlapWitchSphere, CallFunc_Array_AddUnique_ReturnValue_3) == 0x0000AC, "Member 'B_TrapProjectile_C_BeginOverlapWitchSphere::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BeginPlaySetup
// 0x0028 (0x0028 - 0x0000)
struct B_TrapProjectile_C_BeginPlaySetup final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_BeginPlaySetup) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BeginPlaySetup");
static_assert(sizeof(B_TrapProjectile_C_BeginPlaySetup) == 0x000028, "Wrong size on B_TrapProjectile_C_BeginPlaySetup");
static_assert(offsetof(B_TrapProjectile_C_BeginPlaySetup, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'B_TrapProjectile_C_BeginPlaySetup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginPlaySetup, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_BeginPlaySetup::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginPlaySetup, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_BeginPlaySetup::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BeginPlaySetup, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000020, "Member 'B_TrapProjectile_C_BeginPlaySetup::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5936[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_OuterSphere_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5937[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_TrapProjectile_C_BndEvt__B_TrapProjectile_PropSuckSphere_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'B_TrapProjectile_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.EndOverlapPropSphere
// 0x0028 (0x0028 - 0x0000)
struct B_TrapProjectile_C_EndOverlapPropSphere final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapPrimitiveComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5938[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_EndOverlapPropSphere) == 0x000008, "Wrong alignment on B_TrapProjectile_C_EndOverlapPropSphere");
static_assert(sizeof(B_TrapProjectile_C_EndOverlapPropSphere) == 0x000028, "Wrong size on B_TrapProjectile_C_EndOverlapPropSphere");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, OverlapActor) == 0x000000, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::OverlapActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, OverlapPrimitiveComponent) == 0x000008, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::OverlapPrimitiveComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000010, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, CallFunc_GetSuckedWitchesCount_Count) == 0x00001C, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapPropSphere, CallFunc_Array_RemoveItem_ReturnValue) == 0x000021, "Member 'B_TrapProjectile_C_EndOverlapPropSphere::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.EndOverlapWitchSphere
// 0x0068 (0x0068 - 0x0000)
struct B_TrapProjectile_C_EndOverlapWitchSphere final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapPrimitiveComponent;                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5939[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593A[0x1];                                     // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593B[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593C[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_EndOverlapWitchSphere) == 0x000008, "Wrong alignment on B_TrapProjectile_C_EndOverlapWitchSphere");
static_assert(sizeof(B_TrapProjectile_C_EndOverlapWitchSphere) == 0x000068, "Wrong size on B_TrapProjectile_C_EndOverlapWitchSphere");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, OverlapActor) == 0x000000, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::OverlapActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, OverlapPrimitiveComponent) == 0x000008, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::OverlapPrimitiveComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_GetInstigator_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue_1) == 0x000028, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_GetObjectClass_ReturnValue_2) == 0x000030, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000038, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000039, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_IsValid_ReturnValue) == 0x00003A, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_BooleanAND_ReturnValue) == 0x00003B, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_Array_RemoveItem_ReturnValue) == 0x00003D, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_BooleanOR_ReturnValue_1) == 0x00003E, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_GetSuckedWitchesCount_Count) == 0x000040, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000048, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, K2Node_DynamicCast_AsB_Witch) == 0x000058, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_EndOverlapWitchSphere, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000061, "Member 'B_TrapProjectile_C_EndOverlapWitchSphere::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.ExecuteUbergraph_B_TrapProjectile
// 0x04A0 (0x04A0 - 0x0000)
struct B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593E[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0040(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593F[0x8];                                     // 0x0138(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_SpawnTransform;                       // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Owner;                                // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Instigator;                           // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x01B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Instigator;                     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5940[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5941[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0248(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0330(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0340(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WitchCount;                     // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5942[0x3];                                     // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0370(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0458(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5943[0x3];                                     // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WitchTrapped;                   // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0493(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile) == 0x000010, "Wrong alignment on B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile");
static_assert(sizeof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile) == 0x0004A0, "Wrong size on B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, EntryPoint) == 0x000000, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_HitComponent) == 0x000010, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000018, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000020, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000028, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_Hit) == 0x000040, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000128, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000130, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_Event_SpawnTransform) == 0x000140, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_Event_SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_Event_Owner) == 0x0001A0, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_Event_Instigator) == 0x0001A8, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_SpawnTransform) == 0x0001B0, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_Owner) == 0x000210, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_Instigator) == 0x000218, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_Instigator' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_HasAuthority_ReturnValue_1) == 0x000220, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000228, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000230, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000238, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000240, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000244, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000248, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000330, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000338, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000340, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000348, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_WitchCount) == 0x00034C, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_WitchCount' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000350, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000358, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000360, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000368, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_bFromSweep) == 0x00036C, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_SweepResult) == 0x000370, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000458, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherActor) == 0x000460, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherComp) == 0x000468, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000470, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_HasAuthority_ReturnValue_2) == 0x000474, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_Location) == 0x000478, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, K2Node_CustomEvent_WitchTrapped) == 0x000490, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::K2Node_CustomEvent_WitchTrapped' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000491, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_HasAuthority_ReturnValue_3) == 0x000492, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile, CallFunc_HasAuthority_ReturnValue_4) == 0x000493, "Member 'B_TrapProjectile_C_ExecuteUbergraph_B_TrapProjectile::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.GetSuckedWitchesCount
// 0x0008 (0x0008 - 0x0000)
struct B_TrapProjectile_C_GetSuckedWitchesCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_GetSuckedWitchesCount) == 0x000004, "Wrong alignment on B_TrapProjectile_C_GetSuckedWitchesCount");
static_assert(sizeof(B_TrapProjectile_C_GetSuckedWitchesCount) == 0x000008, "Wrong size on B_TrapProjectile_C_GetSuckedWitchesCount");
static_assert(offsetof(B_TrapProjectile_C_GetSuckedWitchesCount, Count) == 0x000000, "Member 'B_TrapProjectile_C_GetSuckedWitchesCount::Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_GetSuckedWitchesCount, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'B_TrapProjectile_C_GetSuckedWitchesCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.IncrementLifeTime
// 0x0098 (0x0098 - 0x0000)
struct B_TrapProjectile_C_IncrementLifeTime final
{
public:
	class USoundBase*                             Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5944[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5945[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSuckedWitchesCount_Count_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5946[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5947[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5948[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5949[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594A[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FadeOut_FadeOutDuration_ImplicitCast;     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_IncrementLifeTime) == 0x000008, "Wrong alignment on B_TrapProjectile_C_IncrementLifeTime");
static_assert(sizeof(B_TrapProjectile_C_IncrementLifeTime) == 0x000098, "Wrong size on B_TrapProjectile_C_IncrementLifeTime");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, Temp_object_Variable) == 0x000000, "Member 'B_TrapProjectile_C_IncrementLifeTime::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_GetSuckedWitchesCount_Count) == 0x00000C, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, Temp_object_Variable_1) == 0x000010, "Member 'B_TrapProjectile_C_IncrementLifeTime::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_GetSuckedWitchesCount_Count_1) == 0x000038, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_GetSuckedWitchesCount_Count_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00003C, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, Temp_bool_Variable) == 0x00003D, "Member 'B_TrapProjectile_C_IncrementLifeTime::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, K2Node_Select_Default) == 0x000040, "Member 'B_TrapProjectile_C_IncrementLifeTime::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Not_PreBool_ReturnValue_1) == 0x000049, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_BooleanAND_ReturnValue) == 0x000061, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_BooleanAND_ReturnValue_1) == 0x000090, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000091, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_IncrementLifeTime, CallFunc_FadeOut_FadeOutDuration_ImplicitCast) == 0x000094, "Member 'B_TrapProjectile_C_IncrementLifeTime::CallFunc_FadeOut_FadeOutDuration_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.InitializeRules
// 0x0028 (0x0028 - 0x0000)
struct B_TrapProjectile_C_InitializeRules final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_InitializeRules) == 0x000008, "Wrong alignment on B_TrapProjectile_C_InitializeRules");
static_assert(sizeof(B_TrapProjectile_C_InitializeRules) == 0x000028, "Wrong size on B_TrapProjectile_C_InitializeRules");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000008, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x000018, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1) == 0x00001C, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_InitializeRules, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000020, "Member 'B_TrapProjectile_C_InitializeRules::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.LaunchCharacter
// 0x00C8 (0x00C8 - 0x0000)
struct B_TrapProjectile_C_LaunchCharacter final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWitch;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594B[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594C[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594D[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_LaunchCharacter) == 0x000008, "Wrong alignment on B_TrapProjectile_C_LaunchCharacter");
static_assert(sizeof(B_TrapProjectile_C_LaunchCharacter) == 0x0000C8, "Wrong size on B_TrapProjectile_C_LaunchCharacter");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, Character) == 0x000000, "Member 'B_TrapProjectile_C_LaunchCharacter::Character' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, IsWitch) == 0x000008, "Member 'B_TrapProjectile_C_LaunchCharacter::IsWitch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, Temp_real_Variable) == 0x000010, "Member 'B_TrapProjectile_C_LaunchCharacter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, Temp_real_Variable_1) == 0x000038, "Member 'B_TrapProjectile_C_LaunchCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000040, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, Temp_bool_Variable) == 0x000048, "Member 'B_TrapProjectile_C_LaunchCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000050, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, K2Node_Select_Default) == 0x000058, "Member 'B_TrapProjectile_C_LaunchCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000098, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_LaunchCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000B0, "Member 'B_TrapProjectile_C_LaunchCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.PlayDestroyEffects
// 0x0030 (0x0030 - 0x0000)
struct B_TrapProjectile_C_PlayDestroyEffects final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WitchTrapped;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594E[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_PlayDestroyEffects) == 0x000008, "Wrong alignment on B_TrapProjectile_C_PlayDestroyEffects");
static_assert(sizeof(B_TrapProjectile_C_PlayDestroyEffects) == 0x000030, "Wrong size on B_TrapProjectile_C_PlayDestroyEffects");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffects, Location) == 0x000000, "Member 'B_TrapProjectile_C_PlayDestroyEffects::Location' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffects, WitchTrapped) == 0x000018, "Member 'B_TrapProjectile_C_PlayDestroyEffects::WitchTrapped' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffects, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_PlayDestroyEffects::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffects, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000028, "Member 'B_TrapProjectile_C_PlayDestroyEffects::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.PlayDestroyEffectsMulti
// 0x0020 (0x0020 - 0x0000)
struct B_TrapProjectile_C_PlayDestroyEffectsMulti final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WitchTrapped;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_PlayDestroyEffectsMulti) == 0x000008, "Wrong alignment on B_TrapProjectile_C_PlayDestroyEffectsMulti");
static_assert(sizeof(B_TrapProjectile_C_PlayDestroyEffectsMulti) == 0x000020, "Wrong size on B_TrapProjectile_C_PlayDestroyEffectsMulti");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffectsMulti, Location) == 0x000000, "Member 'B_TrapProjectile_C_PlayDestroyEffectsMulti::Location' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_PlayDestroyEffectsMulti, WitchTrapped) == 0x000018, "Member 'B_TrapProjectile_C_PlayDestroyEffectsMulti::WitchTrapped' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_TrapProjectile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_ReceiveTick) == 0x000004, "Wrong alignment on B_TrapProjectile_C_ReceiveTick");
static_assert(sizeof(B_TrapProjectile_C_ReceiveTick) == 0x000004, "Wrong size on B_TrapProjectile_C_ReceiveTick");
static_assert(offsetof(B_TrapProjectile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_TrapProjectile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.StartSucking
// 0x0010 (0x0010 - 0x0000)
struct B_TrapProjectile_C_StartSucking final
{
public:
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_StartSucking) == 0x000008, "Wrong alignment on B_TrapProjectile_C_StartSucking");
static_assert(sizeof(B_TrapProjectile_C_StartSucking) == 0x000010, "Wrong size on B_TrapProjectile_C_StartSucking");
static_assert(offsetof(B_TrapProjectile_C_StartSucking, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'B_TrapProjectile_C_StartSucking::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartSucking, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000008, "Member 'B_TrapProjectile_C_StartSucking::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.StartVacuum
// 0x0004 (0x0004 - 0x0000)
struct B_TrapProjectile_C_StartVacuum final
{
public:
	int32                                         CallFunc_GetSuckedWitchesCount_Count;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_StartVacuum) == 0x000004, "Wrong alignment on B_TrapProjectile_C_StartVacuum");
static_assert(sizeof(B_TrapProjectile_C_StartVacuum) == 0x000004, "Wrong size on B_TrapProjectile_C_StartVacuum");
static_assert(offsetof(B_TrapProjectile_C_StartVacuum, CallFunc_GetSuckedWitchesCount_Count) == 0x000000, "Member 'B_TrapProjectile_C_StartVacuum::CallFunc_GetSuckedWitchesCount_Count' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.StartWitchDebuff
// 0x0060 (0x0060 - 0x0000)
struct B_TrapProjectile_C_StartWitchDebuff final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWitchActor_ReturnActor;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_ActorEvents_C*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_ActorEvents_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_StartWitchDebuff) == 0x000008, "Wrong alignment on B_TrapProjectile_C_StartWitchDebuff");
static_assert(sizeof(B_TrapProjectile_C_StartWitchDebuff) == 0x000060, "Wrong size on B_TrapProjectile_C_StartWitchDebuff");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, Actor) == 0x000000, "Member 'B_TrapProjectile_C_StartWitchDebuff::Actor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_GetWitchActor_ReturnActor) == 0x000008, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_GetWitchActor_ReturnActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StartWitchDebuff, CallFunc_Greater_IntInt_ReturnValue) == 0x00005D, "Member 'B_TrapProjectile_C_StartWitchDebuff::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.StopHitDetectionAndMakeHeavy
// 0x0004 (0x0004 - 0x0000)
struct B_TrapProjectile_C_StopHitDetectionAndMakeHeavy final
{
public:
	float                                         CallFunc_SetMassScale_InMassScale_ImplicitCast;    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_StopHitDetectionAndMakeHeavy) == 0x000004, "Wrong alignment on B_TrapProjectile_C_StopHitDetectionAndMakeHeavy");
static_assert(sizeof(B_TrapProjectile_C_StopHitDetectionAndMakeHeavy) == 0x000004, "Wrong size on B_TrapProjectile_C_StopHitDetectionAndMakeHeavy");
static_assert(offsetof(B_TrapProjectile_C_StopHitDetectionAndMakeHeavy, CallFunc_SetMassScale_InMassScale_ImplicitCast) == 0x000000, "Member 'B_TrapProjectile_C_StopHitDetectionAndMakeHeavy::CallFunc_SetMassScale_InMassScale_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.StopWitchDebuff
// 0x0060 (0x0060 - 0x0000)
struct B_TrapProjectile_C_StopWitchDebuff final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWitchActor_ReturnActor;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UB_ActorEvents_C*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_ActorEvents_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_StopWitchDebuff) == 0x000008, "Wrong alignment on B_TrapProjectile_C_StopWitchDebuff");
static_assert(sizeof(B_TrapProjectile_C_StopWitchDebuff) == 0x000060, "Wrong size on B_TrapProjectile_C_StopWitchDebuff");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, Actor) == 0x000000, "Member 'B_TrapProjectile_C_StopWitchDebuff::Actor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_GetWitchActor_ReturnActor) == 0x000008, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_GetWitchActor_ReturnActor' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_StopWitchDebuff, CallFunc_Greater_IntInt_ReturnValue) == 0x00005D, "Member 'B_TrapProjectile_C_StopWitchDebuff::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.SuckPrimitiveComponent
// 0x0048 (0x0048 - 0x0000)
struct B_TrapProjectile_C_SuckPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    SuckComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWitchComponent;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5950[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_SuckPrimitiveComponent) == 0x000008, "Wrong alignment on B_TrapProjectile_C_SuckPrimitiveComponent");
static_assert(sizeof(B_TrapProjectile_C_SuckPrimitiveComponent) == 0x000048, "Wrong size on B_TrapProjectile_C_SuckPrimitiveComponent");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, SuckComponent) == 0x000000, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::SuckComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, IsWitchComponent) == 0x000008, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::IsWitchComponent' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000020, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, CallFunc_GetInstigator_ReturnValue) == 0x000030, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000038, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_TrapProjectile_C_SuckPrimitiveComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.SuckPrimitiveComponentsAndLaunchWitches
// 0x0088 (0x0088 - 0x0000)
struct B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_DecoyWitch_C*                        K2Node_DynamicCast_AsB_Decoy_Witch;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5951[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5952[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5953[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_3;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5954[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches) == 0x000008, "Wrong alignment on B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches");
static_assert(sizeof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches) == 0x000088, "Wrong size on B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Array_Index_Variable) == 0x000000, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Loop_Counter_Variable_2) == 0x000010, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Loop_Counter_Variable_3) == 0x000024, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, Temp_int_Array_Index_Variable_3) == 0x00002C, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, K2Node_DynamicCast_AsB_Decoy_Witch) == 0x000040, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::K2Node_DynamicCast_AsB_Decoy_Witch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Get_Item_3) == 0x000068, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, K2Node_DynamicCast_AsB_Witch) == 0x000070, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Length_ReturnValue_2) == 0x00007C, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Array_Length_ReturnValue_3) == 0x000080, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Less_IntInt_ReturnValue_2) == 0x000084, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches, CallFunc_Less_IntInt_ReturnValue_3) == 0x000085, "Member 'B_TrapProjectile_C_SuckPrimitiveComponentsAndLaunchWitches::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.SuckWitch
// 0x0010 (0x0010 - 0x0000)
struct B_TrapProjectile_C_SuckWitch final
{
public:
	class AB_Witch_C*                             Param_SuckWitch;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_SuckWitch) == 0x000008, "Wrong alignment on B_TrapProjectile_C_SuckWitch");
static_assert(sizeof(B_TrapProjectile_C_SuckWitch) == 0x000010, "Wrong size on B_TrapProjectile_C_SuckWitch");
static_assert(offsetof(B_TrapProjectile_C_SuckWitch, Param_SuckWitch) == 0x000000, "Member 'B_TrapProjectile_C_SuckWitch::Param_SuckWitch' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_SuckWitch, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'B_TrapProjectile_C_SuckWitch::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.TearDown
// 0x0018 (0x0018 - 0x0000)
struct B_TrapProjectile_C_TearDown final
{
public:
	float                                         CallFunc_NegateFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5955[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetMassScale_InMassScale_ImplicitCast;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NegateFloat_A_ImplicitCast;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentLifeTime_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_TearDown) == 0x000008, "Wrong alignment on B_TrapProjectile_C_TearDown");
static_assert(sizeof(B_TrapProjectile_C_TearDown) == 0x000018, "Wrong size on B_TrapProjectile_C_TearDown");
static_assert(offsetof(B_TrapProjectile_C_TearDown, CallFunc_NegateFloat_ReturnValue) == 0x000000, "Member 'B_TrapProjectile_C_TearDown::CallFunc_NegateFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearDown, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'B_TrapProjectile_C_TearDown::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearDown, CallFunc_SetMassScale_InMassScale_ImplicitCast) == 0x000008, "Member 'B_TrapProjectile_C_TearDown::CallFunc_SetMassScale_InMassScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearDown, CallFunc_NegateFloat_A_ImplicitCast) == 0x00000C, "Member 'B_TrapProjectile_C_TearDown::CallFunc_NegateFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearDown, K2Node_VariableSet_CurrentLifeTime_ImplicitCast) == 0x000010, "Member 'B_TrapProjectile_C_TearDown::K2Node_VariableSet_CurrentLifeTime_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.TearUp
// 0x00B0 (0x00B0 - 0x0000)
struct B_TrapProjectile_C_TearUp final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Owner;                                       // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Instigator;                                  // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5956[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SetVectorLength_ReturnValue;              // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVectorLength_size_ImplicitCast;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_TearUp) == 0x000010, "Wrong alignment on B_TrapProjectile_C_TearUp");
static_assert(sizeof(B_TrapProjectile_C_TearUp) == 0x0000B0, "Wrong size on B_TrapProjectile_C_TearUp");
static_assert(offsetof(B_TrapProjectile_C_TearUp, SpawnTransform) == 0x000000, "Member 'B_TrapProjectile_C_TearUp::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, Param_Owner) == 0x000060, "Member 'B_TrapProjectile_C_TearUp::Param_Owner' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, Param_Instigator) == 0x000068, "Member 'B_TrapProjectile_C_TearUp::Param_Instigator' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, CallFunc_HasAuthority_ReturnValue) == 0x000070, "Member 'B_TrapProjectile_C_TearUp::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'B_TrapProjectile_C_TearUp::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, CallFunc_SetVectorLength_ReturnValue) == 0x000090, "Member 'B_TrapProjectile_C_TearUp::CallFunc_SetVectorLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUp, CallFunc_SetVectorLength_size_ImplicitCast) == 0x0000A8, "Member 'B_TrapProjectile_C_TearUp::CallFunc_SetVectorLength_size_ImplicitCast' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.TearUpMulticast
// 0x0070 (0x0070 - 0x0000)
struct B_TrapProjectile_C_TearUpMulticast final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Owner;                                       // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Instigator;                                  // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_TearUpMulticast) == 0x000010, "Wrong alignment on B_TrapProjectile_C_TearUpMulticast");
static_assert(sizeof(B_TrapProjectile_C_TearUpMulticast) == 0x000070, "Wrong size on B_TrapProjectile_C_TearUpMulticast");
static_assert(offsetof(B_TrapProjectile_C_TearUpMulticast, SpawnTransform) == 0x000000, "Member 'B_TrapProjectile_C_TearUpMulticast::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUpMulticast, Param_Owner) == 0x000060, "Member 'B_TrapProjectile_C_TearUpMulticast::Param_Owner' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUpMulticast, Param_Instigator) == 0x000068, "Member 'B_TrapProjectile_C_TearUpMulticast::Param_Instigator' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.TearUpPoolObject
// 0x0070 (0x0070 - 0x0000)
struct B_TrapProjectile_C_TearUpPoolObject final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_Owner;                                       // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Instigator;                                  // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_TearUpPoolObject) == 0x000010, "Wrong alignment on B_TrapProjectile_C_TearUpPoolObject");
static_assert(sizeof(B_TrapProjectile_C_TearUpPoolObject) == 0x000070, "Wrong size on B_TrapProjectile_C_TearUpPoolObject");
static_assert(offsetof(B_TrapProjectile_C_TearUpPoolObject, SpawnTransform) == 0x000000, "Member 'B_TrapProjectile_C_TearUpPoolObject::SpawnTransform' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUpPoolObject, Param_Owner) == 0x000060, "Member 'B_TrapProjectile_C_TearUpPoolObject::Param_Owner' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_TearUpPoolObject, Param_Instigator) == 0x000068, "Member 'B_TrapProjectile_C_TearUpPoolObject::Param_Instigator' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.UpdateEffect
// 0x0010 (0x0010 - 0x0000)
struct B_TrapProjectile_C_UpdateEffect final
{
public:
	int32                                         WitchCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WitchSucked;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5957[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_UpdateEffect) == 0x000004, "Wrong alignment on B_TrapProjectile_C_UpdateEffect");
static_assert(sizeof(B_TrapProjectile_C_UpdateEffect) == 0x000010, "Wrong size on B_TrapProjectile_C_UpdateEffect");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffect, WitchCount) == 0x000000, "Member 'B_TrapProjectile_C_UpdateEffect::WitchCount' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffect, WitchSucked) == 0x000004, "Member 'B_TrapProjectile_C_UpdateEffect::WitchSucked' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffect, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000008, "Member 'B_TrapProjectile_C_UpdateEffect::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffect, CallFunc_Greater_IntInt_ReturnValue) == 0x00000C, "Member 'B_TrapProjectile_C_UpdateEffect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffect, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'B_TrapProjectile_C_UpdateEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.UpdateEffectMulti
// 0x0004 (0x0004 - 0x0000)
struct B_TrapProjectile_C_UpdateEffectMulti final
{
public:
	int32                                         WitchCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_UpdateEffectMulti) == 0x000004, "Wrong alignment on B_TrapProjectile_C_UpdateEffectMulti");
static_assert(sizeof(B_TrapProjectile_C_UpdateEffectMulti) == 0x000004, "Wrong size on B_TrapProjectile_C_UpdateEffectMulti");
static_assert(offsetof(B_TrapProjectile_C_UpdateEffectMulti, WitchCount) == 0x000000, "Member 'B_TrapProjectile_C_UpdateEffectMulti::WitchCount' has a wrong offset!");

// Function B_TrapProjectile.B_TrapProjectile_C.UpdateSoundPitches
// 0x0040 (0x0040 - 0x0000)
struct B_TrapProjectile_C_UpdateSoundPitches final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5958[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5959[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_TrapProjectile_C_UpdateSoundPitches) == 0x000008, "Wrong alignment on B_TrapProjectile_C_UpdateSoundPitches");
static_assert(sizeof(B_TrapProjectile_C_UpdateSoundPitches) == 0x000040, "Wrong size on B_TrapProjectile_C_UpdateSoundPitches");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_GetFloatValue_ReturnValue) == 0x000010, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000028, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_TrapProjectile_C_UpdateSoundPitches, CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast) == 0x000038, "Member 'B_TrapProjectile_C_UpdateSoundPitches::CallFunc_SetPitchMultiplier_NewPitchMultiplier_ImplicitCast' has a wrong offset!");

}

