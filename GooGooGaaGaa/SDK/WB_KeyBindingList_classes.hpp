#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_KeyBindingList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SAxisToEdit_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_KeyBindingList.WB_KeyBindingList_C
// 0x0058 (0x0318 - 0x02C0)
class UWB_KeyBindingList_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      KeyBindingsGrid;                                   // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WaitInput;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5479[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_KeyBinding_C*                       FocusedKeyBinding;                                 // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UButton*                                FocusedBindingButton;                              // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         FocusedBindingIndex;                               // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_547A[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ActionsToEdit;                                     // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FSAxisToEdit>                   AxisToEdit;                                        // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWB_KeyBindingButton_C*                 FocusedKeyBindingButton;                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void CreateKeyBindingWidget(class UWB_KeyBinding_C** KeyBindingWidget);
	void CreateKeyBindingWidgetFromAction(class FName ActionName);
	void CreateKeyBindingWidgetFromAxis(const struct FSAxisToEdit& Param_AxisToEdit);
	void ExecuteUbergraph_WB_KeyBindingList(int32 EntryPoint);
	void GetInitialFocusWidget(class UUserWidget** InitialFocusWidget);
	void InitializeBindingWidgets();
	void LoadInputMappingsManagerSettings();
	void OnApply();
	void OnBack();
	void OnKeyBindingButtonClicked(class UWB_KeyBinding_C* KeyBindingWidget, class UWB_KeyBindingButton_C* KeyBindingButton, int32 Param_Index);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnSpecialAction();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_KeyBindingList_C">();
	}
	static class UWB_KeyBindingList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_KeyBindingList_C>();
	}
};
static_assert(alignof(UWB_KeyBindingList_C) == 0x000008, "Wrong alignment on UWB_KeyBindingList_C");
static_assert(sizeof(UWB_KeyBindingList_C) == 0x000318, "Wrong size on UWB_KeyBindingList_C");
static_assert(offsetof(UWB_KeyBindingList_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_KeyBindingList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, KeyBindingsGrid) == 0x0002C8, "Member 'UWB_KeyBindingList_C::KeyBindingsGrid' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, WaitInput) == 0x0002D0, "Member 'UWB_KeyBindingList_C::WaitInput' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, FocusedKeyBinding) == 0x0002D8, "Member 'UWB_KeyBindingList_C::FocusedKeyBinding' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, FocusedBindingButton) == 0x0002E0, "Member 'UWB_KeyBindingList_C::FocusedBindingButton' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, FocusedBindingIndex) == 0x0002E8, "Member 'UWB_KeyBindingList_C::FocusedBindingIndex' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, ActionsToEdit) == 0x0002F0, "Member 'UWB_KeyBindingList_C::ActionsToEdit' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, AxisToEdit) == 0x000300, "Member 'UWB_KeyBindingList_C::AxisToEdit' has a wrong offset!");
static_assert(offsetof(UWB_KeyBindingList_C, FocusedKeyBindingButton) == 0x000310, "Member 'UWB_KeyBindingList_C::FocusedKeyBindingButton' has a wrong offset!");

}

