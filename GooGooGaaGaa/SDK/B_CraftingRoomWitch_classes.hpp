#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CraftingRoomWitch

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_CraftingRoomWitch.B_CraftingRoomWitch_C
// 0x02B8 (0x0550 - 0x0298)
class AB_CraftingRoomWitch_C final : public AActor
{
public:
	class UNiagaraComponent*                      NS_MediumFireCraftingScene;                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_IdleShroomSpores;                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots6;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock09;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock08;                                         // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant08;                                   // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plant;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant07;                                   // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant02;                                   // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant06;                                   // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant05;                                   // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant04;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant03;                                   // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallPlant01;                                   // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom016;                                   // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom015;                                   // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom014;                                   // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom013;                                   // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom012;                                   // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom011;                                   // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom010;                                   // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom09;                                    // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom08;                                    // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom07;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom01;                                    // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom06;                                    // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom05;                                    // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom04;                                    // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RockDeco02;                                     // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom02;                                    // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_MinShroom03;                                    // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RuneRayCircle;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallShroom04;                                  // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock07;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock03;                                         // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock06;                                         // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock05;                                         // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rock04;                                         // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GraveyardLily2;                                    // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallShroom03;                                  // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GraveyardLily;                                     // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   GraveyardLily1;                                    // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Crystal01;                                      // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots5;                                         // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RuneStone05;                                    // 0x0408(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForestTree05;                                      // 0x0410(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Pine01;                                         // 0x0418(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots4;                                         // 0x0420(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallShroom02;                                  // 0x0428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots3;                                         // 0x0430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Crystal04;                                      // 0x0438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RuneStone04;                                    // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RuneStone03;                                    // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_RuneStone01;                                    // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SmallShroom01;                                  // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Crystal03;                                      // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots2;                                         // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots1;                                         // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Roots;                                          // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Campfire;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Craft_Terrain;                                  // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PineThin;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_PineThin01;                                     // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForestTree04;                                      // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForestTree03;                                      // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForestTree01;                                      // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForestTree02;                                      // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh17;                                      // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Shape_Plane;                                    // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WitchLight;                                        // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SkyDome;                                        // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Podest;                                            // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   B_MenuCamera;                                      // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      Head;                                              // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      UpperBody;                                         // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinBodypart_C*                      LowerBody;                                         // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          Hat;                                               // 0x0530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          RangedWeapon;                                      // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_SkinItem_C*                          MeleeWeapon;                                       // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseDown;                                         // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C71[0x3];                                     // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MousePosition;                                     // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_CraftingRoomWitch_C">();
	}
	static class AB_CraftingRoomWitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_CraftingRoomWitch_C>();
	}
};
static_assert(alignof(AB_CraftingRoomWitch_C) == 0x000008, "Wrong alignment on AB_CraftingRoomWitch_C");
static_assert(sizeof(AB_CraftingRoomWitch_C) == 0x000550, "Wrong size on AB_CraftingRoomWitch_C");
static_assert(offsetof(AB_CraftingRoomWitch_C, NS_MediumFireCraftingScene) == 0x000298, "Member 'AB_CraftingRoomWitch_C::NS_MediumFireCraftingScene' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, NS_IdleShroomSpores) == 0x0002A0, "Member 'AB_CraftingRoomWitch_C::NS_IdleShroomSpores' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, PointLight1) == 0x0002A8, "Member 'AB_CraftingRoomWitch_C::PointLight1' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, PointLight) == 0x0002B0, "Member 'AB_CraftingRoomWitch_C::PointLight' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots6) == 0x0002B8, "Member 'AB_CraftingRoomWitch_C::SM_Roots6' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock09) == 0x0002C0, "Member 'AB_CraftingRoomWitch_C::SM_Rock09' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock08) == 0x0002C8, "Member 'AB_CraftingRoomWitch_C::SM_Rock08' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant08) == 0x0002D0, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant08' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Plant) == 0x0002D8, "Member 'AB_CraftingRoomWitch_C::Plant' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant07) == 0x0002E0, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant07' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant02) == 0x0002E8, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant02' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant06) == 0x0002F0, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant06' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant05) == 0x0002F8, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant05' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant04) == 0x000300, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant03) == 0x000308, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallPlant01) == 0x000310, "Member 'AB_CraftingRoomWitch_C::SM_SmallPlant01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom016) == 0x000318, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom016' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom015) == 0x000320, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom015' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom014) == 0x000328, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom014' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom013) == 0x000330, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom013' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom012) == 0x000338, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom012' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom011) == 0x000340, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom011' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom010) == 0x000348, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom010' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom09) == 0x000350, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom09' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom08) == 0x000358, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom08' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom07) == 0x000360, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom07' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom01) == 0x000368, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom06) == 0x000370, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom06' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom05) == 0x000378, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom05' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom04) == 0x000380, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RockDeco02) == 0x000388, "Member 'AB_CraftingRoomWitch_C::SM_RockDeco02' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom02) == 0x000390, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom02' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_MinShroom03) == 0x000398, "Member 'AB_CraftingRoomWitch_C::SM_MinShroom03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RuneRayCircle) == 0x0003A0, "Member 'AB_CraftingRoomWitch_C::SM_RuneRayCircle' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallShroom04) == 0x0003A8, "Member 'AB_CraftingRoomWitch_C::SM_SmallShroom04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock07) == 0x0003B0, "Member 'AB_CraftingRoomWitch_C::SM_Rock07' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock03) == 0x0003B8, "Member 'AB_CraftingRoomWitch_C::SM_Rock03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock06) == 0x0003C0, "Member 'AB_CraftingRoomWitch_C::SM_Rock06' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock05) == 0x0003C8, "Member 'AB_CraftingRoomWitch_C::SM_Rock05' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Rock04) == 0x0003D0, "Member 'AB_CraftingRoomWitch_C::SM_Rock04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, GraveyardLily2) == 0x0003D8, "Member 'AB_CraftingRoomWitch_C::GraveyardLily2' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallShroom03) == 0x0003E0, "Member 'AB_CraftingRoomWitch_C::SM_SmallShroom03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, GraveyardLily) == 0x0003E8, "Member 'AB_CraftingRoomWitch_C::GraveyardLily' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, GraveyardLily1) == 0x0003F0, "Member 'AB_CraftingRoomWitch_C::GraveyardLily1' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Crystal01) == 0x0003F8, "Member 'AB_CraftingRoomWitch_C::SM_Crystal01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots5) == 0x000400, "Member 'AB_CraftingRoomWitch_C::SM_Roots5' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RuneStone05) == 0x000408, "Member 'AB_CraftingRoomWitch_C::SM_RuneStone05' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, ForestTree05) == 0x000410, "Member 'AB_CraftingRoomWitch_C::ForestTree05' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Pine01) == 0x000418, "Member 'AB_CraftingRoomWitch_C::SM_Pine01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots4) == 0x000420, "Member 'AB_CraftingRoomWitch_C::SM_Roots4' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallShroom02) == 0x000428, "Member 'AB_CraftingRoomWitch_C::SM_SmallShroom02' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots3) == 0x000430, "Member 'AB_CraftingRoomWitch_C::SM_Roots3' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Crystal04) == 0x000438, "Member 'AB_CraftingRoomWitch_C::SM_Crystal04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RuneStone04) == 0x000440, "Member 'AB_CraftingRoomWitch_C::SM_RuneStone04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RuneStone03) == 0x000448, "Member 'AB_CraftingRoomWitch_C::SM_RuneStone03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_RuneStone01) == 0x000450, "Member 'AB_CraftingRoomWitch_C::SM_RuneStone01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SmallShroom01) == 0x000458, "Member 'AB_CraftingRoomWitch_C::SM_SmallShroom01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Crystal03) == 0x000460, "Member 'AB_CraftingRoomWitch_C::SM_Crystal03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots2) == 0x000468, "Member 'AB_CraftingRoomWitch_C::SM_Roots2' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots1) == 0x000470, "Member 'AB_CraftingRoomWitch_C::SM_Roots1' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Roots) == 0x000478, "Member 'AB_CraftingRoomWitch_C::SM_Roots' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Campfire) == 0x000480, "Member 'AB_CraftingRoomWitch_C::SM_Campfire' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Craft_Terrain) == 0x000488, "Member 'AB_CraftingRoomWitch_C::SM_Craft_Terrain' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_PineThin) == 0x000490, "Member 'AB_CraftingRoomWitch_C::SM_PineThin' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_PineThin01) == 0x000498, "Member 'AB_CraftingRoomWitch_C::SM_PineThin01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, ForestTree04) == 0x0004A0, "Member 'AB_CraftingRoomWitch_C::ForestTree04' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, ForestTree03) == 0x0004A8, "Member 'AB_CraftingRoomWitch_C::ForestTree03' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, ForestTree01) == 0x0004B0, "Member 'AB_CraftingRoomWitch_C::ForestTree01' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, ForestTree02) == 0x0004B8, "Member 'AB_CraftingRoomWitch_C::ForestTree02' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, StaticMesh17) == 0x0004C0, "Member 'AB_CraftingRoomWitch_C::StaticMesh17' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_Shape_Plane) == 0x0004C8, "Member 'AB_CraftingRoomWitch_C::SM_Shape_Plane' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SpotLight1) == 0x0004D0, "Member 'AB_CraftingRoomWitch_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, WitchLight) == 0x0004D8, "Member 'AB_CraftingRoomWitch_C::WitchLight' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, SM_SkyDome) == 0x0004E0, "Member 'AB_CraftingRoomWitch_C::SM_SkyDome' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Cube) == 0x0004E8, "Member 'AB_CraftingRoomWitch_C::Cube' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, PostProcess) == 0x0004F0, "Member 'AB_CraftingRoomWitch_C::PostProcess' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Box) == 0x0004F8, "Member 'AB_CraftingRoomWitch_C::Box' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Podest) == 0x000500, "Member 'AB_CraftingRoomWitch_C::Podest' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, B_MenuCamera) == 0x000508, "Member 'AB_CraftingRoomWitch_C::B_MenuCamera' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Scene) == 0x000510, "Member 'AB_CraftingRoomWitch_C::Scene' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Head) == 0x000518, "Member 'AB_CraftingRoomWitch_C::Head' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, UpperBody) == 0x000520, "Member 'AB_CraftingRoomWitch_C::UpperBody' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, LowerBody) == 0x000528, "Member 'AB_CraftingRoomWitch_C::LowerBody' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, Hat) == 0x000530, "Member 'AB_CraftingRoomWitch_C::Hat' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, RangedWeapon) == 0x000538, "Member 'AB_CraftingRoomWitch_C::RangedWeapon' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, MeleeWeapon) == 0x000540, "Member 'AB_CraftingRoomWitch_C::MeleeWeapon' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, MouseDown) == 0x000548, "Member 'AB_CraftingRoomWitch_C::MouseDown' has a wrong offset!");
static_assert(offsetof(AB_CraftingRoomWitch_C, MousePosition) == 0x00054C, "Member 'AB_CraftingRoomWitch_C::MousePosition' has a wrong offset!");

}

