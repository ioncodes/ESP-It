#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WitchHuntFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ETeamID_structs.hpp"
#include "EHighlightChannel_structs.hpp"


namespace SDK::Params
{

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetPlatformLogo
// 0x0028 (0x0028 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetPlatformLogo final
{
public:
	class FString                                 PlatformName;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             PlatformLogo;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetPlatformLogo");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo) == 0x000028, "Wrong size on B_WitchHuntFunctionLibrary_C_GetPlatformLogo");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo, PlatformName) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetPlatformLogo::PlatformName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetPlatformLogo::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo, PlatformLogo) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetPlatformLogo::PlatformLogo' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlatformLogo, K2Node_SwitchString_CmpSuccess) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetPlatformLogo::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.HasWitchInvisiblePowerup
// 0x0040 (0x0040 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetActorFromWitchAsPawn_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup) == 0x000040, "Wrong size on B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, CallFunc_GetActorFromWitchAsPawn_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::CallFunc_GetActorFromWitchAsPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, K2Node_DynamicCast_AsB_Witch) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_HasWitchInvisiblePowerup::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetActorFromWitchAsPawn
// 0x0030 (0x0030 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DD[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn) == 0x000030, "Wrong size on B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, K2Node_DynamicCast_AsPawn) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetActorFromWitchAsPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.IsActorFromWitch
// 0x0038 (0x0038 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_IsActorFromWitch final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DF[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_3;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_4;             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_IsActorFromWitch");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch) == 0x000038, "Wrong size on B_WitchHuntFunctionLibrary_C_IsActorFromWitch");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_ClassIsChildOf_ReturnValue) == 0x000021, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_GetObjectClass_ReturnValue_1) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000031, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_ClassIsChildOf_ReturnValue_3) == 0x000032, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_ClassIsChildOf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_ClassIsChildOf_ReturnValue_4) == 0x000033, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_ClassIsChildOf_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_BooleanOR_ReturnValue_1) == 0x000035, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsActorFromWitch, CallFunc_BooleanOR_ReturnValue_2) == 0x000036, "Member 'B_WitchHuntFunctionLibrary_C_IsActorFromWitch::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.WakeUpSurroundingProps
// 0x00F8 (0x00F8 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps final
{
public:
	class UStaticMeshComponent*                   Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ObjectsInRange;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E1[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E2[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E3[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E4[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps) == 0x0000F8, "Wrong size on B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, Mesh) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::Mesh' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, ObjectsInRange) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::ObjectsInRange' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, K2Node_MakeArray_Array) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, K2Node_MakeArray_Array_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Array_Get_Item) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_GetComponentBounds_Origin) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_GetComponentBounds_BoxExtent) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_GetComponentBounds_SphereRadius) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_SphereOverlapActors_OutActors) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000E0, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x0000F0, "Member 'B_WitchHuntFunctionLibrary_C_WakeUpSurroundingProps::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetTabToSideOfCurrent
// 0x0068 (0x0068 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent final
{
public:
	class UWidgetSwitcher*                        Switcher;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ToTheRight;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                RightTab;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumWidgets_ReturnValue;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetActiveWidgetIndex_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E6[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E7[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_MathExpression_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E8[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetWidgetAtIndex_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent) == 0x000068, "Wrong size on B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, Switcher) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::Switcher' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, ToTheRight) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::ToTheRight' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, RightTab) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::RightTab' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, Temp_int_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_GetNumWidgets_ReturnValue) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_GetNumWidgets_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_GetActiveWidgetIndex_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_GetActiveWidgetIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, Temp_bool_Variable) == 0x000034, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, Temp_int_Variable_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, K2Node_Select_Default) == 0x00003C, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, K2Node_MathExpression_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_FTrunc_ReturnValue) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent, CallFunc_GetWidgetAtIndex_ReturnValue) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_GetTabToSideOfCurrent::CallFunc_GetWidgetAtIndex_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.SetUpGamepadWidgetNavigation
// 0x0080 (0x0080 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation final
{
public:
	TArray<class UUserWidget*>                    UIElements;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            UpEscapeElement;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            DownEscapeElement;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E9[0x2];                                     // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EA[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item_2;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation) == 0x000080, "Wrong size on B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, UIElements) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::UIElements' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, UpEscapeElement) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::UpEscapeElement' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, DownEscapeElement) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::DownEscapeElement' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, __WorldContext) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, Temp_int_Array_Index_Variable) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, Temp_bool_Variable) == 0x00003D, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, Temp_bool_Variable_1) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, K2Node_Select_Default) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, K2Node_Select_Default_1) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Array_Get_Item_2) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation, CallFunc_Less_IntInt_ReturnValue_1) == 0x00007C, "Member 'B_WitchHuntFunctionLibrary_C_SetUpGamepadWidgetNavigation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.SetNewPlayerPosForResize
// 0x0200 (0x0200 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewScale;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0110(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize) == 0x000200, "Wrong size on B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, NewScale) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::NewScale' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_GetActorScale3D_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_X) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Y) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Z) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_X_1) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Y_1) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Z_1) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_GetActorBounds_Origin) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_GetActorBounds_BoxExtent) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_X_2) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Y_2) == 0x0000B0, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Z_2) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_X_3) == 0x0000C0, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Y_3) == 0x0000C8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_BreakVector_Z_3) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000110, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001F8, "Member 'B_WitchHuntFunctionLibrary_C_SetNewPlayerPosForResize::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.Show Creative Spectator Names
// 0x0098 (0x0098 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeSpectator_C*                 CurrentSpectator;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EC[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_CreativeSpectator_C*                 K2Node_DynamicCast_AsB_Creative_Spectator;         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42ED[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EE[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EF[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names) == 0x000098, "Wrong size on B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CurrentSpectator) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CurrentSpectator' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_AsB_Creative_Spectator) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_AsB_Creative_Spectator' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_IsLocallyControlled_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_AsB_Player_State) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_GetPlayerOrBotName_Name) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_AsWB_Player_Name) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_Show_Creative_Spectator_Names::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.ConvertSecondsToMinutesAndSeconds
// 0x00F0 (0x00F0 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds final
{
public:
	int32                                         InSeconds;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 MinutesString;                                     // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 SecondsString;                                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Seconds;                                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Minutes;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F1[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F2[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue_1; // 0x00D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds) == 0x0000F0, "Wrong size on B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, InSeconds) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::InSeconds' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, MinutesString) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::MinutesString' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, SecondsString) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::SecondsString' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, Seconds) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::Seconds' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, Minutes) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::Minutes' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_FFloor_ReturnValue) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_FFloor_ReturnValue_1) == 0x000074, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Conv_IntToString_ReturnValue) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_GetCharacterArrayFromString_ReturnValue_1) == 0x0000D8, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_GetCharacterArrayFromString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000EC, "Member 'B_WitchHuntFunctionLibrary_C_ConvertSecondsToMinutesAndSeconds::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetPlayerStartToSpawnAtAndOccupyIt
// 0x0178 (0x0178 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt final
{
public:
	ETeamID                                       Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WitchPlayerStartClass;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AlternativeWitchPlayerStartClass;                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HunterPlayerStartClass;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AlternativeHunterPlayerStartClass;                 // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawningOffset;                                    // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 PlayerStartToSpawnAt;                              // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnOffset;                                       // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         FreePlayerStarts;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         PlayerStarts;                                      // 0x0080(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F4[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_PlayerStarts;             // 0x0098(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts;   // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerStarts_HasPlayerStartsOnMap;     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F5[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F6[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_PlayerStarts_1;           // 0x00D8(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_1; // 0x00E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_1;   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F7[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F8[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_PlayerStarts_2;           // 0x0110(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_2; // 0x0120(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_2;   // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F9[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_PlayerStarts_3;           // 0x0138(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_3; // 0x0148(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_3;   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FA[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIPlayerStart_C>       K2Node_DynamicCast_AsIPlayer_Start;                // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt) == 0x000178, "Wrong size on B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, Team) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::Team' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, WitchPlayerStartClass) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::WitchPlayerStartClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, AlternativeWitchPlayerStartClass) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::AlternativeWitchPlayerStartClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, HunterPlayerStartClass) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::HunterPlayerStartClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, AlternativeHunterPlayerStartClass) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::AlternativeHunterPlayerStartClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, __WorldContext) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, SpawningOffset) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::SpawningOffset' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, PlayerStartToSpawnAt) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::PlayerStartToSpawnAt' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, SpawnOffset) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::SpawnOffset' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, FreePlayerStarts) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::FreePlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, PlayerStarts) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::PlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, K2Node_SwitchEnum_CmpSuccess) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_PlayerStarts) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_PlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_HasPlayerStartsOnMap) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_HasPlayerStartsOnMap' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_RandomInteger_ReturnValue) == 0x0000C0, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_RandomInteger_ReturnValue_1) == 0x0000D4, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_PlayerStarts_1) == 0x0000D8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_PlayerStarts_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_1) == 0x0000E8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_1) == 0x0000F8, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_PlayerStarts_2) == 0x000110, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_PlayerStarts_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_2) == 0x000120, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_2) == 0x000130, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_Greater_IntInt_ReturnValue) == 0x000131, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_PlayerStarts_3) == 0x000138, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_PlayerStarts_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_3) == 0x000148, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_UnoccupiedPlayerStarts_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_3) == 0x000158, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::CallFunc_GetPlayerStarts_HasPlayerStartsOnMap_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, K2Node_DynamicCast_AsIPlayer_Start) == 0x000160, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::K2Node_DynamicCast_AsIPlayer_Start' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStartToSpawnAtAndOccupyIt::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetPlayerStarts
// 0x00A8 (0x00A8 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetPlayerStarts final
{
public:
	class UClass*                                 PlayerStartClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         PlayerStarts;                                      // 0x0010(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         UnoccupiedPlayerStarts;                            // 0x0020(0x0010)(Parm, OutParm)
	bool                                          HasPlayerStartsOnMap;                              // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         FreePlayerStarts;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         PlayerStartActors;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FC[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIPlayerStart_C>       K2Node_DynamicCast_AsIPlayer_Start;                // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FD[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetOccupied_Occupied;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FE[0x1];                                     // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetPlayerStarts");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts) == 0x0000A8, "Wrong size on B_WitchHuntFunctionLibrary_C_GetPlayerStarts");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, PlayerStartClass) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::PlayerStartClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, PlayerStarts) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::PlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, UnoccupiedPlayerStarts) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::UnoccupiedPlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, HasPlayerStartsOnMap) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::HasPlayerStartsOnMap' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, FreePlayerStarts) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::FreePlayerStarts' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, PlayerStartActors) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::PlayerStartActors' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, Temp_int_Array_Index_Variable) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Array_Get_Item) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, K2Node_DynamicCast_AsIPlayer_Start) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::K2Node_DynamicCast_AsIPlayer_Start' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_GetOccupied_Occupied) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_GetOccupied_Occupied' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Not_PreBool_ReturnValue) == 0x0000A2, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerStarts, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerStarts::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.ObjectiveSpectatorHud
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud final
{
public:
	class APawn*                                  SelfRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetFirstLocalPlayerController_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowWitchOutlines_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHunterOutlines_ReturnValue;     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4300[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, SelfRef) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, PlayerController) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::PlayerController' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_GetFirstLocalPlayerController_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_GetFirstLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_ShouldShowWitchOutlines_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_ShouldShowWitchOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_ShouldShowHunterOutlines_ReturnValue) == 0x000031, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_ShouldShowHunterOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_IsLocallyControlled_ReturnValue) == 0x000032, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable_1) == 0x000033, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_byte_Variable) == 0x000034, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable_2) == 0x000035, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable_3) == 0x000036, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable_4) == 0x000037, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_bool_Variable_5) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, Temp_byte_Variable_1) == 0x000039, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, K2Node_SwitchEnum_CmpSuccess) == 0x000049, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, K2Node_Select_Default) == 0x00004A, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, K2Node_Select_Default_1) == 0x00004B, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_BooleanAND_ReturnValue_1) == 0x00004D, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004F, "Member 'B_WitchHuntFunctionLibrary_C_ObjectiveSpectatorHud::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.SpectatorWitchHighlight
// 0x0030 (0x0030 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight final
{
public:
	class APawn*                                  SelfRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowWitchOutlines_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4301[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight) == 0x000030, "Wrong size on B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, SelfRef) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, CallFunc_ShouldShowWitchOutlines_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::CallFunc_ShouldShowWitchOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, K2Node_DynamicCast_AsB_Game_State) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorWitchHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetPlayerOrBotName
// 0x0058 (0x0058 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Param_Name;                                        // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsABot_ReturnValue;                       // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4302[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4303[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName) == 0x000058, "Wrong size on B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, PlayerState) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::PlayerState' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, Param_Name) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::Param_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, Temp_bool_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, CallFunc_IsABot_ReturnValue) == 0x000021, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::CallFunc_IsABot_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, K2Node_DynamicCast_AsB_Player_State) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName, K2Node_Select_Default) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetPlayerOrBotName::K2Node_Select_Default' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.AddToSnowList
// 0x0028 (0x0028 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_AddToSnowList final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4304[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_AddToSnowList) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_AddToSnowList");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_AddToSnowList) == 0x000028, "Wrong size on B_WitchHuntFunctionLibrary_C_AddToSnowList");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AddToSnowList, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_AddToSnowList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.ShouldShowWitchOutlines
// 0x0028 (0x0028 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4305[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines) == 0x000028, "Wrong size on B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, ReturnValue) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowWitchOutlines::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.ShouldShowHunterOutlines
// 0x0028 (0x0028 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4306[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines) == 0x000028, "Wrong size on B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, ReturnValue) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'B_WitchHuntFunctionLibrary_C_ShouldShowHunterOutlines::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.EnableOutliningFor
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_EnableOutliningFor final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  SelfRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInOutlineRangeTo_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OutlineTrace_bVisible;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4307[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4308[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_1;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean_1;             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_EnableOutliningFor");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_EnableOutliningFor");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, Pawn) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, SelfRef) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, CallFunc_IsInOutlineRangeTo_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::CallFunc_IsInOutlineRangeTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, CallFunc_OutlineTrace_bVisible) == 0x000019, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::CallFunc_OutlineTrace_bVisible' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, K2Node_DynamicCast_AsIHighlightable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, K2Node_DynamicCast_AsIHighlightable_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::K2Node_DynamicCast_AsIHighlightable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, CallFunc_SetHighlight_ForcedBoolean) == 0x000049, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_EnableOutliningFor, CallFunc_SetHighlight_ForcedBoolean_1) == 0x00004A, "Member 'B_WitchHuntFunctionLibrary_C_EnableOutliningFor::CallFunc_SetHighlight_ForcedBoolean_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.OutlineTrace
// 0x0180 (0x0180 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_OutlineTrace final
{
public:
	class APawn*                                  SelfRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bVisible;                                          // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4309[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430A[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0090(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_OutlineTrace) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_OutlineTrace");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_OutlineTrace) == 0x000180, "Wrong size on B_WitchHuntFunctionLibrary_C_OutlineTrace");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, SelfRef) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, Target) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::Target' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, bVisible) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::bVisible' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, Temp_object_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_GetCameraLocation_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, K2Node_DynamicCast_AsPlayer_Controller) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, K2Node_MakeArray_Array) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_OutlineTrace, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000178, "Member 'B_WitchHuntFunctionLibrary_C_OutlineTrace::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.IsInOutlineRangeTo
// 0x0078 (0x0078 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  SelfRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo) == 0x000078, "Wrong size on B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, Pawn) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, SelfRef) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, CallFunc_VSizeSquared_ReturnValue) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_IsInOutlineRangeTo::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.TransformTrace
// 0x0270 (0x0270 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_TransformTrace final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Prop;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430C[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerControllerThirdPersonTraceDirection_End; // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0090(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x00A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430D[0x1];                                     // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430E[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430F[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4310[0x2];                                     // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_TransformTrace) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_TransformTrace");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_TransformTrace) == 0x000270, "Wrong size on B_WitchHuntFunctionLibrary_C_TransformTrace");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, Pawn) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, Range) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::Range' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, Prop) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, HitLocation) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::HitLocation' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, K2Node_MakeArray_Array) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, K2Node_DynamicCast_AsB_Player_Controller) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_GetPlayerControllerThirdPersonTraceDirection_End) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_GetPlayerControllerThirdPersonTraceDirection_End' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, K2Node_MakeArray_Array_1) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_LineTraceSingleForObjects_OutHit) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000188, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000189, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x00018A, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_Time) == 0x00018C, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_Distance) == 0x000190, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_Location) == 0x000198, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0001B0, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_Normal) == 0x0001C8, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E0, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_BoneName) == 0x000218, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_HitItem) == 0x000220, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000224, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000228, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_TraceStart) == 0x000230, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000248, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_GetDistanceTo_ReturnValue) == 0x000260, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_DoesImplementInterface_ReturnValue) == 0x000264, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000265, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TransformTrace, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000268, "Member 'B_WitchHuntFunctionLibrary_C_TransformTrace::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.PossessTrace
// 0x0268 (0x0268 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_PossessTrace final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Prop;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bHitSomething;                                     // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4311[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerController_C*                  K2Node_DynamicCast_AsB_Player_Controller;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4312[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPlayerControllerThirdPersonTraceDirection_End; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4313[0x1];                                     // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4314[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4315[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4316[0x2];                                     // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_PossessTrace) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_PossessTrace");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_PossessTrace) == 0x000268, "Wrong size on B_WitchHuntFunctionLibrary_C_PossessTrace");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, Pawn) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, Range) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::Range' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, Prop) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, bHitSomething) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::bHitSomething' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, K2Node_DynamicCast_AsB_Player_Controller) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::K2Node_DynamicCast_AsB_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_GetPlayerControllerThirdPersonTraceDirection_Start' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_GetPlayerControllerThirdPersonTraceDirection_End) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_GetPlayerControllerThirdPersonTraceDirection_End' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, K2Node_MakeArray_Array) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, K2Node_MakeArray_Array_1) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000180, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000181, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000182, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_Time) == 0x000184, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_Distance) == 0x000188, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_Location) == 0x000190, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0001A8, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_Normal) == 0x0001C0, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x0001D8, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_PhysMat) == 0x0001F0, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_HitActor) == 0x0001F8, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_HitComponent) == 0x000200, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000208, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_BoneName) == 0x000210, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_TraceStart) == 0x000228, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000240, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_GetDistanceTo_ReturnValue) == 0x000258, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_DoesImplementInterface_ReturnValue) == 0x00025C, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x00025D, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_PossessTrace, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'B_WitchHuntFunctionLibrary_C_PossessTrace::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.SetHighlightChannel
// 0x0038 (0x0038 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_SetHighlightChannel final
{
public:
	class UPrimitiveComponent*                    Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHighlightChannel                             Channel;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4317[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EHighlightChannel                             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4318[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_SetHighlightChannel");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel) == 0x000038, "Wrong size on B_WitchHuntFunctionLibrary_C_SetHighlightChannel");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Target) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Target' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Channel) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Channel' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_byte_Variable) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_int_Variable) == 0x00001C, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_int_Variable_1) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_int_Variable_2) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_int_Variable_3) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, Temp_int_Variable_4) == 0x00002C, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SetHighlightChannel, K2Node_Select_Default) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_SetHighlightChannel::K2Node_Select_Default' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.IsPossessSelected
// 0x0058 (0x0058 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_IsPossessSelected final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4319[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetWitchMovementSkill_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetWitchUtilitySkill_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_IsPossessSelected) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_IsPossessSelected");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_IsPossessSelected) == 0x000058, "Wrong size on B_WitchHuntFunctionLibrary_C_IsPossessSelected");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, Pawn) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, K2Node_DynamicCast_AsB_Player_State) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_GetWitchMovementSkill_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_GetWitchMovementSkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_GetWitchUtilitySkill_ReturnValue) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_GetWitchUtilitySkill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000051, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_IsPossessSelected, CallFunc_BooleanOR_ReturnValue) == 0x000052, "Member 'B_WitchHuntFunctionLibrary_C_IsPossessSelected::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetRandomNumbers
// 0x0090 (0x0090 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetRandomNumbers final
{
public:
	int32                                         CounterNumbers;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExclusiveMaxNumber;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ExcludingNumbers;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 Numbers;                                           // 0x0020(0x0010)(Parm, OutParm)
	int32                                         IndexToAdd;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 NumbersForRandom;                                  // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<int32>                                 ReturnNumbers;                                     // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431D[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431E[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431F[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetRandomNumbers");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers) == 0x000090, "Wrong size on B_WitchHuntFunctionLibrary_C_GetRandomNumbers");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CounterNumbers) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CounterNumbers' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, ExclusiveMaxNumber) == 0x000004, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::ExclusiveMaxNumber' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, ExcludingNumbers) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::ExcludingNumbers' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, __WorldContext) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, Numbers) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::Numbers' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, IndexToAdd) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::IndexToAdd' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, NumbersForRandom) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::NumbersForRandom' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, ReturnNumbers) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::ReturnNumbers' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, Temp_int_Variable) == 0x00005C, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, Temp_int_Variable_1) == 0x000074, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_RandomInteger_ReturnValue) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Array_Contains_ReturnValue) == 0x00007C, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Not_PreBool_ReturnValue) == 0x00007D, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Array_Add_ReturnValue_1) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000084, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetRandomNumbers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_GetRandomNumbers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetWitchPlayerController
// 0x0048 (0x0048 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetWitchPlayerController final
{
public:
	class AActor*                                 WitchActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetWitchActor_ReturnActor;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4320[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetWitchPlayerController");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController) == 0x000048, "Wrong size on B_WitchHuntFunctionLibrary_C_GetWitchPlayerController");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, WitchActor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::WitchActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, PlayerController) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::PlayerController' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, CallFunc_GetWitchActor_ReturnActor) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::CallFunc_GetWitchActor_ReturnActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, K2Node_DynamicCast_AsPawn) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, K2Node_DynamicCast_AsPlayer_Controller) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchPlayerController, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchPlayerController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetMinimumDistanceToActors
// 0x00B0 (0x00B0 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDistance;                                   // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDistanceSquared;                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4321[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4322[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4323[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sqrt_ReturnValue;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors) == 0x0000B0, "Wrong size on B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, Actors) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::Actors' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, Location) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::Location' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, __WorldContext) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, MinimumDistance) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::MinimumDistance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, MinimumDistanceSquared) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::MinimumDistanceSquared' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, Temp_int_Array_Index_Variable) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_VSizeSquared_ReturnValue) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Sqrt_ReturnValue) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Sqrt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActors::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetMinimumDistanceToActorClasses
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDistance;                                   // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinimumDistanceSquared;                            // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	double                                        CallFunc_GetMinimumDistanceToActors_MinimumDistance; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, ActorClass) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::ActorClass' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, Location) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::Location' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, __WorldContext) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, MinimumDistance) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::MinimumDistance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, MinimumDistanceSquared) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::MinimumDistanceSquared' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses, CallFunc_GetMinimumDistanceToActors_MinimumDistance) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetMinimumDistanceToActorClasses::CallFunc_GetMinimumDistanceToActors_MinimumDistance' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.TickIceCharacterMovement
// 0x0108 (0x0108 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement final
{
public:
	class UCharacterMovementComponent*            MoveComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            MovementComponent;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4324[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4325[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4326[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_GetPhysicalMaterial_ReturnValue;          // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement) == 0x000108, "Wrong size on B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, MoveComp) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::MoveComp' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, MovementComponent) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::MovementComponent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_bBlockingHit) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_bInitialOverlap) == 0x000019, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_Time) == 0x00001C, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_Distance) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_Location) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_ImpactPoint) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_Normal) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_ImpactNormal) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_PhysMat) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_HitActor) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_HitComponent) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_HitBoneName) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_BoneName) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_HitItem) == 0x0000B0, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_ElementIndex) == 0x0000B4, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_FaceIndex) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_TraceStart) == 0x0000C0, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_BreakHitResult_TraceEnd) == 0x0000D8, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_GetMaterial_ReturnValue) == 0x0000F0, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_GetPhysicalMaterial_ReturnValue) == 0x0000F8, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_GetPhysicalMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement, K2Node_SwitchEnum_CmpSuccess) == 0x000101, "Member 'B_WitchHuntFunctionLibrary_C_TickIceCharacterMovement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.UnhighlightAll
// 0x0008 (0x0008 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_UnhighlightAll final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_UnhighlightAll) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_UnhighlightAll");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_UnhighlightAll) == 0x000008, "Wrong size on B_WitchHuntFunctionLibrary_C_UnhighlightAll");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightAll, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightAll::__WorldContext' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.UnhighlightHunters
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_UnhighlightHunters final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4327[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4328[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4329[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_UnhighlightHunters");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_UnhighlightHunters");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, K2Node_DynamicCast_AsB_Hunter) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_SetHighlight_ForcedBoolean) == 0x000031, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_Less_IntInt_ReturnValue) == 0x000032, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, K2Node_DynamicCast_AsWB_Player_Name) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightHunters, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightHunters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.UnhighlightWitches
// 0x0068 (0x0068 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_UnhighlightWitches final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432A[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432C[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432D[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_UnhighlightWitches");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches) == 0x000068, "Wrong size on B_WitchHuntFunctionLibrary_C_UnhighlightWitches");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_AsB_Witch) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_AsIHighlightable) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_SetHighlight_ForcedBoolean) == 0x000049, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_AsWB_Player_Name) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_Less_IntInt_ReturnValue) == 0x000061, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitches, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.UnhighlightWitchesAsProps
// 0x0068 (0x0068 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432E[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4330[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps) == 0x000068, "Wrong size on B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, Temp_int_Array_Index_Variable) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_AsIHighlightable) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_AsWB_Player_Name) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_SetHighlight_ForcedBoolean) == 0x000061, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_IsValid_ReturnValue) == 0x000062, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_Less_IntInt_ReturnValue) == 0x000063, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'B_WitchHuntFunctionLibrary_C_UnhighlightWitchesAsProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.GetWitchActor
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_GetWitchActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingKill_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4331[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4332[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPendingKill_ReturnValue_1;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4333[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_GetWitchActor) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_GetWitchActor");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_GetWitchActor) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_GetWitchActor");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, Actor) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::Actor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, ReturnActor) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::ReturnActor' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_IsPendingKill_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_IsPendingKill_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_ClassIsChildOf_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_GetInstigator_ReturnValue) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_IsPendingKill_ReturnValue_1) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_IsPendingKill_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_GetObjectClass_ReturnValue_1) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_GetWitchActor, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_GetWitchActor::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.SpectatorHud
// 0x0020 (0x0020 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_SpectatorHud final
{
public:
	class APawn*                                  SelfRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHunterOutlines_ReturnValue;     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_SpectatorHud) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_SpectatorHud");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_SpectatorHud) == 0x000020, "Wrong size on B_WitchHuntFunctionLibrary_C_SpectatorHud");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorHud, SelfRef) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorHud::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorHud, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorHud::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorHud, PlayerController) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorHud::PlayerController' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorHud, CallFunc_ShouldShowHunterOutlines_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorHud::CallFunc_ShouldShowHunterOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_SpectatorHud, CallFunc_IsLocallyControlled_ReturnValue) == 0x000019, "Member 'B_WitchHuntFunctionLibrary_C_SpectatorHud::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.Hunter Highlights
// 0x0018 (0x0018 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_Hunter_Highlights final
{
public:
	class APawn*                                  SelfRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowHunterOutlines_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_Hunter_Highlights");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights) == 0x000018, "Wrong size on B_WitchHuntFunctionLibrary_C_Hunter_Highlights");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights, SelfRef) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_Hunter_Highlights::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights, __WorldContext) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_Hunter_Highlights::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights, CallFunc_ShouldShowHunterOutlines_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_Hunter_Highlights::CallFunc_ShouldShowHunterOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_Hunter_Highlights, CallFunc_IsLocallyControlled_ReturnValue) == 0x000011, "Member 'B_WitchHuntFunctionLibrary_C_Hunter_Highlights::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.HighlightHunters
// 0x00B8 (0x00B8 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_HighlightHunters final
{
public:
	bool                                          HideNames;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutline;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4334[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  SelfRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            CurrentHunter;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4335[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Hunter_C*                            K2Node_DynamicCast_AsB_Hunter;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4336[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4337[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4338[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0088(0x0018)()
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_HighlightHunters) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_HighlightHunters");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_HighlightHunters) == 0x0000B8, "Wrong size on B_WitchHuntFunctionLibrary_C_HighlightHunters");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, HideNames) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::HideNames' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, bOutline) == 0x000001, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::bOutline' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, SelfRef) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CurrentHunter) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CurrentHunter' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_AsB_Hunter) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_AsB_Hunter' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_AsIHighlightable) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_SetHighlight_ForcedBoolean) == 0x000061, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_IsValid_ReturnValue) == 0x000062, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_AsB_Player_State) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_GetPlayerOrBotName_Name) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Conv_StringToText_ReturnValue) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_AsWB_Player_Name) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000B1, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightHunters, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'B_WitchHuntFunctionLibrary_C_HighlightHunters::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.HighlightWitches
// 0x00B0 (0x00B0 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_HighlightWitches final
{
public:
	bool                                          HideNames;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutline;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4339[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  SelfRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_Witch_C*                             CurrentWitch;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433A[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433B[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_Witch_C*                             K2Node_DynamicCast_AsB_Witch;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433C[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_HighlightWitches) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_HighlightWitches");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_HighlightWitches) == 0x0000B0, "Wrong size on B_WitchHuntFunctionLibrary_C_HighlightWitches");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, HideNames) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::HideNames' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, bOutline) == 0x000001, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::bOutline' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, SelfRef) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, __WorldContext) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CurrentWitch) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CurrentWitch' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, Temp_int_Array_Index_Variable) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Array_Get_Item) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_AsB_Witch) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_AsB_Witch' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_IsLocallyControlled_ReturnValue) == 0x000049, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_AsB_Player_State) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_GetPlayerOrBotName_Name) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_AsWB_Player_Name) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitches, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitches::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.HighlightWitchesAsProps
// 0x00D8 (0x00D8 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   Prop_Pawn;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4340[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4341[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   K2Node_DynamicCast_AsB_Prop_Pawn_Physics;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4342[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4343[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerOrBotName_Name;                  // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class UWB_PlayerName_C*                       K2Node_DynamicCast_AsWB_Player_Name;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4344[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4345[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_1;             // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4346[0x5];                                     // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4347[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4348[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps) == 0x0000D8, "Wrong size on B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, Prop_Pawn) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::Prop_Pawn' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsB_Prop_Pawn_Physics) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsB_Prop_Pawn_Physics' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsB_Player_State) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_GetPlayerOrBotName_Name) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_GetPlayerOrBotName_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsWB_Player_Name) == 0x000080, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsWB_Player_Name' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_IsLocallyControlled_ReturnValue) == 0x000089, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsIHighlightable) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsIHighlightable_1) == 0x0000A8, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsIHighlightable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_4) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_SetHighlight_ForcedBoolean) == 0x0000BA, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x0000C0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, K2Node_DynamicCast_bSuccess_5) == 0x0000C8, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'B_WitchHuntFunctionLibrary_C_HighlightWitchesAsProps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.WitchHud
// 0x0128 (0x0128 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_WitchHud final
{
public:
	class AActor*                                 TargetProp;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  SelfRef;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Range;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowTransformHighlight;                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4349[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OutTargetProp;                                     // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TransformRange;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LocalTargetProp;                                   // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_PossessSkill_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldShowWitchOutlines_ReturnValue;      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434A[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434B[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_TransformTrace_Prop;                      // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformTrace_HitLocation;               // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_StaticMeshProp_C*                    K2Node_DynamicCast_AsB_Static_Mesh_Prop;           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable;               // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434D[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_1;             // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434E[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_2;             // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_3;             // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean_1;             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4350[0x5];                                     // 0x00FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_PossessTrace_Prop;                        // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PossessTrace_bHitSomething;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPossessSelected_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4351[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IIHighlightable_C>     K2Node_DynamicCast_AsIHighlightable_4;             // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean_2;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_WitchHud) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_WitchHud");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_WitchHud) == 0x000128, "Wrong size on B_WitchHuntFunctionLibrary_C_WitchHud");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, TargetProp) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::TargetProp' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, SelfRef) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::SelfRef' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, Range) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::Range' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, AllowTransformHighlight) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::AllowTransformHighlight' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, __WorldContext) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, OutTargetProp) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::OutTargetProp' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, TransformRange) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::TransformRange' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, LocalTargetProp) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::LocalTargetProp' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_CanActivate_ReturnValue) == 0x000051, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_CanActivate_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_ShouldShowWitchOutlines_ReturnValue) == 0x000052, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_ShouldShowWitchOutlines_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsB_Game_State) == 0x000060, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsLocallyControlled_ReturnValue) == 0x000069, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsRoundEnd_RoundIsEnd) == 0x00006A, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_Not_PreBool_ReturnValue) == 0x00006B, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_BooleanAND_ReturnValue_1) == 0x00006C, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_TransformTrace_Prop) == 0x000070, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_TransformTrace_Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_TransformTrace_HitLocation) == 0x000078, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_TransformTrace_HitLocation' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsB_Static_Mesh_Prop) == 0x000090, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsB_Static_Mesh_Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsIHighlightable) == 0x0000A0, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsIHighlightable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsIHighlightable_1) == 0x0000B8, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsIHighlightable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_SetHighlight_ForcedBoolean) == 0x0000C9, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsValid_ReturnValue_1) == 0x0000CA, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_BooleanNOR_ReturnValue) == 0x0000CB, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_BooleanAND_ReturnValue_2) == 0x0000CC, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsIHighlightable_2) == 0x0000D0, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsIHighlightable_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsIHighlightable_3) == 0x0000E8, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsIHighlightable_3' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_5) == 0x0000F8, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_SetHighlight_ForcedBoolean_1) == 0x0000F9, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_SetHighlight_ForcedBoolean_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsValid_ReturnValue_2) == 0x0000FA, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_PossessTrace_Prop) == 0x000100, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_PossessTrace_Prop' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_PossessTrace_bHitSomething) == 0x000108, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_PossessTrace_bHitSomething' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsPossessSelected_ReturnValue) == 0x000109, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsPossessSelected_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_AsIHighlightable_4) == 0x000110, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_AsIHighlightable_4' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, K2Node_DynamicCast_bSuccess_6) == 0x000120, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_SetHighlight_ForcedBoolean_2) == 0x000121, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_SetHighlight_ForcedBoolean_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_WitchHud, CallFunc_IsValid_ReturnValue_3) == 0x000122, "Member 'B_WitchHuntFunctionLibrary_C_WitchHud::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function B_WitchHuntFunctionLibrary.B_WitchHuntFunctionLibrary_C.AreAnyRulesCurrentlyEnabled
// 0x0050 (0x0050 - 0x0000)
struct B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingCustomRules;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4352[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UsingCustomRulesCounter;                           // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4353[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ModParametersSubsystem_C*            CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_MatchParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingCustomRules_CustomRules;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingCustomRules_CustomRules_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4354[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_SkillParametersSubsystem_C*          CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingCustomRules_CustomRules_2;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4355[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled) == 0x000008, "Wrong alignment on B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled");
static_assert(sizeof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled) == 0x000050, "Wrong size on B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, __WorldContext) == 0x000000, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::__WorldContext' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, UsingCustomRules) == 0x000008, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::UsingCustomRules' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, UsingCustomRulesCounter) == 0x00000C, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::UsingCustomRulesCounter' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, Temp_int_Variable) == 0x000010, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000020, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_IsUsingCustomRules_CustomRules) == 0x000028, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_IsUsingCustomRules_CustomRules' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_IsUsingCustomRules_CustomRules_1) == 0x000029, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_IsUsingCustomRules_CustomRules_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x000030, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_IsUsingCustomRules_CustomRules_2) == 0x000038, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_IsUsingCustomRules_CustomRules_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_Greater_IntInt_ReturnValue) == 0x000039, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, Temp_int_Variable_1) == 0x00003C, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled, Temp_int_Variable_2) == 0x00004C, "Member 'B_WitchHuntFunctionLibrary_C_AreAnyRulesCurrentlyEnabled::Temp_int_Variable_2' has a wrong offset!");

}

