#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_WitchPortal

#include "Basic.hpp"

#include "EHighlightChannel_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_WitchPortal.B_WitchPortal_C
// 0x0038 (0x02C8 - 0x0290)
class AB_WitchPortal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_WitchPortal;                                    // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Collision;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHighlighted;                                     // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetHighlightChannel(EHighlightChannel Channel);
	void SetHighlight(bool Highlighted, bool* ForcedBoolean);
	void RefreshHighlight(bool* Highlightable);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_B_WitchPortal(int32 EntryPoint);
	void BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_WitchPortal_C">();
	}
	static class AB_WitchPortal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_WitchPortal_C>();
	}
};
static_assert(alignof(AB_WitchPortal_C) == 0x000008, "Wrong alignment on AB_WitchPortal_C");
static_assert(sizeof(AB_WitchPortal_C) == 0x0002C8, "Wrong size on AB_WitchPortal_C");
static_assert(offsetof(AB_WitchPortal_C, UberGraphFrame) == 0x000290, "Member 'AB_WitchPortal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, NS_WitchPortal) == 0x000298, "Member 'AB_WitchPortal_C::NS_WitchPortal' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, Collision) == 0x0002A0, "Member 'AB_WitchPortal_C::Collision' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, Sphere) == 0x0002A8, "Member 'AB_WitchPortal_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, StaticMesh) == 0x0002B0, "Member 'AB_WitchPortal_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, DefaultSceneRoot) == 0x0002B8, "Member 'AB_WitchPortal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_WitchPortal_C, IsHighlighted) == 0x0002C0, "Member 'AB_WitchPortal_C::IsHighlighted' has a wrong offset!");

}

