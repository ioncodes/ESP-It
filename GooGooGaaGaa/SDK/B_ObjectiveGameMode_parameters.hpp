#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveGameMode

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_ObjectiveTeam_structs.hpp"
#include "ETeamID_structs.hpp"


namespace SDK::Params
{

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.AreAllPlayersReadyWithTeamSelection
// 0x0050 (0x0050 - 0x0000)
struct B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection final
{
public:
	bool                                          AreReady;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerState*>                   LocalPlayerArray;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          AtLeastOnePlayerThere;                             // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection");
static_assert(sizeof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection) == 0x000050, "Wrong size on B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, AreReady) == 0x000000, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::AreReady' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, LocalPlayerArray) == 0x000008, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::LocalPlayerArray' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, AtLeastOnePlayerThere) == 0x000018, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::AtLeastOnePlayerThere' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_Array_Get_Item) == 0x000028, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000038, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_AreAllPlayersReadyWithTeamSelection::CallFunc_GetGameState_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.CheckForOverTime
// 0x00C8 (0x00C8 - 0x0000)
struct B_ObjectiveGameMode_C_CheckForOverTime final
{
public:
	bool                                          OverTime_0;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WitchProp;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         WantedProps;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AB_ObjectiveCauldron_C*>         Cauldrons;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_PropPawnPhysics_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PropPawnPhysics_C*                   CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_ObjectiveCauldron_C*>         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00A0(0x0010)(ReferenceParm)
	class AB_ObjectiveCauldron_C*                 CallFunc_Array_Get_Item_2;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Subtract_ByteByte_ReturnValue;            // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_CheckForOverTime) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_CheckForOverTime");
static_assert(sizeof(B_ObjectiveGameMode_C_CheckForOverTime) == 0x0000C8, "Wrong size on B_ObjectiveGameMode_C_CheckForOverTime");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, OverTime_0) == 0x000000, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::OverTime_0' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, WitchProp) == 0x000008, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::WitchProp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, WantedProps) == 0x000010, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::WantedProps' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Cauldrons) == 0x000020, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Cauldrons' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, Temp_int_Loop_Counter_Variable_2) == 0x00004C, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Get_Item) == 0x000050, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000058, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_GetObjectClass_ReturnValue) == 0x000090, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Less_IntInt_ReturnValue_1) == 0x000098, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Get_Item_2) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Add_ReturnValue) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0000BC, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Subtract_ByteByte_ReturnValue) == 0x0000BD, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Subtract_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C4, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckForOverTime, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000C5, "Member 'B_ObjectiveGameMode_C_CheckForOverTime::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.CheckTimerForMatchStart
// 0x0090 (0x0090 - 0x0000)
struct B_ObjectiveGameMode_C_CheckTimerForMatchStart final
{
public:
	int32                                         TotalPlayerCount;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_CheckTimerForMatchStart) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_CheckTimerForMatchStart");
static_assert(sizeof(B_ObjectiveGameMode_C_CheckTimerForMatchStart) == 0x000090, "Wrong size on B_ObjectiveGameMode_C_CheckTimerForMatchStart");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, TotalPlayerCount) == 0x000000, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::TotalPlayerCount' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_GetGameState_ReturnValue_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_AsB_Game_Instance) == 0x000038, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Multiply_IntInt_ReturnValue) == 0x00004C, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_GetGameInstance_ReturnValue_1) == 0x000050, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, Temp_int_Array_Index_Variable) == 0x000058, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000060, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Array_Get_Item) == 0x000070, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_AsB_Player_State) == 0x000078, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000081, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, Temp_int_Variable) == 0x000084, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckTimerForMatchStart, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'B_ObjectiveGameMode_C_CheckTimerForMatchStart::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.CheckWitchesAlive
// 0x0048 (0x0048 - 0x0000)
struct B_ObjectiveGameMode_C_CheckWitchesAlive final
{
public:
	bool                                          WitchAlive;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Alive;                                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_CheckWitchesAlive) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_CheckWitchesAlive");
static_assert(sizeof(B_ObjectiveGameMode_C_CheckWitchesAlive) == 0x000048, "Wrong size on B_ObjectiveGameMode_C_CheckWitchesAlive");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, WitchAlive) == 0x000000, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::WitchAlive' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, Alive) == 0x000001, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::Alive' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_Array_Get_Item) == 0x000018, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, K2Node_DynamicCast_AsB_Player_State) == 0x000020, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000030, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_Greater_ByteByte_ReturnValue) == 0x000039, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_CheckWitchesAlive, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'B_ObjectiveGameMode_C_CheckWitchesAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.EqualizeTeamSizes
// 0x0258 (0x0258 - 0x0000)
struct B_ObjectiveGameMode_C_EqualizeTeamSizes final
{
public:
	TArray<class AB_ObjectivePlayerState_C*>      PlayerListToUse;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AB_ObjectivePlayerState_C*>      SpectatorPlayers;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AB_ObjectivePlayerState_C*              SelectedRandomPlayer;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ObjectivePlayerState_C*>      PlayersAvailableForTeamBChange;                    // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         TotalPlayerCount;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_ObjectivePlayerState_C*>      PlayersAvailableForTeamAChange;                    // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         MissingPlayersInTeamB;                             // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissingPlayersInTeamA;                             // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamBPlayers;                                      // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamAPlayers;                                      // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_1;             // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State_1;   // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_2;                         // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_2;             // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State_2;   // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x2];                                      // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_3;                         // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State_3;             // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State_3;   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              CallFunc_Array_Get_Item_4;                         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_2;           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_3;           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              CallFunc_Array_Get_Item_5;                         // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5[0x3];                                      // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2[0x2];                                      // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_EqualizeTeamSizes) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_EqualizeTeamSizes");
static_assert(sizeof(B_ObjectiveGameMode_C_EqualizeTeamSizes) == 0x000258, "Wrong size on B_ObjectiveGameMode_C_EqualizeTeamSizes");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, PlayerListToUse) == 0x000000, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::PlayerListToUse' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, SpectatorPlayers) == 0x000010, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::SpectatorPlayers' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, SelectedRandomPlayer) == 0x000020, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::SelectedRandomPlayer' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, PlayersAvailableForTeamBChange) == 0x000028, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::PlayersAvailableForTeamBChange' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, TotalPlayerCount) == 0x000038, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::TotalPlayerCount' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, PlayersAvailableForTeamAChange) == 0x000040, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::PlayersAvailableForTeamAChange' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, MissingPlayersInTeamB) == 0x000050, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::MissingPlayersInTeamB' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, MissingPlayersInTeamA) == 0x000054, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::MissingPlayersInTeamA' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, TeamBPlayers) == 0x000058, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::TeamBPlayers' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, TeamAPlayers) == 0x00005C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::TeamAPlayers' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Array_Index_Variable) == 0x000068, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameState_ReturnValue) == 0x000070, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameState_ReturnValue_1) == 0x000080, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameInstance_ReturnValue) == 0x000098, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Game_Instance) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000AC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Variable) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameState_ReturnValue_2) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Player_State) == 0x0000D0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_2) == 0x0000EC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F1, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Array_Index_Variable_2) == 0x0000F4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Player_State_1) == 0x000100, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Objective_Player_State_1) == 0x000110, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Objective_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_4) == 0x000118, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameState_ReturnValue_3) == 0x000120, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item_2) == 0x000128, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_3) == 0x000130, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Player_State_2) == 0x000138, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Player_State_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_5) == 0x000140, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue) == 0x000141, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Objective_Player_State_2) == 0x000148, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Objective_Player_State_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_6) == 0x000150, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_SwitchEnum_CmpSuccess) == 0x000151, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_4) == 0x000154, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_RemoveItem_ReturnValue) == 0x000158, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000159, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Loop_Counter_Variable_2) == 0x00015C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_5) == 0x000160, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000164, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Less_IntInt_ReturnValue_2) == 0x000165, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000168, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Subtract_IntInt_ReturnValue) == 0x00016C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_6) == 0x000170, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Array_Index_Variable_3) == 0x000174, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000178, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Player_State_3) == 0x000188, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Player_State_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_7) == 0x000190, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Objective_Player_State_3) == 0x000198, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Objective_Player_State_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_8) == 0x0001A0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A1, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_7) == 0x0001A4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_RandomInteger_ReturnValue) == 0x0001A8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item_4) == 0x0001B0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_RemoveItem_ReturnValue_2) == 0x0001B8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_RemoveItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_RemoveItem_ReturnValue_3) == 0x0001B9, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_RemoveItem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_8) == 0x0001BC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_RandomInteger_ReturnValue_1) == 0x0001C0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Get_Item_5) == 0x0001C8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Length_ReturnValue_9) == 0x0001D0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0001D4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Add_ReturnValue_1) == 0x0001DC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_4) == 0x0001E0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0001E1, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Variable_1) == 0x0001E4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Loop_Counter_Variable_3) == 0x0001E8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001EC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001F0, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001F4, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Variable_2) == 0x0001F8, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_6) == 0x0001FC, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Variable_3) == 0x000200, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Array_Add_ReturnValue_2) == 0x000204, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Less_IntInt_ReturnValue_4) == 0x000208, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameInstance_ReturnValue_1) == 0x000210, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000218, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_9) == 0x000220, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, Temp_int_Variable_4) == 0x000224, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_4) == 0x000228, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Greater_IntInt_ReturnValue_7) == 0x00022C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000230, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_GetGameInstance_ReturnValue_2) == 0x000238, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000240, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, K2Node_DynamicCast_bSuccess_10) == 0x000248, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_5) == 0x00024C, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000250, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_EqualizeTeamSizes, CallFunc_Add_IntInt_ReturnValue_6) == 0x000254, "Member 'B_ObjectiveGameMode_C_EqualizeTeamSizes::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.ExecuteUbergraph_B_ObjectiveGameMode
// 0x0210 (0x0210 - 0x0000)
struct B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckWitchesAlive_WitchAlive;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForOverTime_OverTime;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForOverTime_OverTime_1;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Event_WinnerTeam;                           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ForceRegardlessOfEnd;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_RestartByPlayerJoin;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartNewGameOverride_StartNewGame;        // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_PlayerController;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerController_C*         K2Node_DynamicCast_AsB_Objective_Player_Controller; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTrackingStarted_HasTrackingStarted;    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMatch_IsInMatch;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_2;               // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd_1;                  // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B[0x5];                                      // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_RemainingSeconds;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMatch_IsInMatch_1;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_3;               // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRoundStarted_RoundHasStarted_1;        // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerInMatch_IsInMatch_2;              // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_9;            // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x5];                                      // 0x01DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_10;           // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_10;           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode");
static_assert(sizeof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode) == 0x000210, "Wrong size on B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, EntryPoint) == 0x000000, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_CheckWitchesAlive_WitchAlive) == 0x000005, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_CheckWitchesAlive_WitchAlive' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_CheckForOverTime_OverTime) == 0x000006, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_CheckForOverTime_OverTime' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000010, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Not_PreBool_ReturnValue_1) == 0x000019, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_DeltaSeconds) == 0x00001C, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_CheckForOverTime_OverTime_1) == 0x000020, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_CheckForOverTime_OverTime_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_WinnerTeam) == 0x000021, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_ForceRegardlessOfEnd) == 0x000022, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_ForceRegardlessOfEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000023, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_RestartByPlayerJoin) == 0x000039, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_RestartByPlayerJoin' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_StartNewGameOverride_StartNewGame) == 0x00003A, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_StartNewGameOverride_StartNewGame' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_PlayerController) == 0x000040, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_PlayerController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, Temp_int_Variable) == 0x000050, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue_2) == 0x000058, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_State) == 0x000068, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000071, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasAuthority_ReturnValue) == 0x000072, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_NewPlayer) == 0x000078, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Objective_Player_Controller) == 0x000080, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Objective_Player_Controller' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue_3) == 0x000090, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_State_1) == 0x000098, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsRoundEnd_RoundIsEnd) == 0x0000A1, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasTrackingStarted_HasTrackingStarted) == 0x0000A2, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasTrackingStarted_HasTrackingStarted' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000A3, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_ExitingController) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsPlayerInMatch_IsInMatch) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsPlayerInMatch_IsInMatch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0000C8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_5) == 0x0000D0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000E8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_7) == 0x000100, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000101, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_4) == 0x000108, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_5) == 0x000110, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000118, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_8) == 0x000120, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x000128, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_9) == 0x000130, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000131, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Less_IntInt_ReturnValue) == 0x000132, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000133, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_1) == 0x000134, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue_4) == 0x000138, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_State_2) == 0x000140, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_10) == 0x000148, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasRoundStarted_RoundHasStarted) == 0x000149, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasRoundStarted_RoundHasStarted' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsRoundEnd_RoundIsEnd_1) == 0x00014A, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsRoundEnd_RoundIsEnd_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_Event_RemainingSeconds) == 0x000150, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_Event_RemainingSeconds' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Not_PreBool_ReturnValue_3) == 0x000158, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_2) == 0x000159, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_3) == 0x00015A, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_6) == 0x000160, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000168, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_11) == 0x000170, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsPlayerInMatch_IsInMatch_1) == 0x000171, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsPlayerInMatch_IsInMatch_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasAuthority_ReturnValue_1) == 0x000172, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasAuthority_ReturnValue_2) == 0x000173, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameState_ReturnValue_5) == 0x000178, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_State_3) == 0x000180, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_State_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_12) == 0x000188, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_HasRoundStarted_RoundHasStarted_1) == 0x000189, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_HasRoundStarted_RoundHasStarted_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00018A, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Not_PreBool_ReturnValue_4) == 0x00018B, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_4) == 0x00018C, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_IsPlayerInMatch_IsInMatch_2) == 0x00018D, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_IsPlayerInMatch_IsInMatch_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_7) == 0x000190, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_5) == 0x000198, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x0001A0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_13) == 0x0001A8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001A9, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0001AA, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_6) == 0x0001AB, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_8) == 0x0001B0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x0001B8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_14) == 0x0001C0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_9) == 0x0001C8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_9) == 0x0001D0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_15) == 0x0001D8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001D9, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001DA, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetGameInstance_ReturnValue_10) == 0x0001E0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetGameInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_BooleanAND_ReturnValue_7) == 0x0001E8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_AsB_Game_Instance_10) == 0x0001F0, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_AsB_Game_Instance_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, K2Node_DynamicCast_bSuccess_16) == 0x0001F8, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F9, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000200, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000208, "Member 'B_ObjectiveGameMode_C_ExecuteUbergraph_B_ObjectiveGameMode::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetBaseXPNumerator
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_GetBaseXPNumerator final
{
public:
	double                                        Numerator;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetBaseXPNumerator) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetBaseXPNumerator");
static_assert(sizeof(B_ObjectiveGameMode_C_GetBaseXPNumerator) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_GetBaseXPNumerator");
static_assert(offsetof(B_ObjectiveGameMode_C_GetBaseXPNumerator, Numerator) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetBaseXPNumerator::Numerator' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetPlayerPlayTime
// 0x0020 (0x0020 - 0x0000)
struct B_ObjectiveGameMode_C_GetPlayerPlayTime final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Playtime;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetPlayerPlayTime) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetPlayerPlayTime");
static_assert(sizeof(B_ObjectiveGameMode_C_GetPlayerPlayTime) == 0x000020, "Wrong size on B_ObjectiveGameMode_C_GetPlayerPlayTime");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerPlayTime, PlayerState) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetPlayerPlayTime::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerPlayTime, Playtime) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetPlayerPlayTime::Playtime' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerPlayTime, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetPlayerPlayTime::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerPlayTime, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetPlayerPlayTime::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerPlayTime, CallFunc_FTrunc_ReturnValue) == 0x00001C, "Member 'B_ObjectiveGameMode_C_GetPlayerPlayTime::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetPlayerScoreStatManager
// 0x0030 (0x0030 - 0x0000)
struct B_ObjectiveGameMode_C_GetPlayerScoreStatManager final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ScoreStatManager_C*                  ScoreStatManager;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ObjectiveMatchPlayerState_C*         CallFunc_GetObjectiveMatchPlayerState_ObjectiveMatchPlayerState; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetPlayerScoreStatManager");
static_assert(sizeof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager) == 0x000030, "Wrong size on B_ObjectiveGameMode_C_GetPlayerScoreStatManager");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, PlayerState) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, ScoreStatManager) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::ScoreStatManager' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayerScoreStatManager, CallFunc_GetObjectiveMatchPlayerState_ObjectiveMatchPlayerState) == 0x000028, "Member 'B_ObjectiveGameMode_C_GetPlayerScoreStatManager::CallFunc_GetObjectiveMatchPlayerState_ObjectiveMatchPlayerState' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetRoundEndTimerUntilRestart
// 0x0020 (0x0020 - 0x0000)
struct B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart final
{
public:
	int32                                         Seconds;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart");
static_assert(sizeof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart) == 0x000020, "Wrong size on B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart");
static_assert(offsetof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart, Seconds) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart::Seconds' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetRoundEndTimerUntilRestart::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetTeamFromObjectiveTeamForThisRound
// 0x0040 (0x0040 - 0x0000)
struct B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound final
{
public:
	E_ObjectiveTeam                               ObjectiveTeam;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Team;                                              // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamAStartsAsWitch;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_3;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Select_Default_1;                           // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound");
static_assert(sizeof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound) == 0x000040, "Wrong size on B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, ObjectiveTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::ObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Team) == 0x000001, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Team' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, TeamAStartsAsWitch) == 0x000002, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::TeamAStartsAsWitch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_bool_Variable) == 0x000003, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000028, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_SwitchInteger_CmpSuccess) == 0x000031, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_byte_Variable) == 0x000032, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_byte_Variable_1) == 0x000033, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_byte_Variable_2) == 0x000034, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_SwitchEnum_CmpSuccess) == 0x000035, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_SwitchEnum_CmpSuccess_1) == 0x000036, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_byte_Variable_3) == 0x000037, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, Temp_bool_Variable_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_Select_Default) == 0x000039, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound, K2Node_Select_Default_1) == 0x00003A, "Member 'B_ObjectiveGameMode_C_GetTeamFromObjectiveTeamForThisRound::K2Node_Select_Default_1' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetTotalWitchesLives
// 0x0058 (0x0058 - 0x0000)
struct B_ObjectiveGameMode_C_GetTotalWitchesLives final
{
public:
	int32                                         TotalWitchLives;                                   // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WitchLives;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetTotalWitchesLives) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetTotalWitchesLives");
static_assert(sizeof(B_ObjectiveGameMode_C_GetTotalWitchesLives) == 0x000058, "Wrong size on B_ObjectiveGameMode_C_GetTotalWitchesLives");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, TotalWitchLives) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::TotalWitchLives' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, WitchLives) == 0x000004, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::WitchLives' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, Temp_int_Array_Index_Variable) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Array_Get_Item) == 0x000020, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, K2Node_DynamicCast_AsB_Player_State) == 0x000028, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000038, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000044, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetTotalWitchesLives, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'B_ObjectiveGameMode_C_GetTotalWitchesLives::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetWinningObjectiveTeam
// 0x0040 (0x0040 - 0x0000)
struct B_ObjectiveGameMode_C_GetWinningObjectiveTeam final
{
public:
	ETeamID                                       WinnerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               WinnerObjectiveTeam;                               // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamAStartsAsWitch;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               Temp_byte_Variable;                                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               Temp_byte_Variable_1;                              // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               Temp_byte_Variable_2;                              // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               Temp_byte_Variable_3;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               K2Node_Select_Default_1;                           // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetWinningObjectiveTeam");
static_assert(sizeof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam) == 0x000040, "Wrong size on B_ObjectiveGameMode_C_GetWinningObjectiveTeam");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, WinnerTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, WinnerObjectiveTeam) == 0x000001, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::WinnerObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, TeamAStartsAsWitch) == 0x000002, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::TeamAStartsAsWitch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000028, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_SwitchInteger_CmpSuccess) == 0x000031, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_byte_Variable) == 0x000032, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_byte_Variable_1) == 0x000033, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_SwitchEnum_CmpSuccess_1) == 0x000035, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_bool_Variable) == 0x000036, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_byte_Variable_2) == 0x000037, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_byte_Variable_3) == 0x000038, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, Temp_bool_Variable_1) == 0x000039, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_Select_Default) == 0x00003A, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinningObjectiveTeam, K2Node_Select_Default_1) == 0x00003B, "Member 'B_ObjectiveGameMode_C_GetWinningObjectiveTeam::K2Node_Select_Default_1' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleEndMatch
// 0x0002 (0x0002 - 0x0000)
struct B_ObjectiveGameMode_C_HandleEndMatch final
{
public:
	ETeamID                                       WinnerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceRegardlessOfEnd;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleEndMatch) == 0x000001, "Wrong alignment on B_ObjectiveGameMode_C_HandleEndMatch");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleEndMatch) == 0x000002, "Wrong size on B_ObjectiveGameMode_C_HandleEndMatch");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatch, WinnerTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleEndMatch::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatch, ForceRegardlessOfEnd) == 0x000001, "Member 'B_ObjectiveGameMode_C_HandleEndMatch::ForceRegardlessOfEnd' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleEndMatchOverride
// 0x0270 (0x0270 - 0x0000)
struct B_ObjectiveGameMode_C_HandleEndMatchOverride final
{
public:
	ETeamID                                       WinnerTeam;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceRegardlessOfEnd;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ObjectiveRoundState_C*               TestRoundState;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               RoundState;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_2;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_3;               // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               CallFunc_GetWinnerTeam_WinnerTeam;                 // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWinnerTeam_ReasonIndex;                // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17B[0x1];                                      // 0x017B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_9;            // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UB_ObjectiveRoundState_C*>       CallFunc_GetRoundStatesSortedByTeam_RoundStatesSortedByTeam; // 0x01D0(0x0010)(ReferenceParm)
	class UB_ObjectiveRoundState_C*               CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               CallFunc_Array_Get_Item_2;                         // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<ETeamID>                               K2Node_MakeArray_Array;                            // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_1;                          // 0x0200(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_2;                          // 0x0210(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_MakeArray_Array_3;                          // 0x0220(0x0010)(ConstParm, ReferenceParm)
	E_ObjectiveTeam                               Temp_byte_Variable;                                // 0x0230(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x3];                                      // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalWitchesLives_TotalWitchLives;     // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ObjectiveRoundState_C*               CallFunc_CreateObject_Object;                      // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               Temp_byte_Variable_1;                              // 0x0250(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               CallFunc_GetWinningObjectiveTeam_WinnerObjectiveTeam; // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_252[0x2];                                      // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array_4;                          // 0x0260(0x0010)(ConstParm, ReferenceParm)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleEndMatchOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_HandleEndMatchOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleEndMatchOverride) == 0x000270, "Wrong size on B_ObjectiveGameMode_C_HandleEndMatchOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, WinnerTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, ForceRegardlessOfEnd) == 0x000001, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::ForceRegardlessOfEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, TestRoundState) == 0x000008, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::TestRoundState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, RoundState) == 0x000010, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::RoundState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_State) == 0x000038, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue_2) == 0x000058, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_1) == 0x000060, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_State_1) == 0x000068, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000078, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000081, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Not_PreBool_ReturnValue) == 0x000082, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue_3) == 0x000088, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_State_2) == 0x000090, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_BooleanOR_ReturnValue) == 0x000099, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_5) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_6) == 0x0000C8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C9, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000CA, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D1, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue_4) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_State_3) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_State_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_7) == 0x0000E8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Player_State) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_8) == 0x000100, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_4) == 0x000108, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000110, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_9) == 0x000118, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000120, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_10) == 0x000128, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_5) == 0x000130, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x000138, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_11) == 0x000140, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_6) == 0x000148, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000150, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_12) == 0x000158, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000159, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetWinnerTeam_WinnerTeam) == 0x00015A, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetWinnerTeam_WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetWinnerTeam_ReasonIndex) == 0x00015C, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetWinnerTeam_ReasonIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_7) == 0x000160, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, Temp_int_Loop_Counter_Variable) == 0x000168, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x000170, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_13) == 0x000178, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Less_IntInt_ReturnValue) == 0x000179, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Not_PreBool_ReturnValue_1) == 0x00017A, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Add_IntInt_ReturnValue) == 0x00017C, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_BooleanAND_ReturnValue_1) == 0x000180, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameState_ReturnValue_5) == 0x000188, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000190, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_14) == 0x000198, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_8) == 0x0001A0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x0001A8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_15) == 0x0001B0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetGameInstance_ReturnValue_9) == 0x0001B8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_9) == 0x0001C0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_DynamicCast_bSuccess_16) == 0x0001C8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetRoundStatesSortedByTeam_RoundStatesSortedByTeam) == 0x0001D0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetRoundStatesSortedByTeam_RoundStatesSortedByTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Array_Get_Item_2) == 0x0001E8, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_MakeArray_Array) == 0x0001F0, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_MakeArray_Array_1) == 0x000200, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_MakeArray_Array_2) == 0x000210, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_MakeArray_Array_3) == 0x000220, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, Temp_byte_Variable) == 0x000230, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Map_Find_Value) == 0x000234, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Map_Find_ReturnValue) == 0x000238, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00023C, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetTotalWitchesLives_TotalWitchLives) == 0x000240, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetTotalWitchesLives_TotalWitchLives' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_CreateObject_Object) == 0x000248, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, Temp_byte_Variable_1) == 0x000250, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_GetWinningObjectiveTeam_WinnerObjectiveTeam) == 0x000251, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_GetWinningObjectiveTeam_WinnerObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Map_Find_Value_1) == 0x000254, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, CallFunc_Map_Find_ReturnValue_1) == 0x000258, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleEndMatchOverride, K2Node_MakeArray_Array_4) == 0x000260, "Member 'B_ObjectiveGameMode_C_HandleEndMatchOverride::K2Node_MakeArray_Array_4' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleGrantExp
// 0x0030 (0x0030 - 0x0000)
struct B_ObjectiveGameMode_C_HandleGrantExp final
{
public:
	class AB_PlayerState_C*                       CurrentPlayerState;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalGrantedXp;                                    // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemDefIdToGrant;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GrantCandyCount;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GrantedXP;                                         // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_HandleGrantExp_TotalGrantedXp;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleGrantExp) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_HandleGrantExp");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleGrantExp) == 0x000030, "Wrong size on B_ObjectiveGameMode_C_HandleGrantExp");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, CurrentPlayerState) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::CurrentPlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, TotalGrantedXp) == 0x000008, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::TotalGrantedXp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, ItemDefIdToGrant) == 0x00000C, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::ItemDefIdToGrant' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, GrantCandyCount) == 0x000010, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::GrantCandyCount' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, GrantedXP) == 0x000014, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::GrantedXP' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, K2Node_DynamicCast_AsB_Game_Instance) == 0x000020, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleGrantExp, CallFunc_HandleGrantExp_TotalGrantedXp) == 0x00002C, "Member 'B_ObjectiveGameMode_C_HandleGrantExp::CallFunc_HandleGrantExp_TotalGrantedXp' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleStartFirstRound
// 0x0118 (0x0118 - 0x0000)
struct B_ObjectiveGameMode_C_HandleStartFirstRound final
{
public:
	bool                                          ForceStartFirstRound;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GuidString;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerTeamSelectionBalanced_Balanced;   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x1];                                       // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_NewGuid_ReturnValue;                      // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_GuidToString_ReturnValue;            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AreAllPlayersReadyWithTeamSelection_AreReady; // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleStartFirstRound) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_HandleStartFirstRound");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleStartFirstRound) == 0x000118, "Wrong size on B_ObjectiveGameMode_C_HandleStartFirstRound");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, ForceStartFirstRound) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::ForceStartFirstRound' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, GuidString) == 0x000008, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::GuidString' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameInstance_ReturnValue_1) == 0x000048, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000050, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameState_ReturnValue_1) == 0x000068, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, Temp_int_Array_Index_Variable) == 0x000070, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000078, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Array_Get_Item) == 0x000088, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Player_State) == 0x000090, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Not_PreBool_ReturnValue) == 0x0000A9, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_IsPlayerTeamSelectionBalanced_Balanced) == 0x0000C1, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_IsPlayerTeamSelectionBalanced_Balanced' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_NewGuid_ReturnValue) == 0x0000C4, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_NewGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_Conv_GuidToString_ReturnValue) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_Conv_GuidToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_6) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_GetGameInstance_ReturnValue_4) == 0x000100, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000108, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, K2Node_DynamicCast_bSuccess_7) == 0x000110, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartFirstRound, CallFunc_AreAllPlayersReadyWithTeamSelection_AreReady) == 0x000111, "Member 'B_ObjectiveGameMode_C_HandleStartFirstRound::CallFunc_AreAllPlayersReadyWithTeamSelection_AreReady' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleStartMatchOverride
// 0x00C0 (0x00C0 - 0x0000)
struct B_ObjectiveGameMode_C_HandleStartMatchOverride final
{
public:
	class AB_ObjectivePlayerState_C*              CurrentPlayer;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State_1;     // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleStartMatchOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_HandleStartMatchOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleStartMatchOverride) == 0x0000C0, "Wrong size on B_ObjectiveGameMode_C_HandleStartMatchOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CurrentPlayer) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CurrentPlayer' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000018, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_GetGameState_ReturnValue_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Array_Get_Item) == 0x000040, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Min_ReturnValue) == 0x000050, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Conv_IntToByte_ReturnValue) == 0x000054, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, Temp_int_Array_Index_Variable) == 0x000058, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Player_State) == 0x000068, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_GetGameInstance_ReturnValue_1) == 0x000078, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000080, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000090, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000099, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_GetGameState_ReturnValue_2) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_AsB_Objective_Game_State_1) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_AsB_Objective_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartMatchOverride, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'B_ObjectiveGameMode_C_HandleStartMatchOverride::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.HandleStartSeekOverride
// 0x0018 (0x0018 - 0x0000)
struct B_ObjectiveGameMode_C_HandleStartSeekOverride final
{
public:
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ObjectiveWitchRespawnPoint_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ObjectiveGameMode_C_HandleStartSeekOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_HandleStartSeekOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_HandleStartSeekOverride) == 0x000018, "Wrong size on B_ObjectiveGameMode_C_HandleStartSeekOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartSeekOverride, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'B_ObjectiveGameMode_C_HandleStartSeekOverride::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_HandleStartSeekOverride, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'B_ObjectiveGameMode_C_HandleStartSeekOverride::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.InitializeOverride
// 0x00A8 (0x00A8 - 0x0000)
struct B_ObjectiveGameMode_C_InitializeOverride final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State_1;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_InitializeOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_InitializeOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_InitializeOverride) == 0x0000A8, "Wrong size on B_ObjectiveGameMode_C_InitializeOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000020, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameInstance_ReturnValue_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_2) == 0x000040, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameState_ReturnValue_1) == 0x000048, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Objective_Game_State_1) == 0x000050, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Objective_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameInstance_ReturnValue_2) == 0x000060, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameInstance_ReturnValue_3) == 0x000068, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000070, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_4) == 0x000078, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000080, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_5) == 0x000088, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, CallFunc_GetGameInstance_ReturnValue_4) == 0x000090, "Member 'B_ObjectiveGameMode_C_InitializeOverride::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000098, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_InitializeOverride, K2Node_DynamicCast_bSuccess_6) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_InitializeOverride::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.IsPlayerInWinnerTeam
// 0x0058 (0x0058 - 0x0000)
struct B_ObjectiveGameMode_C_IsPlayerInWinnerTeam final
{
public:
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InWinnerTeam;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               CallFunc_GetWinnerTeam_WinnerTeam;                 // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWinnerTeam_ReasonIndex;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_IsPlayerInWinnerTeam");
static_assert(sizeof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam) == 0x000058, "Wrong size on B_ObjectiveGameMode_C_IsPlayerInWinnerTeam");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, PlayerState) == 0x000000, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, InWinnerTeam) == 0x000008, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::InWinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000018, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_AsB_Game_Instance) == 0x000028, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_AsB_Game_State) == 0x000040, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, CallFunc_GetWinnerTeam_WinnerTeam) == 0x000049, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::CallFunc_GetWinnerTeam_WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, CallFunc_GetWinnerTeam_ReasonIndex) == 0x00004C, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::CallFunc_GetWinnerTeam_ReasonIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerInWinnerTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'B_ObjectiveGameMode_C_IsPlayerInWinnerTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.IsPlayerTeamSelectionBalanced
// 0x0088 (0x0088 - 0x0000)
struct B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced final
{
public:
	int32                                         RequiredPlayersPerTeam;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Balanced;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamBPlayerCount;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamAPlayerCount;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced");
static_assert(sizeof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced) == 0x000088, "Wrong size on B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, RequiredPlayersPerTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::RequiredPlayersPerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, Balanced) == 0x000004, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::Balanced' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, TeamBPlayerCount) == 0x000008, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::TeamBPlayerCount' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, TeamAPlayerCount) == 0x00000C, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::TeamAPlayerCount' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, Temp_int_Array_Index_Variable) == 0x000018, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, Temp_int_Variable) == 0x00001C, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_WithEditor_ReturnValue) == 0x000020, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, Temp_int_Variable_1) == 0x000024, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, K2Node_DynamicCast_AsB_Game_Instance) == 0x000040, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_GetGameState_ReturnValue) == 0x000058, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Array_Get_Item) == 0x000068, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000078, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced, K2Node_SwitchEnum_CmpSuccess) == 0x000081, "Member 'B_ObjectiveGameMode_C_IsPlayerTeamSelectionBalanced::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_K2_OnLogout) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_K2_OnLogout");
static_assert(sizeof(B_ObjectiveGameMode_C_K2_OnLogout) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_K2_OnLogout");
static_assert(offsetof(B_ObjectiveGameMode_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'B_ObjectiveGameMode_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_K2_PostLogin) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_K2_PostLogin");
static_assert(sizeof(B_ObjectiveGameMode_C_K2_PostLogin) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_K2_PostLogin");
static_assert(offsetof(B_ObjectiveGameMode_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'B_ObjectiveGameMode_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectiveGameMode_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ObjectiveGameMode_C_ReceiveTick");
static_assert(sizeof(B_ObjectiveGameMode_C_ReceiveTick) == 0x000004, "Wrong size on B_ObjectiveGameMode_C_ReceiveTick");
static_assert(offsetof(B_ObjectiveGameMode_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ObjectiveGameMode_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.RespawnWitch
// 0x01A0 (0x01A0 - 0x0000)
struct B_ObjectiveGameMode_C_RespawnWitch final
{
public:
	class AController*                            AffectedController;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          InitializeHealthFromPlayerState;                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveWitch_C*                    SpawnedWitch;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          GoodSpotFound;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveWitchRespawnPoint_C*        CheckPosition;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AController*                            Controller;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveWitchRespawnPoint_C*        CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98[0x8];                                       // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveWitch_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_Hunter_C*>                    CallFunc_GetAllActorsOfClass_OutActors;            // 0x0130(0x0010)(ReferenceParm)
	class AB_Hunter_C*                            CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_195[0x3];                                      // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_AfterPossess_Rotation_ImplicitCast;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_RespawnWitch) == 0x000010, "Wrong alignment on B_ObjectiveGameMode_C_RespawnWitch");
static_assert(sizeof(B_ObjectiveGameMode_C_RespawnWitch) == 0x0001A0, "Wrong size on B_ObjectiveGameMode_C_RespawnWitch");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, AffectedController) == 0x000000, "Member 'B_ObjectiveGameMode_C_RespawnWitch::AffectedController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, InitializeHealthFromPlayerState) == 0x000008, "Member 'B_ObjectiveGameMode_C_RespawnWitch::InitializeHealthFromPlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, Success) == 0x000009, "Member 'B_ObjectiveGameMode_C_RespawnWitch::Success' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, PlayerState) == 0x000010, "Member 'B_ObjectiveGameMode_C_RespawnWitch::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, SpawnedWitch) == 0x000018, "Member 'B_ObjectiveGameMode_C_RespawnWitch::SpawnedWitch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, GoodSpotFound) == 0x000020, "Member 'B_ObjectiveGameMode_C_RespawnWitch::GoodSpotFound' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CheckPosition) == 0x000028, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CheckPosition' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, Controller) == 0x000030, "Member 'B_ObjectiveGameMode_C_RespawnWitch::Controller' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, Temp_int_Array_Index_Variable) == 0x000038, "Member 'B_ObjectiveGameMode_C_RespawnWitch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000058, "Member 'B_ObjectiveGameMode_C_RespawnWitch::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'B_ObjectiveGameMode_C_RespawnWitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_BreakRotator_Roll) == 0x000064, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_BreakRotator_Pitch) == 0x000068, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_BreakRotator_Yaw) == 0x00006C, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, K2Node_DynamicCast_AsB_Player_State) == 0x000078, "Member 'B_ObjectiveGameMode_C_RespawnWitch::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'B_ObjectiveGameMode_C_RespawnWitch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_RandomInteger_ReturnValue) == 0x000088, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Array_Get_Item) == 0x000090, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000100, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_FinishSpawningActor_ReturnValue) == 0x000108, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, Temp_int_Loop_Counter_Variable) == 0x000128, "Member 'B_ObjectiveGameMode_C_RespawnWitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_GetAllActorsOfClass_OutActors) == 0x000130, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000150, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000170, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_VSizeSquared_ReturnValue) == 0x000188, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Add_IntInt_ReturnValue) == 0x000190, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000194, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_RespawnWitch, CallFunc_AfterPossess_Rotation_ImplicitCast) == 0x000198, "Member 'B_ObjectiveGameMode_C_RespawnWitch::CallFunc_AfterPossess_Rotation_ImplicitCast' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.SpawnReviveTotem
// 0x0280 (0x0280 - 0x0000)
struct B_ObjectiveGameMode_C_SpawnReviveTotem final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_PropPawnPhysics_C*>           TempPawns;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<int32>                                 HighestDistances;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	TMap<int32, class AB_ObjectiveWitchRespawnPoint_C*> RespawnPointDistances;                             // 0x0028(0x0050)(Edit, BlueprintVisible)
	TArray<int32>                                 Distances;                                         // 0x0078(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Witches;                                           // 0x0088(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        DistanceInPoint;                                   // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ObjectiveWitchRespawnPoint_C*> AllSpawnPoints;                                    // 0x00A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_IndexOfMaxValue;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfIntArray_MaxValue;                   // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_PropPawnPhysics_C*                   CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveWitchRespawnPoint_C*        CallFunc_Map_Find_Value;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0120(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ReviveTotem_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectiveWitchRespawnPoint_C*        CallFunc_Array_Get_Item_3;                         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_PropPawnPhysics_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0240(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_Witch_C*>                     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0258(0x0010)(ReferenceParm)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameMode_C*                 K2Node_DynamicCast_AsB_Objective_Game_Mode;        // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_SpawnReviveTotem) == 0x000010, "Wrong alignment on B_ObjectiveGameMode_C_SpawnReviveTotem");
static_assert(sizeof(B_ObjectiveGameMode_C_SpawnReviveTotem) == 0x000280, "Wrong size on B_ObjectiveGameMode_C_SpawnReviveTotem");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, PlayerState) == 0x000000, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::PlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, TempPawns) == 0x000008, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::TempPawns' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, HighestDistances) == 0x000018, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::HighestDistances' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, RespawnPointDistances) == 0x000028, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::RespawnPointDistances' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Distances) == 0x000078, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Distances' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Witches) == 0x000088, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Witches' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, DistanceInPoint) == 0x000098, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::DistanceInPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, AllSpawnPoints) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::AllSpawnPoints' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Variable) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000CC, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Loop_Counter_Variable_2) == 0x0000D0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Array_Index_Variable_1) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Length_ReturnValue) == 0x0000DC, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Length_ReturnValue_1) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_RandomInteger_ReturnValue) == 0x0000E8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Get_Item) == 0x0000EC, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_MaxOfIntArray_IndexOfMaxValue) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_MaxOfIntArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_MaxOfIntArray_MaxValue) == 0x0000F4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_MaxOfIntArray_MaxValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Add_ReturnValue) == 0x000100, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Length_ReturnValue_2) == 0x000104, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Map_Find_Value) == 0x000110, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Map_Find_ReturnValue) == 0x000118, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_GetTransform_ReturnValue) == 0x000120, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Round_ReturnValue) == 0x000180, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000188, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Add_ReturnValue_1) == 0x000190, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000198, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, Temp_int_Array_Index_Variable_2) == 0x0001A0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Length_ReturnValue_3) == 0x0001B0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001B8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Get_Item_3) == 0x0001D8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Length_ReturnValue_4) == 0x0001E0, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001E4, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001E8, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000200, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_GetGameState_ReturnValue) == 0x000218, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_VSizeSquared_ReturnValue) == 0x000220, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000228, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_FMin_ReturnValue) == 0x000238, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_GetAllActorsOfClass_OutActors) == 0x000240, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_Array_Add_ReturnValue_2) == 0x000250, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000258, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, CallFunc_GetGameMode_ReturnValue) == 0x000268, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, K2Node_DynamicCast_AsB_Objective_Game_Mode) == 0x000270, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::K2Node_DynamicCast_AsB_Objective_Game_Mode' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SpawnReviveTotem, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'B_ObjectiveGameMode_C_SpawnReviveTotem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.StartNewGame
// 0x0001 (0x0001 - 0x0000)
struct B_ObjectiveGameMode_C_StartNewGame final
{
public:
	bool                                          RestartByPlayerJoin;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_StartNewGame) == 0x000001, "Wrong alignment on B_ObjectiveGameMode_C_StartNewGame");
static_assert(sizeof(B_ObjectiveGameMode_C_StartNewGame) == 0x000001, "Wrong size on B_ObjectiveGameMode_C_StartNewGame");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGame, RestartByPlayerJoin) == 0x000000, "Member 'B_ObjectiveGameMode_C_StartNewGame::RestartByPlayerJoin' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.StartNewGameOverride
// 0x00C0 (0x00C0 - 0x0000)
struct B_ObjectiveGameMode_C_StartNewGameOverride final
{
public:
	bool                                          RestartByPlayerJoin;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartNewGame_0;                                    // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_StartNewGameOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_StartNewGameOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_StartNewGameOverride) == 0x0000C0, "Wrong size on B_ObjectiveGameMode_C_StartNewGameOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, RestartByPlayerJoin) == 0x000000, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::RestartByPlayerJoin' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, StartNewGame_0) == 0x000001, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::StartNewGame_0' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance) == 0x000018, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue_1) == 0x000028, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000030, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue_2) == 0x000040, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameState_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000050, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_State) == 0x000060, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue_3) == 0x000070, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue_4) == 0x000078, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000080, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000090, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_5) == 0x000098, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_GetGameInstance_ReturnValue_5) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, K2Node_DynamicCast_bSuccess_6) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, Temp_int_Variable) == 0x0000B4, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B9, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_StartNewGameOverride, CallFunc_BooleanAND_ReturnValue) == 0x0000BA, "Member 'B_ObjectiveGameMode_C_StartNewGameOverride::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.SurrenderTeam
// 0x00B0 (0x00B0 - 0x0000)
struct B_ObjectiveGameMode_C_SurrenderTeam final
{
public:
	E_ObjectiveTeam                               SurrenderObjectiveTeam;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       SurrenderTeam_0;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_2;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Temp_byte_Variable_3;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTeamSurrender_CanSurrender;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       K2Node_Select_Default;                             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_SurrenderTeam) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_SurrenderTeam");
static_assert(sizeof(B_ObjectiveGameMode_C_SurrenderTeam) == 0x0000B0, "Wrong size on B_ObjectiveGameMode_C_SurrenderTeam");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, SurrenderObjectiveTeam) == 0x000000, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::SurrenderObjectiveTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, SurrenderTeam_0) == 0x000001, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::SurrenderTeam_0' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000010, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Game_State) == 0x000018, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, Temp_byte_Variable) == 0x000022, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, Temp_byte_Variable_1) == 0x000024, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Game_Instance) == 0x000030, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000048, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, Temp_byte_Variable_2) == 0x000051, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, Temp_byte_Variable_3) == 0x000052, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameState_ReturnValue_2) == 0x000058, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_CanTeamSurrender_CanSurrender) == 0x000060, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_CanTeamSurrender_CanSurrender' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Game_State_1) == 0x000068, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameInstance_ReturnValue_1) == 0x000078, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000080, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000088, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_Select_Default) == 0x000092, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_GetGameInstance_ReturnValue_2) == 0x000098, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, K2Node_DynamicCast_bSuccess_5) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A9, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AA, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_BooleanAND_ReturnValue_2) == 0x0000AB, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_SurrenderTeam, CallFunc_BooleanAND_ReturnValue_3) == 0x0000AC, "Member 'B_ObjectiveGameMode_C_SurrenderTeam::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.TimerSecondElapsed
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_TimerSecondElapsed final
{
public:
	double                                        RemainingSeconds;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_TimerSecondElapsed) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_TimerSecondElapsed");
static_assert(sizeof(B_ObjectiveGameMode_C_TimerSecondElapsed) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_TimerSecondElapsed");
static_assert(offsetof(B_ObjectiveGameMode_C_TimerSecondElapsed, RemainingSeconds) == 0x000000, "Member 'B_ObjectiveGameMode_C_TimerSecondElapsed::RemainingSeconds' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.UnregisterPlayer
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_UnregisterPlayer final
{
public:
	class AController*                            PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_UnregisterPlayer) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_UnregisterPlayer");
static_assert(sizeof(B_ObjectiveGameMode_C_UnregisterPlayer) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_UnregisterPlayer");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayer, PlayerController) == 0x000000, "Member 'B_ObjectiveGameMode_C_UnregisterPlayer::PlayerController' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.UnregisterPlayerOverride
// 0x0258 (0x0258 - 0x0000)
struct B_ObjectiveGameMode_C_UnregisterPlayerOverride final
{
public:
	class AController*                            LeavingPlayerController;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ReviveTotem_C*>               TempReviveTotems;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AB_ObjectivePlayerState_C*              LeavingPlayerState;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          NoPlayersLeft;                                     // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceHandleEndMatch;                               // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       WinnerTeam;                                        // 0x0022(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_ObjectiveGameState_C*                K2Node_DynamicCast_AsB_Objective_Game_State;       // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_1;               // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ReviveTotem_C*                       CallFunc_Array_Get_Item_1;                         // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AB_ReviveTotem_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0120(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_2;               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchIntact_EnoughPlayerConnected;      // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRoundEnd_RoundIsEnd;                    // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ObjectiveTeam                               CallFunc_GetIntactTeam_Team;                       // 0x01BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB[0x5];                                      // 0x01BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       CallFunc_GetTeamFromObjectiveTeamForThisRound_Team; // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_GameState_C*                         K2Node_DynamicCast_AsB_Game_State_3;               // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMatchDead_IsMatchDead;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_9;            // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_10;           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_10;           // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State;     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_11;           // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_11;           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_ObjectivePlayerState_C*              K2Node_DynamicCast_AsB_Objective_Player_State_1;   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_UnregisterPlayerOverride) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_UnregisterPlayerOverride");
static_assert(sizeof(B_ObjectiveGameMode_C_UnregisterPlayerOverride) == 0x000258, "Wrong size on B_ObjectiveGameMode_C_UnregisterPlayerOverride");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, LeavingPlayerController) == 0x000000, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::LeavingPlayerController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, TempReviveTotems) == 0x000008, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::TempReviveTotems' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, LeavingPlayerState) == 0x000018, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::LeavingPlayerState' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, NoPlayersLeft) == 0x000020, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::NoPlayersLeft' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, ForceHandleEndMatch) == 0x000021, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::ForceHandleEndMatch' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, WinnerTeam) == 0x000022, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_State) == 0x000030, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Objective_Game_State) == 0x000050, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Objective_Game_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance) == 0x000060, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue_2) == 0x000070, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue_3) == 0x000088, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsDedicatedServer_ReturnValue) == 0x000090, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_State_1) == 0x000098, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000A8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_2) == 0x0000B0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x0000B8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x0000C8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_5) == 0x0000D0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, Temp_int_Array_Index_Variable) == 0x0000D4, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Player_State) == 0x0000E8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_6) == 0x0000F0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_3) == 0x0000F8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_RandomInteger_ReturnValue) == 0x000100, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000108, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_7) == 0x000110, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetAllActorsOfClass_OutActors) == 0x000120, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_4) == 0x000130, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x000138, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_8) == 0x000140, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Greater_IntInt_ReturnValue) == 0x000141, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x000142, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_BooleanAND_ReturnValue) == 0x000143, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_5) == 0x000148, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x000150, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_9) == 0x000158, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue_4) == 0x000160, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_State_2) == 0x000168, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_State_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_10) == 0x000170, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsMatchIntact_EnoughPlayerConnected) == 0x000171, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsMatchIntact_EnoughPlayerConnected' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsRoundEnd_RoundIsEnd) == 0x000172, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsRoundEnd_RoundIsEnd' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Not_PreBool_ReturnValue) == 0x000173, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_BooleanAND_ReturnValue_1) == 0x000174, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_6) == 0x000178, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x000180, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_11) == 0x000188, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_7) == 0x000190, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x000198, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_12) == 0x0001A0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_8) == 0x0001A8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x0001B0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_13) == 0x0001B8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001B9, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetIntactTeam_Team) == 0x0001BA, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetIntactTeam_Team' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameState_ReturnValue_5) == 0x0001C0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetTeamFromObjectiveTeamForThisRound_Team) == 0x0001C8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetTeamFromObjectiveTeamForThisRound_Team' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_State_3) == 0x0001D0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_State_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_14) == 0x0001D8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsMatchDead_IsMatchDead) == 0x0001D9, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsMatchDead_IsMatchDead' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_9) == 0x0001E0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_9) == 0x0001E8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_15) == 0x0001F0, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_10) == 0x0001F8, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000200, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_10) == 0x000208, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_16) == 0x000210, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsValid_ReturnValue) == 0x000211, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Objective_Player_State) == 0x000218, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Objective_Player_State' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_17) == 0x000220, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsValid_ReturnValue_1) == 0x000221, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_GetGameInstance_ReturnValue_11) == 0x000228, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_GetGameInstance_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Game_Instance_11) == 0x000230, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Game_Instance_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_18) == 0x000238, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsValid_ReturnValue_2) == 0x000239, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_AsB_Objective_Player_State_1) == 0x000240, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_AsB_Objective_Player_State_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, K2Node_DynamicCast_bSuccess_19) == 0x000248, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Array_Length_ReturnValue_2) == 0x00024C, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000250, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UnregisterPlayerOverride, CallFunc_IsValid_ReturnValue_3) == 0x000251, "Member 'B_ObjectiveGameMode_C_UnregisterPlayerOverride::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.UpdateCustomGameMatchOptions
// 0x0018 (0x0018 - 0x0000)
struct B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions");
static_assert(sizeof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions) == 0x000018, "Wrong size on B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions");
static_assert(offsetof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'B_ObjectiveGameMode_C_UpdateCustomGameMatchOptions::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetPlayObjectiveId
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_GetPlayObjectiveId final
{
public:
	int64                                         ObjectiveId;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetPlayObjectiveId) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetPlayObjectiveId");
static_assert(sizeof(B_ObjectiveGameMode_C_GetPlayObjectiveId) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_GetPlayObjectiveId");
static_assert(offsetof(B_ObjectiveGameMode_C_GetPlayObjectiveId, ObjectiveId) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetPlayObjectiveId::ObjectiveId' has a wrong offset!");

// Function B_ObjectiveGameMode.B_ObjectiveGameMode_C.GetWinObjectiveId
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameMode_C_GetWinObjectiveId final
{
public:
	int64                                         ObjectiveId;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameMode_C_GetWinObjectiveId) == 0x000008, "Wrong alignment on B_ObjectiveGameMode_C_GetWinObjectiveId");
static_assert(sizeof(B_ObjectiveGameMode_C_GetWinObjectiveId) == 0x000008, "Wrong size on B_ObjectiveGameMode_C_GetWinObjectiveId");
static_assert(offsetof(B_ObjectiveGameMode_C_GetWinObjectiveId, ObjectiveId) == 0x000000, "Member 'B_ObjectiveGameMode_C_GetWinObjectiveId::ObjectiveId' has a wrong offset!");

}

