#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemRedpointEOS

#include "Basic.hpp"

#include "OnlineSubsystemRedpointEOS_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_EnterDevicePinCode.SetupUserInterface
// 0x0028 (0x0028 - 0x0000)
struct EOSUserInterface_EnterDevicePinCode_SetupUserInterface final
{
public:
	class UEOSUserInterface_EnterDevicePinCode_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerificationUrl;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PinCode;                                           // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_EnterDevicePinCode_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface) == 0x000028, "Wrong size on EOSUserInterface_EnterDevicePinCode_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, VerificationUrl) == 0x000008, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::VerificationUrl' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_EnterDevicePinCode_SetupUserInterface, PinCode) == 0x000018, "Member 'EOSUserInterface_EnterDevicePinCode_SetupUserInterface::PinCode' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context.SelectedCandidates
// 0x0010 (0x0010 - 0x0000)
struct EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates final
{
public:
	TArray<struct FEOSUserInterface_CandidateEOSAccount> Param_SelectedCandidates;                          // 0x0000(0x0010)(Parm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates) == 0x000008, "Wrong alignment on EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates");
static_assert(sizeof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates) == 0x000010, "Wrong size on EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates, Param_SelectedCandidates) == 0x000000, "Member 'EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context_SelectedCandidates::Param_SelectedCandidates' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface final
{
public:
	class UEOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSUserInterface_CandidateEOSAccount> AvailableCandidates;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface, AvailableCandidates) == 0x000008, "Member 'EOSUserInterface_LinkEOSAccountsAgainstCrossPlatform_SetupUserInterface::AvailableCandidates' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SelectEOSAccount_Context.SelectCandidate
// 0x00D0 (0x00D0 - 0x0000)
struct EOSUserInterface_SelectEOSAccount_Context_SelectCandidate final
{
public:
	struct FEOSUserInterface_CandidateEOSAccount  SelectedCandidate;                                 // 0x0000(0x00D0)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate) == 0x000008, "Wrong alignment on EOSUserInterface_SelectEOSAccount_Context_SelectCandidate");
static_assert(sizeof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate) == 0x0000D0, "Wrong size on EOSUserInterface_SelectEOSAccount_Context_SelectCandidate");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_Context_SelectCandidate, SelectedCandidate) == 0x000000, "Member 'EOSUserInterface_SelectEOSAccount_Context_SelectCandidate::SelectedCandidate' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SelectEOSAccount.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_SelectEOSAccount_SetupUserInterface final
{
public:
	class UEOSUserInterface_SelectEOSAccount_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSUserInterface_CandidateEOSAccount> AvailableCandidates;                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SelectEOSAccount_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_SelectEOSAccount_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_SelectEOSAccount_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_SelectEOSAccount_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_SelectEOSAccount_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_SelectEOSAccount_SetupUserInterface, AvailableCandidates) == 0x000008, "Member 'EOSUserInterface_SelectEOSAccount_SetupUserInterface::AvailableCandidates' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SignInOrCreateAccount_Context.SelectChoice
// 0x0001 (0x0001 - 0x0000)
struct EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice final
{
public:
	EEOSUserInterface_SignInOrCreateAccount_Choice SelectedChoice;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice) == 0x000001, "Wrong alignment on EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice");
static_assert(sizeof(EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice) == 0x000001, "Wrong size on EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice");
static_assert(offsetof(EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice, SelectedChoice) == 0x000000, "Member 'EOSUserInterface_SignInOrCreateAccount_Context_SelectChoice::SelectedChoice' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SignInOrCreateAccount.SetupUserInterface
// 0x0008 (0x0008 - 0x0000)
struct EOSUserInterface_SignInOrCreateAccount_SetupUserInterface final
{
public:
	class UEOSUserInterface_SignInOrCreateAccount_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SignInOrCreateAccount_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_SignInOrCreateAccount_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_SignInOrCreateAccount_SetupUserInterface) == 0x000008, "Wrong size on EOSUserInterface_SignInOrCreateAccount_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_SignInOrCreateAccount_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_SignInOrCreateAccount_SetupUserInterface::Context' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SwitchToCrossPlatformAccount_Context.SelectChoice
// 0x0001 (0x0001 - 0x0000)
struct EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice final
{
public:
	EEOSUserInterface_SwitchToCrossPlatformAccount_Choice SelectedChoice;                                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice) == 0x000001, "Wrong alignment on EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice");
static_assert(sizeof(EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice) == 0x000001, "Wrong size on EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice");
static_assert(offsetof(EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice, SelectedChoice) == 0x000000, "Member 'EOSUserInterface_SwitchToCrossPlatformAccount_Context_SelectChoice::SelectedChoice' has a wrong offset!");

// Function OnlineSubsystemRedpointEOS.EOSUserInterface_SwitchToCrossPlatformAccount.SetupUserInterface
// 0x0018 (0x0018 - 0x0000)
struct EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface final
{
public:
	class UEOSUserInterface_SwitchToCrossPlatformAccount_Context* Context;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EpicAccountName;                                   // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface) == 0x000008, "Wrong alignment on EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface");
static_assert(sizeof(EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface) == 0x000018, "Wrong size on EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface");
static_assert(offsetof(EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface, Context) == 0x000000, "Member 'EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface::Context' has a wrong offset!");
static_assert(offsetof(EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface, EpicAccountName) == 0x000008, "Member 'EOSUserInterface_SwitchToCrossPlatformAccount_SetupUserInterface::EpicAccountName' has a wrong offset!");

}

