#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ImpostorSpectator

#include "Basic.hpp"

#include "B_ImpostorSpectator_classes.hpp"
#include "B_ImpostorSpectator_parameters.hpp"


namespace SDK
{

// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ClientPossessed
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::ClientPossessed(class APlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ClientPossessed");

	Params::B_ImpostorSpectator_C_ClientPossessed Parms{};

	Parms.PlayerController = PlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ExecuteUbergraph_B_ImpostorSpectator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::ExecuteUbergraph_B_ImpostorSpectator(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ExecuteUbergraph_B_ImpostorSpectator");

	Params::B_ImpostorSpectator_C_ExecuteUbergraph_B_ImpostorSpectator Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0");

	Params::B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1");

	Params::B_ImpostorSpectator_C_InpActEvt_ActivateUtilitySkill_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_Fire_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::InpActEvt_Fire_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "InpActEvt_Fire_K2Node_InputActionEvent_2");

	Params::B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpActEvt_Fire_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::InpActEvt_Fire_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "InpActEvt_Fire_K2Node_InputActionEvent_3");

	Params::B_ImpostorSpectator_C_InpActEvt_Fire_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0");

	Params::B_ImpostorSpectator_C_InpAxisEvt_MoveUp_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AB_ImpostorSpectator_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ReceiveTick");

	Params::B_ImpostorSpectator_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AB_ImpostorSpectator_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ReceiveUnpossessed");

	Params::B_ImpostorSpectator_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.ShowSuitableSelectionScreen
// (Protected, BlueprintCallable, BlueprintEvent)

void AB_ImpostorSpectator_C::ShowSuitableSelectionScreen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "ShowSuitableSelectionScreen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_ImpostorSpectator.B_ImpostorSpectator_C.TickHUD
// (Public, BlueprintCallable, BlueprintEvent)

void AB_ImpostorSpectator_C::TickHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_ImpostorSpectator_C", "TickHUD");

	UObject::ProcessEvent(Func, nullptr);
}

}

