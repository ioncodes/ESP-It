#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Inventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_CategoryMenuScreen_classes.hpp"
#include "E_Slot_structs.hpp"
#include "S_ItemInfo_structs.hpp"
#include "S_RecipeInfo_structs.hpp"
#include "ETeamID_structs.hpp"
#include "B_Rarity_structs.hpp"
#include "UMG_structs.hpp"
#include "ESalvageCategory_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Inventory.WB_Inventory_C
// 0x0168 (0x0468 - 0x0300)
class UWB_Inventory_C final : public UWB_CategoryMenuScreen_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_Inventory_C;                     // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_C*                           Back;                                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           Filter;                                            // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           FilterBack;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Filterscreen;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   LeftShoulderIcon;                                  // 0x0328(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PrivateInventoryText;                              // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           Reset;                                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ControllerIcon_C*                   RightShoulderIcon;                                 // 0x0340(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TabButton_C*                        TabButton_Mine;                                    // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_TabButton_C*                        TabButton_Theirs;                                  // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTileView*                              TileView;                                          // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleText;                                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         TradingTabs;                                       // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_InventoryFilter_C*                  WB_InventoryFilter;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FS_ItemInfo>                    SkinItemInfos;                                     // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FS_RecipeInfo>                  RecipeInfos;                                       // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         SelectedItemId;                                    // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedRecipeId;                                  // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowOnlyDuplicates;                                // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EB_Rarity                                     Rarity;                                            // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilterRarity;                                      // 0x03A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A3[0x5];                                      // 0x03A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<E_Slot>                                  TypeSlot;                                          // 0x03A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          FilterType;                                        // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilterTeam;                                        // 0x03F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       Team;                                              // 0x03FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilterRecipes;                                     // 0x03FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<E_Slot>                                  ItemSlot;                                          // 0x0400(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsTradingScreen;                                   // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_TradeWithPlayer_C*                  TradingScreen;                                     // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          OtherPlayerInventory;                              // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FilterScreenOpen;                                  // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void RefreshItemsWithoutRedraw(bool WithFocus);
	void UpdateTheirInventory();
	void UpdateMyInventory();
	ESlateVisibility Get_ShoulderIcon_Visibility();
	void GetOwnsRecipe(const int32& ItemToFind, bool* OwnsRecipe);
	void GetItemQuantity(int32 ItemId, int32* Quantity);
	void GetRecipeItems(TArray<struct FS_RecipeInfo>* RecipeItems);
	void GetSkinItems(TArray<struct FS_ItemInfo>* SkinsItems);
	void ResetFilter();
	void FilterRecipe(const struct FS_RecipeInfo& RecipeInfo, bool* Remove);
	void FilterItem(const struct FS_ItemInfo& ItemInfo, bool* Remove);
	void GetIndividualItemDataAndFocus(class UUserWidget* CategoryButton, ESalvageCategory SalvageCategory, TArray<class UB_TileViewData_C*>* Data, TArray<bool>* FocusNeeded);
	void GetTileView(class UTileView** TileView_0);
	void Construct();
	void OnBack();
	void BndEvt__Back_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature();
	void BndEvt__WB_Inventory_Back_1_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature();
	void BndEvt__WB_Inventory_Back_1_K2Node_ComponentBoundEvent_2_Clicked__DelegateSignature();
	void BndEvt__WB_Inventory_TabButton_Outgoing_K2Node_ComponentBoundEvent_3_Clicked__DelegateSignature();
	void BndEvt__WB_Inventory_TabButton_Incoming_K2Node_ComponentBoundEvent_4_Clicked__DelegateSignature();
	void OnSpecialAction();
	void OnRequestInventoryCompleted_Event();
	void BndEvt__WB_Inventory_Reset_K2Node_ComponentBoundEvent_5_Clicked__DelegateSignature();
	void ExecuteUbergraph_WB_Inventory(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Inventory_C">();
	}
	static class UWB_Inventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Inventory_C>();
	}
};
static_assert(alignof(UWB_Inventory_C) == 0x000008, "Wrong alignment on UWB_Inventory_C");
static_assert(sizeof(UWB_Inventory_C) == 0x000468, "Wrong size on UWB_Inventory_C");
static_assert(offsetof(UWB_Inventory_C, UberGraphFrame_WB_Inventory_C) == 0x000300, "Member 'UWB_Inventory_C::UberGraphFrame_WB_Inventory_C' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Back) == 0x000308, "Member 'UWB_Inventory_C::Back' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Filter) == 0x000310, "Member 'UWB_Inventory_C::Filter' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterBack) == 0x000318, "Member 'UWB_Inventory_C::FilterBack' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Filterscreen) == 0x000320, "Member 'UWB_Inventory_C::Filterscreen' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, LeftShoulderIcon) == 0x000328, "Member 'UWB_Inventory_C::LeftShoulderIcon' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, PrivateInventoryText) == 0x000330, "Member 'UWB_Inventory_C::PrivateInventoryText' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Reset) == 0x000338, "Member 'UWB_Inventory_C::Reset' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, RightShoulderIcon) == 0x000340, "Member 'UWB_Inventory_C::RightShoulderIcon' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TabButton_Mine) == 0x000348, "Member 'UWB_Inventory_C::TabButton_Mine' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TabButton_Theirs) == 0x000350, "Member 'UWB_Inventory_C::TabButton_Theirs' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TileView) == 0x000358, "Member 'UWB_Inventory_C::TileView' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TitleText) == 0x000360, "Member 'UWB_Inventory_C::TitleText' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TradingTabs) == 0x000368, "Member 'UWB_Inventory_C::TradingTabs' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, WB_InventoryFilter) == 0x000370, "Member 'UWB_Inventory_C::WB_InventoryFilter' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, SkinItemInfos) == 0x000378, "Member 'UWB_Inventory_C::SkinItemInfos' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, RecipeInfos) == 0x000388, "Member 'UWB_Inventory_C::RecipeInfos' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, SelectedItemId) == 0x000398, "Member 'UWB_Inventory_C::SelectedItemId' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, SelectedRecipeId) == 0x00039C, "Member 'UWB_Inventory_C::SelectedRecipeId' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, ShowOnlyDuplicates) == 0x0003A0, "Member 'UWB_Inventory_C::ShowOnlyDuplicates' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Rarity) == 0x0003A1, "Member 'UWB_Inventory_C::Rarity' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterRarity) == 0x0003A2, "Member 'UWB_Inventory_C::FilterRarity' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TypeSlot) == 0x0003A8, "Member 'UWB_Inventory_C::TypeSlot' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterType) == 0x0003F8, "Member 'UWB_Inventory_C::FilterType' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterTeam) == 0x0003F9, "Member 'UWB_Inventory_C::FilterTeam' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, Team) == 0x0003FA, "Member 'UWB_Inventory_C::Team' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterRecipes) == 0x0003FB, "Member 'UWB_Inventory_C::FilterRecipes' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, ItemSlot) == 0x000400, "Member 'UWB_Inventory_C::ItemSlot' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, IsTradingScreen) == 0x000450, "Member 'UWB_Inventory_C::IsTradingScreen' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, TradingScreen) == 0x000458, "Member 'UWB_Inventory_C::TradingScreen' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, OtherPlayerInventory) == 0x000460, "Member 'UWB_Inventory_C::OtherPlayerInventory' has a wrong offset!");
static_assert(offsetof(UWB_Inventory_C, FilterScreenOpen) == 0x000461, "Member 'UWB_Inventory_C::FilterScreenOpen' has a wrong offset!");

}

