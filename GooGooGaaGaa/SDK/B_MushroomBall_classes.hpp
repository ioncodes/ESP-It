#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MushroomBall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MushroomBall.B_MushroomBall_C
// 0x00A8 (0x0338 - 0x0290)
class AB_MushroomBall_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_MushroomTrail;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Sphere;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Collision;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstIteration;                                    // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RemainingSplitIterations;                          // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  OwnerPawn;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChildScale;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentLifeTime;                                   // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lifetime;                                          // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimerIncrement;                                    // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MushroomSplitMainSound;                            // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             MushroomSplitSmallSound;                           // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              ShootSound;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Collision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ExecuteUbergraph_B_MushroomBall(int32 EntryPoint);
	void GetFirstTransformVelocity(class APawn* Instigator_0, struct FVector* Velocity);
	struct FTransform GetRandomMushroomBallChildTransform();
	void HandleEnvironmentHit(const struct FVector& HitLocation_0, const struct FVector& HitNormal_0);
	void HandleHunterOrGarlicHit(class AB_Hunter_C* HitHunter);
	void IncrementLifeTime();
	void PlayDestroyEffects(const struct FVector& Location, bool FirstIteration_0);
	void PlayDestroyEffectsMulticast(const struct FVector& Location, bool FirstIteration_0);
	void PlayFastDestroyEffects(const struct FVector& Location);
	void PlayFastDestroyEffectsMulticast(const struct FVector& Location);
	void PlayShootSound(const struct FVector& Location);
	void PlayShootSoundMulti(const struct FVector& Location);
	void ReceiveBeginPlay();
	void SpawnChildMushroomBall();
	void SpawnMushroomArea();
	void TearDown();
	void TearDownMulticast();
	void TearDownPoolObject();
	void TearUp(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0, const struct FVector& Velocity);
	void TearUpMulticast(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0, const struct FVector& Velocity);
	void TearUpPoolObject(const struct FTransform& SpawnTransform, class AActor* Owner_0, class APawn* Instigator_0);

	void IsFirstMushroomInIteration(const struct FTransform& Transform, bool* FirstIteration_0) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MushroomBall_C">();
	}
	static class AB_MushroomBall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_MushroomBall_C>();
	}
};
static_assert(alignof(AB_MushroomBall_C) == 0x000008, "Wrong alignment on AB_MushroomBall_C");
static_assert(sizeof(AB_MushroomBall_C) == 0x000338, "Wrong size on AB_MushroomBall_C");
static_assert(offsetof(AB_MushroomBall_C, UberGraphFrame) == 0x000290, "Member 'AB_MushroomBall_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, NS_MushroomTrail) == 0x000298, "Member 'AB_MushroomBall_C::NS_MushroomTrail' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, Sphere) == 0x0002A0, "Member 'AB_MushroomBall_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, Collision) == 0x0002A8, "Member 'AB_MushroomBall_C::Collision' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, ProjectileMovement) == 0x0002B0, "Member 'AB_MushroomBall_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, HitNormal) == 0x0002B8, "Member 'AB_MushroomBall_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, HitLocation) == 0x0002D0, "Member 'AB_MushroomBall_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, FirstIteration) == 0x0002E8, "Member 'AB_MushroomBall_C::FirstIteration' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, RemainingSplitIterations) == 0x0002EC, "Member 'AB_MushroomBall_C::RemainingSplitIterations' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, OwnerPawn) == 0x0002F0, "Member 'AB_MushroomBall_C::OwnerPawn' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, Scale) == 0x0002F8, "Member 'AB_MushroomBall_C::Scale' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, ChildScale) == 0x000300, "Member 'AB_MushroomBall_C::ChildScale' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, CurrentLifeTime) == 0x000308, "Member 'AB_MushroomBall_C::CurrentLifeTime' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, Lifetime) == 0x000310, "Member 'AB_MushroomBall_C::Lifetime' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, TimerIncrement) == 0x000318, "Member 'AB_MushroomBall_C::TimerIncrement' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, MushroomSplitMainSound) == 0x000320, "Member 'AB_MushroomBall_C::MushroomSplitMainSound' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, MushroomSplitSmallSound) == 0x000328, "Member 'AB_MushroomBall_C::MushroomSplitSmallSound' has a wrong offset!");
static_assert(offsetof(AB_MushroomBall_C, ShootSound) == 0x000330, "Member 'AB_MushroomBall_C::ShootSound' has a wrong offset!");

}

