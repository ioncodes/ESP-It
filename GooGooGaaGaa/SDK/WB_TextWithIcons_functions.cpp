#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_TextWithIcons

#include "Basic.hpp"

#include "WB_TextWithIcons_classes.hpp"
#include "WB_TextWithIcons_parameters.hpp"


namespace SDK
{

// Function WB_TextWithIcons.WB_TextWithIcons_C.GetStringInRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FString>                   Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   FirstIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LastIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UWB_TextWithIcons_C::GetStringInRange(TArray<class FString>& Array, int32 FirstIndex, int32 LastIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "GetStringInRange");

	Params::WB_TextWithIcons_C_GetStringInRange Parms{};

	Parms.Array = std::move(Array);
	Parms.FirstIndex = FirstIndex;
	Parms.LastIndex = LastIndex;

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);

	return Parms.ReturnValue;
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.UpdateIcons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TextWithIcons_C::UpdateIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "UpdateIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.CreateWidgets
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWB_TextWithIcons_C::CreateWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "CreateWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.GetLocalizationManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UB_LocalizationManager_C*         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UB_LocalizationManager_C* UWB_TextWithIcons_C::GetLocalizationManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "GetLocalizationManager");

	Params::WB_TextWithIcons_C_GetLocalizationManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.AddControllerIconWidget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             BoundKey                                               (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TextWithIcons_C::AddControllerIconWidget(const struct FKey& BoundKey, class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "AddControllerIconWidget");

	Params::WB_TextWithIcons_C_AddControllerIconWidget Parms{};

	Parms.BoundKey = std::move(BoundKey);
	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.AddTextWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TextString                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UWB_Text_C*                       ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWB_Text_C* UWB_TextWithIcons_C::AddTextWidget(const class FString& TextString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "AddTextWidget");

	Params::WB_TextWithIcons_C_AddTextWidget Parms{};

	Parms.TextString = std::move(TextString);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TextWithIcons_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "PreConstruct");

	Params::WB_TextWithIcons_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.OnGamePadModeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bGamePadMode                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TextWithIcons_C::OnGamePadModeChanged(bool bGamePadMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "OnGamePadModeChanged");

	Params::WB_TextWithIcons_C_OnGamePadModeChanged Parms{};

	Parms.bGamePadMode = bGamePadMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_TextWithIcons_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TextWithIcons_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "Tick");

	Params::WB_TextWithIcons_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.SetFormat
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Format                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_TextWithIcons_C::SetFormat(const class FText& Param_Format)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "SetFormat");

	Params::WB_TextWithIcons_C_SetFormat Parms{};

	Parms.Param_Format = std::move(Param_Format);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_TextWithIcons.WB_TextWithIcons_C.ExecuteUbergraph_WB_TextWithIcons
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_TextWithIcons_C::ExecuteUbergraph_WB_TextWithIcons(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_TextWithIcons_C", "ExecuteUbergraph_WB_TextWithIcons");

	Params::WB_TextWithIcons_C_ExecuteUbergraph_WB_TextWithIcons Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

