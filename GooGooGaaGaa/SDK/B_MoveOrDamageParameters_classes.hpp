#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MoveOrDamageParameters

#include "Basic.hpp"

#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MoveOrDamageParameters.B_MoveOrDamageParameters_C
// 0x0030 (0x00A0 - 0x0070)
class UB_MoveOrDamageParameters_C final : public UModParameters
{
public:
	class UClass*                                 ModActor;                                          // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        DamagePerInterval;                                 // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        IntervalBetweenDamages;                            // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SecondsUntilDamageStarts;                          // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityToAvoidDamage;                             // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SilentDamage;                                      // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableTaunting;                                    // 0x0099(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MoveOrDamageParameters_C">();
	}
	static class UB_MoveOrDamageParameters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MoveOrDamageParameters_C>();
	}
};
static_assert(alignof(UB_MoveOrDamageParameters_C) == 0x000008, "Wrong alignment on UB_MoveOrDamageParameters_C");
static_assert(sizeof(UB_MoveOrDamageParameters_C) == 0x0000A0, "Wrong size on UB_MoveOrDamageParameters_C");
static_assert(offsetof(UB_MoveOrDamageParameters_C, ModActor) == 0x000070, "Member 'UB_MoveOrDamageParameters_C::ModActor' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, DamagePerInterval) == 0x000078, "Member 'UB_MoveOrDamageParameters_C::DamagePerInterval' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, IntervalBetweenDamages) == 0x000080, "Member 'UB_MoveOrDamageParameters_C::IntervalBetweenDamages' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, SecondsUntilDamageStarts) == 0x000088, "Member 'UB_MoveOrDamageParameters_C::SecondsUntilDamageStarts' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, VelocityToAvoidDamage) == 0x000090, "Member 'UB_MoveOrDamageParameters_C::VelocityToAvoidDamage' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, SilentDamage) == 0x000098, "Member 'UB_MoveOrDamageParameters_C::SilentDamage' has a wrong offset!");
static_assert(offsetof(UB_MoveOrDamageParameters_C, EnableTaunting) == 0x000099, "Member 'UB_MoveOrDamageParameters_C::EnableTaunting' has a wrong offset!");

}

