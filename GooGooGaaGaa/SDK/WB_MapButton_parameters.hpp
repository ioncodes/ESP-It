#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_MapButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_MapSize_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WB_MapButton.WB_MapButton_C.GetIcon
// 0x0060 (0x0060 - 0x0000)
struct WB_MapButton_C_GetIcon final
{
public:
	TSoftObjectPtr<class UObject>                 ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E3[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0038(0x0028)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_GetIcon) == 0x000008, "Wrong alignment on WB_MapButton_C_GetIcon");
static_assert(sizeof(WB_MapButton_C_GetIcon) == 0x000060, "Wrong size on WB_MapButton_C_GetIcon");
static_assert(offsetof(WB_MapButton_C_GetIcon, ReturnValue) == 0x000000, "Member 'WB_MapButton_C_GetIcon::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetIcon, Temp_bool_Variable) == 0x000028, "Member 'WB_MapButton_C_GetIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetIcon, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WB_MapButton_C_GetIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetIcon, K2Node_Select_Default) == 0x000030, "Member 'WB_MapButton_C_GetIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetIcon, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000038, "Member 'WB_MapButton_C_GetIcon::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.GetQuantityVisibility
// 0x0003 (0x0003 - 0x0000)
struct WB_MapButton_C_GetQuantityVisibility final
{
public:
	bool                                          ShowQuantity;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_GetQuantityVisibility) == 0x000001, "Wrong alignment on WB_MapButton_C_GetQuantityVisibility");
static_assert(sizeof(WB_MapButton_C_GetQuantityVisibility) == 0x000003, "Wrong size on WB_MapButton_C_GetQuantityVisibility");
static_assert(offsetof(WB_MapButton_C_GetQuantityVisibility, ShowQuantity) == 0x000000, "Member 'WB_MapButton_C_GetQuantityVisibility::ShowQuantity' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetQuantityVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WB_MapButton_C_GetQuantityVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetQuantityVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WB_MapButton_C_GetQuantityVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.SetIndividualParameters
// 0x0038 (0x0038 - 0x0000)
struct WB_MapButton_C_SetIndividualParameters final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetTextureForCustomMap_Texture;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_MapButtonData_C*                     K2Node_DynamicCast_AsB_Map_Button_Data;            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_SetIndividualParameters) == 0x000008, "Wrong alignment on WB_MapButton_C_SetIndividualParameters");
static_assert(sizeof(WB_MapButton_C_SetIndividualParameters) == 0x000038, "Wrong size on WB_MapButton_C_SetIndividualParameters");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WB_MapButton_C_SetIndividualParameters::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, K2Node_DynamicCast_AsB_Game_Instance) == 0x000008, "Member 'WB_MapButton_C_SetIndividualParameters::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WB_MapButton_C_SetIndividualParameters::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, CallFunc_GetTextureForCustomMap_Texture) == 0x000018, "Member 'WB_MapButton_C_SetIndividualParameters::CallFunc_GetTextureForCustomMap_Texture' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, CallFunc_IsEmpty_ReturnValue) == 0x000020, "Member 'WB_MapButton_C_SetIndividualParameters::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, K2Node_DynamicCast_AsB_Map_Button_Data) == 0x000028, "Member 'WB_MapButton_C_SetIndividualParameters::K2Node_DynamicCast_AsB_Map_Button_Data' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_SetIndividualParameters, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'WB_MapButton_C_SetIndividualParameters::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.GetQuantityText
// 0x0030 (0x0030 - 0x0000)
struct WB_MapButton_C_GetQuantityText final
{
public:
	class FText                                   Quantity;                                          // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_GetPlayernumberText_ReturnValue;          // 0x0018(0x0018)()
};
static_assert(alignof(WB_MapButton_C_GetQuantityText) == 0x000008, "Wrong alignment on WB_MapButton_C_GetQuantityText");
static_assert(sizeof(WB_MapButton_C_GetQuantityText) == 0x000030, "Wrong size on WB_MapButton_C_GetQuantityText");
static_assert(offsetof(WB_MapButton_C_GetQuantityText, Quantity) == 0x000000, "Member 'WB_MapButton_C_GetQuantityText::Quantity' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetQuantityText, CallFunc_GetPlayernumberText_ReturnValue) == 0x000018, "Member 'WB_MapButton_C_GetQuantityText::CallFunc_GetPlayernumberText_ReturnValue' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.GetBorderColor
// 0x0020 (0x0020 - 0x0000)
struct WB_MapButton_C_GetBorderColor final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BorderColor;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_GetBorderColor) == 0x000004, "Wrong alignment on WB_MapButton_C_GetBorderColor");
static_assert(sizeof(WB_MapButton_C_GetBorderColor) == 0x000020, "Wrong size on WB_MapButton_C_GetBorderColor");
static_assert(offsetof(WB_MapButton_C_GetBorderColor, Color) == 0x000000, "Member 'WB_MapButton_C_GetBorderColor::Color' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetBorderColor, BorderColor) == 0x000010, "Member 'WB_MapButton_C_GetBorderColor::BorderColor' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.GetPlayernumberText
// 0x00A8 (0x00A8 - 0x0000)
struct WB_MapButton_C_GetPlayernumberText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	E_MapSize                                     Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0040(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0058(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57E8[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default_1;                           // 0x0090(0x0018)()
};
static_assert(alignof(WB_MapButton_C_GetPlayernumberText) == 0x000008, "Wrong alignment on WB_MapButton_C_GetPlayernumberText");
static_assert(sizeof(WB_MapButton_C_GetPlayernumberText) == 0x0000A8, "Wrong size on WB_MapButton_C_GetPlayernumberText");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, ReturnValue) == 0x000000, "Member 'WB_MapButton_C_GetPlayernumberText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, Temp_bool_Variable) == 0x000018, "Member 'WB_MapButton_C_GetPlayernumberText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, Temp_text_Variable) == 0x000020, "Member 'WB_MapButton_C_GetPlayernumberText::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, Temp_byte_Variable) == 0x000038, "Member 'WB_MapButton_C_GetPlayernumberText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, Temp_text_Variable_1) == 0x000040, "Member 'WB_MapButton_C_GetPlayernumberText::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, Temp_text_Variable_2) == 0x000058, "Member 'WB_MapButton_C_GetPlayernumberText::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WB_MapButton_C_GetPlayernumberText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, K2Node_Select_Default) == 0x000078, "Member 'WB_MapButton_C_GetPlayernumberText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_GetPlayernumberText, K2Node_Select_Default_1) == 0x000090, "Member 'WB_MapButton_C_GetPlayernumberText::K2Node_Select_Default_1' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.OnFocusReceived
// 0x01B8 (0x01B8 - 0x0000)
struct WB_MapButton_C_OnFocusReceived final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FFocusEvent                            InFocusEvent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FEventReply                            ReturnValue;                                       // 0x0040(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnFocusReceived_ReturnValue;              // 0x00F8(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_OnFocusReceived) == 0x000008, "Wrong alignment on WB_MapButton_C_OnFocusReceived");
static_assert(sizeof(WB_MapButton_C_OnFocusReceived) == 0x0001B8, "Wrong size on WB_MapButton_C_OnFocusReceived");
static_assert(offsetof(WB_MapButton_C_OnFocusReceived, MyGeometry) == 0x000000, "Member 'WB_MapButton_C_OnFocusReceived::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_OnFocusReceived, InFocusEvent) == 0x000038, "Member 'WB_MapButton_C_OnFocusReceived::InFocusEvent' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_OnFocusReceived, ReturnValue) == 0x000040, "Member 'WB_MapButton_C_OnFocusReceived::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_OnFocusReceived, CallFunc_OnFocusReceived_ReturnValue) == 0x0000F8, "Member 'WB_MapButton_C_OnFocusReceived::CallFunc_OnFocusReceived_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_OnFocusReceived, CallFunc_PlayAnimation_ReturnValue) == 0x0001B0, "Member 'WB_MapButton_C_OnFocusReceived::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.BP_OnItemExpansionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_MapButton_C_BP_OnItemExpansionChanged final
{
public:
	bool                                          bIsExpanded;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong alignment on WB_MapButton_C_BP_OnItemExpansionChanged");
static_assert(sizeof(WB_MapButton_C_BP_OnItemExpansionChanged) == 0x000001, "Wrong size on WB_MapButton_C_BP_OnItemExpansionChanged");
static_assert(offsetof(WB_MapButton_C_BP_OnItemExpansionChanged, bIsExpanded) == 0x000000, "Member 'WB_MapButton_C_BP_OnItemExpansionChanged::bIsExpanded' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.BP_OnItemSelectionChanged
// 0x0001 (0x0001 - 0x0000)
struct WB_MapButton_C_BP_OnItemSelectionChanged final
{
public:
	bool                                          bIsSelected;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong alignment on WB_MapButton_C_BP_OnItemSelectionChanged");
static_assert(sizeof(WB_MapButton_C_BP_OnItemSelectionChanged) == 0x000001, "Wrong size on WB_MapButton_C_BP_OnItemSelectionChanged");
static_assert(offsetof(WB_MapButton_C_BP_OnItemSelectionChanged, bIsSelected) == 0x000000, "Member 'WB_MapButton_C_BP_OnItemSelectionChanged::bIsSelected' has a wrong offset!");

// Function WB_MapButton.WB_MapButton_C.ExecuteUbergraph_WB_MapButton
// 0x0008 (0x0008 - 0x0000)
struct WB_MapButton_C_ExecuteUbergraph_WB_MapButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsSelected;                          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsExpanded;                          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_MapButton_C_ExecuteUbergraph_WB_MapButton) == 0x000004, "Wrong alignment on WB_MapButton_C_ExecuteUbergraph_WB_MapButton");
static_assert(sizeof(WB_MapButton_C_ExecuteUbergraph_WB_MapButton) == 0x000008, "Wrong size on WB_MapButton_C_ExecuteUbergraph_WB_MapButton");
static_assert(offsetof(WB_MapButton_C_ExecuteUbergraph_WB_MapButton, EntryPoint) == 0x000000, "Member 'WB_MapButton_C_ExecuteUbergraph_WB_MapButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_ExecuteUbergraph_WB_MapButton, K2Node_Event_bIsSelected) == 0x000004, "Member 'WB_MapButton_C_ExecuteUbergraph_WB_MapButton::K2Node_Event_bIsSelected' has a wrong offset!");
static_assert(offsetof(WB_MapButton_C_ExecuteUbergraph_WB_MapButton, K2Node_Event_bIsExpanded) == 0x000005, "Member 'WB_MapButton_C_ExecuteUbergraph_WB_MapButton::K2Node_Event_bIsExpanded' has a wrong offset!");

}

