#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_PlayerScore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_PlayerScore.WB_PlayerScore_C
// 0x0050 (0x0330 - 0x02E0)
class UWB_PlayerScore_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 OneStPlace;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlaceText;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ScoreText;                                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerBlock_C*                      WB_PlayerBlock;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Score;                                             // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Place;                                             // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AB_PlayerState_C*                       PlayerState;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UB_TournamentPlayer_C*                  TournamentPlayer;                                  // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WB_PlayerScore(int32 EntryPoint);
	ESlateVisibility Get_1StPlace_Visibility_0();
	class FText Get_Name_Text_0();
	class FText Get_PlaceText_Text_0();
	ESlateVisibility Get_PlaceText_Visibility_0();
	class FText Get_ScoreText_Text_0();
	ESlateVisibility Get_ScoreText_Visibility_0();
	void Update();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_PlayerScore_C">();
	}
	static class UWB_PlayerScore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_PlayerScore_C>();
	}
};
static_assert(alignof(UWB_PlayerScore_C) == 0x000008, "Wrong alignment on UWB_PlayerScore_C");
static_assert(sizeof(UWB_PlayerScore_C) == 0x000330, "Wrong size on UWB_PlayerScore_C");
static_assert(offsetof(UWB_PlayerScore_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_PlayerScore_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, OneStPlace) == 0x0002E8, "Member 'UWB_PlayerScore_C::OneStPlace' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PlaceText) == 0x0002F0, "Member 'UWB_PlayerScore_C::PlaceText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, ScoreText) == 0x0002F8, "Member 'UWB_PlayerScore_C::ScoreText' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, WB_PlayerBlock) == 0x000300, "Member 'UWB_PlayerScore_C::WB_PlayerBlock' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PlayerName) == 0x000308, "Member 'UWB_PlayerScore_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, Score) == 0x000318, "Member 'UWB_PlayerScore_C::Score' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, Place) == 0x00031C, "Member 'UWB_PlayerScore_C::Place' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, PlayerState) == 0x000320, "Member 'UWB_PlayerScore_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UWB_PlayerScore_C, TournamentPlayer) == 0x000328, "Member 'UWB_PlayerScore_C::TournamentPlayer' has a wrong offset!");

}

