#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Cable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Cable.B_Cable_C
// 0x0098 (0x0330 - 0x0298)
class AB_Cable_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        EndPoint;                                          // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCableComponent*                        Cable;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForceDirection;                                    // 0x02B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Force;                                             // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaAdd;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Laterns;                                           // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3935[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_SmallLantern_C*>              Lanterns;                                          // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<int32>                                 Nodes;                                             // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        StartLocations;                                    // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        CableLength;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LanternClass;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void CreateNodes();
	void ExecuteUbergraph_B_Cable(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Cable_C">();
	}
	static class AB_Cable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Cable_C>();
	}
};
static_assert(alignof(AB_Cable_C) == 0x000008, "Wrong alignment on AB_Cable_C");
static_assert(sizeof(AB_Cable_C) == 0x000330, "Wrong size on AB_Cable_C");
static_assert(offsetof(AB_Cable_C, UberGraphFrame) == 0x000298, "Member 'AB_Cable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, EndPoint) == 0x0002A0, "Member 'AB_Cable_C::EndPoint' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Cable) == 0x0002A8, "Member 'AB_Cable_C::Cable' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, DefaultSceneRoot) == 0x0002B0, "Member 'AB_Cable_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, ForceDirection) == 0x0002B8, "Member 'AB_Cable_C::ForceDirection' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Force) == 0x0002D0, "Member 'AB_Cable_C::Force' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Speed) == 0x0002D8, "Member 'AB_Cable_C::Speed' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, DeltaAdd) == 0x0002E0, "Member 'AB_Cable_C::DeltaAdd' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Laterns) == 0x0002E8, "Member 'AB_Cable_C::Laterns' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Lanterns) == 0x0002F0, "Member 'AB_Cable_C::Lanterns' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, Nodes) == 0x000300, "Member 'AB_Cable_C::Nodes' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, StartLocations) == 0x000310, "Member 'AB_Cable_C::StartLocations' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, CableLength) == 0x000320, "Member 'AB_Cable_C::CableLength' has a wrong offset!");
static_assert(offsetof(AB_Cable_C, LanternClass) == 0x000328, "Member 'AB_Cable_C::LanternClass' has a wrong offset!");

}

