#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_SessionManager

#include "Basic.hpp"

#include "B_SessionManager_classes.hpp"
#include "B_SessionManager_parameters.hpp"


namespace SDK
{

// Function B_SessionManager.B_SessionManager_C.AddMatchStartedFlagForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MatchStarted                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           StartTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddMatchStartedFlagForUpdate(bool MatchStarted, const class FString& StartTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddMatchStartedFlagForUpdate");

	Params::B_SessionManager_C_AddMatchStartedFlagForUpdate Parms{};

	Parms.MatchStarted = MatchStarted;
	Parms.StartTime = std::move(StartTime);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.AddMatchTimeForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MatchTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddMatchTimeForUpdate(int32 MatchTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddMatchTimeForUpdate");

	Params::B_SessionManager_C_AddMatchTimeForUpdate Parms{};

	Parms.MatchTime = MatchTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.AddObjectiveMatchGUIDForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Guid                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddObjectiveMatchGUIDForUpdate(const class FString& Guid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddObjectiveMatchGUIDForUpdate");

	Params::B_SessionManager_C_AddObjectiveMatchGUIDForUpdate Parms{};

	Parms.Guid = std::move(Guid);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.AddObjectiveMatchStartedFlagForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ObjectiveMatchStarted                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddObjectiveMatchStartedFlagForUpdate(bool ObjectiveMatchStarted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddObjectiveMatchStartedFlagForUpdate");

	Params::B_SessionManager_C_AddObjectiveMatchStartedFlagForUpdate Parms{};

	Parms.ObjectiveMatchStarted = ObjectiveMatchStarted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.AddPlayerCountForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerCount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddPlayerCountForUpdate(int32 PlayerCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddPlayerCountForUpdate");

	Params::B_SessionManager_C_AddPlayerCountForUpdate Parms{};

	Parms.PlayerCount = PlayerCount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.AddUpdatedPropertiesToSessionSettings
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, struct FOnlineSessionSettingBP>SessionSettings                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// TMap<class FName, struct FOnlineSessionSettingBP>UpdatedSessionSettings                                 (Parm, OutParm)

void UB_SessionManager_C::AddUpdatedPropertiesToSessionSettings(const TMap<class FName, struct FOnlineSessionSettingBP>& SessionSettings, TMap<class FName, struct FOnlineSessionSettingBP>* UpdatedSessionSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddUpdatedPropertiesToSessionSettings");

	Params::B_SessionManager_C_AddUpdatedPropertiesToSessionSettings Parms{};

	Parms.SessionSettings = std::move(SessionSettings);

	UObject::ProcessEvent(Func, &Parms);

	if (UpdatedSessionSettings != nullptr)
		*UpdatedSessionSettings = std::move(Parms.UpdatedSessionSettings);
}


// Function B_SessionManager.B_SessionManager_C.AddUsingGameRulesForUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UsingCustomRules                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LiveTweakingAllowed                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::AddUsingGameRulesForUpdate(bool UsingCustomRules, bool LiveTweakingAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "AddUsingGameRulesForUpdate");

	Params::B_SessionManager_C_AddUsingGameRulesForUpdate Parms{};

	Parms.UsingCustomRules = UsingCustomRules;
	Parms.LiveTweakingAllowed = LiveTweakingAllowed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.DestroyOnlineSession
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::DestroyOnlineSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "DestroyOnlineSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.EndOnlineSession
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::EndOnlineSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "EndOnlineSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.ExecuteUbergraph_B_SessionManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::ExecuteUbergraph_B_SessionManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "ExecuteUbergraph_B_SessionManager");

	Params::B_SessionManager_C_ExecuteUbergraph_B_SessionManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8");

	Params::B_SessionManager_C_OnCallFailed_3A9EE90449D09BFAC83E6C9F99AC1DE8 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB");

	Params::B_SessionManager_C_OnCallFailed_64CE9DA44A206F0283C61FB45E0662EB Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431");

	Params::B_SessionManager_C_OnCallFailed_826D75FB4D5254C3DBF6FB9F75F4A431 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_C27C1E6742775B044DB1C796B3FD536C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         PlayerIds                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_C27C1E6742775B044DB1C796B3FD536C(class FName SessionName, const TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_C27C1E6742775B044DB1C796B3FD536C");

	Params::B_SessionManager_C_OnCallFailed_C27C1E6742775B044DB1C796B3FD536C Parms{};

	Parms.SessionName = SessionName;
	Parms.PlayerIds = std::move(PlayerIds);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9");

	Params::B_SessionManager_C_OnCallFailed_D646C4F343728FB964A45EA8EB46F8A9 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnCallFailed_FABFFE04433974AAC85D7A87CED7392B
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         PlayerIds                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnCallFailed_FABFFE04433974AAC85D7A87CED7392B(class FName SessionName, const TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnCallFailed_FABFFE04433974AAC85D7A87CED7392B");

	Params::B_SessionManager_C_OnCallFailed_FABFFE04433974AAC85D7A87CED7392B Parms{};

	Parms.SessionName = SessionName;
	Parms.PlayerIds = std::move(PlayerIds);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8");

	Params::B_SessionManager_C_OnDestroySessionComplete_3A9EE90449D09BFAC83E6C9F99AC1DE8 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB");

	Params::B_SessionManager_C_OnEndSessionComplete_64CE9DA44A206F0283C61FB45E0662EB Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         PlayerIds                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C(class FName SessionName, const TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C");

	Params::B_SessionManager_C_OnRegisterPlayersComplete_C27C1E6742775B044DB1C796B3FD536C Parms{};

	Parms.SessionName = SessionName;
	Parms.PlayerIds = std::move(PlayerIds);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9");

	Params::B_SessionManager_C_OnStartSessionComplete_D646C4F343728FB964A45EA8EB46F8A9 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FUniqueNetIdRepl>         PlayerIds                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B(class FName SessionName, const TArray<struct FUniqueNetIdRepl>& PlayerIds, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B");

	Params::B_SessionManager_C_OnUnregisterPlayersComplete_FABFFE04433974AAC85D7A87CED7392B Parms{};

	Parms.SessionName = SessionName;
	Parms.PlayerIds = std::move(PlayerIds);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SessionName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_SessionManager_C::OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431(class FName SessionName, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431");

	Params::B_SessionManager_C_OnUpdateSessionComplete_826D75FB4D5254C3DBF6FB9F75F4A431 Parms{};

	Parms.SessionName = SessionName;
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.RegisterPlayerToSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_SessionManager_C::RegisterPlayerToSession(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "RegisterPlayerToSession");

	Params::B_SessionManager_C_RegisterPlayerToSession Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.RegisterQueuedPlayersToSession
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::RegisterQueuedPlayersToSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "RegisterQueuedPlayersToSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.SendCurrentSessionInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::SendCurrentSessionInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "SendCurrentSessionInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.SendGameServerKeepAlive
// (Public, BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::SendGameServerKeepAlive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "SendGameServerKeepAlive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.StartOnlineSession
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::StartOnlineSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "StartOnlineSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.UnregisterPlayerFromSession
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FUniqueNetIdRepl                 PlayerNetId                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UB_SessionManager_C::UnregisterPlayerFromSession(const struct FUniqueNetIdRepl& PlayerNetId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "UnregisterPlayerFromSession");

	Params::B_SessionManager_C_UnregisterPlayerFromSession Parms{};

	Parms.PlayerNetId = std::move(PlayerNetId);

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_SessionManager.B_SessionManager_C.UnregisterQueuedPlayersFromSession
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::UnregisterQueuedPlayersFromSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "UnregisterQueuedPlayersFromSession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_SessionManager.B_SessionManager_C.UpdateSessionProperties
// (BlueprintCallable, BlueprintEvent)

void UB_SessionManager_C::UpdateSessionProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_SessionManager_C", "UpdateSessionProperties");

	UObject::ProcessEvent(Func, nullptr);
}

}

