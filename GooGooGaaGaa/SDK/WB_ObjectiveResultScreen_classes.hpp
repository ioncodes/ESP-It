#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ObjectiveResultScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "ETeamID_structs.hpp"
#include "E_ObjectiveTeam_structs.hpp"
#include "E_ObjectiveResult_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ObjectiveResultScreen.WB_ObjectiveResultScreen_C
// 0x0050 (0x0330 - 0x02E0)
class UWB_ObjectiveResultScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Victory;                                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               VictoryLogo;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ObjectiveResultLine_C*              WB_ObjectiveResultLine1;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ObjectiveResultLine_C*              WB_ObjectiveResultLine2;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ObjectiveResultLine_C*              WB_ObjectiveResultLine3;                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ObjectiveResultLine_C*              WB_ObjectiveResultLine4;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_ResultScreenBase_C*                 WB_ResultScreenBase;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        NextScreenTime;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentResultLineIndex;                            // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayVictoryLogo;                                   // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WB_ObjectiveResultScreen(int32 EntryPoint);
	class FText Get_Victory_Text_0();
	void GetWinReasonResultLine(int32 ReasonIndex, class UWB_ObjectiveResultLine_C** WinReasonResultLine);
	void InitializeResultLine(class UWB_ObjectiveResultLine_C* ResultLine);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateStats();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ObjectiveResultScreen_C">();
	}
	static class UWB_ObjectiveResultScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ObjectiveResultScreen_C>();
	}
};
static_assert(alignof(UWB_ObjectiveResultScreen_C) == 0x000008, "Wrong alignment on UWB_ObjectiveResultScreen_C");
static_assert(sizeof(UWB_ObjectiveResultScreen_C) == 0x000330, "Wrong size on UWB_ObjectiveResultScreen_C");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, UberGraphFrame) == 0x0002E0, "Member 'UWB_ObjectiveResultScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, Victory) == 0x0002E8, "Member 'UWB_ObjectiveResultScreen_C::Victory' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, VictoryLogo) == 0x0002F0, "Member 'UWB_ObjectiveResultScreen_C::VictoryLogo' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, WB_ObjectiveResultLine1) == 0x0002F8, "Member 'UWB_ObjectiveResultScreen_C::WB_ObjectiveResultLine1' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, WB_ObjectiveResultLine2) == 0x000300, "Member 'UWB_ObjectiveResultScreen_C::WB_ObjectiveResultLine2' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, WB_ObjectiveResultLine3) == 0x000308, "Member 'UWB_ObjectiveResultScreen_C::WB_ObjectiveResultLine3' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, WB_ObjectiveResultLine4) == 0x000310, "Member 'UWB_ObjectiveResultScreen_C::WB_ObjectiveResultLine4' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, WB_ResultScreenBase) == 0x000318, "Member 'UWB_ObjectiveResultScreen_C::WB_ResultScreenBase' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, NextScreenTime) == 0x000320, "Member 'UWB_ObjectiveResultScreen_C::NextScreenTime' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, CurrentResultLineIndex) == 0x000328, "Member 'UWB_ObjectiveResultScreen_C::CurrentResultLineIndex' has a wrong offset!");
static_assert(offsetof(UWB_ObjectiveResultScreen_C, PlayVictoryLogo) == 0x00032C, "Member 'UWB_ObjectiveResultScreen_C::PlayVictoryLogo' has a wrong offset!");

}

