#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AdvancedSessions

#include "Basic.hpp"


namespace SDK
{

// Enum AdvancedSessions.EBPOnlinePresenceState
// NumValues: 0x0007
enum class EBPOnlinePresenceState : uint8
{
	Online                                   = 0,
	Offline                                  = 1,
	Away                                     = 2,
	ExtendedAway                             = 3,
	DoNotDisturb                             = 4,
	Chat                                     = 5,
	EBPOnlinePresenceState_MAX               = 6,
};

// Enum AdvancedSessions.EBPUserPrivileges
// NumValues: 0x0005
enum class EBPUserPrivileges : uint8
{
	CanPlay                                  = 0,
	CanPlayOnline                            = 1,
	CanCommunicateOnline                     = 2,
	CanUseUserGeneratedContent               = 3,
	EBPUserPrivileges_MAX                    = 4,
};

// Enum AdvancedSessions.EBPLoginStatus
// NumValues: 0x0004
enum class EBPLoginStatus : uint8
{
	NotLoggedIn                              = 0,
	UsingLocalProfile                        = 1,
	LoggedIn                                 = 2,
	EBPLoginStatus_MAX                       = 3,
};

// Enum AdvancedSessions.ESessionSettingSearchResult
// NumValues: 0x0004
enum class ESessionSettingSearchResult : uint8
{
	Found                                    = 0,
	NotFound                                 = 1,
	WrongType                                = 2,
	ESessionSettingSearchResult_MAX          = 3,
};

// Enum AdvancedSessions.EBlueprintResultSwitch
// NumValues: 0x0003
enum class EBlueprintResultSwitch : uint8
{
	OnSuccess                                = 0,
	OnFailure                                = 1,
	EBlueprintResultSwitch_MAX               = 2,
};

// Enum AdvancedSessions.EBlueprintAsyncResultSwitch
// NumValues: 0x0004
enum class EBlueprintAsyncResultSwitch : uint8
{
	OnSuccess                                = 0,
	AsyncLoading                             = 1,
	OnFailure                                = 2,
	EBlueprintAsyncResultSwitch_MAX          = 3,
};

// Enum AdvancedSessions.EBPServerPresenceSearchType
// NumValues: 0x0004
enum class EBPServerPresenceSearchType : uint8
{
	AllServers                               = 0,
	ClientServersOnly                        = 1,
	DedicatedServersOnly                     = 2,
	EBPServerPresenceSearchType_MAX          = 3,
};

// Enum AdvancedSessions.EBPOnlineSessionState
// NumValues: 0x0009
enum class EBPOnlineSessionState : uint8
{
	NoSession                                = 0,
	Creating                                 = 1,
	Pending                                  = 2,
	Starting                                 = 3,
	InProgress                               = 4,
	Ending                                   = 5,
	Ended                                    = 6,
	Destroying                               = 7,
	EBPOnlineSessionState_MAX                = 8,
};

// Enum AdvancedSessions.EOnlineComparisonOpRedux
// NumValues: 0x0007
enum class EOnlineComparisonOpRedux : uint8
{
	Equals                                   = 0,
	NotEquals                                = 1,
	GreaterThan                              = 2,
	GreaterThanEquals                        = 3,
	LessThan                                 = 4,
	LessThanEquals                           = 5,
	EOnlineComparisonOpRedux_MAX             = 6,
};

// ScriptStruct AdvancedSessions.SessionPropertyKeyPair
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FSessionPropertyKeyPair final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSessionPropertyKeyPair) == 0x000008, "Wrong alignment on FSessionPropertyKeyPair");
static_assert(sizeof(FSessionPropertyKeyPair) == 0x000028, "Wrong size on FSessionPropertyKeyPair");

// ScriptStruct AdvancedSessions.BPUniqueNetId
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FBPUniqueNetId final
{
public:
	uint8                                         Pad_0[0x20];                                       // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBPUniqueNetId) == 0x000008, "Wrong alignment on FBPUniqueNetId");
static_assert(sizeof(FBPUniqueNetId) == 0x000020, "Wrong size on FBPUniqueNetId");

// ScriptStruct AdvancedSessions.BPFriendPresenceInfo
// 0x0018 (0x0018 - 0x0000)
struct FBPFriendPresenceInfo final
{
public:
	bool                                          bIsOnline;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlaying;                                        // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingThisGame;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsJoinable;                                       // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasVoiceSupport;                                  // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBPOnlinePresenceState                        PresenceState;                                     // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatusString;                                      // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBPFriendPresenceInfo) == 0x000008, "Wrong alignment on FBPFriendPresenceInfo");
static_assert(sizeof(FBPFriendPresenceInfo) == 0x000018, "Wrong size on FBPFriendPresenceInfo");
static_assert(offsetof(FBPFriendPresenceInfo, bIsOnline) == 0x000000, "Member 'FBPFriendPresenceInfo::bIsOnline' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, bIsPlaying) == 0x000001, "Member 'FBPFriendPresenceInfo::bIsPlaying' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, bIsPlayingThisGame) == 0x000002, "Member 'FBPFriendPresenceInfo::bIsPlayingThisGame' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, bIsJoinable) == 0x000003, "Member 'FBPFriendPresenceInfo::bIsJoinable' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, bHasVoiceSupport) == 0x000004, "Member 'FBPFriendPresenceInfo::bHasVoiceSupport' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, PresenceState) == 0x000005, "Member 'FBPFriendPresenceInfo::PresenceState' has a wrong offset!");
static_assert(offsetof(FBPFriendPresenceInfo, StatusString) == 0x000008, "Member 'FBPFriendPresenceInfo::StatusString' has a wrong offset!");

// ScriptStruct AdvancedSessions.BPFriendInfo
// 0x0068 (0x0068 - 0x0000)
struct FBPFriendInfo final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RealName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBPOnlinePresenceState                        OnlineState;                                       // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0028(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bIsPlayingSameGame;                                // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPFriendPresenceInfo                  PresenceInfo;                                      // 0x0050(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBPFriendInfo) == 0x000008, "Wrong alignment on FBPFriendInfo");
static_assert(sizeof(FBPFriendInfo) == 0x000068, "Wrong size on FBPFriendInfo");
static_assert(offsetof(FBPFriendInfo, DisplayName) == 0x000000, "Member 'FBPFriendInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FBPFriendInfo, RealName) == 0x000010, "Member 'FBPFriendInfo::RealName' has a wrong offset!");
static_assert(offsetof(FBPFriendInfo, OnlineState) == 0x000020, "Member 'FBPFriendInfo::OnlineState' has a wrong offset!");
static_assert(offsetof(FBPFriendInfo, UniqueNetId) == 0x000028, "Member 'FBPFriendInfo::UniqueNetId' has a wrong offset!");
static_assert(offsetof(FBPFriendInfo, bIsPlayingSameGame) == 0x000048, "Member 'FBPFriendInfo::bIsPlayingSameGame' has a wrong offset!");
static_assert(offsetof(FBPFriendInfo, PresenceInfo) == 0x000050, "Member 'FBPFriendInfo::PresenceInfo' has a wrong offset!");

// ScriptStruct AdvancedSessions.SessionsSearchSetting
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FSessionsSearchSetting final
{
public:
	uint8                                         Pad_0[0x30];                                       // 0x0000(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSessionsSearchSetting) == 0x000008, "Wrong alignment on FSessionsSearchSetting");
static_assert(sizeof(FSessionsSearchSetting) == 0x000030, "Wrong size on FSessionsSearchSetting");

// ScriptStruct AdvancedSessions.BPUserOnlineAccount
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FBPUserOnlineAccount final
{
public:
	uint8                                         Pad_0[0x10];                                       // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBPUserOnlineAccount) == 0x000008, "Wrong alignment on FBPUserOnlineAccount");
static_assert(sizeof(FBPUserOnlineAccount) == 0x000010, "Wrong size on FBPUserOnlineAccount");

// ScriptStruct AdvancedSessions.BPOnlineUser
// 0x0040 (0x0040 - 0x0000)
struct FBPOnlineUser
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RealName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBPOnlineUser) == 0x000008, "Wrong alignment on FBPOnlineUser");
static_assert(sizeof(FBPOnlineUser) == 0x000040, "Wrong size on FBPOnlineUser");
static_assert(offsetof(FBPOnlineUser, UniqueNetId) == 0x000000, "Member 'FBPOnlineUser::UniqueNetId' has a wrong offset!");
static_assert(offsetof(FBPOnlineUser, DisplayName) == 0x000020, "Member 'FBPOnlineUser::DisplayName' has a wrong offset!");
static_assert(offsetof(FBPOnlineUser, RealName) == 0x000030, "Member 'FBPOnlineUser::RealName' has a wrong offset!");

// ScriptStruct AdvancedSessions.BPOnlineRecentPlayer
// 0x0010 (0x0050 - 0x0040)
struct FBPOnlineRecentPlayer final : public FBPOnlineUser
{
public:
	class FString                                 LastSeen;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FBPOnlineRecentPlayer) == 0x000008, "Wrong alignment on FBPOnlineRecentPlayer");
static_assert(sizeof(FBPOnlineRecentPlayer) == 0x000050, "Wrong size on FBPOnlineRecentPlayer");
static_assert(offsetof(FBPOnlineRecentPlayer, LastSeen) == 0x000040, "Member 'FBPOnlineRecentPlayer::LastSeen' has a wrong offset!");

}

