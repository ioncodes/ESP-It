#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_GameMessages

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "EGameMessageType_structs.hpp"
#include "SGameMessage_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WB_GameMessages.WB_GameMessages_C.AddGameMessage
// 0x0130 (0x0130 - 0x0000)
struct WB_GameMessages_C_AddGameMessage final
{
public:
	class FText                                   SourcePlayerName;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   TargetPlayerName;                                  // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	EGameMessageType                              MessageType;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AFB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_GameMessageEntry_C*                 CurrentMessageEntry;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSGameMessage                          K2Node_MakeStruct_SGameMessage;                    // 0x0048(0x0038)(HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6;                              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_12;                             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Get_MessageText_Text_0_ReturnValue;       // 0x00E8(0x0018)()
	class UWB_GameMessageEntry_C*                 CallFunc_Create_ReturnValue;                       // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EGameMessageType                              Temp_byte_Variable;                                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AFC[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_AddGameMessage) == 0x000008, "Wrong alignment on WB_GameMessages_C_AddGameMessage");
static_assert(sizeof(WB_GameMessages_C_AddGameMessage) == 0x000130, "Wrong size on WB_GameMessages_C_AddGameMessage");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, SourcePlayerName) == 0x000000, "Member 'WB_GameMessages_C_AddGameMessage::SourcePlayerName' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, TargetPlayerName) == 0x000018, "Member 'WB_GameMessages_C_AddGameMessage::TargetPlayerName' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, MessageType) == 0x000030, "Member 'WB_GameMessages_C_AddGameMessage::MessageType' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CurrentMessageEntry) == 0x000038, "Member 'WB_GameMessages_C_AddGameMessage::CurrentMessageEntry' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable) == 0x000040, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, K2Node_MakeStruct_SGameMessage) == 0x000048, "Member 'WB_GameMessages_C_AddGameMessage::K2Node_MakeStruct_SGameMessage' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_1) == 0x000080, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_2) == 0x000088, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_3) == 0x000090, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_4) == 0x000098, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_5) == 0x0000A0, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_6) == 0x0000A8, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_7) == 0x0000B0, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_8) == 0x0000B8, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_9) == 0x0000C0, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_10) == 0x0000C8, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_11) == 0x0000D0, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_12) == 0x0000D8, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_real_Variable_13) == 0x0000E0, "Member 'WB_GameMessages_C_AddGameMessage::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_Get_MessageText_Text_0_ReturnValue) == 0x0000E8, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_Get_MessageText_Text_0_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_Create_ReturnValue) == 0x000100, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, Temp_byte_Variable) == 0x000108, "Member 'WB_GameMessages_C_AddGameMessage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, K2Node_Select_Default) == 0x000110, "Member 'WB_GameMessages_C_AddGameMessage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_AddChild_ReturnValue) == 0x000118, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_PlayAnimation_ReturnValue) == 0x000120, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_AddGameMessage, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x00012C, "Member 'WB_GameMessages_C_AddGameMessage::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WB_GameMessages.WB_GameMessages_C.ClampGameMessage
// 0x0010 (0x0010 - 0x0000)
struct WB_GameMessages_C_ClampGameMessage final
{
public:
	class UWB_GameMessageEntry_C*                 CallFunc_Array_Get_Item;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_ClampGameMessage) == 0x000008, "Wrong alignment on WB_GameMessages_C_ClampGameMessage");
static_assert(sizeof(WB_GameMessages_C_ClampGameMessage) == 0x000010, "Wrong size on WB_GameMessages_C_ClampGameMessage");
static_assert(offsetof(WB_GameMessages_C_ClampGameMessage, CallFunc_Array_Get_Item) == 0x000000, "Member 'WB_GameMessages_C_ClampGameMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClampGameMessage, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WB_GameMessages_C_ClampGameMessage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClampGameMessage, CallFunc_Array_RemoveItem_ReturnValue) == 0x00000C, "Member 'WB_GameMessages_C_ClampGameMessage::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClampGameMessage, CallFunc_Greater_IntInt_ReturnValue) == 0x00000D, "Member 'WB_GameMessages_C_ClampGameMessage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WB_GameMessages.WB_GameMessages_C.ClearGameMessages
// 0x0020 (0x0020 - 0x0000)
struct WB_GameMessages_C_ClearGameMessages final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWB_GameMessageEntry_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_ClearGameMessages) == 0x000008, "Wrong alignment on WB_GameMessages_C_ClearGameMessages");
static_assert(sizeof(WB_GameMessages_C_ClearGameMessages) == 0x000020, "Wrong size on WB_GameMessages_C_ClearGameMessages");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WB_GameMessages_C_ClearGameMessages::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WB_GameMessages_C_ClearGameMessages::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WB_GameMessages_C_ClearGameMessages::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WB_GameMessages_C_ClearGameMessages::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, CallFunc_Array_Get_Item) == 0x000010, "Member 'WB_GameMessages_C_ClearGameMessages::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WB_GameMessages_C_ClearGameMessages::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ClearGameMessages, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WB_GameMessages_C_ClearGameMessages::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WB_GameMessages.WB_GameMessages_C.ExecuteUbergraph_WB_GameMessages
// 0x0040 (0x0040 - 0x0000)
struct WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages) == 0x000004, "Wrong alignment on WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages");
static_assert(sizeof(WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages) == 0x000040, "Wrong size on WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages");
static_assert(offsetof(WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages, EntryPoint) == 0x000000, "Member 'WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages, K2Node_Event_MyGeometry) == 0x000004, "Member 'WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WB_GameMessages_C_ExecuteUbergraph_WB_GameMessages::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WB_GameMessages.WB_GameMessages_C.Get_VerticalBox_1_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct WB_GameMessages_C_Get_VerticalBox_1_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AFD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0) == 0x000008, "Wrong alignment on WB_GameMessages_C_Get_VerticalBox_1_Visibility_0");
static_assert(sizeof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0) == 0x000020, "Wrong size on WB_GameMessages_C_Get_VerticalBox_1_Visibility_0");
static_assert(offsetof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0, ReturnValue) == 0x000000, "Member 'WB_GameMessages_C_Get_VerticalBox_1_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WB_GameMessages_C_Get_VerticalBox_1_Visibility_0::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'WB_GameMessages_C_Get_VerticalBox_1_Visibility_0::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WB_GameMessages_C_Get_VerticalBox_1_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_Get_VerticalBox_1_Visibility_0, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x000019, "Member 'WB_GameMessages_C_Get_VerticalBox_1_Visibility_0::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");

// Function WB_GameMessages.WB_GameMessages_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_GameMessages_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_GameMessages_C_Tick) == 0x000004, "Wrong alignment on WB_GameMessages_C_Tick");
static_assert(sizeof(WB_GameMessages_C_Tick) == 0x00003C, "Wrong size on WB_GameMessages_C_Tick");
static_assert(offsetof(WB_GameMessages_C_Tick, MyGeometry) == 0x000000, "Member 'WB_GameMessages_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_GameMessages_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_GameMessages_C_Tick::InDeltaTime' has a wrong offset!");

}

