#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AB_NewWitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AB_NewWitch_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AB_NewWitch.AB_NewWitch_C
// 0x11D0 (0x1540 - 0x0370)
class UAB_NewWitch_C final : public UAnimInstance
{
public:
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct AB_NewWitch::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0378(0x000C)(HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	uint8                                         Pad_398[0x8];                                      // 0x0398(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x03A0(0x0970)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0D10(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0D58(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0DA0(0x00F0)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0E90(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0EB0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x0ED0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x0EF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0F20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0F48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0F70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0F98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0FC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0FE8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1010(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1058(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1078(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x10C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x10E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1128(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1148(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1190(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x11B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x11D8(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1200(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1270(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1290(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1300(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1320(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x13E8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1408(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x14D0(0x0020)()
	bool                                          bIsInAir;                                          // 0x14F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWalking;                                         // 0x14F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14F2[0x6];                                     // 0x14F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed;                                             // 0x14F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZSpeed;                                            // 0x1500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFlying;                                          // 0x1508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouching;                                       // 0x1509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150A[0x6];                                     // 0x150A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentVelocity;                                   // 0x1510(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CurrentCharacter;                                  // 0x1528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FallingTime;                                       // 0x1530(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_NewWitch_AnimGraphNode_TransitionResult_03560EB44770E82E2BD1C6A1378CEB25();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_NewWitch_AnimGraphNode_TransitionResult_3D77D2B543CBFD7BBB97FDBA2B618A30();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_NewWitch_AnimGraphNode_TransitionResult_89E84F2147191F251E0BD3B50D08DCF8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AB_NewWitch_AnimGraphNode_TransitionResult_DC56C3C74F7160B955C0FC8351545CCA();
	void ExecuteUbergraph_AB_NewWitch(int32 EntryPoint);
	void GetVelocity(struct FVector* Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AB_NewWitch_C">();
	}
	static class UAB_NewWitch_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAB_NewWitch_C>();
	}
};
static_assert(alignof(UAB_NewWitch_C) == 0x000010, "Wrong alignment on UAB_NewWitch_C");
static_assert(sizeof(UAB_NewWitch_C) == 0x001540, "Wrong size on UAB_NewWitch_C");
static_assert(offsetof(UAB_NewWitch_C, UberGraphFrame) == 0x000370, "Member 'UAB_NewWitch_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, __AnimBlueprintMutables) == 0x000378, "Member 'UAB_NewWitch_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UAB_NewWitch_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UAB_NewWitch_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_RigidBody) == 0x0003A0, "Member 'UAB_NewWitch_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_Slot) == 0x000D10, "Member 'UAB_NewWitch_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_SequencePlayer_4) == 0x000D58, "Member 'UAB_NewWitch_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_LayeredBoneBlend) == 0x000DA0, "Member 'UAB_NewWitch_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_ComponentToLocalSpace) == 0x000E90, "Member 'UAB_NewWitch_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_LocalToComponentSpace) == 0x000EB0, "Member 'UAB_NewWitch_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_9) == 0x000ED0, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_8) == 0x000EF8, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_7) == 0x000F20, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_6) == 0x000F48, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_5) == 0x000F70, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_4) == 0x000F98, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_3) == 0x000FC0, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_2) == 0x000FE8, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_SequencePlayer_3) == 0x001010, "Member 'UAB_NewWitch_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_6) == 0x001058, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_SequencePlayer_2) == 0x001078, "Member 'UAB_NewWitch_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_5) == 0x0010C0, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_SequencePlayer_1) == 0x0010E0, "Member 'UAB_NewWitch_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_4) == 0x001128, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_SequencePlayer) == 0x001148, "Member 'UAB_NewWitch_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_3) == 0x001190, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult_1) == 0x0011B0, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_TransitionResult) == 0x0011D8, "Member 'UAB_NewWitch_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001200, "Member 'UAB_NewWitch_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_2) == 0x001270, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_BlendSpacePlayer) == 0x001290, "Member 'UAB_NewWitch_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult_1) == 0x001300, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateMachine_1) == 0x001320, "Member 'UAB_NewWitch_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateResult) == 0x0013E8, "Member 'UAB_NewWitch_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_StateMachine) == 0x001408, "Member 'UAB_NewWitch_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, AnimGraphNode_Root) == 0x0014D0, "Member 'UAB_NewWitch_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, bIsInAir) == 0x0014F0, "Member 'UAB_NewWitch_C::bIsInAir' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, IsWalking) == 0x0014F1, "Member 'UAB_NewWitch_C::IsWalking' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, Speed) == 0x0014F8, "Member 'UAB_NewWitch_C::Speed' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, ZSpeed) == 0x001500, "Member 'UAB_NewWitch_C::ZSpeed' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, IsFlying) == 0x001508, "Member 'UAB_NewWitch_C::IsFlying' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, IsCrouching) == 0x001509, "Member 'UAB_NewWitch_C::IsCrouching' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, CurrentVelocity) == 0x001510, "Member 'UAB_NewWitch_C::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, CurrentCharacter) == 0x001528, "Member 'UAB_NewWitch_C::CurrentCharacter' has a wrong offset!");
static_assert(offsetof(UAB_NewWitch_C, FallingTime) == 0x001530, "Member 'UAB_NewWitch_C::FallingTime' has a wrong offset!");

}

