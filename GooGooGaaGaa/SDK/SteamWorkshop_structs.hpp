#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamWorkshop

#include "Basic.hpp"

#include "SteamGeneral_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum SteamWorkshop.ESteamItemVisibility
// NumValues: 0x0004
enum class ESteamItemVisibility : uint8
{
	SIV_Public                               = 0,
	SIV_FriendsOnly                          = 1,
	SIV_Private                              = 2,
	SIV_MAX                                  = 3,
};

// Enum SteamWorkshop.EVoteType
// NumValues: 0x0004
enum class EVoteType : uint8
{
	VT_Skipped                               = 0,
	VT_Up                                    = 1,
	VT_Down                                  = 2,
	VT_MAX                                   = 3,
};

// Enum SteamWorkshop.EItemPreviewTypeBP
// NumValues: 0x0007
enum class EItemPreviewTypeBP : uint8
{
	PT_Image                                 = 0,
	PT_YouTubeVideo                          = 1,
	PT_Sketchfab                             = 2,
	PT_EnvironmentMap_HorizontalCross        = 3,
	PT_EnvironmentMap_LatLong                = 4,
	PT_ReservedMax                           = 255,
	PT_MAX                                   = 256,
};

// Enum SteamWorkshop.EWorkshopFileTypeBP
// NumValues: 0x0012
enum class EWorkshopFileTypeBP : uint8
{
	WFT_First                                = 0,
	WFT_Community                            = 0,
	WFT_Microtransaction                     = 1,
	WFT_Collection                           = 2,
	WFT_Art                                  = 3,
	WFT_Video                                = 4,
	WFT_Screenshot                           = 5,
	WFT_Game                                 = 6,
	WFT_Software                             = 7,
	WFT_Concept                              = 8,
	WFT_WebGuide                             = 9,
	WFT_IntegratedGuide                      = 10,
	WFT_Merch                                = 11,
	WFT_ControllerBinding                    = 12,
	WFT_SteamworksAccessInvite               = 13,
	WFT_SteamVideo                           = 14,
	WFT_GameManagedItem                      = 15,
	WFT_Max                                  = 16,
};

// Enum SteamWorkshop.EUGCMatchingUGCTypeBP
// NumValues: 0x000F
enum class EUGCMatchingUGCTypeBP : uint8
{
	T_Items                                  = 0,
	T_Items_Mtx                              = 1,
	T_Items_ReadyToUse                       = 2,
	T_Collections                            = 3,
	T_Artwork                                = 4,
	T_Videos                                 = 5,
	T_Screenshots                            = 6,
	T_AllGuides                              = 7,
	T_WebGuides                              = 8,
	T_IntegratedGuides                       = 9,
	T_UsableInGame                           = 10,
	T_ControllerBindings                     = 11,
	T_GameManagedItems                       = 12,
	T_All                                    = 255,
	T_MAX                                    = 256,
};

// Enum SteamWorkshop.EUGCQueryBP
// NumValues: 0x0014
enum class EUGCQueryBP : uint8
{
	UQ_RankedByVote                          = 0,
	UQ_RankedByPublicationDate               = 1,
	UQ_AcceptedForGameRankedByAcceptanceDate = 2,
	UQ_RankedByTrend                         = 3,
	UQ_FavoritedByFriendsRankedByPublicationDate = 4,
	UQ_CreatedByFriendsRankedByPublicationDate = 5,
	UQ_RankedByNumTimesReported              = 6,
	UQ_CreatedByFollowedUsersRankedByPublicationDate = 7,
	UQ_NotYetRated                           = 8,
	UQ_RankedByTotalVotesAsc                 = 9,
	UQ_RankedByVotesUp                       = 10,
	UQ_RankedByTextSearch                    = 11,
	UQ_RankedByTotalUniqueSubscriptions      = 12,
	UQ_RankedByPlaytimeTrend                 = 13,
	UQ_RankedByTotalPlaytime                 = 14,
	UQ_RankedByAveragePlaytimeTrend          = 15,
	UQ_RankedByLifetimeAveragePlaytime       = 16,
	UQ_RankedByPlaytimeSessionsTrend         = 17,
	UQ_RankedByLifetimePlaytimeSessions      = 18,
	UQ_MAX                                   = 19,
};

// Enum SteamWorkshop.EUserUGCListSortOrderBP
// NumValues: 0x0008
enum class EUserUGCListSortOrderBP : uint8
{
	SO_CreationOrderDesc                     = 0,
	SO_CreationOrderAsc                      = 1,
	SO_TitleAsc                              = 2,
	SO_LastUpdatedDesc                       = 3,
	SO_SubscriptionDateDesc                  = 4,
	SO_VoteScoreDesc                         = 5,
	SO_ForModeration                         = 6,
	SO_MAX                                   = 7,
};

// Enum SteamWorkshop.EUserUGCListBP
// NumValues: 0x000A
enum class EUserUGCListBP : uint8
{
	L_Published                              = 0,
	L_VotedOn                                = 1,
	L_VotedUp                                = 2,
	L_VotedDown                              = 3,
	L_WillVoteLater                          = 4,
	L_Favorited                              = 5,
	L_Subscribed                             = 6,
	L_UsedOrPlayed                           = 7,
	L_Followed                               = 8,
	L_MAX                                    = 9,
};

// Enum SteamWorkshop.EItemStateBP
// NumValues: 0x0008
enum class EItemStateBP : uint8
{
	IS_None                                  = 0,
	IS_Subscribed                            = 1,
	IS_LegacyItem                            = 2,
	IS_Installed                             = 4,
	IS_NeedsUpdate                           = 8,
	IS_Downloading                           = 16,
	IS_DownloadPending                       = 32,
	IS_MAX                                   = 33,
};

// Enum SteamWorkshop.EItemUpdateStatusBP
// NumValues: 0x0007
enum class EItemUpdateStatusBP : uint8
{
	US_Invalid                               = 0,
	US_PreparingConfig                       = 1,
	US_PreparingContent                      = 2,
	US_UploadingContent                      = 3,
	US_UploadingPreviewFile                  = 4,
	US_CommittingChanges                     = 5,
	US_MAX                                   = 6,
};

// Enum SteamWorkshop.EItemStatisticBP
// NumValues: 0x000E
enum class EItemStatisticBP : uint8
{
	IStat_NumSubscriptions                   = 0,
	IStat_NumFavorites                       = 1,
	IStat_NumFollowers                       = 2,
	IStat_NumUniqueSubscriptions             = 3,
	IStat_NumUniqueFavorites                 = 4,
	IStat_NumUniqueFollowers                 = 5,
	IStat_NumUniqueWebsiteViews              = 6,
	IStat_ReportScore                        = 7,
	IStat_NumSecondsPlayed                   = 8,
	IStat_NumPlaytimeSessions                = 9,
	IStat_NumComments                        = 10,
	IStat_NumSecondsPlayedDuringTimePeriod   = 11,
	IStat_NumPlaytimeSessionsDuringTimePeriod = 12,
	IStat_MAX                                = 13,
};

// ScriptStruct SteamWorkshop.SteamResult
// 0x0001 (0x0001 - 0x0000)
struct FSteamResult
{
public:
	EResultBP                                     Result;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamResult) == 0x000001, "Wrong alignment on FSteamResult");
static_assert(sizeof(FSteamResult) == 0x000001, "Wrong size on FSteamResult");
static_assert(offsetof(FSteamResult, Result) == 0x000000, "Member 'FSteamResult::Result' has a wrong offset!");

// ScriptStruct SteamWorkshop.GeneralWorkshopItemResult
// 0x000F (0x0010 - 0x0001)
struct FGeneralWorkshopItemResult : public FSteamResult
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamUGCItemId                        WorkshopItemID;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGeneralWorkshopItemResult) == 0x000008, "Wrong alignment on FGeneralWorkshopItemResult");
static_assert(sizeof(FGeneralWorkshopItemResult) == 0x000010, "Wrong size on FGeneralWorkshopItemResult");
static_assert(offsetof(FGeneralWorkshopItemResult, WorkshopItemID) == 0x000008, "Member 'FGeneralWorkshopItemResult::WorkshopItemID' has a wrong offset!");

// ScriptStruct SteamWorkshop.UserFavoriteItemChangedResult
// 0x0008 (0x0018 - 0x0010)
struct FUserFavoriteItemChangedResult final : public FGeneralWorkshopItemResult
{
public:
	bool                                          bWasAddRequest;                                    // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUserFavoriteItemChangedResult) == 0x000008, "Wrong alignment on FUserFavoriteItemChangedResult");
static_assert(sizeof(FUserFavoriteItemChangedResult) == 0x000018, "Wrong size on FUserFavoriteItemChangedResult");
static_assert(offsetof(FUserFavoriteItemChangedResult, bWasAddRequest) == 0x000010, "Member 'FUserFavoriteItemChangedResult::bWasAddRequest' has a wrong offset!");

// ScriptStruct SteamWorkshop.UpdateWorkshopItemResult
// 0x0008 (0x0018 - 0x0010)
struct FUpdateWorkshopItemResult : public FGeneralWorkshopItemResult
{
public:
	bool                                          bUserNeedsToAcceptWorkshopLegalAgreement;          // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FUpdateWorkshopItemResult) == 0x000008, "Wrong alignment on FUpdateWorkshopItemResult");
static_assert(sizeof(FUpdateWorkshopItemResult) == 0x000018, "Wrong size on FUpdateWorkshopItemResult");
static_assert(offsetof(FUpdateWorkshopItemResult, bUserNeedsToAcceptWorkshopLegalAgreement) == 0x000010, "Member 'FUpdateWorkshopItemResult::bUserNeedsToAcceptWorkshopLegalAgreement' has a wrong offset!");

// ScriptStruct SteamWorkshop.WorkshopItemDownloadInfo
// 0x0020 (0x0020 - 0x0000)
struct FWorkshopItemDownloadInfo
{
public:
	struct FUInt64                                bytesCurrent;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FUInt64                                bytesTotal;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         MegaBytesCurrent;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MegaBytesTotal;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PercentageFinished;                                // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWorkshopItemDownloadInfo) == 0x000008, "Wrong alignment on FWorkshopItemDownloadInfo");
static_assert(sizeof(FWorkshopItemDownloadInfo) == 0x000020, "Wrong size on FWorkshopItemDownloadInfo");
static_assert(offsetof(FWorkshopItemDownloadInfo, bytesCurrent) == 0x000000, "Member 'FWorkshopItemDownloadInfo::bytesCurrent' has a wrong offset!");
static_assert(offsetof(FWorkshopItemDownloadInfo, bytesTotal) == 0x000008, "Member 'FWorkshopItemDownloadInfo::bytesTotal' has a wrong offset!");
static_assert(offsetof(FWorkshopItemDownloadInfo, MegaBytesCurrent) == 0x000010, "Member 'FWorkshopItemDownloadInfo::MegaBytesCurrent' has a wrong offset!");
static_assert(offsetof(FWorkshopItemDownloadInfo, MegaBytesTotal) == 0x000014, "Member 'FWorkshopItemDownloadInfo::MegaBytesTotal' has a wrong offset!");
static_assert(offsetof(FWorkshopItemDownloadInfo, PercentageFinished) == 0x000018, "Member 'FWorkshopItemDownloadInfo::PercentageFinished' has a wrong offset!");

// ScriptStruct SteamWorkshop.WorkshopItemUpdateInfo
// 0x0008 (0x0028 - 0x0020)
struct FWorkshopItemUpdateInfo final : public FWorkshopItemDownloadInfo
{
public:
	EItemUpdateStatusBP                           Status;                                            // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWorkshopItemUpdateInfo) == 0x000008, "Wrong alignment on FWorkshopItemUpdateInfo");
static_assert(sizeof(FWorkshopItemUpdateInfo) == 0x000028, "Wrong size on FWorkshopItemUpdateInfo");
static_assert(offsetof(FWorkshopItemUpdateInfo, Status) == 0x000020, "Member 'FWorkshopItemUpdateInfo::Status' has a wrong offset!");

// ScriptStruct SteamWorkshop.DownloadItemResult
// 0x0008 (0x0018 - 0x0010)
struct FDownloadItemResult : public FGeneralWorkshopItemResult
{
public:
	struct FUInt32                                AppId;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDownloadItemResult) == 0x000008, "Wrong alignment on FDownloadItemResult");
static_assert(sizeof(FDownloadItemResult) == 0x000018, "Wrong size on FDownloadItemResult");
static_assert(offsetof(FDownloadItemResult, AppId) == 0x000010, "Member 'FDownloadItemResult::AppId' has a wrong offset!");

// ScriptStruct SteamWorkshop.AddRemoveAppDependencyResult
// 0x0008 (0x0020 - 0x0018)
struct FAddRemoveAppDependencyResult final : public FDownloadItemResult
{
public:
	bool                                          bAddDependency;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAddRemoveAppDependencyResult) == 0x000008, "Wrong alignment on FAddRemoveAppDependencyResult");
static_assert(sizeof(FAddRemoveAppDependencyResult) == 0x000020, "Wrong size on FAddRemoveAppDependencyResult");
static_assert(offsetof(FAddRemoveAppDependencyResult, bAddDependency) == 0x000018, "Member 'FAddRemoveAppDependencyResult::bAddDependency' has a wrong offset!");

// ScriptStruct SteamWorkshop.AddRemoveItemDependencyResult
// 0x0010 (0x0020 - 0x0010)
struct FAddRemoveItemDependencyResult final : public FGeneralWorkshopItemResult
{
public:
	struct FSteamUGCItemId                        DependendItemId;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bAddDependency;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAddRemoveItemDependencyResult) == 0x000008, "Wrong alignment on FAddRemoveItemDependencyResult");
static_assert(sizeof(FAddRemoveItemDependencyResult) == 0x000020, "Wrong size on FAddRemoveItemDependencyResult");
static_assert(offsetof(FAddRemoveItemDependencyResult, DependendItemId) == 0x000010, "Member 'FAddRemoveItemDependencyResult::DependendItemId' has a wrong offset!");
static_assert(offsetof(FAddRemoveItemDependencyResult, bAddDependency) == 0x000018, "Member 'FAddRemoveItemDependencyResult::bAddDependency' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamWorkshopUpdateDetails
// 0x00D0 (0x00D0 - 0x0000)
struct FSteamWorkshopUpdateDetails final
{
public:
	class FString                                 Title;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UpdateNotice;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamSupportedLanguages                      UpdateLanguage;                                    // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MetaData;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamItemVisibility                          Visibility;                                        // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Tags;                                              // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSteamKeyValuePair>             KeyValueTags;                                      // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                 ContentDirectory;                                  // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreviewImage;                                      // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AdditionalImages;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                         YoutubeVideoIDs;                                   // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                         KeysOfKeyValueTagsToRemove;                        // 0x00B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                 IndexOfPreviewToRemove;                            // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamWorkshopUpdateDetails) == 0x000008, "Wrong alignment on FSteamWorkshopUpdateDetails");
static_assert(sizeof(FSteamWorkshopUpdateDetails) == 0x0000D0, "Wrong size on FSteamWorkshopUpdateDetails");
static_assert(offsetof(FSteamWorkshopUpdateDetails, Title) == 0x000000, "Member 'FSteamWorkshopUpdateDetails::Title' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, Description) == 0x000010, "Member 'FSteamWorkshopUpdateDetails::Description' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, UpdateNotice) == 0x000020, "Member 'FSteamWorkshopUpdateDetails::UpdateNotice' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, UpdateLanguage) == 0x000030, "Member 'FSteamWorkshopUpdateDetails::UpdateLanguage' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, MetaData) == 0x000038, "Member 'FSteamWorkshopUpdateDetails::MetaData' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, Visibility) == 0x000048, "Member 'FSteamWorkshopUpdateDetails::Visibility' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, Tags) == 0x000050, "Member 'FSteamWorkshopUpdateDetails::Tags' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, KeyValueTags) == 0x000060, "Member 'FSteamWorkshopUpdateDetails::KeyValueTags' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, ContentDirectory) == 0x000070, "Member 'FSteamWorkshopUpdateDetails::ContentDirectory' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, PreviewImage) == 0x000080, "Member 'FSteamWorkshopUpdateDetails::PreviewImage' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, AdditionalImages) == 0x000090, "Member 'FSteamWorkshopUpdateDetails::AdditionalImages' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, YoutubeVideoIDs) == 0x0000A0, "Member 'FSteamWorkshopUpdateDetails::YoutubeVideoIDs' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, KeysOfKeyValueTagsToRemove) == 0x0000B0, "Member 'FSteamWorkshopUpdateDetails::KeysOfKeyValueTagsToRemove' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopUpdateDetails, IndexOfPreviewToRemove) == 0x0000C0, "Member 'FSteamWorkshopUpdateDetails::IndexOfPreviewToRemove' has a wrong offset!");

// ScriptStruct SteamWorkshop.CreateWorkshopItemResult
// 0x00D0 (0x00E8 - 0x0018)
struct FCreateWorkshopItemResult final : public FUpdateWorkshopItemResult
{
public:
	struct FSteamWorkshopUpdateDetails            ItemDetails;                                       // 0x0018(0x00D0)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCreateWorkshopItemResult) == 0x000008, "Wrong alignment on FCreateWorkshopItemResult");
static_assert(sizeof(FCreateWorkshopItemResult) == 0x0000E8, "Wrong size on FCreateWorkshopItemResult");
static_assert(offsetof(FCreateWorkshopItemResult, ItemDetails) == 0x000018, "Member 'FCreateWorkshopItemResult::ItemDetails' has a wrong offset!");

// ScriptStruct SteamWorkshop.GetUserVoteOnWorkshopItemResult
// 0x0008 (0x0018 - 0x0010)
struct FGetUserVoteOnWorkshopItemResult final : public FGeneralWorkshopItemResult
{
public:
	EVoteType                                     UserVoteType;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGetUserVoteOnWorkshopItemResult) == 0x000008, "Wrong alignment on FGetUserVoteOnWorkshopItemResult");
static_assert(sizeof(FGetUserVoteOnWorkshopItemResult) == 0x000018, "Wrong size on FGetUserVoteOnWorkshopItemResult");
static_assert(offsetof(FGetUserVoteOnWorkshopItemResult, UserVoteType) == 0x000010, "Member 'FGetUserVoteOnWorkshopItemResult::UserVoteType' has a wrong offset!");

// ScriptStruct SteamWorkshop.GetAppdependencyResult
// 0x0018 (0x0028 - 0x0010)
struct FGetAppdependencyResult final : public FGeneralWorkshopItemResult
{
public:
	TArray<struct FSteamAppId>                    DependencyApps;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	bool                                          bAllAppDependenciesReturned;                       // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGetAppdependencyResult) == 0x000008, "Wrong alignment on FGetAppdependencyResult");
static_assert(sizeof(FGetAppdependencyResult) == 0x000028, "Wrong size on FGetAppdependencyResult");
static_assert(offsetof(FGetAppdependencyResult, DependencyApps) == 0x000010, "Member 'FGetAppdependencyResult::DependencyApps' has a wrong offset!");
static_assert(offsetof(FGetAppdependencyResult, bAllAppDependenciesReturned) == 0x000020, "Member 'FGetAppdependencyResult::bAllAppDependenciesReturned' has a wrong offset!");

// ScriptStruct SteamWorkshop.ItemPreviewDetails
// 0x0028 (0x0028 - 0x0000)
struct FItemPreviewDetails final
{
public:
	class FString                                 UrlOrVideoId;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OriginalFileName;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EItemPreviewTypeBP                            ItemType;                                          // 0x0020(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FItemPreviewDetails) == 0x000008, "Wrong alignment on FItemPreviewDetails");
static_assert(sizeof(FItemPreviewDetails) == 0x000028, "Wrong size on FItemPreviewDetails");
static_assert(offsetof(FItemPreviewDetails, UrlOrVideoId) == 0x000000, "Member 'FItemPreviewDetails::UrlOrVideoId' has a wrong offset!");
static_assert(offsetof(FItemPreviewDetails, OriginalFileName) == 0x000010, "Member 'FItemPreviewDetails::OriginalFileName' has a wrong offset!");
static_assert(offsetof(FItemPreviewDetails, ItemType) == 0x000020, "Member 'FItemPreviewDetails::ItemType' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamWorkshopItemDetails
// 0x0110 (0x0110 - 0x0000)
struct FSteamWorkshopItemDetails final
{
public:
	EResultBP                                     Result;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamUGCItemId                        WorkshopItemID;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	EWorkshopFileTypeBP                           FileType;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamAppId                            AppIdCreatingApp;                                  // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamAppId                            AppIdUsingApp;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Title;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUInt64                                UserIdItemCreator;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FDateTime                              TimeStampCreated;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              TimeStampUpdated;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              TimeStampAddedToUserList;                          // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamItemVisibility                          Visibility;                                        // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bItemIsBanned;                                     // 0x0061(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bItemWasAcceptedByDevelopers;                      // 0x0062(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTagsTruncated;                                    // 0x0063(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         Tags;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	struct FSteamUGCHandle                        PrimaryFileHandle;                                 // 0x0078(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FSteamUGCHandle                        PreviewImageHandle;                                // 0x0080(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 PrimaryFileCloudFilename;                          // 0x0088(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PrimaryFileSize;                                   // 0x0098(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewImageSize;                                  // 0x009C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 WebsiteURL;                                        // 0x00A0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VotesUp;                                           // 0x00B0(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         VotesDown;                                         // 0x00B4(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Score;                                             // 0x00B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUInt32                                NumChildren;                                       // 0x00BC(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 PreviewUrl;                                        // 0x00C0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemPreviewDetails>            AdditionalPreviews;                                // 0x00D0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSteamUGCItemId>                ChildItemIds;                                      // 0x00E0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSteamKeyValuePair>             KeyValueTags;                                      // 0x00F0(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	class FString                                 MetaData;                                          // 0x0100(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamWorkshopItemDetails) == 0x000008, "Wrong alignment on FSteamWorkshopItemDetails");
static_assert(sizeof(FSteamWorkshopItemDetails) == 0x000110, "Wrong size on FSteamWorkshopItemDetails");
static_assert(offsetof(FSteamWorkshopItemDetails, Result) == 0x000000, "Member 'FSteamWorkshopItemDetails::Result' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, WorkshopItemID) == 0x000008, "Member 'FSteamWorkshopItemDetails::WorkshopItemID' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, FileType) == 0x000010, "Member 'FSteamWorkshopItemDetails::FileType' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, AppIdCreatingApp) == 0x000014, "Member 'FSteamWorkshopItemDetails::AppIdCreatingApp' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, AppIdUsingApp) == 0x000018, "Member 'FSteamWorkshopItemDetails::AppIdUsingApp' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, Title) == 0x000020, "Member 'FSteamWorkshopItemDetails::Title' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, Description) == 0x000030, "Member 'FSteamWorkshopItemDetails::Description' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, UserIdItemCreator) == 0x000040, "Member 'FSteamWorkshopItemDetails::UserIdItemCreator' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, TimeStampCreated) == 0x000048, "Member 'FSteamWorkshopItemDetails::TimeStampCreated' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, TimeStampUpdated) == 0x000050, "Member 'FSteamWorkshopItemDetails::TimeStampUpdated' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, TimeStampAddedToUserList) == 0x000058, "Member 'FSteamWorkshopItemDetails::TimeStampAddedToUserList' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, Visibility) == 0x000060, "Member 'FSteamWorkshopItemDetails::Visibility' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, bItemIsBanned) == 0x000061, "Member 'FSteamWorkshopItemDetails::bItemIsBanned' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, bItemWasAcceptedByDevelopers) == 0x000062, "Member 'FSteamWorkshopItemDetails::bItemWasAcceptedByDevelopers' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, bTagsTruncated) == 0x000063, "Member 'FSteamWorkshopItemDetails::bTagsTruncated' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, Tags) == 0x000068, "Member 'FSteamWorkshopItemDetails::Tags' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PrimaryFileHandle) == 0x000078, "Member 'FSteamWorkshopItemDetails::PrimaryFileHandle' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PreviewImageHandle) == 0x000080, "Member 'FSteamWorkshopItemDetails::PreviewImageHandle' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PrimaryFileCloudFilename) == 0x000088, "Member 'FSteamWorkshopItemDetails::PrimaryFileCloudFilename' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PrimaryFileSize) == 0x000098, "Member 'FSteamWorkshopItemDetails::PrimaryFileSize' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PreviewImageSize) == 0x00009C, "Member 'FSteamWorkshopItemDetails::PreviewImageSize' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, WebsiteURL) == 0x0000A0, "Member 'FSteamWorkshopItemDetails::WebsiteURL' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, VotesUp) == 0x0000B0, "Member 'FSteamWorkshopItemDetails::VotesUp' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, VotesDown) == 0x0000B4, "Member 'FSteamWorkshopItemDetails::VotesDown' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, Score) == 0x0000B8, "Member 'FSteamWorkshopItemDetails::Score' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, NumChildren) == 0x0000BC, "Member 'FSteamWorkshopItemDetails::NumChildren' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, PreviewUrl) == 0x0000C0, "Member 'FSteamWorkshopItemDetails::PreviewUrl' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, AdditionalPreviews) == 0x0000D0, "Member 'FSteamWorkshopItemDetails::AdditionalPreviews' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, ChildItemIds) == 0x0000E0, "Member 'FSteamWorkshopItemDetails::ChildItemIds' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, KeyValueTags) == 0x0000F0, "Member 'FSteamWorkshopItemDetails::KeyValueTags' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemDetails, MetaData) == 0x000100, "Member 'FSteamWorkshopItemDetails::MetaData' has a wrong offset!");

// ScriptStruct SteamWorkshop.QueryWorkshopForItemsResult
// 0x002F (0x0030 - 0x0001)
struct FQueryWorkshopForItemsResult : public FSteamResult
{
public:
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamUGCQueryHandle                   QueryHandle;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FUInt32                                NumResultsReturned;                                // 0x0010(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	struct FUInt32                                NumMatchingResults;                                // 0x0014(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bHasMorePages;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRetrievedDataWasCached;                           // 0x0019(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamWorkshopItemDetails>      Items;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryWorkshopForItemsResult) == 0x000008, "Wrong alignment on FQueryWorkshopForItemsResult");
static_assert(sizeof(FQueryWorkshopForItemsResult) == 0x000030, "Wrong size on FQueryWorkshopForItemsResult");
static_assert(offsetof(FQueryWorkshopForItemsResult, QueryHandle) == 0x000008, "Member 'FQueryWorkshopForItemsResult::QueryHandle' has a wrong offset!");
static_assert(offsetof(FQueryWorkshopForItemsResult, NumResultsReturned) == 0x000010, "Member 'FQueryWorkshopForItemsResult::NumResultsReturned' has a wrong offset!");
static_assert(offsetof(FQueryWorkshopForItemsResult, NumMatchingResults) == 0x000014, "Member 'FQueryWorkshopForItemsResult::NumMatchingResults' has a wrong offset!");
static_assert(offsetof(FQueryWorkshopForItemsResult, bHasMorePages) == 0x000018, "Member 'FQueryWorkshopForItemsResult::bHasMorePages' has a wrong offset!");
static_assert(offsetof(FQueryWorkshopForItemsResult, bRetrievedDataWasCached) == 0x000019, "Member 'FQueryWorkshopForItemsResult::bRetrievedDataWasCached' has a wrong offset!");
static_assert(offsetof(FQueryWorkshopForItemsResult, Items) == 0x000020, "Member 'FQueryWorkshopForItemsResult::Items' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterTagsAllUserDetails
// 0x0010 (0x0010 - 0x0000)
struct FSteamUGCQueryParameterTagsAllUserDetails
{
public:
	TArray<struct FSteamKeyValuePair>             RequiredKeyValueTags;                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamUGCQueryParameterTagsAllUserDetails) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterTagsAllUserDetails");
static_assert(sizeof(FSteamUGCQueryParameterTagsAllUserDetails) == 0x000010, "Wrong size on FSteamUGCQueryParameterTagsAllUserDetails");
static_assert(offsetof(FSteamUGCQueryParameterTagsAllUserDetails, RequiredKeyValueTags) == 0x000000, "Member 'FSteamUGCQueryParameterTagsAllUserDetails::RequiredKeyValueTags' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterTagsAllUser
// 0x0020 (0x0030 - 0x0010)
struct FSteamUGCQueryParameterTagsAllUser final : public FSteamUGCQueryParameterTagsAllUserDetails
{
public:
	TArray<class FString>                         RequiredTags;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<class FString>                         ExcludedTags;                                      // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamUGCQueryParameterTagsAllUser) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterTagsAllUser");
static_assert(sizeof(FSteamUGCQueryParameterTagsAllUser) == 0x000030, "Wrong size on FSteamUGCQueryParameterTagsAllUser");
static_assert(offsetof(FSteamUGCQueryParameterTagsAllUser, RequiredTags) == 0x000010, "Member 'FSteamUGCQueryParameterTagsAllUser::RequiredTags' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterTagsAllUser, ExcludedTags) == 0x000020, "Member 'FSteamUGCQueryParameterTagsAllUser::ExcludedTags' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterAllUserDetails
// 0x0014 (0x0014 - 0x0000)
struct FSteamUGCQueryParameterAllUserDetails
{
public:
	int32                                         PageId;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamSupportedLanguages                      Language;                                          // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AllowedCacheResponseTime;                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumDaysPlaytime;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bReturnPreviewUrl : 1;                             // 0x0010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnKeyValueTags : 1;                           // 0x0010(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnFullDescription : 1;                        // 0x0010(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnMetaData : 1;                               // 0x0010(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnChildIds : 1;                               // 0x0010(0x0001)(BitIndex: 0x04, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         bReturnAdditionalPreviews : 1;                     // 0x0010(0x0001)(BitIndex: 0x05, PropSize: 0x0001 (Edit, BlueprintVisible, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic))
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSteamUGCQueryParameterAllUserDetails) == 0x000004, "Wrong alignment on FSteamUGCQueryParameterAllUserDetails");
static_assert(sizeof(FSteamUGCQueryParameterAllUserDetails) == 0x000014, "Wrong size on FSteamUGCQueryParameterAllUserDetails");
static_assert(offsetof(FSteamUGCQueryParameterAllUserDetails, PageId) == 0x000000, "Member 'FSteamUGCQueryParameterAllUserDetails::PageId' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAllUserDetails, Language) == 0x000004, "Member 'FSteamUGCQueryParameterAllUserDetails::Language' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAllUserDetails, AllowedCacheResponseTime) == 0x000008, "Member 'FSteamUGCQueryParameterAllUserDetails::AllowedCacheResponseTime' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAllUserDetails, NumDaysPlaytime) == 0x00000C, "Member 'FSteamUGCQueryParameterAllUserDetails::NumDaysPlaytime' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterAllUser
// 0x003C (0x0050 - 0x0014)
struct FSteamUGCQueryParameterAllUser : public FSteamUGCQueryParameterAllUserDetails
{
public:
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamUGCQueryParameterTagsAllUser     TagParameter;                                      // 0x0018(0x0030)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	bool                                          bReturnTotalOnly;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bReturnIdsOnly;                                    // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSteamUGCQueryParameterAllUser) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterAllUser");
static_assert(sizeof(FSteamUGCQueryParameterAllUser) == 0x000050, "Wrong size on FSteamUGCQueryParameterAllUser");
static_assert(offsetof(FSteamUGCQueryParameterAllUser, TagParameter) == 0x000018, "Member 'FSteamUGCQueryParameterAllUser::TagParameter' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAllUser, bReturnTotalOnly) == 0x000048, "Member 'FSteamUGCQueryParameterAllUser::bReturnTotalOnly' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAllUser, bReturnIdsOnly) == 0x000049, "Member 'FSteamUGCQueryParameterAllUser::bReturnIdsOnly' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterAll
// 0x0018 (0x0068 - 0x0050)
struct FSteamUGCQueryParameterAll final : public FSteamUGCQueryParameterAllUser
{
public:
	class FString                                 SearchText;                                        // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RankedByTrendDays;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMatchAnyTag;                                      // 0x0064(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUGCQueryBP                                   QueryType;                                         // 0x0065(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUGCMatchingUGCTypeBP                         FileType;                                          // 0x0066(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSteamUGCQueryParameterAll) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterAll");
static_assert(sizeof(FSteamUGCQueryParameterAll) == 0x000068, "Wrong size on FSteamUGCQueryParameterAll");
static_assert(offsetof(FSteamUGCQueryParameterAll, SearchText) == 0x000050, "Member 'FSteamUGCQueryParameterAll::SearchText' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAll, RankedByTrendDays) == 0x000060, "Member 'FSteamUGCQueryParameterAll::RankedByTrendDays' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAll, bMatchAnyTag) == 0x000064, "Member 'FSteamUGCQueryParameterAll::bMatchAnyTag' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAll, QueryType) == 0x000065, "Member 'FSteamUGCQueryParameterAll::QueryType' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterAll, FileType) == 0x000066, "Member 'FSteamUGCQueryParameterAll::FileType' has a wrong offset!");

// ScriptStruct SteamWorkshop.QueryWorkshopForAllItemsResult
// 0x0068 (0x0098 - 0x0030)
struct FQueryWorkshopForAllItemsResult final : public FQueryWorkshopForItemsResult
{
public:
	struct FSteamUGCQueryParameterAll             QueryParams;                                       // 0x0030(0x0068)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryWorkshopForAllItemsResult) == 0x000008, "Wrong alignment on FQueryWorkshopForAllItemsResult");
static_assert(sizeof(FQueryWorkshopForAllItemsResult) == 0x000098, "Wrong size on FQueryWorkshopForAllItemsResult");
static_assert(offsetof(FQueryWorkshopForAllItemsResult, QueryParams) == 0x000030, "Member 'FQueryWorkshopForAllItemsResult::QueryParams' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterDetails
// 0x0024 (0x0038 - 0x0014)
struct FSteamUGCQueryParameterDetails final : public FSteamUGCQueryParameterAllUserDetails
{
public:
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamUGCQueryParameterTagsAllUserDetails TagParameter;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSteamUGCItemId>                WorkshopItemIds;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamUGCQueryParameterDetails) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterDetails");
static_assert(sizeof(FSteamUGCQueryParameterDetails) == 0x000038, "Wrong size on FSteamUGCQueryParameterDetails");
static_assert(offsetof(FSteamUGCQueryParameterDetails, TagParameter) == 0x000018, "Member 'FSteamUGCQueryParameterDetails::TagParameter' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterDetails, WorkshopItemIds) == 0x000028, "Member 'FSteamUGCQueryParameterDetails::WorkshopItemIds' has a wrong offset!");

// ScriptStruct SteamWorkshop.QueryWorkshopForItemDetailsResult
// 0x0038 (0x0068 - 0x0030)
struct FQueryWorkshopForItemDetailsResult final : public FQueryWorkshopForItemsResult
{
public:
	struct FSteamUGCQueryParameterDetails         QueryParams;                                       // 0x0030(0x0038)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryWorkshopForItemDetailsResult) == 0x000008, "Wrong alignment on FQueryWorkshopForItemDetailsResult");
static_assert(sizeof(FQueryWorkshopForItemDetailsResult) == 0x000068, "Wrong size on FQueryWorkshopForItemDetailsResult");
static_assert(offsetof(FQueryWorkshopForItemDetailsResult, QueryParams) == 0x000030, "Member 'FQueryWorkshopForItemDetailsResult::QueryParams' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamUGCQueryParameterUser
// 0x0018 (0x0068 - 0x0050)
struct FSteamUGCQueryParameterUser final : public FSteamUGCQueryParameterAllUser
{
public:
	class FString                                 FilenameFilter;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUserUGCListBP                                List;                                              // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUGCMatchingUGCTypeBP                         Type;                                              // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUserUGCListSortOrderBP                       SortOrder;                                         // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSteamUGCQueryParameterUser) == 0x000008, "Wrong alignment on FSteamUGCQueryParameterUser");
static_assert(sizeof(FSteamUGCQueryParameterUser) == 0x000068, "Wrong size on FSteamUGCQueryParameterUser");
static_assert(offsetof(FSteamUGCQueryParameterUser, FilenameFilter) == 0x000050, "Member 'FSteamUGCQueryParameterUser::FilenameFilter' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterUser, List) == 0x000060, "Member 'FSteamUGCQueryParameterUser::List' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterUser, Type) == 0x000061, "Member 'FSteamUGCQueryParameterUser::Type' has a wrong offset!");
static_assert(offsetof(FSteamUGCQueryParameterUser, SortOrder) == 0x000062, "Member 'FSteamUGCQueryParameterUser::SortOrder' has a wrong offset!");

// ScriptStruct SteamWorkshop.QueryWorkshopForUserItemsResult
// 0x0068 (0x0098 - 0x0030)
struct FQueryWorkshopForUserItemsResult final : public FQueryWorkshopForItemsResult
{
public:
	struct FSteamUGCQueryParameterUser            QueryParams;                                       // 0x0030(0x0068)(Edit, BlueprintVisible, EditConst, NativeAccessSpecifierPublic)
};
static_assert(alignof(FQueryWorkshopForUserItemsResult) == 0x000008, "Wrong alignment on FQueryWorkshopForUserItemsResult");
static_assert(sizeof(FQueryWorkshopForUserItemsResult) == 0x000098, "Wrong size on FQueryWorkshopForUserItemsResult");
static_assert(offsetof(FQueryWorkshopForUserItemsResult, QueryParams) == 0x000030, "Member 'FQueryWorkshopForUserItemsResult::QueryParams' has a wrong offset!");

// ScriptStruct SteamWorkshop.SetUserVoteOnWorkshopItemResult
// 0x0008 (0x0018 - 0x0010)
struct FSetUserVoteOnWorkshopItemResult final : public FGeneralWorkshopItemResult
{
public:
	bool                                          bVoteUp;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSetUserVoteOnWorkshopItemResult) == 0x000008, "Wrong alignment on FSetUserVoteOnWorkshopItemResult");
static_assert(sizeof(FSetUserVoteOnWorkshopItemResult) == 0x000018, "Wrong size on FSetUserVoteOnWorkshopItemResult");
static_assert(offsetof(FSetUserVoteOnWorkshopItemResult, bVoteUp) == 0x000010, "Member 'FSetUserVoteOnWorkshopItemResult::bVoteUp' has a wrong offset!");

// ScriptStruct SteamWorkshop.SteamWorkshopItemInstallInfo
// 0x0028 (0x0028 - 0x0000)
struct FSteamWorkshopItemInstallInfo final
{
public:
	struct FUInt64                                SizeOnDiskBytes;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         SizeOnDiskMBytes;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Directory;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              TimeStampLastUpdate;                               // 0x0020(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSteamWorkshopItemInstallInfo) == 0x000008, "Wrong alignment on FSteamWorkshopItemInstallInfo");
static_assert(sizeof(FSteamWorkshopItemInstallInfo) == 0x000028, "Wrong size on FSteamWorkshopItemInstallInfo");
static_assert(offsetof(FSteamWorkshopItemInstallInfo, SizeOnDiskBytes) == 0x000000, "Member 'FSteamWorkshopItemInstallInfo::SizeOnDiskBytes' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemInstallInfo, SizeOnDiskMBytes) == 0x000008, "Member 'FSteamWorkshopItemInstallInfo::SizeOnDiskMBytes' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemInstallInfo, Directory) == 0x000010, "Member 'FSteamWorkshopItemInstallInfo::Directory' has a wrong offset!");
static_assert(offsetof(FSteamWorkshopItemInstallInfo, TimeStampLastUpdate) == 0x000020, "Member 'FSteamWorkshopItemInstallInfo::TimeStampLastUpdate' has a wrong offset!");

}

