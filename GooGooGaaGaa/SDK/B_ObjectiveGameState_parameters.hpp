#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_ObjectiveGameState

#include "Basic.hpp"

#include "ETeamID_structs.hpp"
#include "S_PropList_structs.hpp"
#include "EResultType_structs.hpp"


namespace SDK::Params
{

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnPropMovedToReviveCircle__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature");
static_assert(sizeof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature");
static_assert(offsetof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature, PlayerController) == 0x000000, "Member 'B_ObjectiveGameState_C_OnPropMovedToReviveCircle__DelegateSignature::PlayerController' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnOverTimeStarted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature final
{
public:
	class UClass*                                 WantedPropClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature");
static_assert(sizeof(B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature");
static_assert(offsetof(B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature, WantedPropClass) == 0x000000, "Member 'B_ObjectiveGameState_C_OnOverTimeStarted__DelegateSignature::WantedPropClass' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnRevivePossible__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature final
{
public:
	class APlayerState*                           KilledPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature");
static_assert(sizeof(B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature");
static_assert(offsetof(B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature, KilledPlayer) == 0x000000, "Member 'B_ObjectiveGameState_C_OnRevivePossible__DelegateSignature::KilledPlayer' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnPropMovedToInactiveCauldron__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature");
static_assert(sizeof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature");
static_assert(offsetof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature, PlayerController) == 0x000000, "Member 'B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron__DelegateSignature::PlayerController' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.AddRoundStatesMulti
// 0x0050 (0x0050 - 0x0000)
struct B_ObjectiveGameState_C_AddRoundStatesMulti final
{
public:
	TArray<int32>                                 Playtime;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 TotalCauldronsFilled;                              // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 WitchLivesLeft;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<ETeamID>                               WinnerTeam_0;                                      // 0x0030(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Wins;                                              // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(B_ObjectiveGameState_C_AddRoundStatesMulti) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_AddRoundStatesMulti");
static_assert(sizeof(B_ObjectiveGameState_C_AddRoundStatesMulti) == 0x000050, "Wrong size on B_ObjectiveGameState_C_AddRoundStatesMulti");
static_assert(offsetof(B_ObjectiveGameState_C_AddRoundStatesMulti, Playtime) == 0x000000, "Member 'B_ObjectiveGameState_C_AddRoundStatesMulti::Playtime' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_AddRoundStatesMulti, TotalCauldronsFilled) == 0x000010, "Member 'B_ObjectiveGameState_C_AddRoundStatesMulti::TotalCauldronsFilled' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_AddRoundStatesMulti, WitchLivesLeft) == 0x000020, "Member 'B_ObjectiveGameState_C_AddRoundStatesMulti::WitchLivesLeft' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_AddRoundStatesMulti, WinnerTeam_0) == 0x000030, "Member 'B_ObjectiveGameState_C_AddRoundStatesMulti::WinnerTeam_0' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_AddRoundStatesMulti, Wins) == 0x000040, "Member 'B_ObjectiveGameState_C_AddRoundStatesMulti::Wins' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.BindHelpTextEvents
// 0x0070 (0x0070 - 0x0000)
struct B_ObjectiveGameState_C_BindHelpTextEvents final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerState* KilledPlayer)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APlayerController* PlayerController)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UClass* WantedPropClass)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_BindHelpTextEvents) == 0x000004, "Wrong alignment on B_ObjectiveGameState_C_BindHelpTextEvents");
static_assert(sizeof(B_ObjectiveGameState_C_BindHelpTextEvents) == 0x000070, "Wrong size on B_ObjectiveGameState_C_BindHelpTextEvents");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_4) == 0x000040, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_5) == 0x000050, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_BindHelpTextEvents, K2Node_CreateDelegate_OutputDelegate_6) == 0x000060, "Member 'B_ObjectiveGameState_C_BindHelpTextEvents::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.ExecuteUbergraph_B_ObjectiveGameState
// 0x0268 (0x0268 - 0x0000)
struct B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_5;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_1;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_6;          // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_7;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_2;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_8;          // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_2;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_3;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_4;            // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_3;                     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_9;          // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_WantedPropClass;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_5;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_6;            // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_4;                     // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController_1;             // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           K2Node_CustomEvent_KilledPlayer;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_7;            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_7;            // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_5;                     // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_GUID;                           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_8;            // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_9;            // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_8;            // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_9;            // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_6;                     // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_10;           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_10;           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PlayerController;               // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EResultType                                   Temp_byte_Variable;                                // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA[0x6];                                      // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_CustomEvent_Playtime;                       // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_TotalCauldronsFilled;           // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_WitchLivesLeft;                 // 0x01E0(0x0010)(ReferenceParm)
	TArray<ETeamID>                               K2Node_CustomEvent_WinnerTeam;                     // 0x01F0(0x0010)(ConstParm, ReferenceParm)
	TArray<int32>                                 K2Node_CustomEvent_Wins;                           // 0x0200(0x0010)(ConstParm, ReferenceParm)
	EResultType                                   Temp_byte_Variable_1;                              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_11;           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance_11;           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD_7;                     // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EResultType                                   K2Node_Select_Default;                             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x2];                                      // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState");
static_assert(sizeof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState) == 0x000268, "Wrong size on B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, EntryPoint) == 0x000000, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue) == 0x000006, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000007, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_IsClosed_Variable_1) == 0x000019, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD) == 0x000020, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_Has_Been_Initd_Variable_1) == 0x000029, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x00002A, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x00002B, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_1) == 0x000030, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000038, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_1) == 0x000040, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_5) == 0x000049, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_1) == 0x000050, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_3) == 0x000058, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_6) == 0x000059, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_7) == 0x00005A, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_2) == 0x000060, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_2) == 0x000068, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_4) == 0x000070, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_HasAuthority_ReturnValue) == 0x000071, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_8) == 0x000072, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_2) == 0x000078, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_5) == 0x000080, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_3) == 0x000088, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_3) == 0x000090, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_6) == 0x000098, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_4) == 0x0000A0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_4) == 0x0000A8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_7) == 0x0000B0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000B2, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_3) == 0x0000B8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_8) == 0x0000C0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_BooleanAND_ReturnValue) == 0x0000C1, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_IsDedicatedServer_ReturnValue_9) == 0x0000C2, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_IsDedicatedServer_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_WantedPropClass) == 0x0000C8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_WantedPropClass' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_5) == 0x0000D0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_6) == 0x0000D8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_5) == 0x0000E0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_9) == 0x0000E8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_6) == 0x0000F0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_10) == 0x0000F8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000F9, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_4) == 0x000100, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_11) == 0x000108, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_PlayerController_1) == 0x000110, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_PlayerController_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_KilledPlayer) == 0x000118, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_KilledPlayer' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_7) == 0x000120, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_7) == 0x000128, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_12) == 0x000130, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_IsClosed_Variable_2) == 0x000131, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_5) == 0x000138, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_5' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_13) == 0x000140, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_GUID) == 0x000148, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_GUID' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_8) == 0x000158, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_9) == 0x000160, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_8) == 0x000168, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_8' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_14) == 0x000170, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_9) == 0x000178, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_9' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_15) == 0x000180, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_6) == 0x000188, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_6' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_16) == 0x000190, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_10) == 0x000198, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_10) == 0x0001A0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_10' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_17) == 0x0001A8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_PlayerController) == 0x0001B0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_PlayerController' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_byte_Variable) == 0x0001B9, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_Playtime) == 0x0001C0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_Playtime' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_TotalCauldronsFilled) == 0x0001D0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_TotalCauldronsFilled' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_WitchLivesLeft) == 0x0001E0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_WitchLivesLeft' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_WinnerTeam) == 0x0001F0, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_WinnerTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_CustomEvent_Wins) == 0x000200, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_CustomEvent_Wins' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_byte_Variable_1) == 0x000210, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetGameInstance_ReturnValue_11) == 0x000218, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetGameInstance_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsB_Game_Instance_11) == 0x000220, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsB_Game_Instance_11' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_18) == 0x000228, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_AsWB_HUD_7) == 0x000230, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_AsWB_HUD_7' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_DynamicCast_bSuccess_19) == 0x000238, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_Event_DeltaSeconds) == 0x00023C, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_Variable) == 0x000240, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, K2Node_Select_Default) == 0x000241, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000248, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000250, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000258, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, Temp_bool_Has_Been_Initd_Variable_2) == 0x000259, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000260, "Member 'B_ObjectiveGameState_C_ExecuteUbergraph_B_ObjectiveGameState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.GeneratePropArrays
// 0x0138 (0x0138 - 0x0000)
struct B_ObjectiveGameState_C_GeneratePropArrays final
{
public:
	TArray<class UClass*>                         PropsToRemove;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<class UClass*>                         TempPropClasses;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class AB_StaticMeshProp_C*>            Temp;                                              // 0x0020(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PropList                            CallFunc_Map_Find_Value;                           // 0x0088(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_Map_Keys_Keys_1;                          // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Length_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_StaticMeshProp_C*                    CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_StaticMeshProp_C*>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PropList                            K2Node_MakeStruct_S_PropList;                      // 0x00E8(0x0010)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_PropList                            CallFunc_Map_Find_Value_1;                         // 0x0100(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_PropList                            K2Node_MakeStruct_S_PropList_1;                    // 0x0118(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_GeneratePropArrays) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_GeneratePropArrays");
static_assert(sizeof(B_ObjectiveGameState_C_GeneratePropArrays) == 0x000138, "Wrong size on B_ObjectiveGameState_C_GeneratePropArrays");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, PropsToRemove) == 0x000000, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::PropsToRemove' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, TempPropClasses) == 0x000010, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::TempPropClasses' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp) == 0x000020, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Array_Index_Variable) == 0x000030, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Length_ReturnValue) == 0x000058, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Get_Item) == 0x000060, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Remove_ReturnValue) == 0x00006C, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Add_ReturnValue) == 0x000084, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Find_Value) == 0x000088, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Less_IntInt_ReturnValue) == 0x000099, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Keys_Keys_1) == 0x0000A8, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Length_ReturnValue_1) == 0x0000B8, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Length_ReturnValue_3) == 0x0000C8, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, K2Node_MakeArray_Array) == 0x0000D0, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, K2Node_MakeStruct_S_PropList) == 0x0000E8, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::K2Node_MakeStruct_S_PropList' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_GetObjectClass_ReturnValue) == 0x0000F8, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Find_Value_1) == 0x000100, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Map_Find_ReturnValue_1) == 0x000110, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000111, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, Temp_int_Loop_Counter_Variable_2) == 0x000114, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, K2Node_MakeStruct_S_PropList_1) == 0x000118, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::K2Node_MakeStruct_S_PropList_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Less_IntInt_ReturnValue_2) == 0x000128, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Add_IntInt_ReturnValue_2) == 0x00012C, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_GeneratePropArrays, CallFunc_Array_Add_ReturnValue_1) == 0x000130, "Member 'B_ObjectiveGameState_C_GeneratePropArrays::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.HandleAddRoundStates
// 0x0098 (0x0098 - 0x0000)
struct B_ObjectiveGameState_C_HandleAddRoundStates final
{
public:
	TArray<int32>                                 Playtime;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 TotalCauldronsFilled;                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 WitchLivesLeft;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<ETeamID>                               WinnerTeam_0;                                      // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<int32>                                 Wins;                                              // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CurrentIndex;                                      // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_ObjectiveRoundState_C*               RoundStateToUse;                                   // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETeamID                                       CallFunc_Array_Get_Item_1;                         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               K2Node_Select_Default;                             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               CallFunc_CreateObject_Object;                      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_ObjectiveRoundState_C*               CallFunc_CreateObject_Object_1;                    // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_HandleAddRoundStates) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_HandleAddRoundStates");
static_assert(sizeof(B_ObjectiveGameState_C_HandleAddRoundStates) == 0x000098, "Wrong size on B_ObjectiveGameState_C_HandleAddRoundStates");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, Playtime) == 0x000000, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::Playtime' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, TotalCauldronsFilled) == 0x000010, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::TotalCauldronsFilled' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, WitchLivesLeft) == 0x000020, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::WitchLivesLeft' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, WinnerTeam_0) == 0x000030, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::WinnerTeam_0' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, Wins) == 0x000040, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::Wins' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CurrentIndex) == 0x000050, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CurrentIndex' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, RoundStateToUse) == 0x000058, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::RoundStateToUse' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Array_Get_Item) == 0x000060, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, Temp_int_Variable) == 0x000064, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000069, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, Temp_int_Variable_1) == 0x000070, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Array_Get_Item_2) == 0x000074, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Array_Get_Item_3) == 0x000078, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_Array_Get_Item_4) == 0x00007C, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, K2Node_Select_Default) == 0x000080, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_CreateObject_Object) == 0x000088, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_CreateObject_Object' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_HandleAddRoundStates, CallFunc_CreateObject_Object_1) == 0x000090, "Member 'B_ObjectiveGameState_C_HandleAddRoundStates::CallFunc_CreateObject_Object_1' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.LoadPropsAndCauldrons
// 0x0050 (0x0050 - 0x0000)
struct B_ObjectiveGameState_C_LoadPropsAndCauldrons final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_StaticMeshProp_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class UWB_HUD_C*                              K2Node_DynamicCast_AsWB_HUD;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AB_ObjectiveCauldron_C*>         CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(B_ObjectiveGameState_C_LoadPropsAndCauldrons) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_LoadPropsAndCauldrons");
static_assert(sizeof(B_ObjectiveGameState_C_LoadPropsAndCauldrons) == 0x000050, "Wrong size on B_ObjectiveGameState_C_LoadPropsAndCauldrons");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, K2Node_DynamicCast_AsWB_HUD) == 0x000030, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::K2Node_DynamicCast_AsWB_HUD' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_LoadPropsAndCauldrons, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000040, "Member 'B_ObjectiveGameState_C_LoadPropsAndCauldrons::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnOverTimeStartedMulti
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnOverTimeStartedMulti final
{
public:
	class UClass*                                 WantedPropClass;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnOverTimeStartedMulti) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnOverTimeStartedMulti");
static_assert(sizeof(B_ObjectiveGameState_C_OnOverTimeStartedMulti) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnOverTimeStartedMulti");
static_assert(offsetof(B_ObjectiveGameState_C_OnOverTimeStartedMulti, WantedPropClass) == 0x000000, "Member 'B_ObjectiveGameState_C_OnOverTimeStartedMulti::WantedPropClass' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnPropMovedToInactiveCauldron_Event
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event");
static_assert(sizeof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event");
static_assert(offsetof(B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event, PlayerController) == 0x000000, "Member 'B_ObjectiveGameState_C_OnPropMovedToInactiveCauldron_Event::PlayerController' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnPropMovedToReviveCircle_Event
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event");
static_assert(sizeof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event");
static_assert(offsetof(B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event, PlayerController) == 0x000000, "Member 'B_ObjectiveGameState_C_OnPropMovedToReviveCircle_Event::PlayerController' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.OnRevivePossibleMulti
// 0x0008 (0x0008 - 0x0000)
struct B_ObjectiveGameState_C_OnRevivePossibleMulti final
{
public:
	class APlayerState*                           KilledPlayer;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_OnRevivePossibleMulti) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_OnRevivePossibleMulti");
static_assert(sizeof(B_ObjectiveGameState_C_OnRevivePossibleMulti) == 0x000008, "Wrong size on B_ObjectiveGameState_C_OnRevivePossibleMulti");
static_assert(offsetof(B_ObjectiveGameState_C_OnRevivePossibleMulti, KilledPlayer) == 0x000000, "Member 'B_ObjectiveGameState_C_OnRevivePossibleMulti::KilledPlayer' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_ObjectiveGameState_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_ReceiveTick) == 0x000004, "Wrong alignment on B_ObjectiveGameState_C_ReceiveTick");
static_assert(sizeof(B_ObjectiveGameState_C_ReceiveTick) == 0x000004, "Wrong size on B_ObjectiveGameState_C_ReceiveTick");
static_assert(offsetof(B_ObjectiveGameState_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_ObjectiveGameState_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.SetMatchGUIDMulti
// 0x0010 (0x0010 - 0x0000)
struct B_ObjectiveGameState_C_SetMatchGUIDMulti final
{
public:
	class FString                                 Guid;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_SetMatchGUIDMulti) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_SetMatchGUIDMulti");
static_assert(sizeof(B_ObjectiveGameState_C_SetMatchGUIDMulti) == 0x000010, "Wrong size on B_ObjectiveGameState_C_SetMatchGUIDMulti");
static_assert(offsetof(B_ObjectiveGameState_C_SetMatchGUIDMulti, Guid) == 0x000000, "Member 'B_ObjectiveGameState_C_SetMatchGUIDMulti::Guid' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.ShouldTeamVoiceBeEnabled
// 0x0020 (0x0020 - 0x0000)
struct B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled");
static_assert(sizeof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled) == 0x000020, "Wrong size on B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, ReturnValue) == 0x000000, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'B_ObjectiveGameState_C_ShouldTeamVoiceBeEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_ObjectiveGameState.B_ObjectiveGameState_C.TeamCheck
// 0x0018 (0x0018 - 0x0000)
struct B_ObjectiveGameState_C_TeamCheck final
{
public:
	class APlayerState*                           PlayerStateA;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           PlayerStateB;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bSameTeam;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ArePlayersInSameObjectiveTeam_ReturnValue; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_ObjectiveGameState_C_TeamCheck) == 0x000008, "Wrong alignment on B_ObjectiveGameState_C_TeamCheck");
static_assert(sizeof(B_ObjectiveGameState_C_TeamCheck) == 0x000018, "Wrong size on B_ObjectiveGameState_C_TeamCheck");
static_assert(offsetof(B_ObjectiveGameState_C_TeamCheck, PlayerStateA) == 0x000000, "Member 'B_ObjectiveGameState_C_TeamCheck::PlayerStateA' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_TeamCheck, PlayerStateB) == 0x000008, "Member 'B_ObjectiveGameState_C_TeamCheck::PlayerStateB' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_TeamCheck, bSameTeam) == 0x000010, "Member 'B_ObjectiveGameState_C_TeamCheck::bSameTeam' has a wrong offset!");
static_assert(offsetof(B_ObjectiveGameState_C_TeamCheck, CallFunc_ArePlayersInSameObjectiveTeam_ReturnValue) == 0x000011, "Member 'B_ObjectiveGameState_C_TeamCheck::CallFunc_ArePlayersInSameObjectiveTeam_ReturnValue' has a wrong offset!");

}

