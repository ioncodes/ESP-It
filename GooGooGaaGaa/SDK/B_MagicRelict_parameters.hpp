#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MagicRelict

#include "Basic.hpp"

#include "EHighlightChannel_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_MagicRelict.B_MagicRelict_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00F8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000118, "Wrong size on B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_MagicRelict_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.ExecuteUbergraph_B_MagicRelict
// 0x0398 (0x0398 - 0x0000)
struct B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AController* Killer)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0058(0x00F8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UB_ActorEvents_C*>               CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_ActorEvents_C*                       CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor_1;               // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Killer;                         // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AB_PlayerState_C*                       K2Node_DynamicCast_AsB_Player_State;               // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UB_ActorEvents_C*>               CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UB_ActorEvents_C*                       CallFunc_Array_Get_Item_1;                         // 0x0210(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x5];                                      // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_2;             // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_282[0x6];                                      // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetHighlight_ForcedBoolean;               // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLifeSpan_ReturnValue;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_LifeSpan_C*                         K2Node_DynamicCast_AsWB_Life_Span;                 // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_LifeSpan_C*                         K2Node_DynamicCast_AsWB_Life_Span_1;               // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_3;             // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_3;             // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_4;             // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_4;             // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_5;             // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_5;             // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_1;                       // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetWitchActor_ReturnActor;                // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn_2;                       // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn_3;                       // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x2];                                      // 0x0382(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHighlightChannel                             K2Node_Event_Channel;                              // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict) == 0x000008, "Wrong alignment on B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict");
static_assert(sizeof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict) == 0x000398, "Wrong size on B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, EntryPoint) == 0x000000, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_HasAuthority_ReturnValue) == 0x000034, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000038, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_OtherActor) == 0x000040, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_OtherComp) == 0x000048, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000050, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_bFromSweep) == 0x000054, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_ComponentBoundEvent_SweepResult) == 0x000058, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetOwner_ReturnValue) == 0x000150, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetDisplayName_ReturnValue) == 0x000158, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000168, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Concat_StrStr_ReturnValue) == 0x000178, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Array_Get_Item) == 0x000188, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Array_Length_ReturnValue) == 0x000194, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000198, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A9, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CustomEvent_DestroyedActor_1) == 0x0001B0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CustomEvent_DestroyedActor_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CustomEvent_Killer) == 0x0001B8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_1) == 0x0001C0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsB_Player_State) == 0x0001C8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsB_Player_State' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_K2_GetPawn_ReturnValue) == 0x0001D8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetDisplayName_ReturnValue_1) == 0x0001E0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x0001F0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000200, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Array_Get_Item_1) == 0x000210, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_2) == 0x000218, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Array_Length_ReturnValue_1) == 0x00021C, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000220, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000230, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000231, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_3) == 0x000232, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetOwner_ReturnValue_1) == 0x000238, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue) == 0x000240, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue) == 0x000248, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_VSize_ReturnValue) == 0x000250, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000258, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetInstigator_ReturnValue) == 0x000260, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue_1) == 0x000268, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_4) == 0x000270, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000271, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue_2) == 0x000278, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanAND_ReturnValue) == 0x000280, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue_2) == 0x000281, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsPawn) == 0x000288, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanOR_ReturnValue) == 0x000291, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsLocallyControlled_ReturnValue) == 0x000292, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanOR_ReturnValue_1) == 0x000293, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_CustomEvent_DestroyedActor) == 0x000298, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_SetHighlight_ForcedBoolean) == 0x0002A0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_SetHighlight_ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_Event_DeltaSeconds) == 0x0002C0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetLifeSpan_ReturnValue) == 0x0002C4, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetLifeSpan_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_5) == 0x0002C8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_FTrunc_ReturnValue) == 0x0002CC, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Conv_IntToByte_ReturnValue) == 0x0002D0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetUserWidgetObject_ReturnValue) == 0x0002D8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsWB_Life_Span) == 0x0002E0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsWB_Life_Span' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_2) == 0x0002E8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_6) == 0x0002E9, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x0002F0, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsWB_Life_Span_1) == 0x0002F8, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsWB_Life_Span_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_3) == 0x000300, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000304, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue_3) == 0x000308, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetInstigator_ReturnValue_1) == 0x000310, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue_3) == 0x000318, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue_4) == 0x000320, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_IsValid_ReturnValue_7) == 0x000328, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue_4) == 0x000329, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetObjectClass_ReturnValue_5) == 0x000330, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetObjectClass_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanAND_ReturnValue_1) == 0x000338, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_ClassIsChildOf_ReturnValue_5) == 0x000339, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_ClassIsChildOf_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsPawn_1) == 0x000340, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsPawn_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_4) == 0x000348, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanOR_ReturnValue_2) == 0x000349, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_BooleanOR_ReturnValue_3) == 0x00034A, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00034B, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetWitchActor_ReturnActor) == 0x000350, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetWitchActor_ReturnActor' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsPawn_2) == 0x000358, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsPawn_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_5) == 0x000360, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_GetOwner_ReturnValue_2) == 0x000368, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000370, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_AsPawn_3) == 0x000378, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_AsPawn_3' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_DynamicCast_bSuccess_6) == 0x000380, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000381, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000384, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, K2Node_Event_Channel) == 0x000388, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::K2Node_Event_Channel' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict, CallFunc_FTrunc_A_ImplicitCast) == 0x000390, "Member 'B_MagicRelict_C_ExecuteUbergraph_B_MagicRelict::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.HandleIsOwning
// 0x0001 (0x0001 - 0x0000)
struct B_MagicRelict_C_HandleIsOwning final
{
public:
	bool                                          Owning;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_HandleIsOwning) == 0x000001, "Wrong alignment on B_MagicRelict_C_HandleIsOwning");
static_assert(sizeof(B_MagicRelict_C_HandleIsOwning) == 0x000001, "Wrong size on B_MagicRelict_C_HandleIsOwning");
static_assert(offsetof(B_MagicRelict_C_HandleIsOwning, Owning) == 0x000000, "Member 'B_MagicRelict_C_HandleIsOwning::Owning' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.OnOwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct B_MagicRelict_C_OnOwnerDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_OnOwnerDestroyed) == 0x000008, "Wrong alignment on B_MagicRelict_C_OnOwnerDestroyed");
static_assert(sizeof(B_MagicRelict_C_OnOwnerDestroyed) == 0x000008, "Wrong size on B_MagicRelict_C_OnOwnerDestroyed");
static_assert(offsetof(B_MagicRelict_C_OnOwnerDestroyed, DestroyedActor) == 0x000000, "Member 'B_MagicRelict_C_OnOwnerDestroyed::DestroyedActor' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.OnOwnerKilled
// 0x0008 (0x0008 - 0x0000)
struct B_MagicRelict_C_OnOwnerKilled final
{
public:
	class AController*                            Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_OnOwnerKilled) == 0x000008, "Wrong alignment on B_MagicRelict_C_OnOwnerKilled");
static_assert(sizeof(B_MagicRelict_C_OnOwnerKilled) == 0x000008, "Wrong size on B_MagicRelict_C_OnOwnerKilled");
static_assert(offsetof(B_MagicRelict_C_OnOwnerKilled, Killer) == 0x000000, "Member 'B_MagicRelict_C_OnOwnerKilled::Killer' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.OnPropOwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct B_MagicRelict_C_OnPropOwnerDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_OnPropOwnerDestroyed) == 0x000008, "Wrong alignment on B_MagicRelict_C_OnPropOwnerDestroyed");
static_assert(sizeof(B_MagicRelict_C_OnPropOwnerDestroyed) == 0x000008, "Wrong size on B_MagicRelict_C_OnPropOwnerDestroyed");
static_assert(offsetof(B_MagicRelict_C_OnPropOwnerDestroyed, DestroyedActor) == 0x000000, "Member 'B_MagicRelict_C_OnPropOwnerDestroyed::DestroyedActor' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct B_MagicRelict_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_ReceiveTick) == 0x000004, "Wrong alignment on B_MagicRelict_C_ReceiveTick");
static_assert(sizeof(B_MagicRelict_C_ReceiveTick) == 0x000004, "Wrong size on B_MagicRelict_C_ReceiveTick");
static_assert(offsetof(B_MagicRelict_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'B_MagicRelict_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.RefreshHighlight
// 0x0020 (0x0020 - 0x0000)
struct B_MagicRelict_C_RefreshHighlight final
{
public:
	bool                                          Highlightable;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UB_GameInstance_C*                      K2Node_DynamicCast_AsB_Game_Instance;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_RefreshHighlight) == 0x000008, "Wrong alignment on B_MagicRelict_C_RefreshHighlight");
static_assert(sizeof(B_MagicRelict_C_RefreshHighlight) == 0x000020, "Wrong size on B_MagicRelict_C_RefreshHighlight");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, Highlightable) == 0x000000, "Member 'B_MagicRelict_C_RefreshHighlight::Highlightable' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, K2Node_DynamicCast_AsB_Game_Instance) == 0x000010, "Member 'B_MagicRelict_C_RefreshHighlight::K2Node_DynamicCast_AsB_Game_Instance' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_MagicRelict_C_RefreshHighlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden) == 0x00001A, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_IsUserInterfaceHidden_UserInterfaceIsHidden' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_Not_PreBool_ReturnValue) == 0x00001B, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_RefreshHighlight, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'B_MagicRelict_C_RefreshHighlight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.SetHighlight
// 0x0003 (0x0003 - 0x0000)
struct B_MagicRelict_C_SetHighlight final
{
public:
	bool                                          Highlighted;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForcedBoolean;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RefreshHighlight_Highlightable;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_SetHighlight) == 0x000001, "Wrong alignment on B_MagicRelict_C_SetHighlight");
static_assert(sizeof(B_MagicRelict_C_SetHighlight) == 0x000003, "Wrong size on B_MagicRelict_C_SetHighlight");
static_assert(offsetof(B_MagicRelict_C_SetHighlight, Highlighted) == 0x000000, "Member 'B_MagicRelict_C_SetHighlight::Highlighted' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_SetHighlight, ForcedBoolean) == 0x000001, "Member 'B_MagicRelict_C_SetHighlight::ForcedBoolean' has a wrong offset!");
static_assert(offsetof(B_MagicRelict_C_SetHighlight, CallFunc_RefreshHighlight_Highlightable) == 0x000002, "Member 'B_MagicRelict_C_SetHighlight::CallFunc_RefreshHighlight_Highlightable' has a wrong offset!");

// Function B_MagicRelict.B_MagicRelict_C.SetHighlightChannel
// 0x0001 (0x0001 - 0x0000)
struct B_MagicRelict_C_SetHighlightChannel final
{
public:
	EHighlightChannel                             Channel;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_MagicRelict_C_SetHighlightChannel) == 0x000001, "Wrong alignment on B_MagicRelict_C_SetHighlightChannel");
static_assert(sizeof(B_MagicRelict_C_SetHighlightChannel) == 0x000001, "Wrong size on B_MagicRelict_C_SetHighlightChannel");
static_assert(offsetof(B_MagicRelict_C_SetHighlightChannel, Channel) == 0x000000, "Member 'B_MagicRelict_C_SetHighlightChannel::Channel' has a wrong offset!");

}

