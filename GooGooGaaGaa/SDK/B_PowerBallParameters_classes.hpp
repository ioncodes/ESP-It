#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_PowerBallParameters

#include "Basic.hpp"

#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_PowerBallParameters.B_PowerBallParameters_C
// 0x0038 (0x0090 - 0x0058)
class UB_PowerBallParameters_C final : public USkillParameters
{
public:
	double                                        Cooldown;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Damage;                                            // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSpeed;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Acceleration;                                      // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CanJumpDelay;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        JumpForce;                                         // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FallAcceleration;                                  // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FText GetFormattedTooltip();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_PowerBallParameters_C">();
	}
	static class UB_PowerBallParameters_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_PowerBallParameters_C>();
	}
};
static_assert(alignof(UB_PowerBallParameters_C) == 0x000008, "Wrong alignment on UB_PowerBallParameters_C");
static_assert(sizeof(UB_PowerBallParameters_C) == 0x000090, "Wrong size on UB_PowerBallParameters_C");
static_assert(offsetof(UB_PowerBallParameters_C, Cooldown) == 0x000058, "Member 'UB_PowerBallParameters_C::Cooldown' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, Damage) == 0x000060, "Member 'UB_PowerBallParameters_C::Damage' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, MaxSpeed) == 0x000068, "Member 'UB_PowerBallParameters_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, Acceleration) == 0x000070, "Member 'UB_PowerBallParameters_C::Acceleration' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, CanJumpDelay) == 0x000078, "Member 'UB_PowerBallParameters_C::CanJumpDelay' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, JumpForce) == 0x000080, "Member 'UB_PowerBallParameters_C::JumpForce' has a wrong offset!");
static_assert(offsetof(UB_PowerBallParameters_C, FallAcceleration) == 0x000088, "Member 'UB_PowerBallParameters_C::FallAcceleration' has a wrong offset!");

}

