#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CraftingScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_RecipeInfo_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_CraftingScreen.WB_CraftingScreen_C
// 0x00B0 (0x0370 - 0x02C0)
class UWB_CraftingScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       DetailsFadeIn;                                     // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DetailsFadeOut;                                    // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UnlockAnimation;                                   // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWB_Button_C*                           BackButton;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   Common;                                            // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_CraftingDetails_C*                  CraftingDetails;                                   // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTileView*                              CraftTileView;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   ExtraMat;                                          // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         MaterialList;                                      // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   Rare;                                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                UlockAnimation;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   Uncommon;                                          // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UnlockList;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   VeryRare;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngredientInfo_C*                   Whimsical;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AActor*                                 CraftingScene;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrafting;                                        // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473D[0x7];                                     // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UB_MenuTileViewManager_C*               TileViewManager;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedRecipeId;                                  // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_473E[0x4];                                     // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_RecipeInfo>                  RecipeInfos;                                       // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BndEvt__Back_1_K2Node_ComponentBoundEvent_0_Clicked__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WB_CraftingScreen(int32 EntryPoint);
	int32 GetIngredientCount(TArray<struct FB_Ingredient>& Ingredients);
	void GetInitialFocusWidget(class UUserWidget** InitialFocusWidget);
	bool IsCraftingPossible();
	bool IsSelectedRecipeValid();
	void OnApply();
	void OnBack();
	void OnSpecialAction();
	void PreConstruct(bool IsDesignTime);
	void ResetInvalidRecipe();
	void SetCraftingPossible(bool bCraftingPossible);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void UpdateCraftTileView();
	void UpdateMaterialListToInventoryManagerData();
	void WidgetAnimationEvt_UnlockAnimation_K2Node_WidgetAnimationEvent_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_CraftingScreen_C">();
	}
	static class UWB_CraftingScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_CraftingScreen_C>();
	}
};
static_assert(alignof(UWB_CraftingScreen_C) == 0x000008, "Wrong alignment on UWB_CraftingScreen_C");
static_assert(sizeof(UWB_CraftingScreen_C) == 0x000370, "Wrong size on UWB_CraftingScreen_C");
static_assert(offsetof(UWB_CraftingScreen_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_CraftingScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, DetailsFadeIn) == 0x0002C8, "Member 'UWB_CraftingScreen_C::DetailsFadeIn' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, DetailsFadeOut) == 0x0002D0, "Member 'UWB_CraftingScreen_C::DetailsFadeOut' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, UnlockAnimation) == 0x0002D8, "Member 'UWB_CraftingScreen_C::UnlockAnimation' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, BackButton) == 0x0002E0, "Member 'UWB_CraftingScreen_C::BackButton' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, Common) == 0x0002E8, "Member 'UWB_CraftingScreen_C::Common' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, CraftingDetails) == 0x0002F0, "Member 'UWB_CraftingScreen_C::CraftingDetails' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, CraftTileView) == 0x0002F8, "Member 'UWB_CraftingScreen_C::CraftTileView' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, ExtraMat) == 0x000300, "Member 'UWB_CraftingScreen_C::ExtraMat' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, MaterialList) == 0x000308, "Member 'UWB_CraftingScreen_C::MaterialList' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, Rare) == 0x000310, "Member 'UWB_CraftingScreen_C::Rare' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, UlockAnimation) == 0x000318, "Member 'UWB_CraftingScreen_C::UlockAnimation' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, Uncommon) == 0x000320, "Member 'UWB_CraftingScreen_C::Uncommon' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, UnlockList) == 0x000328, "Member 'UWB_CraftingScreen_C::UnlockList' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, VeryRare) == 0x000330, "Member 'UWB_CraftingScreen_C::VeryRare' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, Whimsical) == 0x000338, "Member 'UWB_CraftingScreen_C::Whimsical' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, CraftingScene) == 0x000340, "Member 'UWB_CraftingScreen_C::CraftingScene' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, IsCrafting) == 0x000348, "Member 'UWB_CraftingScreen_C::IsCrafting' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, TileViewManager) == 0x000350, "Member 'UWB_CraftingScreen_C::TileViewManager' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, SelectedRecipeId) == 0x000358, "Member 'UWB_CraftingScreen_C::SelectedRecipeId' has a wrong offset!");
static_assert(offsetof(UWB_CraftingScreen_C, RecipeInfos) == 0x000360, "Member 'UWB_CraftingScreen_C::RecipeInfos' has a wrong offset!");

}

