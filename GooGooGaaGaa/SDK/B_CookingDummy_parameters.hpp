#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_CookingDummy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function B_CookingDummy.B_CookingDummy_C.BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_CookingDummy_C_BndEvt__Sphere1_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_CookingDummy.B_CookingDummy_C.BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0E[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_CookingDummy_C_BndEvt__Sphere2_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_CookingDummy.B_CookingDummy_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D0F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'B_CookingDummy_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function B_CookingDummy.B_CookingDummy_C.EnterSoup
// 0x0160 (0x0160 - 0x0000)
struct B_CookingDummy_C_EnterSoup final
{
public:
	class AActor*                                 Dummy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Nr;                                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D10[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CurrentDummy;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D11[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0050(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D12[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingDummy_C_EnterSoup) == 0x000008, "Wrong alignment on B_CookingDummy_C_EnterSoup");
static_assert(sizeof(B_CookingDummy_C_EnterSoup) == 0x000160, "Wrong size on B_CookingDummy_C_EnterSoup");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, Dummy) == 0x000000, "Member 'B_CookingDummy_C_EnterSoup::Dummy' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, Nr) == 0x000008, "Member 'B_CookingDummy_C_EnterSoup::Nr' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CurrentDummy) == 0x000010, "Member 'B_CookingDummy_C_EnterSoup::CurrentDummy' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000020, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_MakeRotator_ReturnValue) == 0x000030, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000048, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000050, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000138, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_Array_Get_Item) == 0x000150, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_SetStaticMesh_ReturnValue) == 0x000158, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, K2Node_SwitchInteger_CmpSuccess) == 0x000159, "Member 'B_CookingDummy_C_EnterSoup::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_EnterSoup, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x00015C, "Member 'B_CookingDummy_C_EnterSoup::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function B_CookingDummy.B_CookingDummy_C.ExecuteUbergraph_B_CookingDummy
// 0x0320 (0x0320 - 0x0000)
struct B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D13[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D14[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D15[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0130(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D16[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0238(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy) == 0x000008, "Wrong alignment on B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy");
static_assert(sizeof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy) == 0x000320, "Wrong size on B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, EntryPoint) == 0x000000, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::EntryPoint' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000110, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000118, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000120, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000128, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00012C, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000130, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000218, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000220, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000228, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000230, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000234, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000238, "Member 'B_CookingDummy_C_ExecuteUbergraph_B_CookingDummy::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");

// Function B_CookingDummy.B_CookingDummy_C.PickMesh
// 0x0020 (0x0020 - 0x0000)
struct B_CookingDummy_C_PickMesh final
{
public:
	class UStaticMesh*                            Static_Mesh;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AB_CookingShootActor_C*                 K2Node_DynamicCast_AsB_Cooking_Shoot_Actor;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(B_CookingDummy_C_PickMesh) == 0x000008, "Wrong alignment on B_CookingDummy_C_PickMesh");
static_assert(sizeof(B_CookingDummy_C_PickMesh) == 0x000020, "Wrong size on B_CookingDummy_C_PickMesh");
static_assert(offsetof(B_CookingDummy_C_PickMesh, Static_Mesh) == 0x000000, "Member 'B_CookingDummy_C_PickMesh::Static_Mesh' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_PickMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'B_CookingDummy_C_PickMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_PickMesh, K2Node_DynamicCast_AsB_Cooking_Shoot_Actor) == 0x000010, "Member 'B_CookingDummy_C_PickMesh::K2Node_DynamicCast_AsB_Cooking_Shoot_Actor' has a wrong offset!");
static_assert(offsetof(B_CookingDummy_C_PickMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'B_CookingDummy_C_PickMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

