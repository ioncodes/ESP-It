#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BasePropLibrary

#include "Basic.hpp"

#include "B_BasePropLibrary_classes.hpp"
#include "B_BasePropLibrary_parameters.hpp"


namespace SDK
{

// Function B_BasePropLibrary.B_BasePropLibrary_C.SetControlledByWitch
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PropPawnPhysics_C*             Witch                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Template                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_BasePropLibrary_C::SetControlledByWitch(class AB_PropPawnPhysics_C* Witch, class AActor* Template, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_BasePropLibrary_C", "SetControlledByWitch");

	Params::B_BasePropLibrary_C_SetControlledByWitch Parms{};

	Parms.Witch = Witch;
	Parms.Template = Template;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_BasePropLibrary.B_BasePropLibrary_C.UpdateCameraDistance
// (Static, Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpringArmComponent*              SpringArm                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_BasePropLibrary_C::UpdateCameraDistance(class USpringArmComponent* SpringArm, class AActor* Prop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_BasePropLibrary_C", "UpdateCameraDistance");

	Params::B_BasePropLibrary_C_UpdateCameraDistance Parms{};

	Parms.SpringArm = SpringArm;
	Parms.Prop = Prop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_BasePropLibrary.B_BasePropLibrary_C.UpdateHealth
// (Static, Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UB_DamageHandler_C*               DamageHandler                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_BasePropLibrary_C::UpdateHealth(class UB_DamageHandler_C* DamageHandler, class AActor* Prop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_BasePropLibrary_C", "UpdateHealth");

	Params::B_BasePropLibrary_C_UpdateHealth Parms{};

	Parms.DamageHandler = DamageHandler;
	Parms.Prop = Prop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_BasePropLibrary.B_BasePropLibrary_C.UpdateName
// (Static, Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PropPawnPhysics_C*             PropPawnPhysics                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_BasePropLibrary_C::UpdateName(class AB_PropPawnPhysics_C* PropPawnPhysics, class AActor* Prop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_BasePropLibrary_C", "UpdateName");

	Params::B_BasePropLibrary_C_UpdateName Parms{};

	Parms.PropPawnPhysics = PropPawnPhysics;
	Parms.Prop = Prop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function B_BasePropLibrary.B_BasePropLibrary_C.UpdateSpringArmLocation
// (Static, Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USpringArmComponent*              SpringArm                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Prop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UB_BasePropLibrary_C::UpdateSpringArmLocation(class USpringArmComponent* SpringArm, class AActor* Prop, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("B_BasePropLibrary_C", "UpdateSpringArmLocation");

	Params::B_BasePropLibrary_C_UpdateSpringArmLocation Parms{};

	Parms.SpringArm = SpringArm;
	Parms.Prop = Prop;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

