#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_DropReward

#include "Basic.hpp"

#include "WB_DropReward_classes.hpp"
#include "WB_DropReward_parameters.hpp"


namespace SDK
{

// Function WB_DropReward.WB_DropReward_C.CauldronAnimationFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::CauldronAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "CauldronAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DropReward.WB_DropReward_C.ExecuteUbergraph_WB_DropReward
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DropReward_C::ExecuteUbergraph_WB_DropReward(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "ExecuteUbergraph_WB_DropReward");

	Params::WB_DropReward_C_ExecuteUbergraph_WB_DropReward Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DropReward.WB_DropReward_C.GrantFinished
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NoValueGranted                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DropReward_C::GrantFinished(bool NoValueGranted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "GrantFinished");

	Params::WB_DropReward_C_GrantFinished Parms{};

	Parms.NoValueGranted = NoValueGranted;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DropReward.WB_DropReward_C.InitializeByPlayerState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AB_PlayerState_C*                 Param_PlayerState                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWB_DropReward_C::InitializeByPlayerState(class AB_PlayerState_C* Param_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "InitializeByPlayerState");

	Params::WB_DropReward_C_InitializeByPlayerState Parms{};

	Parms.Param_PlayerState = Param_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DropReward.WB_DropReward_C.InitializeCounter
// (BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::InitializeCounter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "InitializeCounter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DropReward.WB_DropReward_C.InitializeValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SetTotalXP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetStartDropExp                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetMaxDropExp                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetBaseXP                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSClientItemUnlock>       SetCauldronUnlocks                                     (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   SetWinBonusXP                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetLastWitchXP                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetCatchXP                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DropReward_C::InitializeValues(int32 SetTotalXP, int32 SetStartDropExp, int32 SetMaxDropExp, int32 SetBaseXP, TArray<struct FSClientItemUnlock>& SetCauldronUnlocks, int32 SetWinBonusXP, int32 SetLastWitchXP, int32 SetCatchXP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "InitializeValues");

	Params::WB_DropReward_C_InitializeValues Parms{};

	Parms.SetTotalXP = SetTotalXP;
	Parms.SetStartDropExp = SetStartDropExp;
	Parms.SetMaxDropExp = SetMaxDropExp;
	Parms.SetBaseXP = SetBaseXP;
	Parms.SetCauldronUnlocks = std::move(SetCauldronUnlocks);
	Parms.SetWinBonusXP = SetWinBonusXP;
	Parms.SetLastWitchXP = SetLastWitchXP;
	Parms.SetCatchXP = SetCatchXP;

	UObject::ProcessEvent(Func, &Parms);

	SetCauldronUnlocks = std::move(Parms.SetCauldronUnlocks);
}


// Function WB_DropReward.WB_DropReward_C.SetupProgressionCounterEvents
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::SetupProgressionCounterEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "SetupProgressionCounterEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DropReward.WB_DropReward_C.StartGranting
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::StartGranting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "StartGranting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DropReward.WB_DropReward_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_DropReward_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "Tick");

	Params::WB_DropReward_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_DropReward.WB_DropReward_C.UpdateCurrentValue
// (BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::UpdateCurrentValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "UpdateCurrentValue");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_DropReward.WB_DropReward_C.ValueExceedProgressionTarget
// (BlueprintCallable, BlueprintEvent)

void UWB_DropReward_C::ValueExceedProgressionTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_DropReward_C", "ValueExceedProgressionTarget");

	UObject::ProcessEvent(Func, nullptr);
}

}

