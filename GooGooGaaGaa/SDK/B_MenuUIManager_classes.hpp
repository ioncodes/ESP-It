#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_MenuUIManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EMenuState_structs.hpp"
#include "PropWitchHuntModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_MenuUIManager.B_MenuUIManager_C
// 0x0138 (0x0168 - 0x0030)
class UB_MenuUIManager_C final : public UBaseManager
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0030(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	EMenuState                                    CurrentMenuState;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SplashScreenShown;                                 // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MenuMap;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<EMenuState, class UClass*>               MenuStateClasses;                                  // 0x0050(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EMenuState, class UUserWidget*>          MenuStateWidgets;                                  // 0x00A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UWB_ConnectionLoss_C*                   EarlyVersionWatermarkWidget;                       // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_MasterScreen_C*                     MasterScreen;                                      // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMessageDialogOpen;                               // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOverlayWidgetOpen;                               // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGamepadMode;                                     // 0x0102(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103[0x5];                                      // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, double>                   SessionPings;                                      // 0x0108(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnGamePadModeChanged;                              // 0x0158(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnGamePadModeChanged__DelegateSignature(bool bGamePadMode);
	void ChangeMenu(EMenuState MenuState, bool CloseCurrentMenu);
	void ChangeMenuAndOpenMenuMap(EMenuState MenuState);
	void CloseDialog(class UUserWidget* Widget);
	void ExecuteUbergraph_B_MenuUIManager(int32 EntryPoint);
	void GetGameInstance(class UB_GameInstance_C** GameInstance_0);
	void GetWidget(EMenuState MenuState, class UUserWidget** UserWidget);
	void HandleEnterMenu();
	void HandleLeaveMenu(EMenuState TargetMenu);
	void HideWidget(class UWidget* Widget);
	void Initialize(class UGameInstance* InGameInstance);
	bool IsCurrentMenuMapLoaded();
	void MakeSureMasterScreenIsInViewport();
	void ShowConfirmationDialog(const class FString& Title, const class FString& Message, bool bShowBackButton, bool bAutoRevertVideoMode);
	void ShowDialog(class UClass* Class_0, class UUserWidget** Widget);
	void ShowMainMenu();
	void ShowMessageDialog(const class FString& Title, const class FString& Text);
	void ShowOverlayWidget(class UClass* OverlayWidget, class UWidget* BaseWidget, class UWidget* SizeWidget, const struct FVector2D& Offset, class UUserWidget** CreatedOverlayWidget);
	void ShowPasswordDialog(const struct FOnlineSessionSearchResultBP& SessionResult);
	void ShowRegionSpecificQuestion();
	void ShowSplashScreen();
	void ShowUserGeneratedContentQuestion(class UWB_ServerRow_C* ServerRow);
	void ShowWatermark();
	void ShowWhatsNewDialog();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_MenuUIManager_C">();
	}
	static class UB_MenuUIManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UB_MenuUIManager_C>();
	}
};
static_assert(alignof(UB_MenuUIManager_C) == 0x000008, "Wrong alignment on UB_MenuUIManager_C");
static_assert(sizeof(UB_MenuUIManager_C) == 0x000168, "Wrong size on UB_MenuUIManager_C");
static_assert(offsetof(UB_MenuUIManager_C, UberGraphFrame) == 0x000030, "Member 'UB_MenuUIManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, CurrentMenuState) == 0x000038, "Member 'UB_MenuUIManager_C::CurrentMenuState' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, SplashScreenShown) == 0x000039, "Member 'UB_MenuUIManager_C::SplashScreenShown' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, MenuMap) == 0x000040, "Member 'UB_MenuUIManager_C::MenuMap' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, MenuStateClasses) == 0x000050, "Member 'UB_MenuUIManager_C::MenuStateClasses' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, MenuStateWidgets) == 0x0000A0, "Member 'UB_MenuUIManager_C::MenuStateWidgets' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, EarlyVersionWatermarkWidget) == 0x0000F0, "Member 'UB_MenuUIManager_C::EarlyVersionWatermarkWidget' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, MasterScreen) == 0x0000F8, "Member 'UB_MenuUIManager_C::MasterScreen' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, IsMessageDialogOpen) == 0x000100, "Member 'UB_MenuUIManager_C::IsMessageDialogOpen' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, IsOverlayWidgetOpen) == 0x000101, "Member 'UB_MenuUIManager_C::IsOverlayWidgetOpen' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, IsGamepadMode) == 0x000102, "Member 'UB_MenuUIManager_C::IsGamepadMode' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, SessionPings) == 0x000108, "Member 'UB_MenuUIManager_C::SessionPings' has a wrong offset!");
static_assert(offsetof(UB_MenuUIManager_C, OnGamePadModeChanged) == 0x000158, "Member 'UB_MenuUIManager_C::OnGamePadModeChanged' has a wrong offset!");

}

