#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_ImpostorTeamSelectionScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ETeamID_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_ImpostorTeamSelectionScreen.WB_ImpostorTeamSelectionScreen_C
// 0x0070 (0x0330 - 0x02C0)
class UWB_ImpostorTeamSelectionScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameModeText;                                      // 0x02D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GameNameText;                                      // 0x02D8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_IngameSkinConfigMenu_C*             HunterSkinConfigSelection;                         // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           Menu;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             MinimumPlayersText;                                // 0x02F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayersText;                                       // 0x02F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           Ready;                                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           SpectatorReady;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_C*                           Unready;                                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_GameStartTimer_C*                   WB_GameStartTimer_61;                              // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_PlayerListBlock_C*                  WB_PlayerListBlock;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUserWidget*                            InitialFocusWidget;                                // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Menu_K2Node_ComponentBoundEvent_6_Clicked__DelegateSignature();
	void BndEvt__SpectatorReady_K2Node_ComponentBoundEvent_55_Clicked__DelegateSignature();
	void BndEvt__WB_Button_K2Node_ComponentBoundEvent_26_Clicked__DelegateSignature();
	void BndEvt__WB_ImpostorTeamSelectionScreen_Unready_K2Node_ComponentBoundEvent_1_Clicked__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WB_ImpostorTeamSelectionScreen(int32 EntryPoint);
	class FText Get_GameModeText_Text_0();
	class FText Get_GameNameText_Text_0();
	struct FSlateColor Get_HunterSkillsText_ColorAndOpacity_0();
	class FText Get_MinimumPlayersText_Text_0();
	ESlateVisibility Get_MinimumPlayersText_Visibility_0();
	class FText Get_PlayersText_Text_0();
	ESlateVisibility Get_Ready_Visibility_0();
	bool Get_SpectatorReady_bIsEnabled_0();
	ESlateVisibility Get_Unready_Visibility_0();
	struct FSlateColor Get_WitchSkillsText_ColorAndOpacity_0();
	void GetInitialFocusWidget(class UUserWidget** Param_InitialFocusWidget);
	ESlateVisibility GetVisibility_0();
	void InitializeFocus();
	void OnApply();
	void OnBack();
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnSpecialAction();
	void SelectTeam(ETeamID SelectedTeam);
	void SetReady(bool WantsToSpectate, bool IsReady);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_ImpostorTeamSelectionScreen_C">();
	}
	static class UWB_ImpostorTeamSelectionScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_ImpostorTeamSelectionScreen_C>();
	}
};
static_assert(alignof(UWB_ImpostorTeamSelectionScreen_C) == 0x000008, "Wrong alignment on UWB_ImpostorTeamSelectionScreen_C");
static_assert(sizeof(UWB_ImpostorTeamSelectionScreen_C) == 0x000330, "Wrong size on UWB_ImpostorTeamSelectionScreen_C");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, UberGraphFrame) == 0x0002C0, "Member 'UWB_ImpostorTeamSelectionScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, CanvasPanel_0) == 0x0002C8, "Member 'UWB_ImpostorTeamSelectionScreen_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, GameModeText) == 0x0002D0, "Member 'UWB_ImpostorTeamSelectionScreen_C::GameModeText' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, GameNameText) == 0x0002D8, "Member 'UWB_ImpostorTeamSelectionScreen_C::GameNameText' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, HunterSkinConfigSelection) == 0x0002E0, "Member 'UWB_ImpostorTeamSelectionScreen_C::HunterSkinConfigSelection' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, Menu) == 0x0002E8, "Member 'UWB_ImpostorTeamSelectionScreen_C::Menu' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, MinimumPlayersText) == 0x0002F0, "Member 'UWB_ImpostorTeamSelectionScreen_C::MinimumPlayersText' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, PlayersText) == 0x0002F8, "Member 'UWB_ImpostorTeamSelectionScreen_C::PlayersText' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, Ready) == 0x000300, "Member 'UWB_ImpostorTeamSelectionScreen_C::Ready' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, SpectatorReady) == 0x000308, "Member 'UWB_ImpostorTeamSelectionScreen_C::SpectatorReady' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, Unready) == 0x000310, "Member 'UWB_ImpostorTeamSelectionScreen_C::Unready' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, WB_GameStartTimer_61) == 0x000318, "Member 'UWB_ImpostorTeamSelectionScreen_C::WB_GameStartTimer_61' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, WB_PlayerListBlock) == 0x000320, "Member 'UWB_ImpostorTeamSelectionScreen_C::WB_PlayerListBlock' has a wrong offset!");
static_assert(offsetof(UWB_ImpostorTeamSelectionScreen_C, InitialFocusWidget) == 0x000328, "Member 'UWB_ImpostorTeamSelectionScreen_C::InitialFocusWidget' has a wrong offset!");

}

