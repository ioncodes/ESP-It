#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_FlyingEyeSkill

#include "Basic.hpp"

#include "B_FlyingEyeSkill_classes.hpp"
#include "B_FlyingEyeSkill_parameters.hpp"


namespace SDK
{

// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.CanActivate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UB_FlyingEyeSkill_C::CanActivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "CanActivate");

	Params::B_FlyingEyeSkill_C_CanActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.ExecuteUbergraph_B_FlyingEyeSkill
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlyingEyeSkill_C::ExecuteUbergraph_B_FlyingEyeSkill(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "ExecuteUbergraph_B_FlyingEyeSkill");

	Params::B_FlyingEyeSkill_C_ExecuteUbergraph_B_FlyingEyeSkill Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.GetSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       SpawnTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlyingEyeSkill_C::GetSpawnTransform(struct FTransform* SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "GetSpawnTransform");

	Params::B_FlyingEyeSkill_C_GetSpawnTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnTransform != nullptr)
		*SpawnTransform = std::move(Parms.SpawnTransform);
}


// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.InitializeRules
// (Public, BlueprintCallable, BlueprintEvent)

void UB_FlyingEyeSkill_C::InitializeRules()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "InitializeRules");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.OnActivateSkillServer
// (Event, Public, BlueprintEvent)

void UB_FlyingEyeSkill_C::OnActivateSkillServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "OnActivateSkillServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function B_FlyingEyeSkill.B_FlyingEyeSkill_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UB_FlyingEyeSkill_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("B_FlyingEyeSkill_C", "ReceiveTick");

	Params::B_FlyingEyeSkill_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

